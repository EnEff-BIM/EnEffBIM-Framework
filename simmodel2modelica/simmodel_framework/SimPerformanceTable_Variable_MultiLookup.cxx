// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimPerformanceTable_Variable_MultiLookup.hxx"

#include "simperformancetable_x_1_2_sortorder.hxx"

#include "doublelist.hxx"

#include "simperformancetable_inputunittypeforx_1_5.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      // SimPerformanceTable_Variable_MultiLookup
      // 

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_NumOfInterpolatPoints_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfInterpolatPoints () const
      {
        return this->SimPerformanceTable_NumOfInterpolatPoints_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_NumOfInterpolatPoints_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfInterpolatPoints ()
      {
        return this->SimPerformanceTable_NumOfInterpolatPoints_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfInterpolatPoints (const SimPerformanceTable_NumOfInterpolatPoints_type& x)
      {
        this->SimPerformanceTable_NumOfInterpolatPoints_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfInterpolatPoints (const SimPerformanceTable_NumOfInterpolatPoints_optional& x)
      {
        this->SimPerformanceTable_NumOfInterpolatPoints_ = x;
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_TableDataFormat_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_TableDataFormat () const
      {
        return this->SimPerformanceTable_TableDataFormat_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_TableDataFormat_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_TableDataFormat ()
      {
        return this->SimPerformanceTable_TableDataFormat_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_TableDataFormat (const SimPerformanceTable_TableDataFormat_type& x)
      {
        this->SimPerformanceTable_TableDataFormat_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_TableDataFormat (const SimPerformanceTable_TableDataFormat_optional& x)
      {
        this->SimPerformanceTable_TableDataFormat_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_TableDataFormat (::std::auto_ptr< SimPerformanceTable_TableDataFormat_type > x)
      {
        this->SimPerformanceTable_TableDataFormat_.set (x);
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_ExternalFileName_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_ExternalFileName () const
      {
        return this->SimPerformanceTable_ExternalFileName_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_ExternalFileName_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_ExternalFileName ()
      {
        return this->SimPerformanceTable_ExternalFileName_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_ExternalFileName (const SimPerformanceTable_ExternalFileName_type& x)
      {
        this->SimPerformanceTable_ExternalFileName_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_ExternalFileName (const SimPerformanceTable_ExternalFileName_optional& x)
      {
        this->SimPerformanceTable_ExternalFileName_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_ExternalFileName (::std::auto_ptr< SimPerformanceTable_ExternalFileName_type > x)
      {
        this->SimPerformanceTable_ExternalFileName_.set (x);
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_X_1_2_SortOrder_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_X_1_2_SortOrder () const
      {
        return this->SimPerformanceTable_X_1_2_SortOrder_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_X_1_2_SortOrder_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_X_1_2_SortOrder ()
      {
        return this->SimPerformanceTable_X_1_2_SortOrder_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_X_1_2_SortOrder (const SimPerformanceTable_X_1_2_SortOrder_type& x)
      {
        this->SimPerformanceTable_X_1_2_SortOrder_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_X_1_2_SortOrder (const SimPerformanceTable_X_1_2_SortOrder_optional& x)
      {
        this->SimPerformanceTable_X_1_2_SortOrder_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_X_1_2_SortOrder (::std::auto_ptr< SimPerformanceTable_X_1_2_SortOrder_type > x)
      {
        this->SimPerformanceTable_X_1_2_SortOrder_.set (x);
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_MinValueOf_X_1_5_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MinValueOf_X_1_5 () const
      {
        return this->SimPerformanceTable_MinValueOf_X_1_5_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_MinValueOf_X_1_5_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MinValueOf_X_1_5 ()
      {
        return this->SimPerformanceTable_MinValueOf_X_1_5_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MinValueOf_X_1_5 (const SimPerformanceTable_MinValueOf_X_1_5_type& x)
      {
        this->SimPerformanceTable_MinValueOf_X_1_5_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MinValueOf_X_1_5 (const SimPerformanceTable_MinValueOf_X_1_5_optional& x)
      {
        this->SimPerformanceTable_MinValueOf_X_1_5_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MinValueOf_X_1_5 (::std::auto_ptr< SimPerformanceTable_MinValueOf_X_1_5_type > x)
      {
        this->SimPerformanceTable_MinValueOf_X_1_5_.set (x);
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_MaxValueOf_X_1_5_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MaxValueOf_X_1_5 () const
      {
        return this->SimPerformanceTable_MaxValueOf_X_1_5_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_MaxValueOf_X_1_5_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MaxValueOf_X_1_5 ()
      {
        return this->SimPerformanceTable_MaxValueOf_X_1_5_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MaxValueOf_X_1_5 (const SimPerformanceTable_MaxValueOf_X_1_5_type& x)
      {
        this->SimPerformanceTable_MaxValueOf_X_1_5_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MaxValueOf_X_1_5 (const SimPerformanceTable_MaxValueOf_X_1_5_optional& x)
      {
        this->SimPerformanceTable_MaxValueOf_X_1_5_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_MaxValueOf_X_1_5 (::std::auto_ptr< SimPerformanceTable_MaxValueOf_X_1_5_type > x)
      {
        this->SimPerformanceTable_MaxValueOf_X_1_5_.set (x);
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_InputUnitTypeForX_1_5_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_InputUnitTypeForX_1_5 () const
      {
        return this->SimPerformanceTable_InputUnitTypeForX_1_5_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_InputUnitTypeForX_1_5_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_InputUnitTypeForX_1_5 ()
      {
        return this->SimPerformanceTable_InputUnitTypeForX_1_5_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_InputUnitTypeForX_1_5 (const SimPerformanceTable_InputUnitTypeForX_1_5_type& x)
      {
        this->SimPerformanceTable_InputUnitTypeForX_1_5_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_InputUnitTypeForX_1_5 (const SimPerformanceTable_InputUnitTypeForX_1_5_optional& x)
      {
        this->SimPerformanceTable_InputUnitTypeForX_1_5_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_InputUnitTypeForX_1_5 (::std::auto_ptr< SimPerformanceTable_InputUnitTypeForX_1_5_type > x)
      {
        this->SimPerformanceTable_InputUnitTypeForX_1_5_.set (x);
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_NumOfIndepVars_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfIndepVars () const
      {
        return this->SimPerformanceTable_NumOfIndepVars_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_NumOfIndepVars_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfIndepVars ()
      {
        return this->SimPerformanceTable_NumOfIndepVars_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfIndepVars (const SimPerformanceTable_NumOfIndepVars_type& x)
      {
        this->SimPerformanceTable_NumOfIndepVars_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfIndepVars (const SimPerformanceTable_NumOfIndepVars_optional& x)
      {
        this->SimPerformanceTable_NumOfIndepVars_ = x;
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_NumOfValsForIndepVarX1_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfValsForIndepVarX1 () const
      {
        return this->SimPerformanceTable_NumOfValsForIndepVarX1_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_NumOfValsForIndepVarX1_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfValsForIndepVarX1 ()
      {
        return this->SimPerformanceTable_NumOfValsForIndepVarX1_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfValsForIndepVarX1 (const SimPerformanceTable_NumOfValsForIndepVarX1_type& x)
      {
        this->SimPerformanceTable_NumOfValsForIndepVarX1_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_NumOfValsForIndepVarX1 (const SimPerformanceTable_NumOfValsForIndepVarX1_optional& x)
      {
        this->SimPerformanceTable_NumOfValsForIndepVarX1_ = x;
      }

      const SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Field_1_3083_DetbyNumIndpVars () const
      {
        return this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_;
      }

      SimPerformanceTable_Variable_MultiLookup::SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_optional& SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Field_1_3083_DetbyNumIndpVars ()
      {
        return this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Field_1_3083_DetbyNumIndpVars (const SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_type& x)
      {
        this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_.set (x);
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Field_1_3083_DetbyNumIndpVars (const SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_optional& x)
      {
        this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_ = x;
      }

      void SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Field_1_3083_DetbyNumIndpVars (::std::auto_ptr< SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_type > x)
      {
        this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      // SimPerformanceTable_Variable_MultiLookup
      //

      SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Variable_MultiLookup (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable (RefId),
        SimPerformanceTable_NumOfInterpolatPoints_ (this),
        SimPerformanceTable_TableDataFormat_ (this),
        SimPerformanceTable_ExternalFileName_ (this),
        SimPerformanceTable_X_1_2_SortOrder_ (this),
        SimPerformanceTable_MinValueOf_X_1_5_ (this),
        SimPerformanceTable_MaxValueOf_X_1_5_ (this),
        SimPerformanceTable_InputUnitTypeForX_1_5_ (this),
        SimPerformanceTable_NumOfIndepVars_ (this),
        SimPerformanceTable_NumOfValsForIndepVarX1_ (this),
        SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_ (this)
      {
      }

      SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Variable_MultiLookup (const SimPerformanceTable_Variable_MultiLookup& x,
                                                ::xml_schema::flags f,
                                                ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable (x, f, c),
        SimPerformanceTable_NumOfInterpolatPoints_ (x.SimPerformanceTable_NumOfInterpolatPoints_, f, this),
        SimPerformanceTable_TableDataFormat_ (x.SimPerformanceTable_TableDataFormat_, f, this),
        SimPerformanceTable_ExternalFileName_ (x.SimPerformanceTable_ExternalFileName_, f, this),
        SimPerformanceTable_X_1_2_SortOrder_ (x.SimPerformanceTable_X_1_2_SortOrder_, f, this),
        SimPerformanceTable_MinValueOf_X_1_5_ (x.SimPerformanceTable_MinValueOf_X_1_5_, f, this),
        SimPerformanceTable_MaxValueOf_X_1_5_ (x.SimPerformanceTable_MaxValueOf_X_1_5_, f, this),
        SimPerformanceTable_InputUnitTypeForX_1_5_ (x.SimPerformanceTable_InputUnitTypeForX_1_5_, f, this),
        SimPerformanceTable_NumOfIndepVars_ (x.SimPerformanceTable_NumOfIndepVars_, f, this),
        SimPerformanceTable_NumOfValsForIndepVarX1_ (x.SimPerformanceTable_NumOfValsForIndepVarX1_, f, this),
        SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_ (x.SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_, f, this)
      {
      }

      SimPerformanceTable_Variable_MultiLookup::
      SimPerformanceTable_Variable_MultiLookup (const ::xercesc::DOMElement& e,
                                                ::xml_schema::flags f,
                                                ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable (e, f | ::xml_schema::flags::base, c),
        SimPerformanceTable_NumOfInterpolatPoints_ (this),
        SimPerformanceTable_TableDataFormat_ (this),
        SimPerformanceTable_ExternalFileName_ (this),
        SimPerformanceTable_X_1_2_SortOrder_ (this),
        SimPerformanceTable_MinValueOf_X_1_5_ (this),
        SimPerformanceTable_MaxValueOf_X_1_5_ (this),
        SimPerformanceTable_InputUnitTypeForX_1_5_ (this),
        SimPerformanceTable_NumOfIndepVars_ (this),
        SimPerformanceTable_NumOfValsForIndepVarX1_ (this),
        SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimPerformanceTable_Variable_MultiLookup::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimPerformanceTable_NumOfInterpolatPoints
          //
          if (n.name () == "SimPerformanceTable_NumOfInterpolatPoints" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimPerformanceTable_NumOfInterpolatPoints_)
            {
              this->SimPerformanceTable_NumOfInterpolatPoints_.set (SimPerformanceTable_NumOfInterpolatPoints_traits::create (i, f, this));
              continue;
            }
          }

          // SimPerformanceTable_TableDataFormat
          //
          if (n.name () == "SimPerformanceTable_TableDataFormat" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_TableDataFormat_type > r (
              SimPerformanceTable_TableDataFormat_traits::create (i, f, this));

            if (!this->SimPerformanceTable_TableDataFormat_)
            {
              this->SimPerformanceTable_TableDataFormat_.set (r);
              continue;
            }
          }

          // SimPerformanceTable_ExternalFileName
          //
          if (n.name () == "SimPerformanceTable_ExternalFileName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_ExternalFileName_type > r (
              SimPerformanceTable_ExternalFileName_traits::create (i, f, this));

            if (!this->SimPerformanceTable_ExternalFileName_)
            {
              this->SimPerformanceTable_ExternalFileName_.set (r);
              continue;
            }
          }

          // SimPerformanceTable_X_1_2_SortOrder
          //
          if (n.name () == "SimPerformanceTable_X_1_2_SortOrder" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_X_1_2_SortOrder_type > r (
              SimPerformanceTable_X_1_2_SortOrder_traits::create (i, f, this));

            if (!this->SimPerformanceTable_X_1_2_SortOrder_)
            {
              this->SimPerformanceTable_X_1_2_SortOrder_.set (r);
              continue;
            }
          }

          // SimPerformanceTable_MinValueOf_X_1_5
          //
          if (n.name () == "SimPerformanceTable_MinValueOf_X_1_5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_MinValueOf_X_1_5_type > r (
              SimPerformanceTable_MinValueOf_X_1_5_traits::create (i, f, this));

            if (!this->SimPerformanceTable_MinValueOf_X_1_5_)
            {
              this->SimPerformanceTable_MinValueOf_X_1_5_.set (r);
              continue;
            }
          }

          // SimPerformanceTable_MaxValueOf_X_1_5
          //
          if (n.name () == "SimPerformanceTable_MaxValueOf_X_1_5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_MaxValueOf_X_1_5_type > r (
              SimPerformanceTable_MaxValueOf_X_1_5_traits::create (i, f, this));

            if (!this->SimPerformanceTable_MaxValueOf_X_1_5_)
            {
              this->SimPerformanceTable_MaxValueOf_X_1_5_.set (r);
              continue;
            }
          }

          // SimPerformanceTable_InputUnitTypeForX_1_5
          //
          if (n.name () == "SimPerformanceTable_InputUnitTypeForX_1_5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_InputUnitTypeForX_1_5_type > r (
              SimPerformanceTable_InputUnitTypeForX_1_5_traits::create (i, f, this));

            if (!this->SimPerformanceTable_InputUnitTypeForX_1_5_)
            {
              this->SimPerformanceTable_InputUnitTypeForX_1_5_.set (r);
              continue;
            }
          }

          // SimPerformanceTable_NumOfIndepVars
          //
          if (n.name () == "SimPerformanceTable_NumOfIndepVars" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimPerformanceTable_NumOfIndepVars_)
            {
              this->SimPerformanceTable_NumOfIndepVars_.set (SimPerformanceTable_NumOfIndepVars_traits::create (i, f, this));
              continue;
            }
          }

          // SimPerformanceTable_NumOfValsForIndepVarX1
          //
          if (n.name () == "SimPerformanceTable_NumOfValsForIndepVarX1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimPerformanceTable_NumOfValsForIndepVarX1_)
            {
              this->SimPerformanceTable_NumOfValsForIndepVarX1_.set (SimPerformanceTable_NumOfValsForIndepVarX1_traits::create (i, f, this));
              continue;
            }
          }

          // SimPerformanceTable_Field_1_3083_DetbyNumIndpVars
          //
          if (n.name () == "SimPerformanceTable_Field_1_3083_DetbyNumIndpVars" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_type > r (
              SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_traits::create (i, f, this));

            if (!this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_)
            {
              this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimPerformanceTable_Variable_MultiLookup* SimPerformanceTable_Variable_MultiLookup::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimPerformanceTable_Variable_MultiLookup (*this, f, c);
      }

      SimPerformanceTable_Variable_MultiLookup& SimPerformanceTable_Variable_MultiLookup::
      operator= (const SimPerformanceTable_Variable_MultiLookup& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable& > (*this) = x;
          this->SimPerformanceTable_NumOfInterpolatPoints_ = x.SimPerformanceTable_NumOfInterpolatPoints_;
          this->SimPerformanceTable_TableDataFormat_ = x.SimPerformanceTable_TableDataFormat_;
          this->SimPerformanceTable_ExternalFileName_ = x.SimPerformanceTable_ExternalFileName_;
          this->SimPerformanceTable_X_1_2_SortOrder_ = x.SimPerformanceTable_X_1_2_SortOrder_;
          this->SimPerformanceTable_MinValueOf_X_1_5_ = x.SimPerformanceTable_MinValueOf_X_1_5_;
          this->SimPerformanceTable_MaxValueOf_X_1_5_ = x.SimPerformanceTable_MaxValueOf_X_1_5_;
          this->SimPerformanceTable_InputUnitTypeForX_1_5_ = x.SimPerformanceTable_InputUnitTypeForX_1_5_;
          this->SimPerformanceTable_NumOfIndepVars_ = x.SimPerformanceTable_NumOfIndepVars_;
          this->SimPerformanceTable_NumOfValsForIndepVarX1_ = x.SimPerformanceTable_NumOfValsForIndepVarX1_;
          this->SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_ = x.SimPerformanceTable_Field_1_3083_DetbyNumIndpVars_;
        }

        return *this;
      }

      SimPerformanceTable_Variable_MultiLookup::
      ~SimPerformanceTable_Variable_MultiLookup ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

