// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation
      // 

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_WaterInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_WaterInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_WaterInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_WaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterInletNodeName (const SimFlowEnergyTrans_WaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterInletNodeName (const SimFlowEnergyTrans_WaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_WaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_WaterOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_WaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_WaterOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_WaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterOutletNodeName (const SimFlowEnergyTrans_WaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterOutletNodeName (const SimFlowEnergyTrans_WaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_WaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_WaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirInNodeName () const
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirInNodeName ()
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirInNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirOutNodeName () const
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirOutNodeName ()
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_AirOutNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompType_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompType () const
      {
        return this->SimFlowEnergyTrans_CompType_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompType_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompType ()
      {
        return this->SimFlowEnergyTrans_CompType_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompType (const SimFlowEnergyTrans_CompType_type& x)
      {
        this->SimFlowEnergyTrans_CompType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompType (const SimFlowEnergyTrans_CompType_optional& x)
      {
        this->SimFlowEnergyTrans_CompType_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompType (::std::auto_ptr< SimFlowEnergyTrans_CompType_type > x)
      {
        this->SimFlowEnergyTrans_CompType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_RefrigType_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigType () const
      {
        return this->SimFlowEnergyTrans_RefrigType_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_RefrigType_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigType ()
      {
        return this->SimFlowEnergyTrans_RefrigType_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigType (const SimFlowEnergyTrans_RefrigType_type& x)
      {
        this->SimFlowEnergyTrans_RefrigType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigType (const SimFlowEnergyTrans_RefrigType_optional& x)
      {
        this->SimFlowEnergyTrans_RefrigType_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigType (::std::auto_ptr< SimFlowEnergyTrans_RefrigType_type > x)
      {
        this->SimFlowEnergyTrans_RefrigType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_DesignSrcSideFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_DesignSrcSideFlowRate () const
      {
        return this->SimFlowEnergyTrans_DesignSrcSideFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_DesignSrcSideFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_DesignSrcSideFlowRate ()
      {
        return this->SimFlowEnergyTrans_DesignSrcSideFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_DesignSrcSideFlowRate (const SimFlowEnergyTrans_DesignSrcSideFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_DesignSrcSideFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_DesignSrcSideFlowRate (const SimFlowEnergyTrans_DesignSrcSideFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_DesignSrcSideFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_HighPressureCutoff_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_HighPressureCutoff () const
      {
        return this->SimFlowEnergyTrans_HighPressureCutoff_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_HighPressureCutoff_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_HighPressureCutoff ()
      {
        return this->SimFlowEnergyTrans_HighPressureCutoff_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_HighPressureCutoff (const SimFlowEnergyTrans_HighPressureCutoff_type& x)
      {
        this->SimFlowEnergyTrans_HighPressureCutoff_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_HighPressureCutoff (const SimFlowEnergyTrans_HighPressureCutoff_optional& x)
      {
        this->SimFlowEnergyTrans_HighPressureCutoff_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_LowPressureCutoff_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LowPressureCutoff () const
      {
        return this->SimFlowEnergyTrans_LowPressureCutoff_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_LowPressureCutoff_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LowPressureCutoff ()
      {
        return this->SimFlowEnergyTrans_LowPressureCutoff_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LowPressureCutoff (const SimFlowEnergyTrans_LowPressureCutoff_type& x)
      {
        this->SimFlowEnergyTrans_LowPressureCutoff_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LowPressureCutoff (const SimFlowEnergyTrans_LowPressureCutoff_optional& x)
      {
        this->SimFlowEnergyTrans_LowPressureCutoff_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LoadSideTotalHeatTransCoef () const
      {
        return this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LoadSideTotalHeatTransCoef ()
      {
        return this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LoadSideTotalHeatTransCoef (const SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_type& x)
      {
        this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LoadSideTotalHeatTransCoef (const SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_optional& x)
      {
        this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet () const
      {
        return this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet ()
      {
        return this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet (const SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_type& x)
      {
        this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet (const SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_optional& x)
      {
        this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompPwrLosses_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPwrLosses () const
      {
        return this->SimFlowEnergyTrans_CompPwrLosses_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompPwrLosses_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPwrLosses ()
      {
        return this->SimFlowEnergyTrans_CompPwrLosses_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPwrLosses (const SimFlowEnergyTrans_CompPwrLosses_type& x)
      {
        this->SimFlowEnergyTrans_CompPwrLosses_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPwrLosses (const SimFlowEnergyTrans_CompPwrLosses_optional& x)
      {
        this->SimFlowEnergyTrans_CompPwrLosses_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompEff_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompEff () const
      {
        return this->SimFlowEnergyTrans_CompEff_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompEff_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompEff ()
      {
        return this->SimFlowEnergyTrans_CompEff_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompEff (const SimFlowEnergyTrans_CompEff_type& x)
      {
        this->SimFlowEnergyTrans_CompEff_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompEff (const SimFlowEnergyTrans_CompEff_optional& x)
      {
        this->SimFlowEnergyTrans_CompEff_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompPistonDisplacement_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPistonDisplacement () const
      {
        return this->SimFlowEnergyTrans_CompPistonDisplacement_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompPistonDisplacement_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPistonDisplacement ()
      {
        return this->SimFlowEnergyTrans_CompPistonDisplacement_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPistonDisplacement (const SimFlowEnergyTrans_CompPistonDisplacement_type& x)
      {
        this->SimFlowEnergyTrans_CompPistonDisplacement_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompPistonDisplacement (const SimFlowEnergyTrans_CompPistonDisplacement_optional& x)
      {
        this->SimFlowEnergyTrans_CompPistonDisplacement_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompSuctionDischargePressureDrop_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompSuctionDischargePressureDrop () const
      {
        return this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompSuctionDischargePressureDrop_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompSuctionDischargePressureDrop ()
      {
        return this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompSuctionDischargePressureDrop (const SimFlowEnergyTrans_CompSuctionDischargePressureDrop_type& x)
      {
        this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompSuctionDischargePressureDrop (const SimFlowEnergyTrans_CompSuctionDischargePressureDrop_optional& x)
      {
        this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompClearanceFactor_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompClearanceFactor () const
      {
        return this->SimFlowEnergyTrans_CompClearanceFactor_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_CompClearanceFactor_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompClearanceFactor ()
      {
        return this->SimFlowEnergyTrans_CompClearanceFactor_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompClearanceFactor (const SimFlowEnergyTrans_CompClearanceFactor_type& x)
      {
        this->SimFlowEnergyTrans_CompClearanceFactor_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_CompClearanceFactor (const SimFlowEnergyTrans_CompClearanceFactor_optional& x)
      {
        this->SimFlowEnergyTrans_CompClearanceFactor_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_RefrigVolFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigVolFlowRate () const
      {
        return this->SimFlowEnergyTrans_RefrigVolFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_RefrigVolFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigVolFlowRate ()
      {
        return this->SimFlowEnergyTrans_RefrigVolFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigVolFlowRate (const SimFlowEnergyTrans_RefrigVolFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_RefrigVolFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_RefrigVolFlowRate (const SimFlowEnergyTrans_RefrigVolFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_RefrigVolFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_VolRatio_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_VolRatio () const
      {
        return this->SimFlowEnergyTrans_VolRatio_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_VolRatio_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_VolRatio ()
      {
        return this->SimFlowEnergyTrans_VolRatio_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_VolRatio (const SimFlowEnergyTrans_VolRatio_type& x)
      {
        this->SimFlowEnergyTrans_VolRatio_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_VolRatio (const SimFlowEnergyTrans_VolRatio_optional& x)
      {
        this->SimFlowEnergyTrans_VolRatio_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_LeakRateCoef_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LeakRateCoef () const
      {
        return this->SimFlowEnergyTrans_LeakRateCoef_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_LeakRateCoef_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LeakRateCoef ()
      {
        return this->SimFlowEnergyTrans_LeakRateCoef_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LeakRateCoef (const SimFlowEnergyTrans_LeakRateCoef_type& x)
      {
        this->SimFlowEnergyTrans_LeakRateCoef_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_LeakRateCoef (const SimFlowEnergyTrans_LeakRateCoef_optional& x)
      {
        this->SimFlowEnergyTrans_LeakRateCoef_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SrcSideHeatTransCoef_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransCoef () const
      {
        return this->SimFlowEnergyTrans_SrcSideHeatTransCoef_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SrcSideHeatTransCoef_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransCoef ()
      {
        return this->SimFlowEnergyTrans_SrcSideHeatTransCoef_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransCoef (const SimFlowEnergyTrans_SrcSideHeatTransCoef_type& x)
      {
        this->SimFlowEnergyTrans_SrcSideHeatTransCoef_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransCoef (const SimFlowEnergyTrans_SrcSideHeatTransCoef_optional& x)
      {
        this->SimFlowEnergyTrans_SrcSideHeatTransCoef_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SrcSideHeatTransferResist1_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist1 () const
      {
        return this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SrcSideHeatTransferResist1_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist1 ()
      {
        return this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist1 (const SimFlowEnergyTrans_SrcSideHeatTransferResist1_type& x)
      {
        this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist1 (const SimFlowEnergyTrans_SrcSideHeatTransferResist1_optional& x)
      {
        this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SrcSideHeatTransferResist2_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist2 () const
      {
        return this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_SrcSideHeatTransferResist2_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist2 ()
      {
        return this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist2 (const SimFlowEnergyTrans_SrcSideHeatTransferResist2_type& x)
      {
        this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_SrcSideHeatTransferResist2 (const SimFlowEnergyTrans_SrcSideHeatTransferResist2_optional& x)
      {
        this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_NomHeatingCoilCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_NomHeatingCoilCap () const
      {
        return this->SimFlowEnergyTrans_NomHeatingCoilCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::SimFlowEnergyTrans_NomHeatingCoilCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_NomHeatingCoilCap ()
      {
        return this->SimFlowEnergyTrans_NomHeatingCoilCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_NomHeatingCoilCap (const SimFlowEnergyTrans_NomHeatingCoilCap_type& x)
      {
        this->SimFlowEnergyTrans_NomHeatingCoilCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTrans_NomHeatingCoilCap (const SimFlowEnergyTrans_NomHeatingCoilCap_optional& x)
      {
        this->SimFlowEnergyTrans_NomHeatingCoilCap_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation
      //

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (RefId),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CompType_ (this),
        SimFlowEnergyTrans_RefrigType_ (this),
        SimFlowEnergyTrans_DesignSrcSideFlowRate_ (this),
        SimFlowEnergyTrans_HighPressureCutoff_ (this),
        SimFlowEnergyTrans_LowPressureCutoff_ (this),
        SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_ (this),
        SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_ (this),
        SimFlowEnergyTrans_CompPwrLosses_ (this),
        SimFlowEnergyTrans_CompEff_ (this),
        SimFlowEnergyTrans_CompPistonDisplacement_ (this),
        SimFlowEnergyTrans_CompSuctionDischargePressureDrop_ (this),
        SimFlowEnergyTrans_CompClearanceFactor_ (this),
        SimFlowEnergyTrans_RefrigVolFlowRate_ (this),
        SimFlowEnergyTrans_VolRatio_ (this),
        SimFlowEnergyTrans_LeakRateCoef_ (this),
        SimFlowEnergyTrans_SrcSideHeatTransCoef_ (this),
        SimFlowEnergyTrans_SrcSideHeatTransferResist1_ (this),
        SimFlowEnergyTrans_SrcSideHeatTransferResist2_ (this),
        SimFlowEnergyTrans_NomHeatingCoilCap_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation& x,
                                                                                                  ::xml_schema::flags f,
                                                                                                  ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (x, f, c),
        SimFlowEnergyTrans_WaterInletNodeName_ (x.SimFlowEnergyTrans_WaterInletNodeName_, f, this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (x.SimFlowEnergyTrans_WaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_AirInNodeName_ (x.SimFlowEnergyTrans_AirInNodeName_, f, this),
        SimFlowEnergyTrans_AirOutNodeName_ (x.SimFlowEnergyTrans_AirOutNodeName_, f, this),
        SimFlowEnergyTrans_CompType_ (x.SimFlowEnergyTrans_CompType_, f, this),
        SimFlowEnergyTrans_RefrigType_ (x.SimFlowEnergyTrans_RefrigType_, f, this),
        SimFlowEnergyTrans_DesignSrcSideFlowRate_ (x.SimFlowEnergyTrans_DesignSrcSideFlowRate_, f, this),
        SimFlowEnergyTrans_HighPressureCutoff_ (x.SimFlowEnergyTrans_HighPressureCutoff_, f, this),
        SimFlowEnergyTrans_LowPressureCutoff_ (x.SimFlowEnergyTrans_LowPressureCutoff_, f, this),
        SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_ (x.SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_, f, this),
        SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_ (x.SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_, f, this),
        SimFlowEnergyTrans_CompPwrLosses_ (x.SimFlowEnergyTrans_CompPwrLosses_, f, this),
        SimFlowEnergyTrans_CompEff_ (x.SimFlowEnergyTrans_CompEff_, f, this),
        SimFlowEnergyTrans_CompPistonDisplacement_ (x.SimFlowEnergyTrans_CompPistonDisplacement_, f, this),
        SimFlowEnergyTrans_CompSuctionDischargePressureDrop_ (x.SimFlowEnergyTrans_CompSuctionDischargePressureDrop_, f, this),
        SimFlowEnergyTrans_CompClearanceFactor_ (x.SimFlowEnergyTrans_CompClearanceFactor_, f, this),
        SimFlowEnergyTrans_RefrigVolFlowRate_ (x.SimFlowEnergyTrans_RefrigVolFlowRate_, f, this),
        SimFlowEnergyTrans_VolRatio_ (x.SimFlowEnergyTrans_VolRatio_, f, this),
        SimFlowEnergyTrans_LeakRateCoef_ (x.SimFlowEnergyTrans_LeakRateCoef_, f, this),
        SimFlowEnergyTrans_SrcSideHeatTransCoef_ (x.SimFlowEnergyTrans_SrcSideHeatTransCoef_, f, this),
        SimFlowEnergyTrans_SrcSideHeatTransferResist1_ (x.SimFlowEnergyTrans_SrcSideHeatTransferResist1_, f, this),
        SimFlowEnergyTrans_SrcSideHeatTransferResist2_ (x.SimFlowEnergyTrans_SrcSideHeatTransferResist2_, f, this),
        SimFlowEnergyTrans_NomHeatingCoilCap_ (x.SimFlowEnergyTrans_NomHeatingCoilCap_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation (const ::xercesc::DOMElement& e,
                                                                                                  ::xml_schema::flags f,
                                                                                                  ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CompType_ (this),
        SimFlowEnergyTrans_RefrigType_ (this),
        SimFlowEnergyTrans_DesignSrcSideFlowRate_ (this),
        SimFlowEnergyTrans_HighPressureCutoff_ (this),
        SimFlowEnergyTrans_LowPressureCutoff_ (this),
        SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_ (this),
        SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_ (this),
        SimFlowEnergyTrans_CompPwrLosses_ (this),
        SimFlowEnergyTrans_CompEff_ (this),
        SimFlowEnergyTrans_CompPistonDisplacement_ (this),
        SimFlowEnergyTrans_CompSuctionDischargePressureDrop_ (this),
        SimFlowEnergyTrans_CompClearanceFactor_ (this),
        SimFlowEnergyTrans_RefrigVolFlowRate_ (this),
        SimFlowEnergyTrans_VolRatio_ (this),
        SimFlowEnergyTrans_LeakRateCoef_ (this),
        SimFlowEnergyTrans_SrcSideHeatTransCoef_ (this),
        SimFlowEnergyTrans_SrcSideHeatTransferResist1_ (this),
        SimFlowEnergyTrans_SrcSideHeatTransferResist2_ (this),
        SimFlowEnergyTrans_NomHeatingCoilCap_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_WaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_WaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_WaterInletNodeName_type > r (
              SimFlowEnergyTrans_WaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_WaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_WaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_WaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_WaterOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_WaterOutletNodeName_type > r (
              SimFlowEnergyTrans_WaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_WaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_WaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirInNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > r (
              SimFlowEnergyTrans_AirInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirInNodeName_)
            {
              this->SimFlowEnergyTrans_AirInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirOutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirOutNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > r (
              SimFlowEnergyTrans_AirOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirOutNodeName_)
            {
              this->SimFlowEnergyTrans_AirOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CompType
          //
          if (n.name () == "SimFlowEnergyTrans_CompType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CompType_type > r (
              SimFlowEnergyTrans_CompType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CompType_)
            {
              this->SimFlowEnergyTrans_CompType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RefrigType
          //
          if (n.name () == "SimFlowEnergyTrans_RefrigType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_RefrigType_type > r (
              SimFlowEnergyTrans_RefrigType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_RefrigType_)
            {
              this->SimFlowEnergyTrans_RefrigType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DesignSrcSideFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_DesignSrcSideFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_DesignSrcSideFlowRate_)
            {
              this->SimFlowEnergyTrans_DesignSrcSideFlowRate_.set (SimFlowEnergyTrans_DesignSrcSideFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HighPressureCutoff
          //
          if (n.name () == "SimFlowEnergyTrans_HighPressureCutoff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HighPressureCutoff_)
            {
              this->SimFlowEnergyTrans_HighPressureCutoff_.set (SimFlowEnergyTrans_HighPressureCutoff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_LowPressureCutoff
          //
          if (n.name () == "SimFlowEnergyTrans_LowPressureCutoff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_LowPressureCutoff_)
            {
              this->SimFlowEnergyTrans_LowPressureCutoff_.set (SimFlowEnergyTrans_LowPressureCutoff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_LoadSideTotalHeatTransCoef
          //
          if (n.name () == "SimFlowEnergyTrans_LoadSideTotalHeatTransCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_)
            {
              this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_.set (SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet
          //
          if (n.name () == "SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_)
            {
              this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_.set (SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CompPwrLosses
          //
          if (n.name () == "SimFlowEnergyTrans_CompPwrLosses" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CompPwrLosses_)
            {
              this->SimFlowEnergyTrans_CompPwrLosses_.set (SimFlowEnergyTrans_CompPwrLosses_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CompEff
          //
          if (n.name () == "SimFlowEnergyTrans_CompEff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CompEff_)
            {
              this->SimFlowEnergyTrans_CompEff_.set (SimFlowEnergyTrans_CompEff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CompPistonDisplacement
          //
          if (n.name () == "SimFlowEnergyTrans_CompPistonDisplacement" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CompPistonDisplacement_)
            {
              this->SimFlowEnergyTrans_CompPistonDisplacement_.set (SimFlowEnergyTrans_CompPistonDisplacement_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CompSuctionDischargePressureDrop
          //
          if (n.name () == "SimFlowEnergyTrans_CompSuctionDischargePressureDrop" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_)
            {
              this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_.set (SimFlowEnergyTrans_CompSuctionDischargePressureDrop_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CompClearanceFactor
          //
          if (n.name () == "SimFlowEnergyTrans_CompClearanceFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CompClearanceFactor_)
            {
              this->SimFlowEnergyTrans_CompClearanceFactor_.set (SimFlowEnergyTrans_CompClearanceFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RefrigVolFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_RefrigVolFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RefrigVolFlowRate_)
            {
              this->SimFlowEnergyTrans_RefrigVolFlowRate_.set (SimFlowEnergyTrans_RefrigVolFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_VolRatio
          //
          if (n.name () == "SimFlowEnergyTrans_VolRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_VolRatio_)
            {
              this->SimFlowEnergyTrans_VolRatio_.set (SimFlowEnergyTrans_VolRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_LeakRateCoef
          //
          if (n.name () == "SimFlowEnergyTrans_LeakRateCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_LeakRateCoef_)
            {
              this->SimFlowEnergyTrans_LeakRateCoef_.set (SimFlowEnergyTrans_LeakRateCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SrcSideHeatTransCoef
          //
          if (n.name () == "SimFlowEnergyTrans_SrcSideHeatTransCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SrcSideHeatTransCoef_)
            {
              this->SimFlowEnergyTrans_SrcSideHeatTransCoef_.set (SimFlowEnergyTrans_SrcSideHeatTransCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SrcSideHeatTransferResist1
          //
          if (n.name () == "SimFlowEnergyTrans_SrcSideHeatTransferResist1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_)
            {
              this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_.set (SimFlowEnergyTrans_SrcSideHeatTransferResist1_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SrcSideHeatTransferResist2
          //
          if (n.name () == "SimFlowEnergyTrans_SrcSideHeatTransferResist2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_)
            {
              this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_.set (SimFlowEnergyTrans_SrcSideHeatTransferResist2_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NomHeatingCoilCap
          //
          if (n.name () == "SimFlowEnergyTrans_NomHeatingCoilCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NomHeatingCoilCap_)
            {
              this->SimFlowEnergyTrans_NomHeatingCoilCap_.set (SimFlowEnergyTrans_NomHeatingCoilCap_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation* SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      operator= (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater& > (*this) = x;
          this->SimFlowEnergyTrans_WaterInletNodeName_ = x.SimFlowEnergyTrans_WaterInletNodeName_;
          this->SimFlowEnergyTrans_WaterOutletNodeName_ = x.SimFlowEnergyTrans_WaterOutletNodeName_;
          this->SimFlowEnergyTrans_AirInNodeName_ = x.SimFlowEnergyTrans_AirInNodeName_;
          this->SimFlowEnergyTrans_AirOutNodeName_ = x.SimFlowEnergyTrans_AirOutNodeName_;
          this->SimFlowEnergyTrans_CompType_ = x.SimFlowEnergyTrans_CompType_;
          this->SimFlowEnergyTrans_RefrigType_ = x.SimFlowEnergyTrans_RefrigType_;
          this->SimFlowEnergyTrans_DesignSrcSideFlowRate_ = x.SimFlowEnergyTrans_DesignSrcSideFlowRate_;
          this->SimFlowEnergyTrans_HighPressureCutoff_ = x.SimFlowEnergyTrans_HighPressureCutoff_;
          this->SimFlowEnergyTrans_LowPressureCutoff_ = x.SimFlowEnergyTrans_LowPressureCutoff_;
          this->SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_ = x.SimFlowEnergyTrans_LoadSideTotalHeatTransCoef_;
          this->SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_ = x.SimFlowEnergyTrans_SuperheatTempAtTheEvapOutlet_;
          this->SimFlowEnergyTrans_CompPwrLosses_ = x.SimFlowEnergyTrans_CompPwrLosses_;
          this->SimFlowEnergyTrans_CompEff_ = x.SimFlowEnergyTrans_CompEff_;
          this->SimFlowEnergyTrans_CompPistonDisplacement_ = x.SimFlowEnergyTrans_CompPistonDisplacement_;
          this->SimFlowEnergyTrans_CompSuctionDischargePressureDrop_ = x.SimFlowEnergyTrans_CompSuctionDischargePressureDrop_;
          this->SimFlowEnergyTrans_CompClearanceFactor_ = x.SimFlowEnergyTrans_CompClearanceFactor_;
          this->SimFlowEnergyTrans_RefrigVolFlowRate_ = x.SimFlowEnergyTrans_RefrigVolFlowRate_;
          this->SimFlowEnergyTrans_VolRatio_ = x.SimFlowEnergyTrans_VolRatio_;
          this->SimFlowEnergyTrans_LeakRateCoef_ = x.SimFlowEnergyTrans_LeakRateCoef_;
          this->SimFlowEnergyTrans_SrcSideHeatTransCoef_ = x.SimFlowEnergyTrans_SrcSideHeatTransCoef_;
          this->SimFlowEnergyTrans_SrcSideHeatTransferResist1_ = x.SimFlowEnergyTrans_SrcSideHeatTransferResist1_;
          this->SimFlowEnergyTrans_SrcSideHeatTransferResist2_ = x.SimFlowEnergyTrans_SrcSideHeatTransferResist2_;
          this->SimFlowEnergyTrans_NomHeatingCoilCap_ = x.SimFlowEnergyTrans_NomHeatingCoilCap_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation::
      ~SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

