// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea
      // 

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_ZoneName_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneName () const
      {
        return this->SimInfiltrationOrVentilation_ZoneName_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_ZoneName_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneName ()
      {
        return this->SimInfiltrationOrVentilation_ZoneName_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneName (const SimInfiltrationOrVentilation_ZoneName_type& x)
      {
        this->SimInfiltrationOrVentilation_ZoneName_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneName (const SimInfiltrationOrVentilation_ZoneName_optional& x)
      {
        this->SimInfiltrationOrVentilation_ZoneName_ = x;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneName (::std::auto_ptr< SimInfiltrationOrVentilation_ZoneName_type > x)
      {
        this->SimInfiltrationOrVentilation_ZoneName_.set (x);
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_OpngArea_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngArea () const
      {
        return this->SimInfiltrationOrVentilation_OpngArea_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_OpngArea_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngArea ()
      {
        return this->SimInfiltrationOrVentilation_OpngArea_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngArea (const SimInfiltrationOrVentilation_OpngArea_type& x)
      {
        this->SimInfiltrationOrVentilation_OpngArea_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngArea (const SimInfiltrationOrVentilation_OpngArea_optional& x)
      {
        this->SimInfiltrationOrVentilation_OpngArea_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_OpngAreaFracSchedName_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngAreaFracSchedName () const
      {
        return this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_OpngAreaFracSchedName_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngAreaFracSchedName ()
      {
        return this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngAreaFracSchedName (const SimInfiltrationOrVentilation_OpngAreaFracSchedName_type& x)
      {
        this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngAreaFracSchedName (const SimInfiltrationOrVentilation_OpngAreaFracSchedName_optional& x)
      {
        this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_ = x;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngAreaFracSchedName (::std::auto_ptr< SimInfiltrationOrVentilation_OpngAreaFracSchedName_type > x)
      {
        this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_.set (x);
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_OpngEffect_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngEffect () const
      {
        return this->SimInfiltrationOrVentilation_OpngEffect_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_OpngEffect_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngEffect ()
      {
        return this->SimInfiltrationOrVentilation_OpngEffect_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngEffect (const SimInfiltrationOrVentilation_OpngEffect_type& x)
      {
        this->SimInfiltrationOrVentilation_OpngEffect_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_OpngEffect (const SimInfiltrationOrVentilation_OpngEffect_optional& x)
      {
        this->SimInfiltrationOrVentilation_OpngEffect_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_EffectAng_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_EffectAng () const
      {
        return this->SimInfiltrationOrVentilation_EffectAng_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_EffectAng_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_EffectAng ()
      {
        return this->SimInfiltrationOrVentilation_EffectAng_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_EffectAng (const SimInfiltrationOrVentilation_EffectAng_type& x)
      {
        this->SimInfiltrationOrVentilation_EffectAng_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_EffectAng (const SimInfiltrationOrVentilation_EffectAng_optional& x)
      {
        this->SimInfiltrationOrVentilation_EffectAng_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_HtDiff_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_HtDiff () const
      {
        return this->SimInfiltrationOrVentilation_HtDiff_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_HtDiff_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_HtDiff ()
      {
        return this->SimInfiltrationOrVentilation_HtDiff_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_HtDiff (const SimInfiltrationOrVentilation_HtDiff_type& x)
      {
        this->SimInfiltrationOrVentilation_HtDiff_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_HtDiff (const SimInfiltrationOrVentilation_HtDiff_optional& x)
      {
        this->SimInfiltrationOrVentilation_HtDiff_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_DischargeCoeffOpng_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_DischargeCoeffOpng () const
      {
        return this->SimInfiltrationOrVentilation_DischargeCoeffOpng_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::SimInfiltrationOrVentilation_DischargeCoeffOpng_optional& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_DischargeCoeffOpng ()
      {
        return this->SimInfiltrationOrVentilation_DischargeCoeffOpng_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_DischargeCoeffOpng (const SimInfiltrationOrVentilation_DischargeCoeffOpng_type& x)
      {
        this->SimInfiltrationOrVentilation_DischargeCoeffOpng_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_DischargeCoeffOpng (const SimInfiltrationOrVentilation_DischargeCoeffOpng_optional& x)
      {
        this->SimInfiltrationOrVentilation_DischargeCoeffOpng_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea
      //

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (RefId),
        SimInfiltrationOrVentilation_ZoneName_ (this),
        SimInfiltrationOrVentilation_OpngArea_ (this),
        SimInfiltrationOrVentilation_OpngAreaFracSchedName_ (this),
        SimInfiltrationOrVentilation_OpngEffect_ (this),
        SimInfiltrationOrVentilation_EffectAng_ (this),
        SimInfiltrationOrVentilation_HtDiff_ (this),
        SimInfiltrationOrVentilation_DischargeCoeffOpng_ (this)
      {
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea (const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea& x,
                                                                         ::xml_schema::flags f,
                                                                         ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (x, f, c),
        SimInfiltrationOrVentilation_ZoneName_ (x.SimInfiltrationOrVentilation_ZoneName_, f, this),
        SimInfiltrationOrVentilation_OpngArea_ (x.SimInfiltrationOrVentilation_OpngArea_, f, this),
        SimInfiltrationOrVentilation_OpngAreaFracSchedName_ (x.SimInfiltrationOrVentilation_OpngAreaFracSchedName_, f, this),
        SimInfiltrationOrVentilation_OpngEffect_ (x.SimInfiltrationOrVentilation_OpngEffect_, f, this),
        SimInfiltrationOrVentilation_EffectAng_ (x.SimInfiltrationOrVentilation_EffectAng_, f, this),
        SimInfiltrationOrVentilation_HtDiff_ (x.SimInfiltrationOrVentilation_HtDiff_, f, this),
        SimInfiltrationOrVentilation_DischargeCoeffOpng_ (x.SimInfiltrationOrVentilation_DischargeCoeffOpng_, f, this)
      {
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea (const ::xercesc::DOMElement& e,
                                                                         ::xml_schema::flags f,
                                                                         ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (e, f | ::xml_schema::flags::base, c),
        SimInfiltrationOrVentilation_ZoneName_ (this),
        SimInfiltrationOrVentilation_OpngArea_ (this),
        SimInfiltrationOrVentilation_OpngAreaFracSchedName_ (this),
        SimInfiltrationOrVentilation_OpngEffect_ (this),
        SimInfiltrationOrVentilation_EffectAng_ (this),
        SimInfiltrationOrVentilation_HtDiff_ (this),
        SimInfiltrationOrVentilation_DischargeCoeffOpng_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimInfiltrationOrVentilation_ZoneName
          //
          if (n.name () == "SimInfiltrationOrVentilation_ZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_ZoneName_type > r (
              SimInfiltrationOrVentilation_ZoneName_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_ZoneName_)
            {
              this->SimInfiltrationOrVentilation_ZoneName_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_OpngArea
          //
          if (n.name () == "SimInfiltrationOrVentilation_OpngArea" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_OpngArea_)
            {
              this->SimInfiltrationOrVentilation_OpngArea_.set (SimInfiltrationOrVentilation_OpngArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_OpngAreaFracSchedName
          //
          if (n.name () == "SimInfiltrationOrVentilation_OpngAreaFracSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_OpngAreaFracSchedName_type > r (
              SimInfiltrationOrVentilation_OpngAreaFracSchedName_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_)
            {
              this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_OpngEffect
          //
          if (n.name () == "SimInfiltrationOrVentilation_OpngEffect" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_OpngEffect_)
            {
              this->SimInfiltrationOrVentilation_OpngEffect_.set (SimInfiltrationOrVentilation_OpngEffect_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_EffectAng
          //
          if (n.name () == "SimInfiltrationOrVentilation_EffectAng" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_EffectAng_)
            {
              this->SimInfiltrationOrVentilation_EffectAng_.set (SimInfiltrationOrVentilation_EffectAng_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_HtDiff
          //
          if (n.name () == "SimInfiltrationOrVentilation_HtDiff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_HtDiff_)
            {
              this->SimInfiltrationOrVentilation_HtDiff_.set (SimInfiltrationOrVentilation_HtDiff_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_DischargeCoeffOpng
          //
          if (n.name () == "SimInfiltrationOrVentilation_DischargeCoeffOpng" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_DischargeCoeffOpng_)
            {
              this->SimInfiltrationOrVentilation_DischargeCoeffOpng_.set (SimInfiltrationOrVentilation_DischargeCoeffOpng_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea* SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea (*this, f, c);
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea& SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      operator= (const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation& > (*this) = x;
          this->SimInfiltrationOrVentilation_ZoneName_ = x.SimInfiltrationOrVentilation_ZoneName_;
          this->SimInfiltrationOrVentilation_OpngArea_ = x.SimInfiltrationOrVentilation_OpngArea_;
          this->SimInfiltrationOrVentilation_OpngAreaFracSchedName_ = x.SimInfiltrationOrVentilation_OpngAreaFracSchedName_;
          this->SimInfiltrationOrVentilation_OpngEffect_ = x.SimInfiltrationOrVentilation_OpngEffect_;
          this->SimInfiltrationOrVentilation_EffectAng_ = x.SimInfiltrationOrVentilation_EffectAng_;
          this->SimInfiltrationOrVentilation_HtDiff_ = x.SimInfiltrationOrVentilation_HtDiff_;
          this->SimInfiltrationOrVentilation_DischargeCoeffOpng_ = x.SimInfiltrationOrVentilation_DischargeCoeffOpng_;
        }

        return *this;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea::
      ~SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

