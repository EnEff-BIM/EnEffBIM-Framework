// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump
      // 

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedSensHeatRatio_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedSensHeatRatio () const
      {
        return this->SimFlowEnergyTrans_RatedSensHeatRatio_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedSensHeatRatio_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedSensHeatRatio ()
      {
        return this->SimFlowEnergyTrans_RatedSensHeatRatio_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedSensHeatRatio (const SimFlowEnergyTrans_RatedSensHeatRatio_type& x)
      {
        this->SimFlowEnergyTrans_RatedSensHeatRatio_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedSensHeatRatio (const SimFlowEnergyTrans_RatedSensHeatRatio_optional& x)
      {
        this->SimFlowEnergyTrans_RatedSensHeatRatio_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCOP () const
      {
        return this->SimFlowEnergyTrans_RatedCOP_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCOP ()
      {
        return this->SimFlowEnergyTrans_RatedCOP_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCOP (const SimFlowEnergyTrans_RatedCOP_type& x)
      {
        this->SimFlowEnergyTrans_RatedCOP_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCOP (const SimFlowEnergyTrans_RatedCOP_optional& x)
      {
        this->SimFlowEnergyTrans_RatedCOP_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_PartLoadFractCorrelCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_PartLoadFractCorrelCurveName () const
      {
        return this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_PartLoadFractCorrelCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_PartLoadFractCorrelCurveName ()
      {
        return this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_PartLoadFractCorrelCurveName (const SimFlowEnergyTrans_PartLoadFractCorrelCurveName_type& x)
      {
        this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_PartLoadFractCorrelCurveName (const SimFlowEnergyTrans_PartLoadFractCorrelCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_PartLoadFractCorrelCurveName (::std::auto_ptr< SimFlowEnergyTrans_PartLoadFractCorrelCurveName_type > x)
      {
        this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CrankcaseHeatCap () const
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CrankcaseHeatCap ()
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapAirInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_EvapAirInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapAirInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_EvapAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirInletNodeName (const SimFlowEnergyTrans_EvapAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_EvapAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirInletNodeName (const SimFlowEnergyTrans_EvapAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_EvapAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_EvapAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_EvapAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedHeatingCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedHeatingCap () const
      {
        return this->SimFlowEnergyTrans_RatedHeatingCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedHeatingCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedHeatingCap ()
      {
        return this->SimFlowEnergyTrans_RatedHeatingCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedHeatingCap (const SimFlowEnergyTrans_RatedHeatingCap_type& x)
      {
        this->SimFlowEnergyTrans_RatedHeatingCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedHeatingCap (const SimFlowEnergyTrans_RatedHeatingCap_optional& x)
      {
        this->SimFlowEnergyTrans_RatedHeatingCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp () const
      {
        return this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp ()
      {
        return this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp (const SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp (const SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp () const
      {
        return this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp ()
      {
        return this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp (const SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp (const SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedCondInletWaterTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondInletWaterTemp () const
      {
        return this->SimFlowEnergyTrans_RatedCondInletWaterTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedCondInletWaterTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondInletWaterTemp ()
      {
        return this->SimFlowEnergyTrans_RatedCondInletWaterTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondInletWaterTemp (const SimFlowEnergyTrans_RatedCondInletWaterTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedCondInletWaterTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondInletWaterTemp (const SimFlowEnergyTrans_RatedCondInletWaterTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedCondInletWaterTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedEvapAirFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_RatedEvapAirFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedEvapAirFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_RatedEvapAirFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapAirFlowRate (const SimFlowEnergyTrans_RatedEvapAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_RatedEvapAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedEvapAirFlowRate (const SimFlowEnergyTrans_RatedEvapAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_RatedEvapAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedCondWaterFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondWaterFlowRate () const
      {
        return this->SimFlowEnergyTrans_RatedCondWaterFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_RatedCondWaterFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondWaterFlowRate ()
      {
        return this->SimFlowEnergyTrans_RatedCondWaterFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondWaterFlowRate (const SimFlowEnergyTrans_RatedCondWaterFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_RatedCondWaterFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_RatedCondWaterFlowRate (const SimFlowEnergyTrans_RatedCondWaterFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_RatedCondWaterFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP () const
      {
        return this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP ()
      {
        return this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP (const SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_type& x)
      {
        this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP (const SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_optional& x)
      {
        this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP (::std::auto_ptr< SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_type > x)
      {
        this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP () const
      {
        return this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP ()
      {
        return this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP (const SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_type& x)
      {
        this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP (const SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_optional& x)
      {
        this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP (::std::auto_ptr< SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_type > x)
      {
        this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP () const
      {
        return this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP ()
      {
        return this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP (const SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_type& x)
      {
        this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP (const SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_optional& x)
      {
        this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP (::std::auto_ptr< SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_type > x)
      {
        this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondWaterPumpPwr_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterPumpPwr () const
      {
        return this->SimFlowEnergyTrans_CondWaterPumpPwr_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondWaterPumpPwr_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterPumpPwr ()
      {
        return this->SimFlowEnergyTrans_CondWaterPumpPwr_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterPumpPwr (const SimFlowEnergyTrans_CondWaterPumpPwr_type& x)
      {
        this->SimFlowEnergyTrans_CondWaterPumpPwr_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterPumpPwr (const SimFlowEnergyTrans_CondWaterPumpPwr_optional& x)
      {
        this->SimFlowEnergyTrans_CondWaterPumpPwr_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_FractCondPumpHeatToWater_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_FractCondPumpHeatToWater () const
      {
        return this->SimFlowEnergyTrans_FractCondPumpHeatToWater_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_FractCondPumpHeatToWater_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_FractCondPumpHeatToWater ()
      {
        return this->SimFlowEnergyTrans_FractCondPumpHeatToWater_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_FractCondPumpHeatToWater (const SimFlowEnergyTrans_FractCondPumpHeatToWater_type& x)
      {
        this->SimFlowEnergyTrans_FractCondPumpHeatToWater_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_FractCondPumpHeatToWater (const SimFlowEnergyTrans_FractCondPumpHeatToWater_optional& x)
      {
        this->SimFlowEnergyTrans_FractCondPumpHeatToWater_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_EvapAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_EvapAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirOutletNodeName (const SimFlowEnergyTrans_EvapAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_EvapAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirOutletNodeName (const SimFlowEnergyTrans_EvapAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_EvapAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_EvapAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_EvapAirOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondWaterInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CondWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondWaterInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CondWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterInletNodeName (const SimFlowEnergyTrans_CondWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CondWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterInletNodeName (const SimFlowEnergyTrans_CondWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CondWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CondWaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondWaterOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_CondWaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_CondWaterOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_CondWaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterOutletNodeName (const SimFlowEnergyTrans_CondWaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CondWaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterOutletNodeName (const SimFlowEnergyTrans_CondWaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CondWaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_CondWaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondWaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CondWaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp () const
      {
        return this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp ()
      {
        return this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs () const
      {
        return this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs ()
      {
        return this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs (const SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_type& x)
      {
        this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs (const SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_optional& x)
      {
        this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs (::std::auto_ptr< SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_type > x)
      {
        this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCapFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncTempCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCapFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncTempCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncTempCurveName (const SimFlowEnergyTrans_HeatingCapFuncTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncTempCurveName (const SimFlowEnergyTrans_HeatingCapFuncTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCapFuncTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName (const SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName (const SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName (const SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName (const SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncTempCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncTempCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncTempCurveName (const SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncTempCurveName (const SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName (const SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName (const SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName (const SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName (const SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump
      //

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (RefId),
        SimFlowEnergyTrans_RatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_RatedCOP_ (this),
        SimFlowEnergyTrans_PartLoadFractCorrelCurveName_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_EvapAirInletNodeName_ (this),
        SimFlowEnergyTrans_RatedHeatingCap_ (this),
        SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_ (this),
        SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_ (this),
        SimFlowEnergyTrans_RatedCondInletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedEvapAirFlowRate_ (this),
        SimFlowEnergyTrans_RatedCondWaterFlowRate_ (this),
        SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_ (this),
        SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_ (this),
        SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_ (this),
        SimFlowEnergyTrans_CondWaterPumpPwr_ (this),
        SimFlowEnergyTrans_FractCondPumpHeatToWater_ (this),
        SimFlowEnergyTrans_EvapAirOutletNodeName_ (this),
        SimFlowEnergyTrans_CondWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CondWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_ (this),
        SimFlowEnergyTrans_HeatingCapFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_ (this),
        SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_ (this),
        SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump (const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump& x,
                                                                                 ::xml_schema::flags f,
                                                                                 ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (x, f, c),
        SimFlowEnergyTrans_RatedSensHeatRatio_ (x.SimFlowEnergyTrans_RatedSensHeatRatio_, f, this),
        SimFlowEnergyTrans_RatedCOP_ (x.SimFlowEnergyTrans_RatedCOP_, f, this),
        SimFlowEnergyTrans_PartLoadFractCorrelCurveName_ (x.SimFlowEnergyTrans_PartLoadFractCorrelCurveName_, f, this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (x.SimFlowEnergyTrans_CrankcaseHeatCap_, f, this),
        SimFlowEnergyTrans_EvapAirInletNodeName_ (x.SimFlowEnergyTrans_EvapAirInletNodeName_, f, this),
        SimFlowEnergyTrans_RatedHeatingCap_ (x.SimFlowEnergyTrans_RatedHeatingCap_, f, this),
        SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_ (x.SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_, f, this),
        SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_ (x.SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_, f, this),
        SimFlowEnergyTrans_RatedCondInletWaterTemp_ (x.SimFlowEnergyTrans_RatedCondInletWaterTemp_, f, this),
        SimFlowEnergyTrans_RatedEvapAirFlowRate_ (x.SimFlowEnergyTrans_RatedEvapAirFlowRate_, f, this),
        SimFlowEnergyTrans_RatedCondWaterFlowRate_ (x.SimFlowEnergyTrans_RatedCondWaterFlowRate_, f, this),
        SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_ (x.SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_, f, this),
        SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_ (x.SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_, f, this),
        SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_ (x.SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_, f, this),
        SimFlowEnergyTrans_CondWaterPumpPwr_ (x.SimFlowEnergyTrans_CondWaterPumpPwr_, f, this),
        SimFlowEnergyTrans_FractCondPumpHeatToWater_ (x.SimFlowEnergyTrans_FractCondPumpHeatToWater_, f, this),
        SimFlowEnergyTrans_EvapAirOutletNodeName_ (x.SimFlowEnergyTrans_EvapAirOutletNodeName_, f, this),
        SimFlowEnergyTrans_CondWaterInletNodeName_ (x.SimFlowEnergyTrans_CondWaterInletNodeName_, f, this),
        SimFlowEnergyTrans_CondWaterOutletNodeName_ (x.SimFlowEnergyTrans_CondWaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_ (x.SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_, f, this),
        SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_ (x.SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_, f, this),
        SimFlowEnergyTrans_HeatingCapFuncTempCurveName_ (x.SimFlowEnergyTrans_HeatingCapFuncTempCurveName_, f, this),
        SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_ (x.SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_, f, this),
        SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_ (x.SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_, f, this),
        SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_ (x.SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_, f, this),
        SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_ (x.SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_, f, this),
        SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_ (x.SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump (const ::xercesc::DOMElement& e,
                                                                                 ::xml_schema::flags f,
                                                                                 ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_RatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_RatedCOP_ (this),
        SimFlowEnergyTrans_PartLoadFractCorrelCurveName_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_EvapAirInletNodeName_ (this),
        SimFlowEnergyTrans_RatedHeatingCap_ (this),
        SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_ (this),
        SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_ (this),
        SimFlowEnergyTrans_RatedCondInletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedEvapAirFlowRate_ (this),
        SimFlowEnergyTrans_RatedCondWaterFlowRate_ (this),
        SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_ (this),
        SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_ (this),
        SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_ (this),
        SimFlowEnergyTrans_CondWaterPumpPwr_ (this),
        SimFlowEnergyTrans_FractCondPumpHeatToWater_ (this),
        SimFlowEnergyTrans_EvapAirOutletNodeName_ (this),
        SimFlowEnergyTrans_CondWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CondWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_ (this),
        SimFlowEnergyTrans_HeatingCapFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_ (this),
        SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_ (this),
        SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_RatedSensHeatRatio
          //
          if (n.name () == "SimFlowEnergyTrans_RatedSensHeatRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedSensHeatRatio_)
            {
              this->SimFlowEnergyTrans_RatedSensHeatRatio_.set (SimFlowEnergyTrans_RatedSensHeatRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedCOP
          //
          if (n.name () == "SimFlowEnergyTrans_RatedCOP" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedCOP_)
            {
              this->SimFlowEnergyTrans_RatedCOP_.set (SimFlowEnergyTrans_RatedCOP_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PartLoadFractCorrelCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_PartLoadFractCorrelCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_PartLoadFractCorrelCurveName_type > r (
              SimFlowEnergyTrans_PartLoadFractCorrelCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_)
            {
              this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CrankcaseHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_CrankcaseHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CrankcaseHeatCap_)
            {
              this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (SimFlowEnergyTrans_CrankcaseHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EvapAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_EvapAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EvapAirInletNodeName_type > r (
              SimFlowEnergyTrans_EvapAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EvapAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_EvapAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedHeatingCap
          //
          if (n.name () == "SimFlowEnergyTrans_RatedHeatingCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedHeatingCap_)
            {
              this->SimFlowEnergyTrans_RatedHeatingCap_.set (SimFlowEnergyTrans_RatedHeatingCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_)
            {
              this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_.set (SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_)
            {
              this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_.set (SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedCondInletWaterTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedCondInletWaterTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedCondInletWaterTemp_)
            {
              this->SimFlowEnergyTrans_RatedCondInletWaterTemp_.set (SimFlowEnergyTrans_RatedCondInletWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedEvapAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_RatedEvapAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedEvapAirFlowRate_)
            {
              this->SimFlowEnergyTrans_RatedEvapAirFlowRate_.set (SimFlowEnergyTrans_RatedEvapAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedCondWaterFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_RatedCondWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedCondWaterFlowRate_)
            {
              this->SimFlowEnergyTrans_RatedCondWaterFlowRate_.set (SimFlowEnergyTrans_RatedCondWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP
          //
          if (n.name () == "SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_type > r (
              SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_)
            {
              this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP
          //
          if (n.name () == "SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_type > r (
              SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_)
            {
              this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP
          //
          if (n.name () == "SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_type > r (
              SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_)
            {
              this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondWaterPumpPwr
          //
          if (n.name () == "SimFlowEnergyTrans_CondWaterPumpPwr" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CondWaterPumpPwr_)
            {
              this->SimFlowEnergyTrans_CondWaterPumpPwr_.set (SimFlowEnergyTrans_CondWaterPumpPwr_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FractCondPumpHeatToWater
          //
          if (n.name () == "SimFlowEnergyTrans_FractCondPumpHeatToWater" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FractCondPumpHeatToWater_)
            {
              this->SimFlowEnergyTrans_FractCondPumpHeatToWater_.set (SimFlowEnergyTrans_FractCondPumpHeatToWater_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EvapAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_EvapAirOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EvapAirOutletNodeName_type > r (
              SimFlowEnergyTrans_EvapAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EvapAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_EvapAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CondWaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondWaterInletNodeName_type > r (
              SimFlowEnergyTrans_CondWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_CondWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondWaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CondWaterOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondWaterOutletNodeName_type > r (
              SimFlowEnergyTrans_CondWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondWaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_CondWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_)
            {
              this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_.set (SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs
          //
          if (n.name () == "SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_type > r (
              SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_)
            {
              this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCapFuncTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCapFuncTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCapFuncTempCurveName_type > r (
              SimFlowEnergyTrans_HeatingCapFuncTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_type > r (
              SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_type > r (
              SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCOPFuncTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCOPFuncTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_type > r (
              SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_type > r (
              SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_type > r (
              SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump* SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump& SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      operator= (const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater& > (*this) = x;
          this->SimFlowEnergyTrans_RatedSensHeatRatio_ = x.SimFlowEnergyTrans_RatedSensHeatRatio_;
          this->SimFlowEnergyTrans_RatedCOP_ = x.SimFlowEnergyTrans_RatedCOP_;
          this->SimFlowEnergyTrans_PartLoadFractCorrelCurveName_ = x.SimFlowEnergyTrans_PartLoadFractCorrelCurveName_;
          this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x.SimFlowEnergyTrans_CrankcaseHeatCap_;
          this->SimFlowEnergyTrans_EvapAirInletNodeName_ = x.SimFlowEnergyTrans_EvapAirInletNodeName_;
          this->SimFlowEnergyTrans_RatedHeatingCap_ = x.SimFlowEnergyTrans_RatedHeatingCap_;
          this->SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_ = x.SimFlowEnergyTrans_RatedEvapInletAirDryBulbTemp_;
          this->SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_ = x.SimFlowEnergyTrans_RatedEvapInletAirWetBulbTemp_;
          this->SimFlowEnergyTrans_RatedCondInletWaterTemp_ = x.SimFlowEnergyTrans_RatedCondInletWaterTemp_;
          this->SimFlowEnergyTrans_RatedEvapAirFlowRate_ = x.SimFlowEnergyTrans_RatedEvapAirFlowRate_;
          this->SimFlowEnergyTrans_RatedCondWaterFlowRate_ = x.SimFlowEnergyTrans_RatedCondWaterFlowRate_;
          this->SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_ = x.SimFlowEnergyTrans_EvapFanPwrcludedRatedCOP_;
          this->SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_ = x.SimFlowEnergyTrans_CondPumpPwrcludedRatedCOP_;
          this->SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_ = x.SimFlowEnergyTrans_CondPumpHeatcludedRatedHeatingCap_RatedCOP_;
          this->SimFlowEnergyTrans_CondWaterPumpPwr_ = x.SimFlowEnergyTrans_CondWaterPumpPwr_;
          this->SimFlowEnergyTrans_FractCondPumpHeatToWater_ = x.SimFlowEnergyTrans_FractCondPumpHeatToWater_;
          this->SimFlowEnergyTrans_EvapAirOutletNodeName_ = x.SimFlowEnergyTrans_EvapAirOutletNodeName_;
          this->SimFlowEnergyTrans_CondWaterInletNodeName_ = x.SimFlowEnergyTrans_CondWaterInletNodeName_;
          this->SimFlowEnergyTrans_CondWaterOutletNodeName_ = x.SimFlowEnergyTrans_CondWaterOutletNodeName_;
          this->SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_ = x.SimFlowEnergyTrans_MaxAmbTempForCrankcaseHeatOp_;
          this->SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_ = x.SimFlowEnergyTrans_EvapAirTempTypeForCurveObjs_;
          this->SimFlowEnergyTrans_HeatingCapFuncTempCurveName_ = x.SimFlowEnergyTrans_HeatingCapFuncTempCurveName_;
          this->SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_ = x.SimFlowEnergyTrans_HeatingCapFuncAirFlowFractCurveName_;
          this->SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_ = x.SimFlowEnergyTrans_HeatingCapFuncWaterFlowFractCurveName_;
          this->SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_ = x.SimFlowEnergyTrans_HeatingCOPFuncTempCurveName_;
          this->SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_ = x.SimFlowEnergyTrans_HeatingCOPFuncAirFlowFractCurveName_;
          this->SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_ = x.SimFlowEnergyTrans_HeatingCOPFuncWaterFlowFractCurveName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump::
      ~SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

