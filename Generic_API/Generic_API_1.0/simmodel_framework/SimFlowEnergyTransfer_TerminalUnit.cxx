// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_TerminalUnit.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_TerminalUnit
      // 

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_ZoneTermUnitName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitName () const
      {
        return this->SimFlowEnergyTrans_ZoneTermUnitName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_ZoneTermUnitName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitName ()
      {
        return this->SimFlowEnergyTrans_ZoneTermUnitName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitName (const SimFlowEnergyTrans_ZoneTermUnitName_type& x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitName (const SimFlowEnergyTrans_ZoneTermUnitName_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitName (::std::auto_ptr< SimFlowEnergyTrans_ZoneTermUnitName_type > x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_TermUnitAvailschedule_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAvailschedule () const
      {
        return this->SimFlowEnergyTrans_TermUnitAvailschedule_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_TermUnitAvailschedule_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAvailschedule ()
      {
        return this->SimFlowEnergyTrans_TermUnitAvailschedule_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAvailschedule (const SimFlowEnergyTrans_TermUnitAvailschedule_type& x)
      {
        this->SimFlowEnergyTrans_TermUnitAvailschedule_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAvailschedule (const SimFlowEnergyTrans_TermUnitAvailschedule_optional& x)
      {
        this->SimFlowEnergyTrans_TermUnitAvailschedule_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAvailschedule (::std::auto_ptr< SimFlowEnergyTrans_TermUnitAvailschedule_type > x)
      {
        this->SimFlowEnergyTrans_TermUnitAvailschedule_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_TermUnitAirInletNodeName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_TermUnitAirInletNodeName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_TermUnitAirInletNodeName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_TermUnitAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirInletNodeName (const SimFlowEnergyTrans_TermUnitAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_TermUnitAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirInletNodeName (const SimFlowEnergyTrans_TermUnitAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_TermUnitAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_TermUnitAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_TermUnitAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_TermUnitAirOutletNodeName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_TermUnitAirOutletNodeName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirOutletNodeName (const SimFlowEnergyTrans_TermUnitAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirOutletNodeName (const SimFlowEnergyTrans_TermUnitAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_TermUnitAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_TermUnitAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp (const SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp (const SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded (const SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded (const SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp (const SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp (const SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded (const SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded (const SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp () const
      {
        return this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp ()
      {
        return this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp (const SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_type& x)
      {
        this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp (const SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_optional& x)
      {
        this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp () const
      {
        return this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp ()
      {
        return this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp (const SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_type& x)
      {
        this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp (const SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_optional& x)
      {
        this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded () const
      {
        return this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded ()
      {
        return this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded (const SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_type& x)
      {
        this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded (const SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_optional& x)
      {
        this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName (const SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName (const SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName (::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_type > x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanPlacement_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanPlacement () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFanPlacement_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanPlacement_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanPlacement ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFanPlacement_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanPlacement (const SimFlowEnergyTrans_SupplyAirFanPlacement_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanPlacement_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanPlacement (const SimFlowEnergyTrans_SupplyAirFanPlacement_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanPlacement_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanPlacement (::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanPlacement_type > x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanPlacement_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjType () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFanObjType_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjType ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFanObjType_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjType (const SimFlowEnergyTrans_SupplyAirFanObjType_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanObjType_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjType (const SimFlowEnergyTrans_SupplyAirFanObjType_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanObjType_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjType (::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanObjType_type > x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanObjType_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjName () const
      {
        return this->SimFlowEnergyTrans_SupplyAirFanObjName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_SupplyAirFanObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjName ()
      {
        return this->SimFlowEnergyTrans_SupplyAirFanObjName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjName (const SimFlowEnergyTrans_SupplyAirFanObjName_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanObjName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjName (const SimFlowEnergyTrans_SupplyAirFanObjName_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanObjName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_SupplyAirFanObjName (::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanObjName_type > x)
      {
        this->SimFlowEnergyTrans_SupplyAirFanObjName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutsideAirMixerObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjType () const
      {
        return this->SimFlowEnergyTrans_OutsideAirMixerObjType_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutsideAirMixerObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjType ()
      {
        return this->SimFlowEnergyTrans_OutsideAirMixerObjType_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjType (const SimFlowEnergyTrans_OutsideAirMixerObjType_type& x)
      {
        this->SimFlowEnergyTrans_OutsideAirMixerObjType_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjType (const SimFlowEnergyTrans_OutsideAirMixerObjType_optional& x)
      {
        this->SimFlowEnergyTrans_OutsideAirMixerObjType_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjType (::std::auto_ptr< SimFlowEnergyTrans_OutsideAirMixerObjType_type > x)
      {
        this->SimFlowEnergyTrans_OutsideAirMixerObjType_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutsideAirMixerObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjName () const
      {
        return this->SimFlowEnergyTrans_OutsideAirMixerObjName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_OutsideAirMixerObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjName ()
      {
        return this->SimFlowEnergyTrans_OutsideAirMixerObjName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjName (const SimFlowEnergyTrans_OutsideAirMixerObjName_type& x)
      {
        this->SimFlowEnergyTrans_OutsideAirMixerObjName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjName (const SimFlowEnergyTrans_OutsideAirMixerObjName_optional& x)
      {
        this->SimFlowEnergyTrans_OutsideAirMixerObjName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_OutsideAirMixerObjName (::std::auto_ptr< SimFlowEnergyTrans_OutsideAirMixerObjName_type > x)
      {
        this->SimFlowEnergyTrans_OutsideAirMixerObjName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_CoolingCoilObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolingCoilObjType () const
      {
        return this->SimFlowEnergyTrans_CoolingCoilObjType_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_CoolingCoilObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolingCoilObjType ()
      {
        return this->SimFlowEnergyTrans_CoolingCoilObjType_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolingCoilObjType (const SimFlowEnergyTrans_CoolingCoilObjType_type& x)
      {
        this->SimFlowEnergyTrans_CoolingCoilObjType_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolingCoilObjType (const SimFlowEnergyTrans_CoolingCoilObjType_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingCoilObjType_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolingCoilObjType (::std::auto_ptr< SimFlowEnergyTrans_CoolingCoilObjType_type > x)
      {
        this->SimFlowEnergyTrans_CoolingCoilObjType_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_CoolCoilObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolCoilObjName () const
      {
        return this->SimFlowEnergyTrans_CoolCoilObjName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_CoolCoilObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolCoilObjName ()
      {
        return this->SimFlowEnergyTrans_CoolCoilObjName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolCoilObjName (const SimFlowEnergyTrans_CoolCoilObjName_type& x)
      {
        this->SimFlowEnergyTrans_CoolCoilObjName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolCoilObjName (const SimFlowEnergyTrans_CoolCoilObjName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolCoilObjName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_CoolCoilObjName (::std::auto_ptr< SimFlowEnergyTrans_CoolCoilObjName_type > x)
      {
        this->SimFlowEnergyTrans_CoolCoilObjName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_HeatingCoilObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjType () const
      {
        return this->SimFlowEnergyTrans_HeatingCoilObjType_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_HeatingCoilObjType_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjType ()
      {
        return this->SimFlowEnergyTrans_HeatingCoilObjType_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjType (const SimFlowEnergyTrans_HeatingCoilObjType_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjType_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjType (const SimFlowEnergyTrans_HeatingCoilObjType_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjType_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjType (::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilObjType_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjType_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_HeatingCoilObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjName () const
      {
        return this->SimFlowEnergyTrans_HeatingCoilObjName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_HeatingCoilObjName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjName ()
      {
        return this->SimFlowEnergyTrans_HeatingCoilObjName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjName (const SimFlowEnergyTrans_HeatingCoilObjName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjName (const SimFlowEnergyTrans_HeatingCoilObjName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_HeatingCoilObjName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilObjName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjName_.set (x);
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec () const
      {
        return this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec ()
      {
        return this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec (const SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_type& x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec (const SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec () const
      {
        return this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec ()
      {
        return this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec (const SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_type& x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec (const SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio () const
      {
        return this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio ()
      {
        return this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio (const SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_type& x)
      {
        this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio (const SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_optional& x)
      {
        this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_ = x;
      }

      const SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_AvailMngrListName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_AvailMngrListName () const
      {
        return this->SimFlowEnergyTrans_AvailMngrListName_;
      }

      SimFlowEnergyTransfer_TerminalUnit::SimFlowEnergyTrans_AvailMngrListName_optional& SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_AvailMngrListName ()
      {
        return this->SimFlowEnergyTrans_AvailMngrListName_;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_AvailMngrListName (const SimFlowEnergyTrans_AvailMngrListName_type& x)
      {
        this->SimFlowEnergyTrans_AvailMngrListName_.set (x);
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_AvailMngrListName (const SimFlowEnergyTrans_AvailMngrListName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailMngrListName_ = x;
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTrans_AvailMngrListName (::std::auto_ptr< SimFlowEnergyTrans_AvailMngrListName_type > x)
      {
        this->SimFlowEnergyTrans_AvailMngrListName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_TerminalUnit
      //

      SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTransfer_TerminalUnit (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer (RefId),
        SimFlowEnergyTrans_ZoneTermUnitName_ (this),
        SimFlowEnergyTrans_TermUnitAvailschedule_ (this),
        SimFlowEnergyTrans_TermUnitAirInletNodeName_ (this),
        SimFlowEnergyTrans_TermUnitAirOutletNodeName_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_ (this),
        SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_ (this),
        SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_ (this),
        SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (this),
        SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_ (this),
        SimFlowEnergyTrans_SupplyAirFanPlacement_ (this),
        SimFlowEnergyTrans_SupplyAirFanObjType_ (this),
        SimFlowEnergyTrans_SupplyAirFanObjName_ (this),
        SimFlowEnergyTrans_OutsideAirMixerObjType_ (this),
        SimFlowEnergyTrans_OutsideAirMixerObjName_ (this),
        SimFlowEnergyTrans_CoolingCoilObjType_ (this),
        SimFlowEnergyTrans_CoolCoilObjName_ (this),
        SimFlowEnergyTrans_HeatingCoilObjType_ (this),
        SimFlowEnergyTrans_HeatingCoilObjName_ (this),
        SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_ (this),
        SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_ (this),
        SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_ (this),
        SimFlowEnergyTrans_AvailMngrListName_ (this)
      {
      }

      SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTransfer_TerminalUnit (const SimFlowEnergyTransfer_TerminalUnit& x,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer (x, f, c),
        SimFlowEnergyTrans_ZoneTermUnitName_ (x.SimFlowEnergyTrans_ZoneTermUnitName_, f, this),
        SimFlowEnergyTrans_TermUnitAvailschedule_ (x.SimFlowEnergyTrans_TermUnitAvailschedule_, f, this),
        SimFlowEnergyTrans_TermUnitAirInletNodeName_ (x.SimFlowEnergyTrans_TermUnitAirInletNodeName_, f, this),
        SimFlowEnergyTrans_TermUnitAirOutletNodeName_ (x.SimFlowEnergyTrans_TermUnitAirOutletNodeName_, f, this),
        SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_ (x.SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_, f, this),
        SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_ (x.SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_, f, this),
        SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_ (x.SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_, f, this),
        SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_ (x.SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_, f, this),
        SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_ (x.SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_, f, this),
        SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_ (x.SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_, f, this),
        SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (x.SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_, f, this),
        SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_ (x.SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_, f, this),
        SimFlowEnergyTrans_SupplyAirFanPlacement_ (x.SimFlowEnergyTrans_SupplyAirFanPlacement_, f, this),
        SimFlowEnergyTrans_SupplyAirFanObjType_ (x.SimFlowEnergyTrans_SupplyAirFanObjType_, f, this),
        SimFlowEnergyTrans_SupplyAirFanObjName_ (x.SimFlowEnergyTrans_SupplyAirFanObjName_, f, this),
        SimFlowEnergyTrans_OutsideAirMixerObjType_ (x.SimFlowEnergyTrans_OutsideAirMixerObjType_, f, this),
        SimFlowEnergyTrans_OutsideAirMixerObjName_ (x.SimFlowEnergyTrans_OutsideAirMixerObjName_, f, this),
        SimFlowEnergyTrans_CoolingCoilObjType_ (x.SimFlowEnergyTrans_CoolingCoilObjType_, f, this),
        SimFlowEnergyTrans_CoolCoilObjName_ (x.SimFlowEnergyTrans_CoolCoilObjName_, f, this),
        SimFlowEnergyTrans_HeatingCoilObjType_ (x.SimFlowEnergyTrans_HeatingCoilObjType_, f, this),
        SimFlowEnergyTrans_HeatingCoilObjName_ (x.SimFlowEnergyTrans_HeatingCoilObjName_, f, this),
        SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_ (x.SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_, f, this),
        SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_ (x.SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_, f, this),
        SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_ (x.SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_, f, this),
        SimFlowEnergyTrans_AvailMngrListName_ (x.SimFlowEnergyTrans_AvailMngrListName_, f, this)
      {
      }

      SimFlowEnergyTransfer_TerminalUnit::
      SimFlowEnergyTransfer_TerminalUnit (const ::xercesc::DOMElement& e,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_ZoneTermUnitName_ (this),
        SimFlowEnergyTrans_TermUnitAvailschedule_ (this),
        SimFlowEnergyTrans_TermUnitAirInletNodeName_ (this),
        SimFlowEnergyTrans_TermUnitAirOutletNodeName_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_ (this),
        SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_ (this),
        SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_ (this),
        SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_ (this),
        SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (this),
        SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_ (this),
        SimFlowEnergyTrans_SupplyAirFanPlacement_ (this),
        SimFlowEnergyTrans_SupplyAirFanObjType_ (this),
        SimFlowEnergyTrans_SupplyAirFanObjName_ (this),
        SimFlowEnergyTrans_OutsideAirMixerObjType_ (this),
        SimFlowEnergyTrans_OutsideAirMixerObjName_ (this),
        SimFlowEnergyTrans_CoolingCoilObjType_ (this),
        SimFlowEnergyTrans_CoolCoilObjName_ (this),
        SimFlowEnergyTrans_HeatingCoilObjType_ (this),
        SimFlowEnergyTrans_HeatingCoilObjName_ (this),
        SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_ (this),
        SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_ (this),
        SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_ (this),
        SimFlowEnergyTrans_AvailMngrListName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_TerminalUnit::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_ZoneTermUnitName
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneTermUnitName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ZoneTermUnitName_type > r (
              SimFlowEnergyTrans_ZoneTermUnitName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ZoneTermUnitName_)
            {
              this->SimFlowEnergyTrans_ZoneTermUnitName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_TermUnitAvailschedule
          //
          if (n.name () == "SimFlowEnergyTrans_TermUnitAvailschedule" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TermUnitAvailschedule_type > r (
              SimFlowEnergyTrans_TermUnitAvailschedule_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TermUnitAvailschedule_)
            {
              this->SimFlowEnergyTrans_TermUnitAvailschedule_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_TermUnitAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_TermUnitAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TermUnitAirInletNodeName_type > r (
              SimFlowEnergyTrans_TermUnitAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TermUnitAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_TermUnitAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_TermUnitAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_TermUnitAirOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TermUnitAirOutletNodeName_type > r (
              SimFlowEnergyTrans_TermUnitAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_)
            {
              this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_.set (SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_)
            {
              this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_.set (SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_)
            {
              this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_.set (SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_)
            {
              this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_.set (SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp
          //
          if (n.name () == "SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_)
            {
              this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_.set (SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp
          //
          if (n.name () == "SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_)
            {
              this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_.set (SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded
          //
          if (n.name () == "SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_)
            {
              this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_.set (SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_type > r (
              SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_)
            {
              this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFanPlacement
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFanPlacement" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanPlacement_type > r (
              SimFlowEnergyTrans_SupplyAirFanPlacement_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplyAirFanPlacement_)
            {
              this->SimFlowEnergyTrans_SupplyAirFanPlacement_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFanObjType
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFanObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanObjType_type > r (
              SimFlowEnergyTrans_SupplyAirFanObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplyAirFanObjType_)
            {
              this->SimFlowEnergyTrans_SupplyAirFanObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirFanObjName
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirFanObjName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplyAirFanObjName_type > r (
              SimFlowEnergyTrans_SupplyAirFanObjName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplyAirFanObjName_)
            {
              this->SimFlowEnergyTrans_SupplyAirFanObjName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OutsideAirMixerObjType
          //
          if (n.name () == "SimFlowEnergyTrans_OutsideAirMixerObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutsideAirMixerObjType_type > r (
              SimFlowEnergyTrans_OutsideAirMixerObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutsideAirMixerObjType_)
            {
              this->SimFlowEnergyTrans_OutsideAirMixerObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OutsideAirMixerObjName
          //
          if (n.name () == "SimFlowEnergyTrans_OutsideAirMixerObjName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutsideAirMixerObjName_type > r (
              SimFlowEnergyTrans_OutsideAirMixerObjName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutsideAirMixerObjName_)
            {
              this->SimFlowEnergyTrans_OutsideAirMixerObjName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingCoilObjType
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingCoilObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingCoilObjType_type > r (
              SimFlowEnergyTrans_CoolingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingCoilObjType_)
            {
              this->SimFlowEnergyTrans_CoolingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolCoilObjName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolCoilObjName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolCoilObjName_type > r (
              SimFlowEnergyTrans_CoolCoilObjName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolCoilObjName_)
            {
              this->SimFlowEnergyTrans_CoolCoilObjName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCoilObjType
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCoilObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilObjType_type > r (
              SimFlowEnergyTrans_HeatingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCoilObjType_)
            {
              this->SimFlowEnergyTrans_HeatingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCoilObjName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCoilObjName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilObjName_type > r (
              SimFlowEnergyTrans_HeatingCoilObjName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCoilObjName_)
            {
              this->SimFlowEnergyTrans_HeatingCoilObjName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_)
            {
              this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_.set (SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_)
            {
              this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_.set (SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio
          //
          if (n.name () == "SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_)
            {
              this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_.set (SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailMngrListName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailMngrListName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailMngrListName_type > r (
              SimFlowEnergyTrans_AvailMngrListName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailMngrListName_)
            {
              this->SimFlowEnergyTrans_AvailMngrListName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_TerminalUnit* SimFlowEnergyTransfer_TerminalUnit::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_TerminalUnit (*this, f, c);
      }

      SimFlowEnergyTransfer_TerminalUnit& SimFlowEnergyTransfer_TerminalUnit::
      operator= (const SimFlowEnergyTransfer_TerminalUnit& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer& > (*this) = x;
          this->SimFlowEnergyTrans_ZoneTermUnitName_ = x.SimFlowEnergyTrans_ZoneTermUnitName_;
          this->SimFlowEnergyTrans_TermUnitAvailschedule_ = x.SimFlowEnergyTrans_TermUnitAvailschedule_;
          this->SimFlowEnergyTrans_TermUnitAirInletNodeName_ = x.SimFlowEnergyTrans_TermUnitAirInletNodeName_;
          this->SimFlowEnergyTrans_TermUnitAirOutletNodeName_ = x.SimFlowEnergyTrans_TermUnitAirOutletNodeName_;
          this->SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_ = x.SimFlowEnergyTrans_SupplyAirFlowRateDuringCoolingOp_;
          this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_ = x.SimFlowEnergyTrans_SupplyAirFlowRateWhenNoCoolisNeeded_;
          this->SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_ = x.SimFlowEnergyTrans_SupplyAirFlowRateDuringHeatingOp_;
          this->SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_ = x.SimFlowEnergyTrans_SupplyAirFlowRateWhenNoHeatingisNeeded_;
          this->SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_ = x.SimFlowEnergyTrans_OutdrAirFlowRateDuringCoolingOp_;
          this->SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_ = x.SimFlowEnergyTrans_OutdrAirFlowRateDuringHeatingOp_;
          this->SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ = x.SimFlowEnergyTrans_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_;
          this->SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_ = x.SimFlowEnergyTrans_SupplyAirFanOperatModeSchedName_;
          this->SimFlowEnergyTrans_SupplyAirFanPlacement_ = x.SimFlowEnergyTrans_SupplyAirFanPlacement_;
          this->SimFlowEnergyTrans_SupplyAirFanObjType_ = x.SimFlowEnergyTrans_SupplyAirFanObjType_;
          this->SimFlowEnergyTrans_SupplyAirFanObjName_ = x.SimFlowEnergyTrans_SupplyAirFanObjName_;
          this->SimFlowEnergyTrans_OutsideAirMixerObjType_ = x.SimFlowEnergyTrans_OutsideAirMixerObjType_;
          this->SimFlowEnergyTrans_OutsideAirMixerObjName_ = x.SimFlowEnergyTrans_OutsideAirMixerObjName_;
          this->SimFlowEnergyTrans_CoolingCoilObjType_ = x.SimFlowEnergyTrans_CoolingCoilObjType_;
          this->SimFlowEnergyTrans_CoolCoilObjName_ = x.SimFlowEnergyTrans_CoolCoilObjName_;
          this->SimFlowEnergyTrans_HeatingCoilObjType_ = x.SimFlowEnergyTrans_HeatingCoilObjType_;
          this->SimFlowEnergyTrans_HeatingCoilObjName_ = x.SimFlowEnergyTrans_HeatingCoilObjName_;
          this->SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_ = x.SimFlowEnergyTrans_ZoneTermUnitOnParasiticElec_;
          this->SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_ = x.SimFlowEnergyTrans_ZoneTermUnitOffParasiticElec_;
          this->SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_ = x.SimFlowEnergyTrans_RatedTotalHeatingCapacSizingRatio_;
          this->SimFlowEnergyTrans_AvailMngrListName_ = x.SimFlowEnergyTrans_AvailMngrListName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_TerminalUnit::
      ~SimFlowEnergyTransfer_TerminalUnit ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

