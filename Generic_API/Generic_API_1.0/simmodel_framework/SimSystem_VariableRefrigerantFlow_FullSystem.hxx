// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SIM_SYSTEM_VARIABLE_REFRIGERANT_FLOW_FULL_SYSTEM_HXX
#define SIM_SYSTEM_VARIABLE_REFRIGERANT_FLOW_FULL_SYSTEM_HXX

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::no_type_info< char > no_type_info;
  typedef ::xsd::cxx::tree::not_derived< char > not_derived;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_VariableRefrigerantFlow_FullSystem;
    }
  }
}


#include <memory>    // ::std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "simsystem_variablerefrigerantflow.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_VariableRefrigerantFlow_FullSystem: public ::namespaces::Sim::BuildingModel::SimSystem_VariableRefrigerantFlow
      {
        public:
        // SimSys_HeatPumpName
        //
        typedef ::xml_schema::string SimSys_HeatPumpName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatPumpName_type > SimSys_HeatPumpName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatPumpName_type, char > SimSys_HeatPumpName_traits;

        const SimSys_HeatPumpName_optional&
        SimSys_HeatPumpName () const;

        SimSys_HeatPumpName_optional&
        SimSys_HeatPumpName ();

        void
        SimSys_HeatPumpName (const SimSys_HeatPumpName_type& x);

        void
        SimSys_HeatPumpName (const SimSys_HeatPumpName_optional& x);

        void
        SimSys_HeatPumpName (::std::auto_ptr< SimSys_HeatPumpName_type > p);

        // SimSys_AvailSchedName
        //
        typedef ::xml_schema::idref SimSys_AvailSchedName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_AvailSchedName_type > SimSys_AvailSchedName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_AvailSchedName_type, char > SimSys_AvailSchedName_traits;

        const SimSys_AvailSchedName_optional&
        SimSys_AvailSchedName () const;

        SimSys_AvailSchedName_optional&
        SimSys_AvailSchedName ();

        void
        SimSys_AvailSchedName (const SimSys_AvailSchedName_type& x);

        void
        SimSys_AvailSchedName (const SimSys_AvailSchedName_optional& x);

        void
        SimSys_AvailSchedName (::std::auto_ptr< SimSys_AvailSchedName_type > p);

        // SimSys_RatedTotalCoolingCap
        //
        typedef ::xml_schema::double_ SimSys_RatedTotalCoolingCap_type;
        typedef ::xsd::cxx::tree::optional< SimSys_RatedTotalCoolingCap_type > SimSys_RatedTotalCoolingCap_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_RatedTotalCoolingCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_RatedTotalCoolingCap_traits;

        const SimSys_RatedTotalCoolingCap_optional&
        SimSys_RatedTotalCoolingCap () const;

        SimSys_RatedTotalCoolingCap_optional&
        SimSys_RatedTotalCoolingCap ();

        void
        SimSys_RatedTotalCoolingCap (const SimSys_RatedTotalCoolingCap_type& x);

        void
        SimSys_RatedTotalCoolingCap (const SimSys_RatedTotalCoolingCap_optional& x);

        // SimSys_RatedCoolCOP
        //
        typedef ::xml_schema::double_ SimSys_RatedCoolCOP_type;
        typedef ::xsd::cxx::tree::optional< SimSys_RatedCoolCOP_type > SimSys_RatedCoolCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_RatedCoolCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_RatedCoolCOP_traits;

        const SimSys_RatedCoolCOP_optional&
        SimSys_RatedCoolCOP () const;

        SimSys_RatedCoolCOP_optional&
        SimSys_RatedCoolCOP ();

        void
        SimSys_RatedCoolCOP (const SimSys_RatedCoolCOP_type& x);

        void
        SimSys_RatedCoolCOP (const SimSys_RatedCoolCOP_optional& x);

        // SimSys_MinOutdoorTempinCoolMode
        //
        typedef ::xml_schema::double_ SimSys_MinOutdoorTempinCoolMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MinOutdoorTempinCoolMode_type > SimSys_MinOutdoorTempinCoolMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MinOutdoorTempinCoolMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MinOutdoorTempinCoolMode_traits;

        const SimSys_MinOutdoorTempinCoolMode_optional&
        SimSys_MinOutdoorTempinCoolMode () const;

        SimSys_MinOutdoorTempinCoolMode_optional&
        SimSys_MinOutdoorTempinCoolMode ();

        void
        SimSys_MinOutdoorTempinCoolMode (const SimSys_MinOutdoorTempinCoolMode_type& x);

        void
        SimSys_MinOutdoorTempinCoolMode (const SimSys_MinOutdoorTempinCoolMode_optional& x);

        // SimSys_MaxOutdoorTempinCoolMode
        //
        typedef ::xml_schema::double_ SimSys_MaxOutdoorTempinCoolMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MaxOutdoorTempinCoolMode_type > SimSys_MaxOutdoorTempinCoolMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MaxOutdoorTempinCoolMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MaxOutdoorTempinCoolMode_traits;

        const SimSys_MaxOutdoorTempinCoolMode_optional&
        SimSys_MaxOutdoorTempinCoolMode () const;

        SimSys_MaxOutdoorTempinCoolMode_optional&
        SimSys_MaxOutdoorTempinCoolMode ();

        void
        SimSys_MaxOutdoorTempinCoolMode (const SimSys_MaxOutdoorTempinCoolMode_type& x);

        void
        SimSys_MaxOutdoorTempinCoolMode (const SimSys_MaxOutdoorTempinCoolMode_optional& x);

        // SimSys_CoolCapRatioModifierFuncLowTempCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolCapRatioModifierFuncLowTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolCapRatioModifierFuncLowTempCurveName_type > SimSys_CoolCapRatioModifierFuncLowTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolCapRatioModifierFuncLowTempCurveName_type, char > SimSys_CoolCapRatioModifierFuncLowTempCurveName_traits;

        const SimSys_CoolCapRatioModifierFuncLowTempCurveName_optional&
        SimSys_CoolCapRatioModifierFuncLowTempCurveName () const;

        SimSys_CoolCapRatioModifierFuncLowTempCurveName_optional&
        SimSys_CoolCapRatioModifierFuncLowTempCurveName ();

        void
        SimSys_CoolCapRatioModifierFuncLowTempCurveName (const SimSys_CoolCapRatioModifierFuncLowTempCurveName_type& x);

        void
        SimSys_CoolCapRatioModifierFuncLowTempCurveName (const SimSys_CoolCapRatioModifierFuncLowTempCurveName_optional& x);

        void
        SimSys_CoolCapRatioModifierFuncLowTempCurveName (::std::auto_ptr< SimSys_CoolCapRatioModifierFuncLowTempCurveName_type > p);

        // SimSys_CoolCapRatioBoundaryCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolCapRatioBoundaryCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolCapRatioBoundaryCurveName_type > SimSys_CoolCapRatioBoundaryCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolCapRatioBoundaryCurveName_type, char > SimSys_CoolCapRatioBoundaryCurveName_traits;

        const SimSys_CoolCapRatioBoundaryCurveName_optional&
        SimSys_CoolCapRatioBoundaryCurveName () const;

        SimSys_CoolCapRatioBoundaryCurveName_optional&
        SimSys_CoolCapRatioBoundaryCurveName ();

        void
        SimSys_CoolCapRatioBoundaryCurveName (const SimSys_CoolCapRatioBoundaryCurveName_type& x);

        void
        SimSys_CoolCapRatioBoundaryCurveName (const SimSys_CoolCapRatioBoundaryCurveName_optional& x);

        void
        SimSys_CoolCapRatioBoundaryCurveName (::std::auto_ptr< SimSys_CoolCapRatioBoundaryCurveName_type > p);

        // SimSys_CoolCapRatioModifierFuncHighTempCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolCapRatioModifierFuncHighTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolCapRatioModifierFuncHighTempCurveName_type > SimSys_CoolCapRatioModifierFuncHighTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolCapRatioModifierFuncHighTempCurveName_type, char > SimSys_CoolCapRatioModifierFuncHighTempCurveName_traits;

        const SimSys_CoolCapRatioModifierFuncHighTempCurveName_optional&
        SimSys_CoolCapRatioModifierFuncHighTempCurveName () const;

        SimSys_CoolCapRatioModifierFuncHighTempCurveName_optional&
        SimSys_CoolCapRatioModifierFuncHighTempCurveName ();

        void
        SimSys_CoolCapRatioModifierFuncHighTempCurveName (const SimSys_CoolCapRatioModifierFuncHighTempCurveName_type& x);

        void
        SimSys_CoolCapRatioModifierFuncHighTempCurveName (const SimSys_CoolCapRatioModifierFuncHighTempCurveName_optional& x);

        void
        SimSys_CoolCapRatioModifierFuncHighTempCurveName (::std::auto_ptr< SimSys_CoolCapRatioModifierFuncHighTempCurveName_type > p);

        // SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_type > SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_type, char > SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_traits;

        const SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName () const;

        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName ();

        void
        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName (const SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_type& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName (const SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_optional& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName (::std::auto_ptr< SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_type > p);

        // SimSys_CoolEnergyInputRatioBoundaryCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolEnergyInputRatioBoundaryCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolEnergyInputRatioBoundaryCurveName_type > SimSys_CoolEnergyInputRatioBoundaryCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolEnergyInputRatioBoundaryCurveName_type, char > SimSys_CoolEnergyInputRatioBoundaryCurveName_traits;

        const SimSys_CoolEnergyInputRatioBoundaryCurveName_optional&
        SimSys_CoolEnergyInputRatioBoundaryCurveName () const;

        SimSys_CoolEnergyInputRatioBoundaryCurveName_optional&
        SimSys_CoolEnergyInputRatioBoundaryCurveName ();

        void
        SimSys_CoolEnergyInputRatioBoundaryCurveName (const SimSys_CoolEnergyInputRatioBoundaryCurveName_type& x);

        void
        SimSys_CoolEnergyInputRatioBoundaryCurveName (const SimSys_CoolEnergyInputRatioBoundaryCurveName_optional& x);

        void
        SimSys_CoolEnergyInputRatioBoundaryCurveName (::std::auto_ptr< SimSys_CoolEnergyInputRatioBoundaryCurveName_type > p);

        // SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_type > SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_type, char > SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_traits;

        const SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName () const;

        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName ();

        void
        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName (const SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_type& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName (const SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_optional& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName (::std::auto_ptr< SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_type > p);

        // SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type > SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type, char > SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_traits;

        const SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName () const;

        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName ();

        void
        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName (const SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName (const SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName (::std::auto_ptr< SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type > p);

        // SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type > SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type, char > SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_traits;

        const SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName () const;

        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional&
        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName ();

        void
        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName (const SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName (const SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional& x);

        void
        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName (::std::auto_ptr< SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type > p);

        // SimSys_CoolCombinationRatioCorrecFactorCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolCombinationRatioCorrecFactorCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolCombinationRatioCorrecFactorCurveName_type > SimSys_CoolCombinationRatioCorrecFactorCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolCombinationRatioCorrecFactorCurveName_type, char > SimSys_CoolCombinationRatioCorrecFactorCurveName_traits;

        const SimSys_CoolCombinationRatioCorrecFactorCurveName_optional&
        SimSys_CoolCombinationRatioCorrecFactorCurveName () const;

        SimSys_CoolCombinationRatioCorrecFactorCurveName_optional&
        SimSys_CoolCombinationRatioCorrecFactorCurveName ();

        void
        SimSys_CoolCombinationRatioCorrecFactorCurveName (const SimSys_CoolCombinationRatioCorrecFactorCurveName_type& x);

        void
        SimSys_CoolCombinationRatioCorrecFactorCurveName (const SimSys_CoolCombinationRatioCorrecFactorCurveName_optional& x);

        void
        SimSys_CoolCombinationRatioCorrecFactorCurveName (::std::auto_ptr< SimSys_CoolCombinationRatioCorrecFactorCurveName_type > p);

        // SimSys_CoolPart_LoadFractionCorrelationCurveName
        //
        typedef ::xml_schema::idref SimSys_CoolPart_LoadFractionCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CoolPart_LoadFractionCorrelationCurveName_type > SimSys_CoolPart_LoadFractionCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CoolPart_LoadFractionCorrelationCurveName_type, char > SimSys_CoolPart_LoadFractionCorrelationCurveName_traits;

        const SimSys_CoolPart_LoadFractionCorrelationCurveName_optional&
        SimSys_CoolPart_LoadFractionCorrelationCurveName () const;

        SimSys_CoolPart_LoadFractionCorrelationCurveName_optional&
        SimSys_CoolPart_LoadFractionCorrelationCurveName ();

        void
        SimSys_CoolPart_LoadFractionCorrelationCurveName (const SimSys_CoolPart_LoadFractionCorrelationCurveName_type& x);

        void
        SimSys_CoolPart_LoadFractionCorrelationCurveName (const SimSys_CoolPart_LoadFractionCorrelationCurveName_optional& x);

        void
        SimSys_CoolPart_LoadFractionCorrelationCurveName (::std::auto_ptr< SimSys_CoolPart_LoadFractionCorrelationCurveName_type > p);

        // SimSys_RatedTotalHeatingCap
        //
        typedef ::xml_schema::double_ SimSys_RatedTotalHeatingCap_type;
        typedef ::xsd::cxx::tree::optional< SimSys_RatedTotalHeatingCap_type > SimSys_RatedTotalHeatingCap_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_RatedTotalHeatingCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_RatedTotalHeatingCap_traits;

        const SimSys_RatedTotalHeatingCap_optional&
        SimSys_RatedTotalHeatingCap () const;

        SimSys_RatedTotalHeatingCap_optional&
        SimSys_RatedTotalHeatingCap ();

        void
        SimSys_RatedTotalHeatingCap (const SimSys_RatedTotalHeatingCap_type& x);

        void
        SimSys_RatedTotalHeatingCap (const SimSys_RatedTotalHeatingCap_optional& x);

        // SimSys_RatedTotalHeatingCapacSizingRatio
        //
        typedef ::xml_schema::double_ SimSys_RatedTotalHeatingCapacSizingRatio_type;
        typedef ::xsd::cxx::tree::optional< SimSys_RatedTotalHeatingCapacSizingRatio_type > SimSys_RatedTotalHeatingCapacSizingRatio_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_RatedTotalHeatingCapacSizingRatio_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_RatedTotalHeatingCapacSizingRatio_traits;

        const SimSys_RatedTotalHeatingCapacSizingRatio_optional&
        SimSys_RatedTotalHeatingCapacSizingRatio () const;

        SimSys_RatedTotalHeatingCapacSizingRatio_optional&
        SimSys_RatedTotalHeatingCapacSizingRatio ();

        void
        SimSys_RatedTotalHeatingCapacSizingRatio (const SimSys_RatedTotalHeatingCapacSizingRatio_type& x);

        void
        SimSys_RatedTotalHeatingCapacSizingRatio (const SimSys_RatedTotalHeatingCapacSizingRatio_optional& x);

        // SimSys_RatedHeatingCOP
        //
        typedef ::xml_schema::double_ SimSys_RatedHeatingCOP_type;
        typedef ::xsd::cxx::tree::optional< SimSys_RatedHeatingCOP_type > SimSys_RatedHeatingCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_RatedHeatingCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_RatedHeatingCOP_traits;

        const SimSys_RatedHeatingCOP_optional&
        SimSys_RatedHeatingCOP () const;

        SimSys_RatedHeatingCOP_optional&
        SimSys_RatedHeatingCOP ();

        void
        SimSys_RatedHeatingCOP (const SimSys_RatedHeatingCOP_type& x);

        void
        SimSys_RatedHeatingCOP (const SimSys_RatedHeatingCOP_optional& x);

        // SimSys_MinOutdoorTempinHeatingMode
        //
        typedef ::xml_schema::double_ SimSys_MinOutdoorTempinHeatingMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MinOutdoorTempinHeatingMode_type > SimSys_MinOutdoorTempinHeatingMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MinOutdoorTempinHeatingMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MinOutdoorTempinHeatingMode_traits;

        const SimSys_MinOutdoorTempinHeatingMode_optional&
        SimSys_MinOutdoorTempinHeatingMode () const;

        SimSys_MinOutdoorTempinHeatingMode_optional&
        SimSys_MinOutdoorTempinHeatingMode ();

        void
        SimSys_MinOutdoorTempinHeatingMode (const SimSys_MinOutdoorTempinHeatingMode_type& x);

        void
        SimSys_MinOutdoorTempinHeatingMode (const SimSys_MinOutdoorTempinHeatingMode_optional& x);

        // SimSys_MaxOutdoorTempinHeatingMode
        //
        typedef ::xml_schema::double_ SimSys_MaxOutdoorTempinHeatingMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MaxOutdoorTempinHeatingMode_type > SimSys_MaxOutdoorTempinHeatingMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MaxOutdoorTempinHeatingMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MaxOutdoorTempinHeatingMode_traits;

        const SimSys_MaxOutdoorTempinHeatingMode_optional&
        SimSys_MaxOutdoorTempinHeatingMode () const;

        SimSys_MaxOutdoorTempinHeatingMode_optional&
        SimSys_MaxOutdoorTempinHeatingMode ();

        void
        SimSys_MaxOutdoorTempinHeatingMode (const SimSys_MaxOutdoorTempinHeatingMode_type& x);

        void
        SimSys_MaxOutdoorTempinHeatingMode (const SimSys_MaxOutdoorTempinHeatingMode_optional& x);

        // SimSys_HeatingCapRatioModifierFuncLowTempCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingCapRatioModifierFuncLowTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingCapRatioModifierFuncLowTempCurveName_type > SimSys_HeatingCapRatioModifierFuncLowTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingCapRatioModifierFuncLowTempCurveName_type, char > SimSys_HeatingCapRatioModifierFuncLowTempCurveName_traits;

        const SimSys_HeatingCapRatioModifierFuncLowTempCurveName_optional&
        SimSys_HeatingCapRatioModifierFuncLowTempCurveName () const;

        SimSys_HeatingCapRatioModifierFuncLowTempCurveName_optional&
        SimSys_HeatingCapRatioModifierFuncLowTempCurveName ();

        void
        SimSys_HeatingCapRatioModifierFuncLowTempCurveName (const SimSys_HeatingCapRatioModifierFuncLowTempCurveName_type& x);

        void
        SimSys_HeatingCapRatioModifierFuncLowTempCurveName (const SimSys_HeatingCapRatioModifierFuncLowTempCurveName_optional& x);

        void
        SimSys_HeatingCapRatioModifierFuncLowTempCurveName (::std::auto_ptr< SimSys_HeatingCapRatioModifierFuncLowTempCurveName_type > p);

        // SimSys_HeatingCapRatioBoundaryCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingCapRatioBoundaryCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingCapRatioBoundaryCurveName_type > SimSys_HeatingCapRatioBoundaryCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingCapRatioBoundaryCurveName_type, char > SimSys_HeatingCapRatioBoundaryCurveName_traits;

        const SimSys_HeatingCapRatioBoundaryCurveName_optional&
        SimSys_HeatingCapRatioBoundaryCurveName () const;

        SimSys_HeatingCapRatioBoundaryCurveName_optional&
        SimSys_HeatingCapRatioBoundaryCurveName ();

        void
        SimSys_HeatingCapRatioBoundaryCurveName (const SimSys_HeatingCapRatioBoundaryCurveName_type& x);

        void
        SimSys_HeatingCapRatioBoundaryCurveName (const SimSys_HeatingCapRatioBoundaryCurveName_optional& x);

        void
        SimSys_HeatingCapRatioBoundaryCurveName (::std::auto_ptr< SimSys_HeatingCapRatioBoundaryCurveName_type > p);

        // SimSys_HeatingCapRatioModifierFuncHighTempCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingCapRatioModifierFuncHighTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingCapRatioModifierFuncHighTempCurveName_type > SimSys_HeatingCapRatioModifierFuncHighTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingCapRatioModifierFuncHighTempCurveName_type, char > SimSys_HeatingCapRatioModifierFuncHighTempCurveName_traits;

        const SimSys_HeatingCapRatioModifierFuncHighTempCurveName_optional&
        SimSys_HeatingCapRatioModifierFuncHighTempCurveName () const;

        SimSys_HeatingCapRatioModifierFuncHighTempCurveName_optional&
        SimSys_HeatingCapRatioModifierFuncHighTempCurveName ();

        void
        SimSys_HeatingCapRatioModifierFuncHighTempCurveName (const SimSys_HeatingCapRatioModifierFuncHighTempCurveName_type& x);

        void
        SimSys_HeatingCapRatioModifierFuncHighTempCurveName (const SimSys_HeatingCapRatioModifierFuncHighTempCurveName_optional& x);

        void
        SimSys_HeatingCapRatioModifierFuncHighTempCurveName (::std::auto_ptr< SimSys_HeatingCapRatioModifierFuncHighTempCurveName_type > p);

        // SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_type > SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_type, char > SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_traits;

        const SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName () const;

        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName ();

        void
        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_type& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_optional& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName (::std::auto_ptr< SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_type > p);

        // SimSys_HeatingEnergyInputRatioBoundaryCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingEnergyInputRatioBoundaryCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingEnergyInputRatioBoundaryCurveName_type > SimSys_HeatingEnergyInputRatioBoundaryCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingEnergyInputRatioBoundaryCurveName_type, char > SimSys_HeatingEnergyInputRatioBoundaryCurveName_traits;

        const SimSys_HeatingEnergyInputRatioBoundaryCurveName_optional&
        SimSys_HeatingEnergyInputRatioBoundaryCurveName () const;

        SimSys_HeatingEnergyInputRatioBoundaryCurveName_optional&
        SimSys_HeatingEnergyInputRatioBoundaryCurveName ();

        void
        SimSys_HeatingEnergyInputRatioBoundaryCurveName (const SimSys_HeatingEnergyInputRatioBoundaryCurveName_type& x);

        void
        SimSys_HeatingEnergyInputRatioBoundaryCurveName (const SimSys_HeatingEnergyInputRatioBoundaryCurveName_optional& x);

        void
        SimSys_HeatingEnergyInputRatioBoundaryCurveName (::std::auto_ptr< SimSys_HeatingEnergyInputRatioBoundaryCurveName_type > p);

        // SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_type > SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_type, char > SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_traits;

        const SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName () const;

        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName ();

        void
        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_type& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_optional& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName (::std::auto_ptr< SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_type > p);

        // SimSys_HeatingPerformanceCurveOutdoorTempType
        //
        typedef ::xml_schema::string SimSys_HeatingPerformanceCurveOutdoorTempType_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingPerformanceCurveOutdoorTempType_type > SimSys_HeatingPerformanceCurveOutdoorTempType_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingPerformanceCurveOutdoorTempType_type, char > SimSys_HeatingPerformanceCurveOutdoorTempType_traits;

        const SimSys_HeatingPerformanceCurveOutdoorTempType_optional&
        SimSys_HeatingPerformanceCurveOutdoorTempType () const;

        SimSys_HeatingPerformanceCurveOutdoorTempType_optional&
        SimSys_HeatingPerformanceCurveOutdoorTempType ();

        void
        SimSys_HeatingPerformanceCurveOutdoorTempType (const SimSys_HeatingPerformanceCurveOutdoorTempType_type& x);

        void
        SimSys_HeatingPerformanceCurveOutdoorTempType (const SimSys_HeatingPerformanceCurveOutdoorTempType_optional& x);

        void
        SimSys_HeatingPerformanceCurveOutdoorTempType (::std::auto_ptr< SimSys_HeatingPerformanceCurveOutdoorTempType_type > p);

        // SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type > SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type, char > SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_traits;

        const SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName () const;

        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName ();

        void
        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName (::std::auto_ptr< SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_type > p);

        // SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type > SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type, char > SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_traits;

        const SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName () const;

        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional&
        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName ();

        void
        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName (const SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional& x);

        void
        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName (::std::auto_ptr< SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_type > p);

        // SimSys_HeatingCombinationRatioCorrecFactorCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingCombinationRatioCorrecFactorCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingCombinationRatioCorrecFactorCurveName_type > SimSys_HeatingCombinationRatioCorrecFactorCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingCombinationRatioCorrecFactorCurveName_type, char > SimSys_HeatingCombinationRatioCorrecFactorCurveName_traits;

        const SimSys_HeatingCombinationRatioCorrecFactorCurveName_optional&
        SimSys_HeatingCombinationRatioCorrecFactorCurveName () const;

        SimSys_HeatingCombinationRatioCorrecFactorCurveName_optional&
        SimSys_HeatingCombinationRatioCorrecFactorCurveName ();

        void
        SimSys_HeatingCombinationRatioCorrecFactorCurveName (const SimSys_HeatingCombinationRatioCorrecFactorCurveName_type& x);

        void
        SimSys_HeatingCombinationRatioCorrecFactorCurveName (const SimSys_HeatingCombinationRatioCorrecFactorCurveName_optional& x);

        void
        SimSys_HeatingCombinationRatioCorrecFactorCurveName (::std::auto_ptr< SimSys_HeatingCombinationRatioCorrecFactorCurveName_type > p);

        // SimSys_HeatingPart_LoadFractionCorrelationCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatingPart_LoadFractionCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatingPart_LoadFractionCorrelationCurveName_type > SimSys_HeatingPart_LoadFractionCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatingPart_LoadFractionCorrelationCurveName_type, char > SimSys_HeatingPart_LoadFractionCorrelationCurveName_traits;

        const SimSys_HeatingPart_LoadFractionCorrelationCurveName_optional&
        SimSys_HeatingPart_LoadFractionCorrelationCurveName () const;

        SimSys_HeatingPart_LoadFractionCorrelationCurveName_optional&
        SimSys_HeatingPart_LoadFractionCorrelationCurveName ();

        void
        SimSys_HeatingPart_LoadFractionCorrelationCurveName (const SimSys_HeatingPart_LoadFractionCorrelationCurveName_type& x);

        void
        SimSys_HeatingPart_LoadFractionCorrelationCurveName (const SimSys_HeatingPart_LoadFractionCorrelationCurveName_optional& x);

        void
        SimSys_HeatingPart_LoadFractionCorrelationCurveName (::std::auto_ptr< SimSys_HeatingPart_LoadFractionCorrelationCurveName_type > p);

        // SimSys_MinHeatPumpPart_LoadRatio
        //
        typedef ::xml_schema::double_ SimSys_MinHeatPumpPart_LoadRatio_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MinHeatPumpPart_LoadRatio_type > SimSys_MinHeatPumpPart_LoadRatio_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MinHeatPumpPart_LoadRatio_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MinHeatPumpPart_LoadRatio_traits;

        const SimSys_MinHeatPumpPart_LoadRatio_optional&
        SimSys_MinHeatPumpPart_LoadRatio () const;

        SimSys_MinHeatPumpPart_LoadRatio_optional&
        SimSys_MinHeatPumpPart_LoadRatio ();

        void
        SimSys_MinHeatPumpPart_LoadRatio (const SimSys_MinHeatPumpPart_LoadRatio_type& x);

        void
        SimSys_MinHeatPumpPart_LoadRatio (const SimSys_MinHeatPumpPart_LoadRatio_optional& x);

        // SimSys_ZoneNameMasterThermostatLocation
        //
        typedef ::xml_schema::idref SimSys_ZoneNameMasterThermostatLocation_type;
        typedef ::xsd::cxx::tree::optional< SimSys_ZoneNameMasterThermostatLocation_type > SimSys_ZoneNameMasterThermostatLocation_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_ZoneNameMasterThermostatLocation_type, char > SimSys_ZoneNameMasterThermostatLocation_traits;

        const SimSys_ZoneNameMasterThermostatLocation_optional&
        SimSys_ZoneNameMasterThermostatLocation () const;

        SimSys_ZoneNameMasterThermostatLocation_optional&
        SimSys_ZoneNameMasterThermostatLocation ();

        void
        SimSys_ZoneNameMasterThermostatLocation (const SimSys_ZoneNameMasterThermostatLocation_type& x);

        void
        SimSys_ZoneNameMasterThermostatLocation (const SimSys_ZoneNameMasterThermostatLocation_optional& x);

        void
        SimSys_ZoneNameMasterThermostatLocation (::std::auto_ptr< SimSys_ZoneNameMasterThermostatLocation_type > p);

        // SimSys_MasterThermostatPriorityCtrlType
        //
        typedef ::xml_schema::string SimSys_MasterThermostatPriorityCtrlType_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MasterThermostatPriorityCtrlType_type > SimSys_MasterThermostatPriorityCtrlType_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MasterThermostatPriorityCtrlType_type, char > SimSys_MasterThermostatPriorityCtrlType_traits;

        const SimSys_MasterThermostatPriorityCtrlType_optional&
        SimSys_MasterThermostatPriorityCtrlType () const;

        SimSys_MasterThermostatPriorityCtrlType_optional&
        SimSys_MasterThermostatPriorityCtrlType ();

        void
        SimSys_MasterThermostatPriorityCtrlType (const SimSys_MasterThermostatPriorityCtrlType_type& x);

        void
        SimSys_MasterThermostatPriorityCtrlType (const SimSys_MasterThermostatPriorityCtrlType_optional& x);

        void
        SimSys_MasterThermostatPriorityCtrlType (::std::auto_ptr< SimSys_MasterThermostatPriorityCtrlType_type > p);

        // SimSys_ThermostatPrioritySchedName
        //
        typedef ::xml_schema::idref SimSys_ThermostatPrioritySchedName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_ThermostatPrioritySchedName_type > SimSys_ThermostatPrioritySchedName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_ThermostatPrioritySchedName_type, char > SimSys_ThermostatPrioritySchedName_traits;

        const SimSys_ThermostatPrioritySchedName_optional&
        SimSys_ThermostatPrioritySchedName () const;

        SimSys_ThermostatPrioritySchedName_optional&
        SimSys_ThermostatPrioritySchedName ();

        void
        SimSys_ThermostatPrioritySchedName (const SimSys_ThermostatPrioritySchedName_type& x);

        void
        SimSys_ThermostatPrioritySchedName (const SimSys_ThermostatPrioritySchedName_optional& x);

        void
        SimSys_ThermostatPrioritySchedName (::std::auto_ptr< SimSys_ThermostatPrioritySchedName_type > p);

        // SimSys_ZoneTermUnitListName
        //
        typedef ::xml_schema::idref SimSys_ZoneTermUnitListName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_ZoneTermUnitListName_type > SimSys_ZoneTermUnitListName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_ZoneTermUnitListName_type, char > SimSys_ZoneTermUnitListName_traits;

        const SimSys_ZoneTermUnitListName_optional&
        SimSys_ZoneTermUnitListName () const;

        SimSys_ZoneTermUnitListName_optional&
        SimSys_ZoneTermUnitListName ();

        void
        SimSys_ZoneTermUnitListName (const SimSys_ZoneTermUnitListName_type& x);

        void
        SimSys_ZoneTermUnitListName (const SimSys_ZoneTermUnitListName_optional& x);

        void
        SimSys_ZoneTermUnitListName (::std::auto_ptr< SimSys_ZoneTermUnitListName_type > p);

        // SimSys_HeatPumpWasteHeatRecovery
        //
        typedef ::xml_schema::string SimSys_HeatPumpWasteHeatRecovery_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatPumpWasteHeatRecovery_type > SimSys_HeatPumpWasteHeatRecovery_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatPumpWasteHeatRecovery_type, char > SimSys_HeatPumpWasteHeatRecovery_traits;

        const SimSys_HeatPumpWasteHeatRecovery_optional&
        SimSys_HeatPumpWasteHeatRecovery () const;

        SimSys_HeatPumpWasteHeatRecovery_optional&
        SimSys_HeatPumpWasteHeatRecovery ();

        void
        SimSys_HeatPumpWasteHeatRecovery (const SimSys_HeatPumpWasteHeatRecovery_type& x);

        void
        SimSys_HeatPumpWasteHeatRecovery (const SimSys_HeatPumpWasteHeatRecovery_optional& x);

        void
        SimSys_HeatPumpWasteHeatRecovery (::std::auto_ptr< SimSys_HeatPumpWasteHeatRecovery_type > p);

        // SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode
        //
        typedef ::xml_schema::double_ SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_type > SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_traits;

        const SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_optional&
        SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode () const;

        SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_optional&
        SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode ();

        void
        SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode (const SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_type& x);

        void
        SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode (const SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_optional& x);

        // SimSys_VertHeightusedPipingCorrecFactor
        //
        typedef ::xml_schema::double_ SimSys_VertHeightusedPipingCorrecFactor_type;
        typedef ::xsd::cxx::tree::optional< SimSys_VertHeightusedPipingCorrecFactor_type > SimSys_VertHeightusedPipingCorrecFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_VertHeightusedPipingCorrecFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_VertHeightusedPipingCorrecFactor_traits;

        const SimSys_VertHeightusedPipingCorrecFactor_optional&
        SimSys_VertHeightusedPipingCorrecFactor () const;

        SimSys_VertHeightusedPipingCorrecFactor_optional&
        SimSys_VertHeightusedPipingCorrecFactor ();

        void
        SimSys_VertHeightusedPipingCorrecFactor (const SimSys_VertHeightusedPipingCorrecFactor_type& x);

        void
        SimSys_VertHeightusedPipingCorrecFactor (const SimSys_VertHeightusedPipingCorrecFactor_optional& x);

        // SimSys_PipingCorrecFactorLengthinCoolModeCurveName
        //
        typedef ::xml_schema::idref SimSys_PipingCorrecFactorLengthinCoolModeCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_PipingCorrecFactorLengthinCoolModeCurveName_type > SimSys_PipingCorrecFactorLengthinCoolModeCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_PipingCorrecFactorLengthinCoolModeCurveName_type, char > SimSys_PipingCorrecFactorLengthinCoolModeCurveName_traits;

        const SimSys_PipingCorrecFactorLengthinCoolModeCurveName_optional&
        SimSys_PipingCorrecFactorLengthinCoolModeCurveName () const;

        SimSys_PipingCorrecFactorLengthinCoolModeCurveName_optional&
        SimSys_PipingCorrecFactorLengthinCoolModeCurveName ();

        void
        SimSys_PipingCorrecFactorLengthinCoolModeCurveName (const SimSys_PipingCorrecFactorLengthinCoolModeCurveName_type& x);

        void
        SimSys_PipingCorrecFactorLengthinCoolModeCurveName (const SimSys_PipingCorrecFactorLengthinCoolModeCurveName_optional& x);

        void
        SimSys_PipingCorrecFactorLengthinCoolModeCurveName (::std::auto_ptr< SimSys_PipingCorrecFactorLengthinCoolModeCurveName_type > p);

        // SimSys_PipingCorrecFactorHeightinCoolModeCoeff
        //
        typedef ::xml_schema::double_ SimSys_PipingCorrecFactorHeightinCoolModeCoeff_type;
        typedef ::xsd::cxx::tree::optional< SimSys_PipingCorrecFactorHeightinCoolModeCoeff_type > SimSys_PipingCorrecFactorHeightinCoolModeCoeff_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_PipingCorrecFactorHeightinCoolModeCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_PipingCorrecFactorHeightinCoolModeCoeff_traits;

        const SimSys_PipingCorrecFactorHeightinCoolModeCoeff_optional&
        SimSys_PipingCorrecFactorHeightinCoolModeCoeff () const;

        SimSys_PipingCorrecFactorHeightinCoolModeCoeff_optional&
        SimSys_PipingCorrecFactorHeightinCoolModeCoeff ();

        void
        SimSys_PipingCorrecFactorHeightinCoolModeCoeff (const SimSys_PipingCorrecFactorHeightinCoolModeCoeff_type& x);

        void
        SimSys_PipingCorrecFactorHeightinCoolModeCoeff (const SimSys_PipingCorrecFactorHeightinCoolModeCoeff_optional& x);

        // SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode
        //
        typedef ::xml_schema::double_ SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_type > SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_traits;

        const SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_optional&
        SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode () const;

        SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_optional&
        SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode ();

        void
        SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode (const SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_type& x);

        void
        SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode (const SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_optional& x);

        // SimSys_PipingCorrecFactorLengthinHeatingModeCurveName
        //
        typedef ::xml_schema::idref SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_type > SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_type, char > SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_traits;

        const SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_optional&
        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName () const;

        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_optional&
        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName ();

        void
        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName (const SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_type& x);

        void
        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName (const SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_optional& x);

        void
        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName (::std::auto_ptr< SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_type > p);

        // SimSys_PipingCorrecFactorHeightinHeatingModeCoeff
        //
        typedef ::xml_schema::double_ SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_type;
        typedef ::xsd::cxx::tree::optional< SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_type > SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_traits;

        const SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_optional&
        SimSys_PipingCorrecFactorHeightinHeatingModeCoeff () const;

        SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_optional&
        SimSys_PipingCorrecFactorHeightinHeatingModeCoeff ();

        void
        SimSys_PipingCorrecFactorHeightinHeatingModeCoeff (const SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_type& x);

        void
        SimSys_PipingCorrecFactorHeightinHeatingModeCoeff (const SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_optional& x);

        // SimSys_CrankcaseHeaterPowerperCompressor
        //
        typedef ::xml_schema::double_ SimSys_CrankcaseHeaterPowerperCompressor_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CrankcaseHeaterPowerperCompressor_type > SimSys_CrankcaseHeaterPowerperCompressor_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CrankcaseHeaterPowerperCompressor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_CrankcaseHeaterPowerperCompressor_traits;

        const SimSys_CrankcaseHeaterPowerperCompressor_optional&
        SimSys_CrankcaseHeaterPowerperCompressor () const;

        SimSys_CrankcaseHeaterPowerperCompressor_optional&
        SimSys_CrankcaseHeaterPowerperCompressor ();

        void
        SimSys_CrankcaseHeaterPowerperCompressor (const SimSys_CrankcaseHeaterPowerperCompressor_type& x);

        void
        SimSys_CrankcaseHeaterPowerperCompressor (const SimSys_CrankcaseHeaterPowerperCompressor_optional& x);

        // SimSys_NumberCompressors
        //
        typedef ::xml_schema::int_ SimSys_NumberCompressors_type;
        typedef ::xsd::cxx::tree::optional< SimSys_NumberCompressors_type > SimSys_NumberCompressors_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_NumberCompressors_type, char > SimSys_NumberCompressors_traits;

        const SimSys_NumberCompressors_optional&
        SimSys_NumberCompressors () const;

        SimSys_NumberCompressors_optional&
        SimSys_NumberCompressors ();

        void
        SimSys_NumberCompressors (const SimSys_NumberCompressors_type& x);

        void
        SimSys_NumberCompressors (const SimSys_NumberCompressors_optional& x);

        // SimSys_RatioCompressorSizetoTotalCompressorCap
        //
        typedef ::xml_schema::double_ SimSys_RatioCompressorSizetoTotalCompressorCap_type;
        typedef ::xsd::cxx::tree::optional< SimSys_RatioCompressorSizetoTotalCompressorCap_type > SimSys_RatioCompressorSizetoTotalCompressorCap_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_RatioCompressorSizetoTotalCompressorCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_RatioCompressorSizetoTotalCompressorCap_traits;

        const SimSys_RatioCompressorSizetoTotalCompressorCap_optional&
        SimSys_RatioCompressorSizetoTotalCompressorCap () const;

        SimSys_RatioCompressorSizetoTotalCompressorCap_optional&
        SimSys_RatioCompressorSizetoTotalCompressorCap ();

        void
        SimSys_RatioCompressorSizetoTotalCompressorCap (const SimSys_RatioCompressorSizetoTotalCompressorCap_type& x);

        void
        SimSys_RatioCompressorSizetoTotalCompressorCap (const SimSys_RatioCompressorSizetoTotalCompressorCap_optional& x);

        // SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater
        //
        typedef ::xml_schema::double_ SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_type > SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_traits;

        const SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_optional&
        SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater () const;

        SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_optional&
        SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater ();

        void
        SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater (const SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_type& x);

        void
        SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater (const SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_optional& x);

        // SimSys_DefrostStrategy
        //
        typedef ::xml_schema::string SimSys_DefrostStrategy_type;
        typedef ::xsd::cxx::tree::optional< SimSys_DefrostStrategy_type > SimSys_DefrostStrategy_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_DefrostStrategy_type, char > SimSys_DefrostStrategy_traits;

        const SimSys_DefrostStrategy_optional&
        SimSys_DefrostStrategy () const;

        SimSys_DefrostStrategy_optional&
        SimSys_DefrostStrategy ();

        void
        SimSys_DefrostStrategy (const SimSys_DefrostStrategy_type& x);

        void
        SimSys_DefrostStrategy (const SimSys_DefrostStrategy_optional& x);

        void
        SimSys_DefrostStrategy (::std::auto_ptr< SimSys_DefrostStrategy_type > p);

        // SimSys_DefrostCntl
        //
        typedef ::xml_schema::string SimSys_DefrostCntl_type;
        typedef ::xsd::cxx::tree::optional< SimSys_DefrostCntl_type > SimSys_DefrostCntl_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_DefrostCntl_type, char > SimSys_DefrostCntl_traits;

        const SimSys_DefrostCntl_optional&
        SimSys_DefrostCntl () const;

        SimSys_DefrostCntl_optional&
        SimSys_DefrostCntl ();

        void
        SimSys_DefrostCntl (const SimSys_DefrostCntl_type& x);

        void
        SimSys_DefrostCntl (const SimSys_DefrostCntl_optional& x);

        void
        SimSys_DefrostCntl (::std::auto_ptr< SimSys_DefrostCntl_type > p);

        // SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName
        //
        typedef ::xml_schema::idref SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_type > SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_type, char > SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_traits;

        const SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_optional&
        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName () const;

        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_optional&
        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName ();

        void
        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName (const SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_type& x);

        void
        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName (const SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_optional& x);

        void
        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName (::std::auto_ptr< SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_type > p);

        // SimSys_DefrostTimePeriodFract
        //
        typedef ::xml_schema::double_ SimSys_DefrostTimePeriodFract_type;
        typedef ::xsd::cxx::tree::optional< SimSys_DefrostTimePeriodFract_type > SimSys_DefrostTimePeriodFract_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_DefrostTimePeriodFract_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_DefrostTimePeriodFract_traits;

        const SimSys_DefrostTimePeriodFract_optional&
        SimSys_DefrostTimePeriodFract () const;

        SimSys_DefrostTimePeriodFract_optional&
        SimSys_DefrostTimePeriodFract ();

        void
        SimSys_DefrostTimePeriodFract (const SimSys_DefrostTimePeriodFract_type& x);

        void
        SimSys_DefrostTimePeriodFract (const SimSys_DefrostTimePeriodFract_optional& x);

        // SimSys_ResistDefrostHeatCap
        //
        typedef ::xml_schema::double_ SimSys_ResistDefrostHeatCap_type;
        typedef ::xsd::cxx::tree::optional< SimSys_ResistDefrostHeatCap_type > SimSys_ResistDefrostHeatCap_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_ResistDefrostHeatCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_ResistDefrostHeatCap_traits;

        const SimSys_ResistDefrostHeatCap_optional&
        SimSys_ResistDefrostHeatCap () const;

        SimSys_ResistDefrostHeatCap_optional&
        SimSys_ResistDefrostHeatCap ();

        void
        SimSys_ResistDefrostHeatCap (const SimSys_ResistDefrostHeatCap_type& x);

        void
        SimSys_ResistDefrostHeatCap (const SimSys_ResistDefrostHeatCap_optional& x);

        // SimSys_MaxOutdrDryBulbTempForDefrostOp
        //
        typedef ::xml_schema::double_ SimSys_MaxOutdrDryBulbTempForDefrostOp_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MaxOutdrDryBulbTempForDefrostOp_type > SimSys_MaxOutdrDryBulbTempForDefrostOp_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MaxOutdrDryBulbTempForDefrostOp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MaxOutdrDryBulbTempForDefrostOp_traits;

        const SimSys_MaxOutdrDryBulbTempForDefrostOp_optional&
        SimSys_MaxOutdrDryBulbTempForDefrostOp () const;

        SimSys_MaxOutdrDryBulbTempForDefrostOp_optional&
        SimSys_MaxOutdrDryBulbTempForDefrostOp ();

        void
        SimSys_MaxOutdrDryBulbTempForDefrostOp (const SimSys_MaxOutdrDryBulbTempForDefrostOp_type& x);

        void
        SimSys_MaxOutdrDryBulbTempForDefrostOp (const SimSys_MaxOutdrDryBulbTempForDefrostOp_optional& x);

        // SimSys_CondType
        //
        typedef ::xml_schema::string SimSys_CondType_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CondType_type > SimSys_CondType_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CondType_type, char > SimSys_CondType_traits;

        const SimSys_CondType_optional&
        SimSys_CondType () const;

        SimSys_CondType_optional&
        SimSys_CondType ();

        void
        SimSys_CondType (const SimSys_CondType_type& x);

        void
        SimSys_CondType (const SimSys_CondType_optional& x);

        void
        SimSys_CondType (::std::auto_ptr< SimSys_CondType_type > p);

        // SimSys_CondInletNodeName
        //
        typedef ::xml_schema::string SimSys_CondInletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CondInletNodeName_type > SimSys_CondInletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CondInletNodeName_type, char > SimSys_CondInletNodeName_traits;

        const SimSys_CondInletNodeName_optional&
        SimSys_CondInletNodeName () const;

        SimSys_CondInletNodeName_optional&
        SimSys_CondInletNodeName ();

        void
        SimSys_CondInletNodeName (const SimSys_CondInletNodeName_type& x);

        void
        SimSys_CondInletNodeName (const SimSys_CondInletNodeName_optional& x);

        void
        SimSys_CondInletNodeName (::std::auto_ptr< SimSys_CondInletNodeName_type > p);

        // SimSys_CondOutletNodeName
        //
        typedef ::xml_schema::string SimSys_CondOutletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_CondOutletNodeName_type > SimSys_CondOutletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_CondOutletNodeName_type, char > SimSys_CondOutletNodeName_traits;

        const SimSys_CondOutletNodeName_optional&
        SimSys_CondOutletNodeName () const;

        SimSys_CondOutletNodeName_optional&
        SimSys_CondOutletNodeName ();

        void
        SimSys_CondOutletNodeName (const SimSys_CondOutletNodeName_type& x);

        void
        SimSys_CondOutletNodeName (const SimSys_CondOutletNodeName_optional& x);

        void
        SimSys_CondOutletNodeName (::std::auto_ptr< SimSys_CondOutletNodeName_type > p);

        // SimSys_WaterCondensVolumeFlowRate
        //
        typedef ::xml_schema::double_ SimSys_WaterCondensVolumeFlowRate_type;
        typedef ::xsd::cxx::tree::optional< SimSys_WaterCondensVolumeFlowRate_type > SimSys_WaterCondensVolumeFlowRate_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_WaterCondensVolumeFlowRate_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_WaterCondensVolumeFlowRate_traits;

        const SimSys_WaterCondensVolumeFlowRate_optional&
        SimSys_WaterCondensVolumeFlowRate () const;

        SimSys_WaterCondensVolumeFlowRate_optional&
        SimSys_WaterCondensVolumeFlowRate ();

        void
        SimSys_WaterCondensVolumeFlowRate (const SimSys_WaterCondensVolumeFlowRate_type& x);

        void
        SimSys_WaterCondensVolumeFlowRate (const SimSys_WaterCondensVolumeFlowRate_optional& x);

        // SimSys_EvapCondEffect
        //
        typedef ::xml_schema::double_ SimSys_EvapCondEffect_type;
        typedef ::xsd::cxx::tree::optional< SimSys_EvapCondEffect_type > SimSys_EvapCondEffect_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_EvapCondEffect_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_EvapCondEffect_traits;

        const SimSys_EvapCondEffect_optional&
        SimSys_EvapCondEffect () const;

        SimSys_EvapCondEffect_optional&
        SimSys_EvapCondEffect ();

        void
        SimSys_EvapCondEffect (const SimSys_EvapCondEffect_type& x);

        void
        SimSys_EvapCondEffect (const SimSys_EvapCondEffect_optional& x);

        // SimSys_EvapCondAirFlowRate
        //
        typedef ::xml_schema::double_ SimSys_EvapCondAirFlowRate_type;
        typedef ::xsd::cxx::tree::optional< SimSys_EvapCondAirFlowRate_type > SimSys_EvapCondAirFlowRate_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_EvapCondAirFlowRate_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_EvapCondAirFlowRate_traits;

        const SimSys_EvapCondAirFlowRate_optional&
        SimSys_EvapCondAirFlowRate () const;

        SimSys_EvapCondAirFlowRate_optional&
        SimSys_EvapCondAirFlowRate ();

        void
        SimSys_EvapCondAirFlowRate (const SimSys_EvapCondAirFlowRate_type& x);

        void
        SimSys_EvapCondAirFlowRate (const SimSys_EvapCondAirFlowRate_optional& x);

        // SimSys_EvapCondPumpRatedPwrConsump
        //
        typedef ::xml_schema::double_ SimSys_EvapCondPumpRatedPwrConsump_type;
        typedef ::xsd::cxx::tree::optional< SimSys_EvapCondPumpRatedPwrConsump_type > SimSys_EvapCondPumpRatedPwrConsump_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_EvapCondPumpRatedPwrConsump_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_EvapCondPumpRatedPwrConsump_traits;

        const SimSys_EvapCondPumpRatedPwrConsump_optional&
        SimSys_EvapCondPumpRatedPwrConsump () const;

        SimSys_EvapCondPumpRatedPwrConsump_optional&
        SimSys_EvapCondPumpRatedPwrConsump ();

        void
        SimSys_EvapCondPumpRatedPwrConsump (const SimSys_EvapCondPumpRatedPwrConsump_type& x);

        void
        SimSys_EvapCondPumpRatedPwrConsump (const SimSys_EvapCondPumpRatedPwrConsump_optional& x);

        // SimSys_SupWaterStoTankName
        //
        typedef ::xml_schema::idref SimSys_SupWaterStoTankName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_SupWaterStoTankName_type > SimSys_SupWaterStoTankName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_SupWaterStoTankName_type, char > SimSys_SupWaterStoTankName_traits;

        const SimSys_SupWaterStoTankName_optional&
        SimSys_SupWaterStoTankName () const;

        SimSys_SupWaterStoTankName_optional&
        SimSys_SupWaterStoTankName ();

        void
        SimSys_SupWaterStoTankName (const SimSys_SupWaterStoTankName_type& x);

        void
        SimSys_SupWaterStoTankName (const SimSys_SupWaterStoTankName_optional& x);

        void
        SimSys_SupWaterStoTankName (::std::auto_ptr< SimSys_SupWaterStoTankName_type > p);

        // SimSys_BasinHeatCap
        //
        typedef ::xml_schema::double_ SimSys_BasinHeatCap_type;
        typedef ::xsd::cxx::tree::optional< SimSys_BasinHeatCap_type > SimSys_BasinHeatCap_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_BasinHeatCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_BasinHeatCap_traits;

        const SimSys_BasinHeatCap_optional&
        SimSys_BasinHeatCap () const;

        SimSys_BasinHeatCap_optional&
        SimSys_BasinHeatCap ();

        void
        SimSys_BasinHeatCap (const SimSys_BasinHeatCap_type& x);

        void
        SimSys_BasinHeatCap (const SimSys_BasinHeatCap_optional& x);

        // SimSys_BasinHeatSetpointTemp
        //
        typedef ::xml_schema::double_ SimSys_BasinHeatSetpointTemp_type;
        typedef ::xsd::cxx::tree::optional< SimSys_BasinHeatSetpointTemp_type > SimSys_BasinHeatSetpointTemp_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_BasinHeatSetpointTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_BasinHeatSetpointTemp_traits;

        const SimSys_BasinHeatSetpointTemp_optional&
        SimSys_BasinHeatSetpointTemp () const;

        SimSys_BasinHeatSetpointTemp_optional&
        SimSys_BasinHeatSetpointTemp ();

        void
        SimSys_BasinHeatSetpointTemp (const SimSys_BasinHeatSetpointTemp_type& x);

        void
        SimSys_BasinHeatSetpointTemp (const SimSys_BasinHeatSetpointTemp_optional& x);

        // SimSys_BasinHeatOperatSchedName
        //
        typedef ::xml_schema::idref SimSys_BasinHeatOperatSchedName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_BasinHeatOperatSchedName_type > SimSys_BasinHeatOperatSchedName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_BasinHeatOperatSchedName_type, char > SimSys_BasinHeatOperatSchedName_traits;

        const SimSys_BasinHeatOperatSchedName_optional&
        SimSys_BasinHeatOperatSchedName () const;

        SimSys_BasinHeatOperatSchedName_optional&
        SimSys_BasinHeatOperatSchedName ();

        void
        SimSys_BasinHeatOperatSchedName (const SimSys_BasinHeatOperatSchedName_type& x);

        void
        SimSys_BasinHeatOperatSchedName (const SimSys_BasinHeatOperatSchedName_optional& x);

        void
        SimSys_BasinHeatOperatSchedName (::std::auto_ptr< SimSys_BasinHeatOperatSchedName_type > p);

        // SimSys_FuelType
        //
        typedef ::xml_schema::string SimSys_FuelType_type;
        typedef ::xsd::cxx::tree::optional< SimSys_FuelType_type > SimSys_FuelType_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_FuelType_type, char > SimSys_FuelType_traits;

        const SimSys_FuelType_optional&
        SimSys_FuelType () const;

        SimSys_FuelType_optional&
        SimSys_FuelType ();

        void
        SimSys_FuelType (const SimSys_FuelType_type& x);

        void
        SimSys_FuelType (const SimSys_FuelType_optional& x);

        void
        SimSys_FuelType (::std::auto_ptr< SimSys_FuelType_type > p);

        // SimSys_MinimumOutdoorTempinHeatRecoveryMode
        //
        typedef ::xml_schema::double_ SimSys_MinimumOutdoorTempinHeatRecoveryMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MinimumOutdoorTempinHeatRecoveryMode_type > SimSys_MinimumOutdoorTempinHeatRecoveryMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MinimumOutdoorTempinHeatRecoveryMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MinimumOutdoorTempinHeatRecoveryMode_traits;

        const SimSys_MinimumOutdoorTempinHeatRecoveryMode_optional&
        SimSys_MinimumOutdoorTempinHeatRecoveryMode () const;

        SimSys_MinimumOutdoorTempinHeatRecoveryMode_optional&
        SimSys_MinimumOutdoorTempinHeatRecoveryMode ();

        void
        SimSys_MinimumOutdoorTempinHeatRecoveryMode (const SimSys_MinimumOutdoorTempinHeatRecoveryMode_type& x);

        void
        SimSys_MinimumOutdoorTempinHeatRecoveryMode (const SimSys_MinimumOutdoorTempinHeatRecoveryMode_optional& x);

        // SimSys_MaximumOutdoorTempinHeatRecoveryMode
        //
        typedef ::xml_schema::double_ SimSys_MaximumOutdoorTempinHeatRecoveryMode_type;
        typedef ::xsd::cxx::tree::optional< SimSys_MaximumOutdoorTempinHeatRecoveryMode_type > SimSys_MaximumOutdoorTempinHeatRecoveryMode_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_MaximumOutdoorTempinHeatRecoveryMode_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_MaximumOutdoorTempinHeatRecoveryMode_traits;

        const SimSys_MaximumOutdoorTempinHeatRecoveryMode_optional&
        SimSys_MaximumOutdoorTempinHeatRecoveryMode () const;

        SimSys_MaximumOutdoorTempinHeatRecoveryMode_optional&
        SimSys_MaximumOutdoorTempinHeatRecoveryMode ();

        void
        SimSys_MaximumOutdoorTempinHeatRecoveryMode (const SimSys_MaximumOutdoorTempinHeatRecoveryMode_type& x);

        void
        SimSys_MaximumOutdoorTempinHeatRecoveryMode (const SimSys_MaximumOutdoorTempinHeatRecoveryMode_optional& x);

        // SimSys_HeatRecoveryCoolingCapacModifierCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatRecoveryCoolingCapacModifierCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryCoolingCapacModifierCurveName_type > SimSys_HeatRecoveryCoolingCapacModifierCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryCoolingCapacModifierCurveName_type, char > SimSys_HeatRecoveryCoolingCapacModifierCurveName_traits;

        const SimSys_HeatRecoveryCoolingCapacModifierCurveName_optional&
        SimSys_HeatRecoveryCoolingCapacModifierCurveName () const;

        SimSys_HeatRecoveryCoolingCapacModifierCurveName_optional&
        SimSys_HeatRecoveryCoolingCapacModifierCurveName ();

        void
        SimSys_HeatRecoveryCoolingCapacModifierCurveName (const SimSys_HeatRecoveryCoolingCapacModifierCurveName_type& x);

        void
        SimSys_HeatRecoveryCoolingCapacModifierCurveName (const SimSys_HeatRecoveryCoolingCapacModifierCurveName_optional& x);

        void
        SimSys_HeatRecoveryCoolingCapacModifierCurveName (::std::auto_ptr< SimSys_HeatRecoveryCoolingCapacModifierCurveName_type > p);

        // SimSys_InitialHeatRecoveryCoolingCapacFract
        //
        typedef ::xml_schema::double_ SimSys_InitialHeatRecoveryCoolingCapacFract_type;
        typedef ::xsd::cxx::tree::optional< SimSys_InitialHeatRecoveryCoolingCapacFract_type > SimSys_InitialHeatRecoveryCoolingCapacFract_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_InitialHeatRecoveryCoolingCapacFract_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_InitialHeatRecoveryCoolingCapacFract_traits;

        const SimSys_InitialHeatRecoveryCoolingCapacFract_optional&
        SimSys_InitialHeatRecoveryCoolingCapacFract () const;

        SimSys_InitialHeatRecoveryCoolingCapacFract_optional&
        SimSys_InitialHeatRecoveryCoolingCapacFract ();

        void
        SimSys_InitialHeatRecoveryCoolingCapacFract (const SimSys_InitialHeatRecoveryCoolingCapacFract_type& x);

        void
        SimSys_InitialHeatRecoveryCoolingCapacFract (const SimSys_InitialHeatRecoveryCoolingCapacFract_optional& x);

        // SimSys_HeatRecoveryCoolingCapacTimeConstant
        //
        typedef ::xml_schema::double_ SimSys_HeatRecoveryCoolingCapacTimeConstant_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryCoolingCapacTimeConstant_type > SimSys_HeatRecoveryCoolingCapacTimeConstant_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryCoolingCapacTimeConstant_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_HeatRecoveryCoolingCapacTimeConstant_traits;

        const SimSys_HeatRecoveryCoolingCapacTimeConstant_optional&
        SimSys_HeatRecoveryCoolingCapacTimeConstant () const;

        SimSys_HeatRecoveryCoolingCapacTimeConstant_optional&
        SimSys_HeatRecoveryCoolingCapacTimeConstant ();

        void
        SimSys_HeatRecoveryCoolingCapacTimeConstant (const SimSys_HeatRecoveryCoolingCapacTimeConstant_type& x);

        void
        SimSys_HeatRecoveryCoolingCapacTimeConstant (const SimSys_HeatRecoveryCoolingCapacTimeConstant_optional& x);

        // SimSys_HeatRecoveryCoolingEnergyModifierCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatRecoveryCoolingEnergyModifierCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryCoolingEnergyModifierCurveName_type > SimSys_HeatRecoveryCoolingEnergyModifierCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryCoolingEnergyModifierCurveName_type, char > SimSys_HeatRecoveryCoolingEnergyModifierCurveName_traits;

        const SimSys_HeatRecoveryCoolingEnergyModifierCurveName_optional&
        SimSys_HeatRecoveryCoolingEnergyModifierCurveName () const;

        SimSys_HeatRecoveryCoolingEnergyModifierCurveName_optional&
        SimSys_HeatRecoveryCoolingEnergyModifierCurveName ();

        void
        SimSys_HeatRecoveryCoolingEnergyModifierCurveName (const SimSys_HeatRecoveryCoolingEnergyModifierCurveName_type& x);

        void
        SimSys_HeatRecoveryCoolingEnergyModifierCurveName (const SimSys_HeatRecoveryCoolingEnergyModifierCurveName_optional& x);

        void
        SimSys_HeatRecoveryCoolingEnergyModifierCurveName (::std::auto_ptr< SimSys_HeatRecoveryCoolingEnergyModifierCurveName_type > p);

        // SimSys_InitialHeatRecoveryCoolingEnergyFract
        //
        typedef ::xml_schema::double_ SimSys_InitialHeatRecoveryCoolingEnergyFract_type;
        typedef ::xsd::cxx::tree::optional< SimSys_InitialHeatRecoveryCoolingEnergyFract_type > SimSys_InitialHeatRecoveryCoolingEnergyFract_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_InitialHeatRecoveryCoolingEnergyFract_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_InitialHeatRecoveryCoolingEnergyFract_traits;

        const SimSys_InitialHeatRecoveryCoolingEnergyFract_optional&
        SimSys_InitialHeatRecoveryCoolingEnergyFract () const;

        SimSys_InitialHeatRecoveryCoolingEnergyFract_optional&
        SimSys_InitialHeatRecoveryCoolingEnergyFract ();

        void
        SimSys_InitialHeatRecoveryCoolingEnergyFract (const SimSys_InitialHeatRecoveryCoolingEnergyFract_type& x);

        void
        SimSys_InitialHeatRecoveryCoolingEnergyFract (const SimSys_InitialHeatRecoveryCoolingEnergyFract_optional& x);

        // SimSys_HeatRecoveryCoolingEnergyTimeConstant
        //
        typedef ::xml_schema::double_ SimSys_HeatRecoveryCoolingEnergyTimeConstant_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryCoolingEnergyTimeConstant_type > SimSys_HeatRecoveryCoolingEnergyTimeConstant_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryCoolingEnergyTimeConstant_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_HeatRecoveryCoolingEnergyTimeConstant_traits;

        const SimSys_HeatRecoveryCoolingEnergyTimeConstant_optional&
        SimSys_HeatRecoveryCoolingEnergyTimeConstant () const;

        SimSys_HeatRecoveryCoolingEnergyTimeConstant_optional&
        SimSys_HeatRecoveryCoolingEnergyTimeConstant ();

        void
        SimSys_HeatRecoveryCoolingEnergyTimeConstant (const SimSys_HeatRecoveryCoolingEnergyTimeConstant_type& x);

        void
        SimSys_HeatRecoveryCoolingEnergyTimeConstant (const SimSys_HeatRecoveryCoolingEnergyTimeConstant_optional& x);

        // SimSys_HeatRecoveryHeatingCapacModifierCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatRecoveryHeatingCapacModifierCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryHeatingCapacModifierCurveName_type > SimSys_HeatRecoveryHeatingCapacModifierCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryHeatingCapacModifierCurveName_type, char > SimSys_HeatRecoveryHeatingCapacModifierCurveName_traits;

        const SimSys_HeatRecoveryHeatingCapacModifierCurveName_optional&
        SimSys_HeatRecoveryHeatingCapacModifierCurveName () const;

        SimSys_HeatRecoveryHeatingCapacModifierCurveName_optional&
        SimSys_HeatRecoveryHeatingCapacModifierCurveName ();

        void
        SimSys_HeatRecoveryHeatingCapacModifierCurveName (const SimSys_HeatRecoveryHeatingCapacModifierCurveName_type& x);

        void
        SimSys_HeatRecoveryHeatingCapacModifierCurveName (const SimSys_HeatRecoveryHeatingCapacModifierCurveName_optional& x);

        void
        SimSys_HeatRecoveryHeatingCapacModifierCurveName (::std::auto_ptr< SimSys_HeatRecoveryHeatingCapacModifierCurveName_type > p);

        // SimSys_InitialHeatRecoveryHeatingCapacFract
        //
        typedef ::xml_schema::double_ SimSys_InitialHeatRecoveryHeatingCapacFract_type;
        typedef ::xsd::cxx::tree::optional< SimSys_InitialHeatRecoveryHeatingCapacFract_type > SimSys_InitialHeatRecoveryHeatingCapacFract_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_InitialHeatRecoveryHeatingCapacFract_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_InitialHeatRecoveryHeatingCapacFract_traits;

        const SimSys_InitialHeatRecoveryHeatingCapacFract_optional&
        SimSys_InitialHeatRecoveryHeatingCapacFract () const;

        SimSys_InitialHeatRecoveryHeatingCapacFract_optional&
        SimSys_InitialHeatRecoveryHeatingCapacFract ();

        void
        SimSys_InitialHeatRecoveryHeatingCapacFract (const SimSys_InitialHeatRecoveryHeatingCapacFract_type& x);

        void
        SimSys_InitialHeatRecoveryHeatingCapacFract (const SimSys_InitialHeatRecoveryHeatingCapacFract_optional& x);

        // SimSys_HeatRecoveryHeatingCapacTimeConstant
        //
        typedef ::xml_schema::double_ SimSys_HeatRecoveryHeatingCapacTimeConstant_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryHeatingCapacTimeConstant_type > SimSys_HeatRecoveryHeatingCapacTimeConstant_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryHeatingCapacTimeConstant_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_HeatRecoveryHeatingCapacTimeConstant_traits;

        const SimSys_HeatRecoveryHeatingCapacTimeConstant_optional&
        SimSys_HeatRecoveryHeatingCapacTimeConstant () const;

        SimSys_HeatRecoveryHeatingCapacTimeConstant_optional&
        SimSys_HeatRecoveryHeatingCapacTimeConstant ();

        void
        SimSys_HeatRecoveryHeatingCapacTimeConstant (const SimSys_HeatRecoveryHeatingCapacTimeConstant_type& x);

        void
        SimSys_HeatRecoveryHeatingCapacTimeConstant (const SimSys_HeatRecoveryHeatingCapacTimeConstant_optional& x);

        // SimSys_HeatRecoveryHeatingEnergyModifierCurveName
        //
        typedef ::xml_schema::idref SimSys_HeatRecoveryHeatingEnergyModifierCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryHeatingEnergyModifierCurveName_type > SimSys_HeatRecoveryHeatingEnergyModifierCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryHeatingEnergyModifierCurveName_type, char > SimSys_HeatRecoveryHeatingEnergyModifierCurveName_traits;

        const SimSys_HeatRecoveryHeatingEnergyModifierCurveName_optional&
        SimSys_HeatRecoveryHeatingEnergyModifierCurveName () const;

        SimSys_HeatRecoveryHeatingEnergyModifierCurveName_optional&
        SimSys_HeatRecoveryHeatingEnergyModifierCurveName ();

        void
        SimSys_HeatRecoveryHeatingEnergyModifierCurveName (const SimSys_HeatRecoveryHeatingEnergyModifierCurveName_type& x);

        void
        SimSys_HeatRecoveryHeatingEnergyModifierCurveName (const SimSys_HeatRecoveryHeatingEnergyModifierCurveName_optional& x);

        void
        SimSys_HeatRecoveryHeatingEnergyModifierCurveName (::std::auto_ptr< SimSys_HeatRecoveryHeatingEnergyModifierCurveName_type > p);

        // SimSys_InitialHeatRecoveryHeatingEnergyFract
        //
        typedef ::xml_schema::double_ SimSys_InitialHeatRecoveryHeatingEnergyFract_type;
        typedef ::xsd::cxx::tree::optional< SimSys_InitialHeatRecoveryHeatingEnergyFract_type > SimSys_InitialHeatRecoveryHeatingEnergyFract_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_InitialHeatRecoveryHeatingEnergyFract_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_InitialHeatRecoveryHeatingEnergyFract_traits;

        const SimSys_InitialHeatRecoveryHeatingEnergyFract_optional&
        SimSys_InitialHeatRecoveryHeatingEnergyFract () const;

        SimSys_InitialHeatRecoveryHeatingEnergyFract_optional&
        SimSys_InitialHeatRecoveryHeatingEnergyFract ();

        void
        SimSys_InitialHeatRecoveryHeatingEnergyFract (const SimSys_InitialHeatRecoveryHeatingEnergyFract_type& x);

        void
        SimSys_InitialHeatRecoveryHeatingEnergyFract (const SimSys_InitialHeatRecoveryHeatingEnergyFract_optional& x);

        // SimSys_HeatRecoveryHeatingEnergyTimeConstant
        //
        typedef ::xml_schema::double_ SimSys_HeatRecoveryHeatingEnergyTimeConstant_type;
        typedef ::xsd::cxx::tree::optional< SimSys_HeatRecoveryHeatingEnergyTimeConstant_type > SimSys_HeatRecoveryHeatingEnergyTimeConstant_optional;
        typedef ::xsd::cxx::tree::traits< SimSys_HeatRecoveryHeatingEnergyTimeConstant_type, char, ::xsd::cxx::tree::schema_type::double_ > SimSys_HeatRecoveryHeatingEnergyTimeConstant_traits;

        const SimSys_HeatRecoveryHeatingEnergyTimeConstant_optional&
        SimSys_HeatRecoveryHeatingEnergyTimeConstant () const;

        SimSys_HeatRecoveryHeatingEnergyTimeConstant_optional&
        SimSys_HeatRecoveryHeatingEnergyTimeConstant ();

        void
        SimSys_HeatRecoveryHeatingEnergyTimeConstant (const SimSys_HeatRecoveryHeatingEnergyTimeConstant_type& x);

        void
        SimSys_HeatRecoveryHeatingEnergyTimeConstant (const SimSys_HeatRecoveryHeatingEnergyTimeConstant_optional& x);

        // Constructors.
        //
        SimSystem_VariableRefrigerantFlow_FullSystem (const RefId_type&);

        SimSystem_VariableRefrigerantFlow_FullSystem (const ::xercesc::DOMElement& e,
                                                      ::xml_schema::flags f = 0,
                                                      ::xml_schema::container* c = 0);

        SimSystem_VariableRefrigerantFlow_FullSystem (const SimSystem_VariableRefrigerantFlow_FullSystem& x,
                                                      ::xml_schema::flags f = 0,
                                                      ::xml_schema::container* c = 0);

        virtual SimSystem_VariableRefrigerantFlow_FullSystem*
        _clone (::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0) const;

        SimSystem_VariableRefrigerantFlow_FullSystem&
        operator= (const SimSystem_VariableRefrigerantFlow_FullSystem& x);

        virtual 
        ~SimSystem_VariableRefrigerantFlow_FullSystem ();

        // Implementation.
        //
        protected:
        void
        parse (::xsd::cxx::xml::dom::parser< char >&,
               ::xml_schema::flags);

        protected:
        SimSys_HeatPumpName_optional SimSys_HeatPumpName_;
        SimSys_AvailSchedName_optional SimSys_AvailSchedName_;
        SimSys_RatedTotalCoolingCap_optional SimSys_RatedTotalCoolingCap_;
        SimSys_RatedCoolCOP_optional SimSys_RatedCoolCOP_;
        SimSys_MinOutdoorTempinCoolMode_optional SimSys_MinOutdoorTempinCoolMode_;
        SimSys_MaxOutdoorTempinCoolMode_optional SimSys_MaxOutdoorTempinCoolMode_;
        SimSys_CoolCapRatioModifierFuncLowTempCurveName_optional SimSys_CoolCapRatioModifierFuncLowTempCurveName_;
        SimSys_CoolCapRatioBoundaryCurveName_optional SimSys_CoolCapRatioBoundaryCurveName_;
        SimSys_CoolCapRatioModifierFuncHighTempCurveName_optional SimSys_CoolCapRatioModifierFuncHighTempCurveName_;
        SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_optional SimSys_CoolEnergyInputRatioModifierFuncLowTempCurveName_;
        SimSys_CoolEnergyInputRatioBoundaryCurveName_optional SimSys_CoolEnergyInputRatioBoundaryCurveName_;
        SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_optional SimSys_CoolEnergyInputRatioModifierFuncHighTempCurveName_;
        SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional SimSys_CoolEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_;
        SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional SimSys_CoolEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_;
        SimSys_CoolCombinationRatioCorrecFactorCurveName_optional SimSys_CoolCombinationRatioCorrecFactorCurveName_;
        SimSys_CoolPart_LoadFractionCorrelationCurveName_optional SimSys_CoolPart_LoadFractionCorrelationCurveName_;
        SimSys_RatedTotalHeatingCap_optional SimSys_RatedTotalHeatingCap_;
        SimSys_RatedTotalHeatingCapacSizingRatio_optional SimSys_RatedTotalHeatingCapacSizingRatio_;
        SimSys_RatedHeatingCOP_optional SimSys_RatedHeatingCOP_;
        SimSys_MinOutdoorTempinHeatingMode_optional SimSys_MinOutdoorTempinHeatingMode_;
        SimSys_MaxOutdoorTempinHeatingMode_optional SimSys_MaxOutdoorTempinHeatingMode_;
        SimSys_HeatingCapRatioModifierFuncLowTempCurveName_optional SimSys_HeatingCapRatioModifierFuncLowTempCurveName_;
        SimSys_HeatingCapRatioBoundaryCurveName_optional SimSys_HeatingCapRatioBoundaryCurveName_;
        SimSys_HeatingCapRatioModifierFuncHighTempCurveName_optional SimSys_HeatingCapRatioModifierFuncHighTempCurveName_;
        SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_optional SimSys_HeatingEnergyInputRatioModifierFuncLowTempCurveName_;
        SimSys_HeatingEnergyInputRatioBoundaryCurveName_optional SimSys_HeatingEnergyInputRatioBoundaryCurveName_;
        SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_optional SimSys_HeatingEnergyInputRatioModifierFuncHighTempCurveName_;
        SimSys_HeatingPerformanceCurveOutdoorTempType_optional SimSys_HeatingPerformanceCurveOutdoorTempType_;
        SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_optional SimSys_HeatingEnergyInputRatioModifierFuncLowPart_LoadRatioCurveName_;
        SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_optional SimSys_HeatingEnergyInputRatioModifierFuncHighPart_LoadRatioCurveName_;
        SimSys_HeatingCombinationRatioCorrecFactorCurveName_optional SimSys_HeatingCombinationRatioCorrecFactorCurveName_;
        SimSys_HeatingPart_LoadFractionCorrelationCurveName_optional SimSys_HeatingPart_LoadFractionCorrelationCurveName_;
        SimSys_MinHeatPumpPart_LoadRatio_optional SimSys_MinHeatPumpPart_LoadRatio_;
        SimSys_ZoneNameMasterThermostatLocation_optional SimSys_ZoneNameMasterThermostatLocation_;
        SimSys_MasterThermostatPriorityCtrlType_optional SimSys_MasterThermostatPriorityCtrlType_;
        SimSys_ThermostatPrioritySchedName_optional SimSys_ThermostatPrioritySchedName_;
        SimSys_ZoneTermUnitListName_optional SimSys_ZoneTermUnitListName_;
        SimSys_HeatPumpWasteHeatRecovery_optional SimSys_HeatPumpWasteHeatRecovery_;
        SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_optional SimSys_EquivPipingLengthusedPipingCorrecFactorinCoolMode_;
        SimSys_VertHeightusedPipingCorrecFactor_optional SimSys_VertHeightusedPipingCorrecFactor_;
        SimSys_PipingCorrecFactorLengthinCoolModeCurveName_optional SimSys_PipingCorrecFactorLengthinCoolModeCurveName_;
        SimSys_PipingCorrecFactorHeightinCoolModeCoeff_optional SimSys_PipingCorrecFactorHeightinCoolModeCoeff_;
        SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_optional SimSys_EquivPipingLengthusedPipingCorrecFactorinHeatingMode_;
        SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_optional SimSys_PipingCorrecFactorLengthinHeatingModeCurveName_;
        SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_optional SimSys_PipingCorrecFactorHeightinHeatingModeCoeff_;
        SimSys_CrankcaseHeaterPowerperCompressor_optional SimSys_CrankcaseHeaterPowerperCompressor_;
        SimSys_NumberCompressors_optional SimSys_NumberCompressors_;
        SimSys_RatioCompressorSizetoTotalCompressorCap_optional SimSys_RatioCompressorSizetoTotalCompressorCap_;
        SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_optional SimSys_MaxOutdoorDry_bulbTempCrankcaseHeater_;
        SimSys_DefrostStrategy_optional SimSys_DefrostStrategy_;
        SimSys_DefrostCntl_optional SimSys_DefrostCntl_;
        SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_optional SimSys_DefrostEnergyInputRatioModifierFuncTempCurveName_;
        SimSys_DefrostTimePeriodFract_optional SimSys_DefrostTimePeriodFract_;
        SimSys_ResistDefrostHeatCap_optional SimSys_ResistDefrostHeatCap_;
        SimSys_MaxOutdrDryBulbTempForDefrostOp_optional SimSys_MaxOutdrDryBulbTempForDefrostOp_;
        SimSys_CondType_optional SimSys_CondType_;
        SimSys_CondInletNodeName_optional SimSys_CondInletNodeName_;
        SimSys_CondOutletNodeName_optional SimSys_CondOutletNodeName_;
        SimSys_WaterCondensVolumeFlowRate_optional SimSys_WaterCondensVolumeFlowRate_;
        SimSys_EvapCondEffect_optional SimSys_EvapCondEffect_;
        SimSys_EvapCondAirFlowRate_optional SimSys_EvapCondAirFlowRate_;
        SimSys_EvapCondPumpRatedPwrConsump_optional SimSys_EvapCondPumpRatedPwrConsump_;
        SimSys_SupWaterStoTankName_optional SimSys_SupWaterStoTankName_;
        SimSys_BasinHeatCap_optional SimSys_BasinHeatCap_;
        SimSys_BasinHeatSetpointTemp_optional SimSys_BasinHeatSetpointTemp_;
        SimSys_BasinHeatOperatSchedName_optional SimSys_BasinHeatOperatSchedName_;
        SimSys_FuelType_optional SimSys_FuelType_;
        SimSys_MinimumOutdoorTempinHeatRecoveryMode_optional SimSys_MinimumOutdoorTempinHeatRecoveryMode_;
        SimSys_MaximumOutdoorTempinHeatRecoveryMode_optional SimSys_MaximumOutdoorTempinHeatRecoveryMode_;
        SimSys_HeatRecoveryCoolingCapacModifierCurveName_optional SimSys_HeatRecoveryCoolingCapacModifierCurveName_;
        SimSys_InitialHeatRecoveryCoolingCapacFract_optional SimSys_InitialHeatRecoveryCoolingCapacFract_;
        SimSys_HeatRecoveryCoolingCapacTimeConstant_optional SimSys_HeatRecoveryCoolingCapacTimeConstant_;
        SimSys_HeatRecoveryCoolingEnergyModifierCurveName_optional SimSys_HeatRecoveryCoolingEnergyModifierCurveName_;
        SimSys_InitialHeatRecoveryCoolingEnergyFract_optional SimSys_InitialHeatRecoveryCoolingEnergyFract_;
        SimSys_HeatRecoveryCoolingEnergyTimeConstant_optional SimSys_HeatRecoveryCoolingEnergyTimeConstant_;
        SimSys_HeatRecoveryHeatingCapacModifierCurveName_optional SimSys_HeatRecoveryHeatingCapacModifierCurveName_;
        SimSys_InitialHeatRecoveryHeatingCapacFract_optional SimSys_InitialHeatRecoveryHeatingCapacFract_;
        SimSys_HeatRecoveryHeatingCapacTimeConstant_optional SimSys_HeatRecoveryHeatingCapacTimeConstant_;
        SimSys_HeatRecoveryHeatingEnergyModifierCurveName_optional SimSys_HeatRecoveryHeatingEnergyModifierCurveName_;
        SimSys_InitialHeatRecoveryHeatingEnergyFract_optional SimSys_InitialHeatRecoveryHeatingEnergyFract_;
        SimSys_HeatRecoveryHeatingEnergyTimeConstant_optional SimSys_HeatRecoveryHeatingEnergyTimeConstant_;
      };
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // SIM_SYSTEM_VARIABLE_REFRIGERANT_FLOW_FULL_SYSTEM_HXX
