// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_CoolingTower_VariableSpeed.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_CoolingTower_VariableSpeed
      // 

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_WaterInletNodeName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterInletNodeName () const
      {
        return this->SimFlowPlant_WaterInletNodeName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_WaterInletNodeName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterInletNodeName ()
      {
        return this->SimFlowPlant_WaterInletNodeName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterInletNodeName (const SimFlowPlant_WaterInletNodeName_type& x)
      {
        this->SimFlowPlant_WaterInletNodeName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterInletNodeName (const SimFlowPlant_WaterInletNodeName_optional& x)
      {
        this->SimFlowPlant_WaterInletNodeName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterInletNodeName (::std::auto_ptr< SimFlowPlant_WaterInletNodeName_type > x)
      {
        this->SimFlowPlant_WaterInletNodeName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_WaterOutletNodeName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterOutletNodeName () const
      {
        return this->SimFlowPlant_WaterOutletNodeName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_WaterOutletNodeName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterOutletNodeName ()
      {
        return this->SimFlowPlant_WaterOutletNodeName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterOutletNodeName (const SimFlowPlant_WaterOutletNodeName_type& x)
      {
        this->SimFlowPlant_WaterOutletNodeName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterOutletNodeName (const SimFlowPlant_WaterOutletNodeName_optional& x)
      {
        this->SimFlowPlant_WaterOutletNodeName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_WaterOutletNodeName (::std::auto_ptr< SimFlowPlant_WaterOutletNodeName_type > x)
      {
        this->SimFlowPlant_WaterOutletNodeName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignWaterFlowRate_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignWaterFlowRate () const
      {
        return this->SimFlowPlant_DesignWaterFlowRate_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignWaterFlowRate_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignWaterFlowRate ()
      {
        return this->SimFlowPlant_DesignWaterFlowRate_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignWaterFlowRate (const SimFlowPlant_DesignWaterFlowRate_type& x)
      {
        this->SimFlowPlant_DesignWaterFlowRate_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignWaterFlowRate (const SimFlowPlant_DesignWaterFlowRate_optional& x)
      {
        this->SimFlowPlant_DesignWaterFlowRate_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_SizingFactor_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SizingFactor () const
      {
        return this->SimFlowPlant_SizingFactor_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_SizingFactor_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SizingFactor ()
      {
        return this->SimFlowPlant_SizingFactor_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SizingFactor (const SimFlowPlant_SizingFactor_type& x)
      {
        this->SimFlowPlant_SizingFactor_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SizingFactor (const SimFlowPlant_SizingFactor_optional& x)
      {
        this->SimFlowPlant_SizingFactor_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BasinHeatCap_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatCap () const
      {
        return this->SimFlowPlant_BasinHeatCap_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BasinHeatCap_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatCap ()
      {
        return this->SimFlowPlant_BasinHeatCap_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatCap (const SimFlowPlant_BasinHeatCap_type& x)
      {
        this->SimFlowPlant_BasinHeatCap_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatCap (const SimFlowPlant_BasinHeatCap_optional& x)
      {
        this->SimFlowPlant_BasinHeatCap_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BasinHeatSetpointTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatSetpointTemp () const
      {
        return this->SimFlowPlant_BasinHeatSetpointTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BasinHeatSetpointTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatSetpointTemp ()
      {
        return this->SimFlowPlant_BasinHeatSetpointTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatSetpointTemp (const SimFlowPlant_BasinHeatSetpointTemp_type& x)
      {
        this->SimFlowPlant_BasinHeatSetpointTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatSetpointTemp (const SimFlowPlant_BasinHeatSetpointTemp_optional& x)
      {
        this->SimFlowPlant_BasinHeatSetpointTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BasinHeatOperatSchedName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatOperatSchedName () const
      {
        return this->SimFlowPlant_BasinHeatOperatSchedName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BasinHeatOperatSchedName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatOperatSchedName ()
      {
        return this->SimFlowPlant_BasinHeatOperatSchedName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatOperatSchedName (const SimFlowPlant_BasinHeatOperatSchedName_type& x)
      {
        this->SimFlowPlant_BasinHeatOperatSchedName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatOperatSchedName (const SimFlowPlant_BasinHeatOperatSchedName_optional& x)
      {
        this->SimFlowPlant_BasinHeatOperatSchedName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BasinHeatOperatSchedName (::std::auto_ptr< SimFlowPlant_BasinHeatOperatSchedName_type > x)
      {
        this->SimFlowPlant_BasinHeatOperatSchedName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignAirFlowRate_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAirFlowRate () const
      {
        return this->SimFlowPlant_DesignAirFlowRate_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignAirFlowRate_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAirFlowRate ()
      {
        return this->SimFlowPlant_DesignAirFlowRate_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAirFlowRate (const SimFlowPlant_DesignAirFlowRate_type& x)
      {
        this->SimFlowPlant_DesignAirFlowRate_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAirFlowRate (const SimFlowPlant_DesignAirFlowRate_optional& x)
      {
        this->SimFlowPlant_DesignAirFlowRate_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_EvapLossMode_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossMode () const
      {
        return this->SimFlowPlant_EvapLossMode_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_EvapLossMode_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossMode ()
      {
        return this->SimFlowPlant_EvapLossMode_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossMode (const SimFlowPlant_EvapLossMode_type& x)
      {
        this->SimFlowPlant_EvapLossMode_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossMode (const SimFlowPlant_EvapLossMode_optional& x)
      {
        this->SimFlowPlant_EvapLossMode_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossMode (::std::auto_ptr< SimFlowPlant_EvapLossMode_type > x)
      {
        this->SimFlowPlant_EvapLossMode_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_EvapLossFactor_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossFactor () const
      {
        return this->SimFlowPlant_EvapLossFactor_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_EvapLossFactor_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossFactor ()
      {
        return this->SimFlowPlant_EvapLossFactor_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossFactor (const SimFlowPlant_EvapLossFactor_type& x)
      {
        this->SimFlowPlant_EvapLossFactor_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_EvapLossFactor (const SimFlowPlant_EvapLossFactor_optional& x)
      {
        this->SimFlowPlant_EvapLossFactor_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DriftLossPercent_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DriftLossPercent () const
      {
        return this->SimFlowPlant_DriftLossPercent_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DriftLossPercent_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DriftLossPercent ()
      {
        return this->SimFlowPlant_DriftLossPercent_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DriftLossPercent (const SimFlowPlant_DriftLossPercent_type& x)
      {
        this->SimFlowPlant_DriftLossPercent_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DriftLossPercent (const SimFlowPlant_DriftLossPercent_optional& x)
      {
        this->SimFlowPlant_DriftLossPercent_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BlowdownCalcMode_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownCalcMode () const
      {
        return this->SimFlowPlant_BlowdownCalcMode_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BlowdownCalcMode_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownCalcMode ()
      {
        return this->SimFlowPlant_BlowdownCalcMode_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownCalcMode (const SimFlowPlant_BlowdownCalcMode_type& x)
      {
        this->SimFlowPlant_BlowdownCalcMode_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownCalcMode (const SimFlowPlant_BlowdownCalcMode_optional& x)
      {
        this->SimFlowPlant_BlowdownCalcMode_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownCalcMode (::std::auto_ptr< SimFlowPlant_BlowdownCalcMode_type > x)
      {
        this->SimFlowPlant_BlowdownCalcMode_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BlowdownConcentrationRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownConcentrationRatio () const
      {
        return this->SimFlowPlant_BlowdownConcentrationRatio_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BlowdownConcentrationRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownConcentrationRatio ()
      {
        return this->SimFlowPlant_BlowdownConcentrationRatio_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownConcentrationRatio (const SimFlowPlant_BlowdownConcentrationRatio_type& x)
      {
        this->SimFlowPlant_BlowdownConcentrationRatio_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownConcentrationRatio (const SimFlowPlant_BlowdownConcentrationRatio_optional& x)
      {
        this->SimFlowPlant_BlowdownConcentrationRatio_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BlowdownMakeupWaterUsageSchedName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownMakeupWaterUsageSchedName () const
      {
        return this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_BlowdownMakeupWaterUsageSchedName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownMakeupWaterUsageSchedName ()
      {
        return this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownMakeupWaterUsageSchedName (const SimFlowPlant_BlowdownMakeupWaterUsageSchedName_type& x)
      {
        this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownMakeupWaterUsageSchedName (const SimFlowPlant_BlowdownMakeupWaterUsageSchedName_optional& x)
      {
        this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_BlowdownMakeupWaterUsageSchedName (::std::auto_ptr< SimFlowPlant_BlowdownMakeupWaterUsageSchedName_type > x)
      {
        this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_SupWaterStoTankName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SupWaterStoTankName () const
      {
        return this->SimFlowPlant_SupWaterStoTankName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_SupWaterStoTankName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SupWaterStoTankName ()
      {
        return this->SimFlowPlant_SupWaterStoTankName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SupWaterStoTankName (const SimFlowPlant_SupWaterStoTankName_type& x)
      {
        this->SimFlowPlant_SupWaterStoTankName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SupWaterStoTankName (const SimFlowPlant_SupWaterStoTankName_optional& x)
      {
        this->SimFlowPlant_SupWaterStoTankName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_SupWaterStoTankName (::std::auto_ptr< SimFlowPlant_SupWaterStoTankName_type > x)
      {
        this->SimFlowPlant_SupWaterStoTankName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_OutdrAirInletNodeName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_OutdrAirInletNodeName () const
      {
        return this->SimFlowPlant_OutdrAirInletNodeName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_OutdrAirInletNodeName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_OutdrAirInletNodeName ()
      {
        return this->SimFlowPlant_OutdrAirInletNodeName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_OutdrAirInletNodeName (const SimFlowPlant_OutdrAirInletNodeName_type& x)
      {
        this->SimFlowPlant_OutdrAirInletNodeName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_OutdrAirInletNodeName (const SimFlowPlant_OutdrAirInletNodeName_optional& x)
      {
        this->SimFlowPlant_OutdrAirInletNodeName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_OutdrAirInletNodeName (::std::auto_ptr< SimFlowPlant_OutdrAirInletNodeName_type > x)
      {
        this->SimFlowPlant_OutdrAirInletNodeName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_NumberOfCells_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_NumberOfCells () const
      {
        return this->SimFlowPlant_NumberOfCells_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_NumberOfCells_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_NumberOfCells ()
      {
        return this->SimFlowPlant_NumberOfCells_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_NumberOfCells (const SimFlowPlant_NumberOfCells_type& x)
      {
        this->SimFlowPlant_NumberOfCells_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_NumberOfCells (const SimFlowPlant_NumberOfCells_optional& x)
      {
        this->SimFlowPlant_NumberOfCells_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_CellControl_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellControl () const
      {
        return this->SimFlowPlant_CellControl_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_CellControl_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellControl ()
      {
        return this->SimFlowPlant_CellControl_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellControl (const SimFlowPlant_CellControl_type& x)
      {
        this->SimFlowPlant_CellControl_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellControl (const SimFlowPlant_CellControl_optional& x)
      {
        this->SimFlowPlant_CellControl_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellControl (::std::auto_ptr< SimFlowPlant_CellControl_type > x)
      {
        this->SimFlowPlant_CellControl_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_CellMinWaterFlowRateFraction_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMinWaterFlowRateFraction () const
      {
        return this->SimFlowPlant_CellMinWaterFlowRateFraction_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_CellMinWaterFlowRateFraction_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMinWaterFlowRateFraction ()
      {
        return this->SimFlowPlant_CellMinWaterFlowRateFraction_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMinWaterFlowRateFraction (const SimFlowPlant_CellMinWaterFlowRateFraction_type& x)
      {
        this->SimFlowPlant_CellMinWaterFlowRateFraction_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMinWaterFlowRateFraction (const SimFlowPlant_CellMinWaterFlowRateFraction_optional& x)
      {
        this->SimFlowPlant_CellMinWaterFlowRateFraction_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_CellMaxWaterFlowRateFraction_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMaxWaterFlowRateFraction () const
      {
        return this->SimFlowPlant_CellMaxWaterFlowRateFraction_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_CellMaxWaterFlowRateFraction_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMaxWaterFlowRateFraction ()
      {
        return this->SimFlowPlant_CellMaxWaterFlowRateFraction_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMaxWaterFlowRateFraction (const SimFlowPlant_CellMaxWaterFlowRateFraction_type& x)
      {
        this->SimFlowPlant_CellMaxWaterFlowRateFraction_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CellMaxWaterFlowRateFraction (const SimFlowPlant_CellMaxWaterFlowRateFraction_optional& x)
      {
        this->SimFlowPlant_CellMaxWaterFlowRateFraction_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_ModelType_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelType () const
      {
        return this->SimFlowPlant_ModelType_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_ModelType_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelType ()
      {
        return this->SimFlowPlant_ModelType_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelType (const SimFlowPlant_ModelType_type& x)
      {
        this->SimFlowPlant_ModelType_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelType (const SimFlowPlant_ModelType_optional& x)
      {
        this->SimFlowPlant_ModelType_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelType (::std::auto_ptr< SimFlowPlant_ModelType_type > x)
      {
        this->SimFlowPlant_ModelType_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_ModelCoefName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelCoefName () const
      {
        return this->SimFlowPlant_ModelCoefName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_ModelCoefName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelCoefName ()
      {
        return this->SimFlowPlant_ModelCoefName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelCoefName (const SimFlowPlant_ModelCoefName_type& x)
      {
        this->SimFlowPlant_ModelCoefName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelCoefName (const SimFlowPlant_ModelCoefName_optional& x)
      {
        this->SimFlowPlant_ModelCoefName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_ModelCoefName (::std::auto_ptr< SimFlowPlant_ModelCoefName_type > x)
      {
        this->SimFlowPlant_ModelCoefName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignInletAirWetBulbTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignInletAirWetBulbTemp () const
      {
        return this->SimFlowPlant_DesignInletAirWetBulbTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignInletAirWetBulbTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignInletAirWetBulbTemp ()
      {
        return this->SimFlowPlant_DesignInletAirWetBulbTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignInletAirWetBulbTemp (const SimFlowPlant_DesignInletAirWetBulbTemp_type& x)
      {
        this->SimFlowPlant_DesignInletAirWetBulbTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignInletAirWetBulbTemp (const SimFlowPlant_DesignInletAirWetBulbTemp_optional& x)
      {
        this->SimFlowPlant_DesignInletAirWetBulbTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignAppTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAppTemp () const
      {
        return this->SimFlowPlant_DesignAppTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignAppTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAppTemp ()
      {
        return this->SimFlowPlant_DesignAppTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAppTemp (const SimFlowPlant_DesignAppTemp_type& x)
      {
        this->SimFlowPlant_DesignAppTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignAppTemp (const SimFlowPlant_DesignAppTemp_optional& x)
      {
        this->SimFlowPlant_DesignAppTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignRangeTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignRangeTemp () const
      {
        return this->SimFlowPlant_DesignRangeTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignRangeTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignRangeTemp ()
      {
        return this->SimFlowPlant_DesignRangeTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignRangeTemp (const SimFlowPlant_DesignRangeTemp_type& x)
      {
        this->SimFlowPlant_DesignRangeTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignRangeTemp (const SimFlowPlant_DesignRangeTemp_optional& x)
      {
        this->SimFlowPlant_DesignRangeTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignFanPwr_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignFanPwr () const
      {
        return this->SimFlowPlant_DesignFanPwr_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_DesignFanPwr_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignFanPwr ()
      {
        return this->SimFlowPlant_DesignFanPwr_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignFanPwr (const SimFlowPlant_DesignFanPwr_type& x)
      {
        this->SimFlowPlant_DesignFanPwr_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_DesignFanPwr (const SimFlowPlant_DesignFanPwr_optional& x)
      {
        this->SimFlowPlant_DesignFanPwr_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName () const
      {
        return this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName ()
      {
        return this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName (const SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_type& x)
      {
        this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName (const SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_optional& x)
      {
        this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName (::std::auto_ptr< SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_type > x)
      {
        this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_MinAirFlowRateRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_MinAirFlowRateRatio () const
      {
        return this->SimFlowPlant_MinAirFlowRateRatio_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_MinAirFlowRateRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_MinAirFlowRateRatio ()
      {
        return this->SimFlowPlant_MinAirFlowRateRatio_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_MinAirFlowRateRatio (const SimFlowPlant_MinAirFlowRateRatio_type& x)
      {
        this->SimFlowPlant_MinAirFlowRateRatio_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_MinAirFlowRateRatio (const SimFlowPlant_MinAirFlowRateRatio_optional& x)
      {
        this->SimFlowPlant_MinAirFlowRateRatio_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_FractTowerCapFreeConvRegime_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FractTowerCapFreeConvRegime () const
      {
        return this->SimFlowPlant_FractTowerCapFreeConvRegime_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::SimFlowPlant_FractTowerCapFreeConvRegime_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FractTowerCapFreeConvRegime ()
      {
        return this->SimFlowPlant_FractTowerCapFreeConvRegime_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FractTowerCapFreeConvRegime (const SimFlowPlant_FractTowerCapFreeConvRegime_type& x)
      {
        this->SimFlowPlant_FractTowerCapFreeConvRegime_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_FractTowerCapFreeConvRegime (const SimFlowPlant_FractTowerCapFreeConvRegime_optional& x)
      {
        this->SimFlowPlant_FractTowerCapFreeConvRegime_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp () const
      {
        return this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp ()
      {
        return this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp (const CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_type& x)
      {
        this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp (const CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp () const
      {
        return this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp ()
      {
        return this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp (const CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_type& x)
      {
        this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp (const CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinRangeTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinRangeTemp () const
      {
        return this->CoolTowerPerf_CoolTools_MinRangeTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinRangeTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinRangeTemp ()
      {
        return this->CoolTowerPerf_CoolTools_MinRangeTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinRangeTemp (const CoolTowerPerf_CoolTools_MinRangeTemp_type& x)
      {
        this->CoolTowerPerf_CoolTools_MinRangeTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinRangeTemp (const CoolTowerPerf_CoolTools_MinRangeTemp_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MinRangeTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxRangeTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxRangeTemp () const
      {
        return this->CoolTowerPerf_CoolTools_MaxRangeTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxRangeTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxRangeTemp ()
      {
        return this->CoolTowerPerf_CoolTools_MaxRangeTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxRangeTemp (const CoolTowerPerf_CoolTools_MaxRangeTemp_type& x)
      {
        this->CoolTowerPerf_CoolTools_MaxRangeTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxRangeTemp (const CoolTowerPerf_CoolTools_MaxRangeTemp_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MaxRangeTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinAppTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinAppTemp () const
      {
        return this->CoolTowerPerf_CoolTools_MinAppTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinAppTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinAppTemp ()
      {
        return this->CoolTowerPerf_CoolTools_MinAppTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinAppTemp (const CoolTowerPerf_CoolTools_MinAppTemp_type& x)
      {
        this->CoolTowerPerf_CoolTools_MinAppTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinAppTemp (const CoolTowerPerf_CoolTools_MinAppTemp_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MinAppTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxAppTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxAppTemp () const
      {
        return this->CoolTowerPerf_CoolTools_MaxAppTemp_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxAppTemp_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxAppTemp ()
      {
        return this->CoolTowerPerf_CoolTools_MaxAppTemp_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxAppTemp (const CoolTowerPerf_CoolTools_MaxAppTemp_type& x)
      {
        this->CoolTowerPerf_CoolTools_MaxAppTemp_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxAppTemp (const CoolTowerPerf_CoolTools_MaxAppTemp_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MaxAppTemp_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinWaterFlowRateRatio () const
      {
        return this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinWaterFlowRateRatio ()
      {
        return this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinWaterFlowRateRatio (const CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_type& x)
      {
        this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MinWaterFlowRateRatio (const CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio () const
      {
        return this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio ()
      {
        return this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio (const CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_type& x)
      {
        this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio (const CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_optional& x)
      {
        this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_Coef_1_35_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_Coef_1_35 () const
      {
        return this->CoolTowerPerf_CoolTools_Coef_1_35_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_CoolTools_Coef_1_35_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_Coef_1_35 ()
      {
        return this->CoolTowerPerf_CoolTools_Coef_1_35_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_Coef_1_35 (const CoolTowerPerf_CoolTools_Coef_1_35_type& x)
      {
        this->CoolTowerPerf_CoolTools_Coef_1_35_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_Coef_1_35 (const CoolTowerPerf_CoolTools_Coef_1_35_optional& x)
      {
        this->CoolTowerPerf_CoolTools_Coef_1_35_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_CoolTools_Coef_1_35 (::std::auto_ptr< CoolTowerPerf_CoolTools_Coef_1_35_type > x)
      {
        this->CoolTowerPerf_CoolTools_Coef_1_35_.set (x);
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_MaxLiqToGasRatio () const
      {
        return this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_MaxLiqToGasRatio ()
      {
        return this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_MaxLiqToGasRatio (const CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_type& x)
      {
        this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_MaxLiqToGasRatio (const CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_optional& x)
      {
        this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_ = x;
      }

      const SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_YorkCalc_Coeff_1_27_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_Coeff_1_27 () const
      {
        return this->CoolTowerPerf_YorkCalc_Coeff_1_27_;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::CoolTowerPerf_YorkCalc_Coeff_1_27_optional& SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_Coeff_1_27 ()
      {
        return this->CoolTowerPerf_YorkCalc_Coeff_1_27_;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_Coeff_1_27 (const CoolTowerPerf_YorkCalc_Coeff_1_27_type& x)
      {
        this->CoolTowerPerf_YorkCalc_Coeff_1_27_.set (x);
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_Coeff_1_27 (const CoolTowerPerf_YorkCalc_Coeff_1_27_optional& x)
      {
        this->CoolTowerPerf_YorkCalc_Coeff_1_27_ = x;
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      CoolTowerPerf_YorkCalc_Coeff_1_27 (::std::auto_ptr< CoolTowerPerf_YorkCalc_Coeff_1_27_type > x)
      {
        this->CoolTowerPerf_YorkCalc_Coeff_1_27_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_CoolingTower_VariableSpeed
      //

      SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CoolingTower_VariableSpeed (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower (RefId),
        SimFlowPlant_WaterInletNodeName_ (this),
        SimFlowPlant_WaterOutletNodeName_ (this),
        SimFlowPlant_DesignWaterFlowRate_ (this),
        SimFlowPlant_SizingFactor_ (this),
        SimFlowPlant_BasinHeatCap_ (this),
        SimFlowPlant_BasinHeatSetpointTemp_ (this),
        SimFlowPlant_BasinHeatOperatSchedName_ (this),
        SimFlowPlant_DesignAirFlowRate_ (this),
        SimFlowPlant_EvapLossMode_ (this),
        SimFlowPlant_EvapLossFactor_ (this),
        SimFlowPlant_DriftLossPercent_ (this),
        SimFlowPlant_BlowdownCalcMode_ (this),
        SimFlowPlant_BlowdownConcentrationRatio_ (this),
        SimFlowPlant_BlowdownMakeupWaterUsageSchedName_ (this),
        SimFlowPlant_SupWaterStoTankName_ (this),
        SimFlowPlant_OutdrAirInletNodeName_ (this),
        SimFlowPlant_NumberOfCells_ (this),
        SimFlowPlant_CellControl_ (this),
        SimFlowPlant_CellMinWaterFlowRateFraction_ (this),
        SimFlowPlant_CellMaxWaterFlowRateFraction_ (this),
        SimFlowPlant_ModelType_ (this),
        SimFlowPlant_ModelCoefName_ (this),
        SimFlowPlant_DesignInletAirWetBulbTemp_ (this),
        SimFlowPlant_DesignAppTemp_ (this),
        SimFlowPlant_DesignRangeTemp_ (this),
        SimFlowPlant_DesignFanPwr_ (this),
        SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_ (this),
        SimFlowPlant_MinAirFlowRateRatio_ (this),
        SimFlowPlant_FractTowerCapFreeConvRegime_ (this),
        CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_ (this),
        CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_ (this),
        CoolTowerPerf_CoolTools_MinRangeTemp_ (this),
        CoolTowerPerf_CoolTools_MaxRangeTemp_ (this),
        CoolTowerPerf_CoolTools_MinAppTemp_ (this),
        CoolTowerPerf_CoolTools_MaxAppTemp_ (this),
        CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_ (this),
        CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_ (this),
        CoolTowerPerf_CoolTools_Coef_1_35_ (this),
        CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_ (this),
        CoolTowerPerf_YorkCalc_Coeff_1_27_ (this)
      {
      }

      SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CoolingTower_VariableSpeed (const SimFlowPlant_CoolingTower_VariableSpeed& x,
                                               ::xml_schema::flags f,
                                               ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower (x, f, c),
        SimFlowPlant_WaterInletNodeName_ (x.SimFlowPlant_WaterInletNodeName_, f, this),
        SimFlowPlant_WaterOutletNodeName_ (x.SimFlowPlant_WaterOutletNodeName_, f, this),
        SimFlowPlant_DesignWaterFlowRate_ (x.SimFlowPlant_DesignWaterFlowRate_, f, this),
        SimFlowPlant_SizingFactor_ (x.SimFlowPlant_SizingFactor_, f, this),
        SimFlowPlant_BasinHeatCap_ (x.SimFlowPlant_BasinHeatCap_, f, this),
        SimFlowPlant_BasinHeatSetpointTemp_ (x.SimFlowPlant_BasinHeatSetpointTemp_, f, this),
        SimFlowPlant_BasinHeatOperatSchedName_ (x.SimFlowPlant_BasinHeatOperatSchedName_, f, this),
        SimFlowPlant_DesignAirFlowRate_ (x.SimFlowPlant_DesignAirFlowRate_, f, this),
        SimFlowPlant_EvapLossMode_ (x.SimFlowPlant_EvapLossMode_, f, this),
        SimFlowPlant_EvapLossFactor_ (x.SimFlowPlant_EvapLossFactor_, f, this),
        SimFlowPlant_DriftLossPercent_ (x.SimFlowPlant_DriftLossPercent_, f, this),
        SimFlowPlant_BlowdownCalcMode_ (x.SimFlowPlant_BlowdownCalcMode_, f, this),
        SimFlowPlant_BlowdownConcentrationRatio_ (x.SimFlowPlant_BlowdownConcentrationRatio_, f, this),
        SimFlowPlant_BlowdownMakeupWaterUsageSchedName_ (x.SimFlowPlant_BlowdownMakeupWaterUsageSchedName_, f, this),
        SimFlowPlant_SupWaterStoTankName_ (x.SimFlowPlant_SupWaterStoTankName_, f, this),
        SimFlowPlant_OutdrAirInletNodeName_ (x.SimFlowPlant_OutdrAirInletNodeName_, f, this),
        SimFlowPlant_NumberOfCells_ (x.SimFlowPlant_NumberOfCells_, f, this),
        SimFlowPlant_CellControl_ (x.SimFlowPlant_CellControl_, f, this),
        SimFlowPlant_CellMinWaterFlowRateFraction_ (x.SimFlowPlant_CellMinWaterFlowRateFraction_, f, this),
        SimFlowPlant_CellMaxWaterFlowRateFraction_ (x.SimFlowPlant_CellMaxWaterFlowRateFraction_, f, this),
        SimFlowPlant_ModelType_ (x.SimFlowPlant_ModelType_, f, this),
        SimFlowPlant_ModelCoefName_ (x.SimFlowPlant_ModelCoefName_, f, this),
        SimFlowPlant_DesignInletAirWetBulbTemp_ (x.SimFlowPlant_DesignInletAirWetBulbTemp_, f, this),
        SimFlowPlant_DesignAppTemp_ (x.SimFlowPlant_DesignAppTemp_, f, this),
        SimFlowPlant_DesignRangeTemp_ (x.SimFlowPlant_DesignRangeTemp_, f, this),
        SimFlowPlant_DesignFanPwr_ (x.SimFlowPlant_DesignFanPwr_, f, this),
        SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_ (x.SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_, f, this),
        SimFlowPlant_MinAirFlowRateRatio_ (x.SimFlowPlant_MinAirFlowRateRatio_, f, this),
        SimFlowPlant_FractTowerCapFreeConvRegime_ (x.SimFlowPlant_FractTowerCapFreeConvRegime_, f, this),
        CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_ (x.CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_, f, this),
        CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_ (x.CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_, f, this),
        CoolTowerPerf_CoolTools_MinRangeTemp_ (x.CoolTowerPerf_CoolTools_MinRangeTemp_, f, this),
        CoolTowerPerf_CoolTools_MaxRangeTemp_ (x.CoolTowerPerf_CoolTools_MaxRangeTemp_, f, this),
        CoolTowerPerf_CoolTools_MinAppTemp_ (x.CoolTowerPerf_CoolTools_MinAppTemp_, f, this),
        CoolTowerPerf_CoolTools_MaxAppTemp_ (x.CoolTowerPerf_CoolTools_MaxAppTemp_, f, this),
        CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_ (x.CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_, f, this),
        CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_ (x.CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_, f, this),
        CoolTowerPerf_CoolTools_Coef_1_35_ (x.CoolTowerPerf_CoolTools_Coef_1_35_, f, this),
        CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_ (x.CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_, f, this),
        CoolTowerPerf_YorkCalc_Coeff_1_27_ (x.CoolTowerPerf_YorkCalc_Coeff_1_27_, f, this)
      {
      }

      SimFlowPlant_CoolingTower_VariableSpeed::
      SimFlowPlant_CoolingTower_VariableSpeed (const ::xercesc::DOMElement& e,
                                               ::xml_schema::flags f,
                                               ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_WaterInletNodeName_ (this),
        SimFlowPlant_WaterOutletNodeName_ (this),
        SimFlowPlant_DesignWaterFlowRate_ (this),
        SimFlowPlant_SizingFactor_ (this),
        SimFlowPlant_BasinHeatCap_ (this),
        SimFlowPlant_BasinHeatSetpointTemp_ (this),
        SimFlowPlant_BasinHeatOperatSchedName_ (this),
        SimFlowPlant_DesignAirFlowRate_ (this),
        SimFlowPlant_EvapLossMode_ (this),
        SimFlowPlant_EvapLossFactor_ (this),
        SimFlowPlant_DriftLossPercent_ (this),
        SimFlowPlant_BlowdownCalcMode_ (this),
        SimFlowPlant_BlowdownConcentrationRatio_ (this),
        SimFlowPlant_BlowdownMakeupWaterUsageSchedName_ (this),
        SimFlowPlant_SupWaterStoTankName_ (this),
        SimFlowPlant_OutdrAirInletNodeName_ (this),
        SimFlowPlant_NumberOfCells_ (this),
        SimFlowPlant_CellControl_ (this),
        SimFlowPlant_CellMinWaterFlowRateFraction_ (this),
        SimFlowPlant_CellMaxWaterFlowRateFraction_ (this),
        SimFlowPlant_ModelType_ (this),
        SimFlowPlant_ModelCoefName_ (this),
        SimFlowPlant_DesignInletAirWetBulbTemp_ (this),
        SimFlowPlant_DesignAppTemp_ (this),
        SimFlowPlant_DesignRangeTemp_ (this),
        SimFlowPlant_DesignFanPwr_ (this),
        SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_ (this),
        SimFlowPlant_MinAirFlowRateRatio_ (this),
        SimFlowPlant_FractTowerCapFreeConvRegime_ (this),
        CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_ (this),
        CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_ (this),
        CoolTowerPerf_CoolTools_MinRangeTemp_ (this),
        CoolTowerPerf_CoolTools_MaxRangeTemp_ (this),
        CoolTowerPerf_CoolTools_MinAppTemp_ (this),
        CoolTowerPerf_CoolTools_MaxAppTemp_ (this),
        CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_ (this),
        CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_ (this),
        CoolTowerPerf_CoolTools_Coef_1_35_ (this),
        CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_ (this),
        CoolTowerPerf_YorkCalc_Coeff_1_27_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_CoolingTower_VariableSpeed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_WaterInletNodeName
          //
          if (n.name () == "SimFlowPlant_WaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_WaterInletNodeName_type > r (
              SimFlowPlant_WaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_WaterInletNodeName_)
            {
              this->SimFlowPlant_WaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_WaterOutletNodeName
          //
          if (n.name () == "SimFlowPlant_WaterOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_WaterOutletNodeName_type > r (
              SimFlowPlant_WaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_WaterOutletNodeName_)
            {
              this->SimFlowPlant_WaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_DesignWaterFlowRate
          //
          if (n.name () == "SimFlowPlant_DesignWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignWaterFlowRate_)
            {
              this->SimFlowPlant_DesignWaterFlowRate_.set (SimFlowPlant_DesignWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_SizingFactor
          //
          if (n.name () == "SimFlowPlant_SizingFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_SizingFactor_)
            {
              this->SimFlowPlant_SizingFactor_.set (SimFlowPlant_SizingFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_BasinHeatCap
          //
          if (n.name () == "SimFlowPlant_BasinHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_BasinHeatCap_)
            {
              this->SimFlowPlant_BasinHeatCap_.set (SimFlowPlant_BasinHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_BasinHeatSetpointTemp
          //
          if (n.name () == "SimFlowPlant_BasinHeatSetpointTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_BasinHeatSetpointTemp_)
            {
              this->SimFlowPlant_BasinHeatSetpointTemp_.set (SimFlowPlant_BasinHeatSetpointTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_BasinHeatOperatSchedName
          //
          if (n.name () == "SimFlowPlant_BasinHeatOperatSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_BasinHeatOperatSchedName_type > r (
              SimFlowPlant_BasinHeatOperatSchedName_traits::create (i, f, this));

            if (!this->SimFlowPlant_BasinHeatOperatSchedName_)
            {
              this->SimFlowPlant_BasinHeatOperatSchedName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_DesignAirFlowRate
          //
          if (n.name () == "SimFlowPlant_DesignAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignAirFlowRate_)
            {
              this->SimFlowPlant_DesignAirFlowRate_.set (SimFlowPlant_DesignAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_EvapLossMode
          //
          if (n.name () == "SimFlowPlant_EvapLossMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_EvapLossMode_type > r (
              SimFlowPlant_EvapLossMode_traits::create (i, f, this));

            if (!this->SimFlowPlant_EvapLossMode_)
            {
              this->SimFlowPlant_EvapLossMode_.set (r);
              continue;
            }
          }

          // SimFlowPlant_EvapLossFactor
          //
          if (n.name () == "SimFlowPlant_EvapLossFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_EvapLossFactor_)
            {
              this->SimFlowPlant_EvapLossFactor_.set (SimFlowPlant_EvapLossFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_DriftLossPercent
          //
          if (n.name () == "SimFlowPlant_DriftLossPercent" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DriftLossPercent_)
            {
              this->SimFlowPlant_DriftLossPercent_.set (SimFlowPlant_DriftLossPercent_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_BlowdownCalcMode
          //
          if (n.name () == "SimFlowPlant_BlowdownCalcMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_BlowdownCalcMode_type > r (
              SimFlowPlant_BlowdownCalcMode_traits::create (i, f, this));

            if (!this->SimFlowPlant_BlowdownCalcMode_)
            {
              this->SimFlowPlant_BlowdownCalcMode_.set (r);
              continue;
            }
          }

          // SimFlowPlant_BlowdownConcentrationRatio
          //
          if (n.name () == "SimFlowPlant_BlowdownConcentrationRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_BlowdownConcentrationRatio_)
            {
              this->SimFlowPlant_BlowdownConcentrationRatio_.set (SimFlowPlant_BlowdownConcentrationRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_BlowdownMakeupWaterUsageSchedName
          //
          if (n.name () == "SimFlowPlant_BlowdownMakeupWaterUsageSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_BlowdownMakeupWaterUsageSchedName_type > r (
              SimFlowPlant_BlowdownMakeupWaterUsageSchedName_traits::create (i, f, this));

            if (!this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_)
            {
              this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_SupWaterStoTankName
          //
          if (n.name () == "SimFlowPlant_SupWaterStoTankName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_SupWaterStoTankName_type > r (
              SimFlowPlant_SupWaterStoTankName_traits::create (i, f, this));

            if (!this->SimFlowPlant_SupWaterStoTankName_)
            {
              this->SimFlowPlant_SupWaterStoTankName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_OutdrAirInletNodeName
          //
          if (n.name () == "SimFlowPlant_OutdrAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_OutdrAirInletNodeName_type > r (
              SimFlowPlant_OutdrAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_OutdrAirInletNodeName_)
            {
              this->SimFlowPlant_OutdrAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_NumberOfCells
          //
          if (n.name () == "SimFlowPlant_NumberOfCells" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_NumberOfCells_)
            {
              this->SimFlowPlant_NumberOfCells_.set (SimFlowPlant_NumberOfCells_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_CellControl
          //
          if (n.name () == "SimFlowPlant_CellControl" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CellControl_type > r (
              SimFlowPlant_CellControl_traits::create (i, f, this));

            if (!this->SimFlowPlant_CellControl_)
            {
              this->SimFlowPlant_CellControl_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CellMinWaterFlowRateFraction
          //
          if (n.name () == "SimFlowPlant_CellMinWaterFlowRateFraction" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_CellMinWaterFlowRateFraction_)
            {
              this->SimFlowPlant_CellMinWaterFlowRateFraction_.set (SimFlowPlant_CellMinWaterFlowRateFraction_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_CellMaxWaterFlowRateFraction
          //
          if (n.name () == "SimFlowPlant_CellMaxWaterFlowRateFraction" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_CellMaxWaterFlowRateFraction_)
            {
              this->SimFlowPlant_CellMaxWaterFlowRateFraction_.set (SimFlowPlant_CellMaxWaterFlowRateFraction_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_ModelType
          //
          if (n.name () == "SimFlowPlant_ModelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ModelType_type > r (
              SimFlowPlant_ModelType_traits::create (i, f, this));

            if (!this->SimFlowPlant_ModelType_)
            {
              this->SimFlowPlant_ModelType_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ModelCoefName
          //
          if (n.name () == "SimFlowPlant_ModelCoefName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ModelCoefName_type > r (
              SimFlowPlant_ModelCoefName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ModelCoefName_)
            {
              this->SimFlowPlant_ModelCoefName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_DesignInletAirWetBulbTemp
          //
          if (n.name () == "SimFlowPlant_DesignInletAirWetBulbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignInletAirWetBulbTemp_)
            {
              this->SimFlowPlant_DesignInletAirWetBulbTemp_.set (SimFlowPlant_DesignInletAirWetBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_DesignAppTemp
          //
          if (n.name () == "SimFlowPlant_DesignAppTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignAppTemp_)
            {
              this->SimFlowPlant_DesignAppTemp_.set (SimFlowPlant_DesignAppTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_DesignRangeTemp
          //
          if (n.name () == "SimFlowPlant_DesignRangeTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignRangeTemp_)
            {
              this->SimFlowPlant_DesignRangeTemp_.set (SimFlowPlant_DesignRangeTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_DesignFanPwr
          //
          if (n.name () == "SimFlowPlant_DesignFanPwr" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignFanPwr_)
            {
              this->SimFlowPlant_DesignFanPwr_.set (SimFlowPlant_DesignFanPwr_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName
          //
          if (n.name () == "SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_type > r (
              SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_)
            {
              this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_MinAirFlowRateRatio
          //
          if (n.name () == "SimFlowPlant_MinAirFlowRateRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_MinAirFlowRateRatio_)
            {
              this->SimFlowPlant_MinAirFlowRateRatio_.set (SimFlowPlant_MinAirFlowRateRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_FractTowerCapFreeConvRegime
          //
          if (n.name () == "SimFlowPlant_FractTowerCapFreeConvRegime" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_FractTowerCapFreeConvRegime_)
            {
              this->SimFlowPlant_FractTowerCapFreeConvRegime_.set (SimFlowPlant_FractTowerCapFreeConvRegime_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_)
            {
              this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_.set (CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_)
            {
              this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_.set (CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MinRangeTemp
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MinRangeTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MinRangeTemp_)
            {
              this->CoolTowerPerf_CoolTools_MinRangeTemp_.set (CoolTowerPerf_CoolTools_MinRangeTemp_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MaxRangeTemp
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MaxRangeTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MaxRangeTemp_)
            {
              this->CoolTowerPerf_CoolTools_MaxRangeTemp_.set (CoolTowerPerf_CoolTools_MaxRangeTemp_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MinAppTemp
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MinAppTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MinAppTemp_)
            {
              this->CoolTowerPerf_CoolTools_MinAppTemp_.set (CoolTowerPerf_CoolTools_MinAppTemp_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MaxAppTemp
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MaxAppTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MaxAppTemp_)
            {
              this->CoolTowerPerf_CoolTools_MaxAppTemp_.set (CoolTowerPerf_CoolTools_MaxAppTemp_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MinWaterFlowRateRatio
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MinWaterFlowRateRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_)
            {
              this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_.set (CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio
          //
          if (n.name () == "CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_)
            {
              this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_.set (CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_CoolTools_Coef_1_35
          //
          if (n.name () == "CoolTowerPerf_CoolTools_Coef_1_35" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< CoolTowerPerf_CoolTools_Coef_1_35_type > r (
              CoolTowerPerf_CoolTools_Coef_1_35_traits::create (i, f, this));

            if (!this->CoolTowerPerf_CoolTools_Coef_1_35_)
            {
              this->CoolTowerPerf_CoolTools_Coef_1_35_.set (r);
              continue;
            }
          }

          // CoolTowerPerf_YorkCalc_MaxLiqToGasRatio
          //
          if (n.name () == "CoolTowerPerf_YorkCalc_MaxLiqToGasRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_)
            {
              this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_.set (CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_traits::create (i, f, this));
              continue;
            }
          }

          // CoolTowerPerf_YorkCalc_Coeff_1_27
          //
          if (n.name () == "CoolTowerPerf_YorkCalc_Coeff_1_27" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< CoolTowerPerf_YorkCalc_Coeff_1_27_type > r (
              CoolTowerPerf_YorkCalc_Coeff_1_27_traits::create (i, f, this));

            if (!this->CoolTowerPerf_YorkCalc_Coeff_1_27_)
            {
              this->CoolTowerPerf_YorkCalc_Coeff_1_27_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_CoolingTower_VariableSpeed* SimFlowPlant_CoolingTower_VariableSpeed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_CoolingTower_VariableSpeed (*this, f, c);
      }

      SimFlowPlant_CoolingTower_VariableSpeed& SimFlowPlant_CoolingTower_VariableSpeed::
      operator= (const SimFlowPlant_CoolingTower_VariableSpeed& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower& > (*this) = x;
          this->SimFlowPlant_WaterInletNodeName_ = x.SimFlowPlant_WaterInletNodeName_;
          this->SimFlowPlant_WaterOutletNodeName_ = x.SimFlowPlant_WaterOutletNodeName_;
          this->SimFlowPlant_DesignWaterFlowRate_ = x.SimFlowPlant_DesignWaterFlowRate_;
          this->SimFlowPlant_SizingFactor_ = x.SimFlowPlant_SizingFactor_;
          this->SimFlowPlant_BasinHeatCap_ = x.SimFlowPlant_BasinHeatCap_;
          this->SimFlowPlant_BasinHeatSetpointTemp_ = x.SimFlowPlant_BasinHeatSetpointTemp_;
          this->SimFlowPlant_BasinHeatOperatSchedName_ = x.SimFlowPlant_BasinHeatOperatSchedName_;
          this->SimFlowPlant_DesignAirFlowRate_ = x.SimFlowPlant_DesignAirFlowRate_;
          this->SimFlowPlant_EvapLossMode_ = x.SimFlowPlant_EvapLossMode_;
          this->SimFlowPlant_EvapLossFactor_ = x.SimFlowPlant_EvapLossFactor_;
          this->SimFlowPlant_DriftLossPercent_ = x.SimFlowPlant_DriftLossPercent_;
          this->SimFlowPlant_BlowdownCalcMode_ = x.SimFlowPlant_BlowdownCalcMode_;
          this->SimFlowPlant_BlowdownConcentrationRatio_ = x.SimFlowPlant_BlowdownConcentrationRatio_;
          this->SimFlowPlant_BlowdownMakeupWaterUsageSchedName_ = x.SimFlowPlant_BlowdownMakeupWaterUsageSchedName_;
          this->SimFlowPlant_SupWaterStoTankName_ = x.SimFlowPlant_SupWaterStoTankName_;
          this->SimFlowPlant_OutdrAirInletNodeName_ = x.SimFlowPlant_OutdrAirInletNodeName_;
          this->SimFlowPlant_NumberOfCells_ = x.SimFlowPlant_NumberOfCells_;
          this->SimFlowPlant_CellControl_ = x.SimFlowPlant_CellControl_;
          this->SimFlowPlant_CellMinWaterFlowRateFraction_ = x.SimFlowPlant_CellMinWaterFlowRateFraction_;
          this->SimFlowPlant_CellMaxWaterFlowRateFraction_ = x.SimFlowPlant_CellMaxWaterFlowRateFraction_;
          this->SimFlowPlant_ModelType_ = x.SimFlowPlant_ModelType_;
          this->SimFlowPlant_ModelCoefName_ = x.SimFlowPlant_ModelCoefName_;
          this->SimFlowPlant_DesignInletAirWetBulbTemp_ = x.SimFlowPlant_DesignInletAirWetBulbTemp_;
          this->SimFlowPlant_DesignAppTemp_ = x.SimFlowPlant_DesignAppTemp_;
          this->SimFlowPlant_DesignRangeTemp_ = x.SimFlowPlant_DesignRangeTemp_;
          this->SimFlowPlant_DesignFanPwr_ = x.SimFlowPlant_DesignFanPwr_;
          this->SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_ = x.SimFlowPlant_FanPwrRatioFuncAirFlowRateRatioCurveName_;
          this->SimFlowPlant_MinAirFlowRateRatio_ = x.SimFlowPlant_MinAirFlowRateRatio_;
          this->SimFlowPlant_FractTowerCapFreeConvRegime_ = x.SimFlowPlant_FractTowerCapFreeConvRegime_;
          this->CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_ = x.CoolTowerPerf_CoolTools_MinInletAirWetBulbTemp_;
          this->CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_ = x.CoolTowerPerf_CoolTools_MaxInletAirWetBulbTemp_;
          this->CoolTowerPerf_CoolTools_MinRangeTemp_ = x.CoolTowerPerf_CoolTools_MinRangeTemp_;
          this->CoolTowerPerf_CoolTools_MaxRangeTemp_ = x.CoolTowerPerf_CoolTools_MaxRangeTemp_;
          this->CoolTowerPerf_CoolTools_MinAppTemp_ = x.CoolTowerPerf_CoolTools_MinAppTemp_;
          this->CoolTowerPerf_CoolTools_MaxAppTemp_ = x.CoolTowerPerf_CoolTools_MaxAppTemp_;
          this->CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_ = x.CoolTowerPerf_CoolTools_MinWaterFlowRateRatio_;
          this->CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_ = x.CoolTowerPerf_CoolTools_MaxWaterFlowRateRatio_;
          this->CoolTowerPerf_CoolTools_Coef_1_35_ = x.CoolTowerPerf_CoolTools_Coef_1_35_;
          this->CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_ = x.CoolTowerPerf_YorkCalc_MaxLiqToGasRatio_;
          this->CoolTowerPerf_YorkCalc_Coeff_1_27_ = x.CoolTowerPerf_YorkCalc_Coeff_1_27_;
        }

        return *this;
      }

      SimFlowPlant_CoolingTower_VariableSpeed::
      ~SimFlowPlant_CoolingTower_VariableSpeed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

