// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_ElectricalGenerator_Photovoltaic.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_Photovoltaic
      // 

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_SurfName_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_SurfName () const
      {
        return this->SimFlowPlant_SurfName_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_SurfName_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_SurfName ()
      {
        return this->SimFlowPlant_SurfName_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_SurfName (const SimFlowPlant_SurfName_type& x)
      {
        this->SimFlowPlant_SurfName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_SurfName (const SimFlowPlant_SurfName_optional& x)
      {
        this->SimFlowPlant_SurfName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_SurfName (::std::auto_ptr< SimFlowPlant_SurfName_type > x)
      {
        this->SimFlowPlant_SurfName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_PhotovoltaicPerfObjType_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_PhotovoltaicPerfObjType () const
      {
        return this->SimFlowPlant_PhotovoltaicPerfObjType_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_PhotovoltaicPerfObjType_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_PhotovoltaicPerfObjType ()
      {
        return this->SimFlowPlant_PhotovoltaicPerfObjType_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_PhotovoltaicPerfObjType (const SimFlowPlant_PhotovoltaicPerfObjType_type& x)
      {
        this->SimFlowPlant_PhotovoltaicPerfObjType_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_PhotovoltaicPerfObjType (const SimFlowPlant_PhotovoltaicPerfObjType_optional& x)
      {
        this->SimFlowPlant_PhotovoltaicPerfObjType_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_PhotovoltaicPerfObjType (::std::auto_ptr< SimFlowPlant_PhotovoltaicPerfObjType_type > x)
      {
        this->SimFlowPlant_PhotovoltaicPerfObjType_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_ModulePerfName_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ModulePerfName () const
      {
        return this->SimFlowPlant_ModulePerfName_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_ModulePerfName_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ModulePerfName ()
      {
        return this->SimFlowPlant_ModulePerfName_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ModulePerfName (const SimFlowPlant_ModulePerfName_type& x)
      {
        this->SimFlowPlant_ModulePerfName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ModulePerfName (const SimFlowPlant_ModulePerfName_optional& x)
      {
        this->SimFlowPlant_ModulePerfName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ModulePerfName (::std::auto_ptr< SimFlowPlant_ModulePerfName_type > x)
      {
        this->SimFlowPlant_ModulePerfName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_HeatTranstegrationMode_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_HeatTranstegrationMode () const
      {
        return this->SimFlowPlant_HeatTranstegrationMode_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_HeatTranstegrationMode_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_HeatTranstegrationMode ()
      {
        return this->SimFlowPlant_HeatTranstegrationMode_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_HeatTranstegrationMode (const SimFlowPlant_HeatTranstegrationMode_type& x)
      {
        this->SimFlowPlant_HeatTranstegrationMode_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_HeatTranstegrationMode (const SimFlowPlant_HeatTranstegrationMode_optional& x)
      {
        this->SimFlowPlant_HeatTranstegrationMode_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_HeatTranstegrationMode (::std::auto_ptr< SimFlowPlant_HeatTranstegrationMode_type > x)
      {
        this->SimFlowPlant_HeatTranstegrationMode_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_NumberofSeriesStringsinParallel_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumberofSeriesStringsinParallel () const
      {
        return this->SimFlowPlant_NumberofSeriesStringsinParallel_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_NumberofSeriesStringsinParallel_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumberofSeriesStringsinParallel ()
      {
        return this->SimFlowPlant_NumberofSeriesStringsinParallel_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumberofSeriesStringsinParallel (const SimFlowPlant_NumberofSeriesStringsinParallel_type& x)
      {
        this->SimFlowPlant_NumberofSeriesStringsinParallel_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumberofSeriesStringsinParallel (const SimFlowPlant_NumberofSeriesStringsinParallel_optional& x)
      {
        this->SimFlowPlant_NumberofSeriesStringsinParallel_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_NumModulesSeries_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumModulesSeries () const
      {
        return this->SimFlowPlant_NumModulesSeries_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::SimFlowPlant_NumModulesSeries_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumModulesSeries ()
      {
        return this->SimFlowPlant_NumModulesSeries_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumModulesSeries (const SimFlowPlant_NumModulesSeries_type& x)
      {
        this->SimFlowPlant_NumModulesSeries_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_NumModulesSeries (const SimFlowPlant_NumModulesSeries_optional& x)
      {
        this->SimFlowPlant_NumModulesSeries_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells () const
      {
        return this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells ()
      {
        return this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells (const PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_type& x)
      {
        this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells (const PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_optional& x)
      {
        this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode () const
      {
        return this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode ()
      {
        return this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode (const PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_type& x)
      {
        this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode (const PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_optional& x)
      {
        this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode (::std::auto_ptr< PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_type > x)
      {
        this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed () const
      {
        return this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed ()
      {
        return this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed (const PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_type& x)
      {
        this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed (const PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_optional& x)
      {
        this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_EfficiencyScheduleName_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_EfficiencyScheduleName () const
      {
        return this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PhotovoltaicPerformance_Simple_EfficiencyScheduleName_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_EfficiencyScheduleName ()
      {
        return this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_EfficiencyScheduleName (const PhotovoltaicPerformance_Simple_EfficiencyScheduleName_type& x)
      {
        this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_EfficiencyScheduleName (const PhotovoltaicPerformance_Simple_EfficiencyScheduleName_optional& x)
      {
        this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PhotovoltaicPerformance_Simple_EfficiencyScheduleName (::std::auto_ptr< PhotovoltaicPerformance_Simple_EfficiencyScheduleName_type > x)
      {
        this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_CellType_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_CellType () const
      {
        return this->PVPerf_EquivOne_Diode_CellType_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_CellType_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_CellType ()
      {
        return this->PVPerf_EquivOne_Diode_CellType_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_CellType (const PVPerf_EquivOne_Diode_CellType_type& x)
      {
        this->PVPerf_EquivOne_Diode_CellType_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_CellType (const PVPerf_EquivOne_Diode_CellType_optional& x)
      {
        this->PVPerf_EquivOne_Diode_CellType_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_CellType (::std::auto_ptr< PVPerf_EquivOne_Diode_CellType_type > x)
      {
        this->PVPerf_EquivOne_Diode_CellType_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NumCellsSeries_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NumCellsSeries () const
      {
        return this->PVPerf_EquivOne_Diode_NumCellsSeries_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NumCellsSeries_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NumCellsSeries ()
      {
        return this->PVPerf_EquivOne_Diode_NumCellsSeries_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NumCellsSeries (const PVPerf_EquivOne_Diode_NumCellsSeries_type& x)
      {
        this->PVPerf_EquivOne_Diode_NumCellsSeries_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NumCellsSeries (const PVPerf_EquivOne_Diode_NumCellsSeries_optional& x)
      {
        this->PVPerf_EquivOne_Diode_NumCellsSeries_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ActiveArea_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ActiveArea () const
      {
        return this->PVPerf_EquivOne_Diode_ActiveArea_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ActiveArea_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ActiveArea ()
      {
        return this->PVPerf_EquivOne_Diode_ActiveArea_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ActiveArea (const PVPerf_EquivOne_Diode_ActiveArea_type& x)
      {
        this->PVPerf_EquivOne_Diode_ActiveArea_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ActiveArea (const PVPerf_EquivOne_Diode_ActiveArea_optional& x)
      {
        this->PVPerf_EquivOne_Diode_ActiveArea_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TransAbsorptanceProduct_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TransAbsorptanceProduct () const
      {
        return this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TransAbsorptanceProduct_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TransAbsorptanceProduct ()
      {
        return this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TransAbsorptanceProduct (const PVPerf_EquivOne_Diode_TransAbsorptanceProduct_type& x)
      {
        this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TransAbsorptanceProduct (const PVPerf_EquivOne_Diode_TransAbsorptanceProduct_optional& x)
      {
        this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_SemiconductorBandgap_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_SemiconductorBandgap () const
      {
        return this->PVPerf_EquivOne_Diode_SemiconductorBandgap_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_SemiconductorBandgap_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_SemiconductorBandgap ()
      {
        return this->PVPerf_EquivOne_Diode_SemiconductorBandgap_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_SemiconductorBandgap (const PVPerf_EquivOne_Diode_SemiconductorBandgap_type& x)
      {
        this->PVPerf_EquivOne_Diode_SemiconductorBandgap_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_SemiconductorBandgap (const PVPerf_EquivOne_Diode_SemiconductorBandgap_optional& x)
      {
        this->PVPerf_EquivOne_Diode_SemiconductorBandgap_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ShuntResist_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShuntResist () const
      {
        return this->PVPerf_EquivOne_Diode_ShuntResist_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ShuntResist_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShuntResist ()
      {
        return this->PVPerf_EquivOne_Diode_ShuntResist_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShuntResist (const PVPerf_EquivOne_Diode_ShuntResist_type& x)
      {
        this->PVPerf_EquivOne_Diode_ShuntResist_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShuntResist (const PVPerf_EquivOne_Diode_ShuntResist_optional& x)
      {
        this->PVPerf_EquivOne_Diode_ShuntResist_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ShortCircuitCurrent_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShortCircuitCurrent () const
      {
        return this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ShortCircuitCurrent_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShortCircuitCurrent ()
      {
        return this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShortCircuitCurrent (const PVPerf_EquivOne_Diode_ShortCircuitCurrent_type& x)
      {
        this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ShortCircuitCurrent (const PVPerf_EquivOne_Diode_ShortCircuitCurrent_optional& x)
      {
        this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_OpenCircuitVolt_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_OpenCircuitVolt () const
      {
        return this->PVPerf_EquivOne_Diode_OpenCircuitVolt_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_OpenCircuitVolt_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_OpenCircuitVolt ()
      {
        return this->PVPerf_EquivOne_Diode_OpenCircuitVolt_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_OpenCircuitVolt (const PVPerf_EquivOne_Diode_OpenCircuitVolt_type& x)
      {
        this->PVPerf_EquivOne_Diode_OpenCircuitVolt_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_OpenCircuitVolt (const PVPerf_EquivOne_Diode_OpenCircuitVolt_optional& x)
      {
        this->PVPerf_EquivOne_Diode_OpenCircuitVolt_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_RefTemp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefTemp () const
      {
        return this->PVPerf_EquivOne_Diode_RefTemp_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_RefTemp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefTemp ()
      {
        return this->PVPerf_EquivOne_Diode_RefTemp_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefTemp (const PVPerf_EquivOne_Diode_RefTemp_type& x)
      {
        this->PVPerf_EquivOne_Diode_RefTemp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefTemp (const PVPerf_EquivOne_Diode_RefTemp_optional& x)
      {
        this->PVPerf_EquivOne_Diode_RefTemp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_RefInsol_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefInsol () const
      {
        return this->PVPerf_EquivOne_Diode_RefInsol_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_RefInsol_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefInsol ()
      {
        return this->PVPerf_EquivOne_Diode_RefInsol_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefInsol (const PVPerf_EquivOne_Diode_RefInsol_type& x)
      {
        this->PVPerf_EquivOne_Diode_RefInsol_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_RefInsol (const PVPerf_EquivOne_Diode_RefInsol_optional& x)
      {
        this->PVPerf_EquivOne_Diode_RefInsol_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr () const
      {
        return this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr ()
      {
        return this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr (const PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_type& x)
      {
        this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr (const PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_optional& x)
      {
        this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr () const
      {
        return this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr ()
      {
        return this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr (const PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_type& x)
      {
        this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr (const PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_optional& x)
      {
        this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent () const
      {
        return this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent ()
      {
        return this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent (const PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_type& x)
      {
        this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent (const PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_optional& x)
      {
        this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt () const
      {
        return this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt ()
      {
        return this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt (const PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_type& x)
      {
        this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt (const PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_optional& x)
      {
        this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp () const
      {
        return this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp ()
      {
        return this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp (const PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_type& x)
      {
        this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp (const PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_optional& x)
      {
        this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp () const
      {
        return this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp ()
      {
        return this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp (const PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_type& x)
      {
        this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp (const PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_optional& x)
      {
        this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol () const
      {
        return this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol ()
      {
        return this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol (const PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_type& x)
      {
        this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol (const PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_optional& x)
      {
        this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ModuleHeatLossCoef_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleHeatLossCoef () const
      {
        return this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_ModuleHeatLossCoef_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleHeatLossCoef ()
      {
        return this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleHeatLossCoef (const PVPerf_EquivOne_Diode_ModuleHeatLossCoef_type& x)
      {
        this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_ModuleHeatLossCoef (const PVPerf_EquivOne_Diode_ModuleHeatLossCoef_optional& x)
      {
        this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TotalHeatCap_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TotalHeatCap () const
      {
        return this->PVPerf_EquivOne_Diode_TotalHeatCap_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_EquivOne_Diode_TotalHeatCap_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TotalHeatCap ()
      {
        return this->PVPerf_EquivOne_Diode_TotalHeatCap_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TotalHeatCap (const PVPerf_EquivOne_Diode_TotalHeatCap_type& x)
      {
        this->PVPerf_EquivOne_Diode_TotalHeatCap_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_EquivOne_Diode_TotalHeatCap (const PVPerf_EquivOne_Diode_TotalHeatCap_optional& x)
      {
        this->PVPerf_EquivOne_Diode_TotalHeatCap_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_NumCellsParallel_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_NumCellsParallel () const
      {
        return this->PVPerf_Sandia_NumCellsParallel_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_NumCellsParallel_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_NumCellsParallel ()
      {
        return this->PVPerf_Sandia_NumCellsParallel_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_NumCellsParallel (const PVPerf_Sandia_NumCellsParallel_type& x)
      {
        this->PVPerf_Sandia_NumCellsParallel_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_NumCellsParallel (const PVPerf_Sandia_NumCellsParallel_optional& x)
      {
        this->PVPerf_Sandia_NumCellsParallel_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_CurrentAtMaxPwrPoint_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_CurrentAtMaxPwrPoint () const
      {
        return this->PVPerf_Sandia_CurrentAtMaxPwrPoint_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_CurrentAtMaxPwrPoint_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_CurrentAtMaxPwrPoint ()
      {
        return this->PVPerf_Sandia_CurrentAtMaxPwrPoint_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_CurrentAtMaxPwrPoint (const PVPerf_Sandia_CurrentAtMaxPwrPoint_type& x)
      {
        this->PVPerf_Sandia_CurrentAtMaxPwrPoint_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_CurrentAtMaxPwrPoint (const PVPerf_Sandia_CurrentAtMaxPwrPoint_optional& x)
      {
        this->PVPerf_Sandia_CurrentAtMaxPwrPoint_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_VoltAtMaxPwrPoint_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_VoltAtMaxPwrPoint () const
      {
        return this->PVPerf_Sandia_VoltAtMaxPwrPoint_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_VoltAtMaxPwrPoint_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_VoltAtMaxPwrPoint ()
      {
        return this->PVPerf_Sandia_VoltAtMaxPwrPoint_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_VoltAtMaxPwrPoint (const PVPerf_Sandia_VoltAtMaxPwrPoint_type& x)
      {
        this->PVPerf_Sandia_VoltAtMaxPwrPoint_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_VoltAtMaxPwrPoint (const PVPerf_Sandia_VoltAtMaxPwrPoint_optional& x)
      {
        this->PVPerf_Sandia_VoltAtMaxPwrPoint_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamAc_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAc () const
      {
        return this->PVPerf_Sandia_SandiaDbParamAc_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamAc_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAc ()
      {
        return this->PVPerf_Sandia_SandiaDbParamAc_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAc (const PVPerf_Sandia_SandiaDbParamAc_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamAc_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAc (const PVPerf_Sandia_SandiaDbParamAc_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamAc_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamAImp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAImp () const
      {
        return this->PVPerf_Sandia_SandiaDbParamAImp_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamAImp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAImp ()
      {
        return this->PVPerf_Sandia_SandiaDbParamAImp_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAImp (const PVPerf_Sandia_SandiaDbParamAImp_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamAImp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamAImp (const PVPerf_Sandia_SandiaDbParamAImp_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamAImp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc0 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc0 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc0 (const PVPerf_Sandia_SandiaDBParamc0_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc0 (const PVPerf_Sandia_SandiaDBParamc0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc0_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc1_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc1 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc1_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc1_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc1 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc1_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc1 (const PVPerf_Sandia_SandiaDBParamc1_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc1_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc1 (const PVPerf_Sandia_SandiaDBParamc1_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc1_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamBVoc0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVoc0 () const
      {
        return this->PVPerf_Sandia_SandiaDbParamBVoc0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamBVoc0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVoc0 ()
      {
        return this->PVPerf_Sandia_SandiaDbParamBVoc0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVoc0 (const PVPerf_Sandia_SandiaDbParamBVoc0_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamBVoc0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVoc0 (const PVPerf_Sandia_SandiaDbParamBVoc0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamBVoc0_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamMBVoc_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVoc () const
      {
        return this->PVPerf_Sandia_SandiaDbParamMBVoc_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamMBVoc_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVoc ()
      {
        return this->PVPerf_Sandia_SandiaDbParamMBVoc_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVoc (const PVPerf_Sandia_SandiaDbParamMBVoc_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamMBVoc_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVoc (const PVPerf_Sandia_SandiaDbParamMBVoc_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamMBVoc_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamBVmp0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVmp0 () const
      {
        return this->PVPerf_Sandia_SandiaDbParamBVmp0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamBVmp0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVmp0 ()
      {
        return this->PVPerf_Sandia_SandiaDbParamBVmp0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVmp0 (const PVPerf_Sandia_SandiaDbParamBVmp0_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamBVmp0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamBVmp0 (const PVPerf_Sandia_SandiaDbParamBVmp0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamBVmp0_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamMBVmp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVmp () const
      {
        return this->PVPerf_Sandia_SandiaDbParamMBVmp_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamMBVmp_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVmp ()
      {
        return this->PVPerf_Sandia_SandiaDbParamMBVmp_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVmp (const PVPerf_Sandia_SandiaDbParamMBVmp_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamMBVmp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamMBVmp (const PVPerf_Sandia_SandiaDbParamMBVmp_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamMBVmp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_DiodeFactor_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_DiodeFactor () const
      {
        return this->PVPerf_Sandia_DiodeFactor_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_DiodeFactor_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_DiodeFactor ()
      {
        return this->PVPerf_Sandia_DiodeFactor_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_DiodeFactor (const PVPerf_Sandia_DiodeFactor_type& x)
      {
        this->PVPerf_Sandia_DiodeFactor_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_DiodeFactor (const PVPerf_Sandia_DiodeFactor_optional& x)
      {
        this->PVPerf_Sandia_DiodeFactor_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc2_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc2 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc2_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc2_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc2 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc2_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc2 (const PVPerf_Sandia_SandiaDBParamc2_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc2_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc2 (const PVPerf_Sandia_SandiaDBParamc2_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc2_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc3_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc3 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc3_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc3_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc3 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc3_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc3 (const PVPerf_Sandia_SandiaDBParamc3_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc3_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc3 (const PVPerf_Sandia_SandiaDBParamc3_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc3_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParama_0_0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_0_0 () const
      {
        return this->PVPerf_Sandia_SandiaDbParama_0_0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParama_0_0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_0_0 ()
      {
        return this->PVPerf_Sandia_SandiaDbParama_0_0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_0_0 (const PVPerf_Sandia_SandiaDbParama_0_0_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParama_0_0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_0_0 (const PVPerf_Sandia_SandiaDbParama_0_0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParama_0_0_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_0_0 (::std::auto_ptr< PVPerf_Sandia_SandiaDbParama_0_0_type > x)
      {
        this->PVPerf_Sandia_SandiaDbParama_0_0_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParama_1_1_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_1_1 () const
      {
        return this->PVPerf_Sandia_SandiaDbParama_1_1_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParama_1_1_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_1_1 ()
      {
        return this->PVPerf_Sandia_SandiaDbParama_1_1_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_1_1 (const PVPerf_Sandia_SandiaDbParama_1_1_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParama_1_1_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_1_1 (const PVPerf_Sandia_SandiaDbParama_1_1_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParama_1_1_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParama_1_1 (::std::auto_ptr< PVPerf_Sandia_SandiaDbParama_1_1_type > x)
      {
        this->PVPerf_Sandia_SandiaDbParama_1_1_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParama2_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama2 () const
      {
        return this->PVPerf_Sandia_SandiaDBParama2_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParama2_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama2 ()
      {
        return this->PVPerf_Sandia_SandiaDBParama2_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama2 (const PVPerf_Sandia_SandiaDBParama2_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParama2_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama2 (const PVPerf_Sandia_SandiaDBParama2_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParama2_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParama3_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama3 () const
      {
        return this->PVPerf_Sandia_SandiaDBParama3_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParama3_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama3 ()
      {
        return this->PVPerf_Sandia_SandiaDBParama3_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama3 (const PVPerf_Sandia_SandiaDBParama3_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParama3_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama3 (const PVPerf_Sandia_SandiaDBParama3_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParama3_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParama4_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama4 () const
      {
        return this->PVPerf_Sandia_SandiaDBParama4_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParama4_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama4 ()
      {
        return this->PVPerf_Sandia_SandiaDBParama4_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama4 (const PVPerf_Sandia_SandiaDBParama4_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParama4_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParama4 (const PVPerf_Sandia_SandiaDBParama4_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParama4_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamb_0_0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_0_0 () const
      {
        return this->PVPerf_Sandia_SandiaDbParamb_0_0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamb_0_0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_0_0 ()
      {
        return this->PVPerf_Sandia_SandiaDbParamb_0_0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_0_0 (const PVPerf_Sandia_SandiaDbParamb_0_0_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamb_0_0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_0_0 (const PVPerf_Sandia_SandiaDbParamb_0_0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamb_0_0_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_0_0 (::std::auto_ptr< PVPerf_Sandia_SandiaDbParamb_0_0_type > x)
      {
        this->PVPerf_Sandia_SandiaDbParamb_0_0_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamb_1_1_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_1_1 () const
      {
        return this->PVPerf_Sandia_SandiaDbParamb_1_1_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamb_1_1_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_1_1 ()
      {
        return this->PVPerf_Sandia_SandiaDbParamb_1_1_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_1_1 (const PVPerf_Sandia_SandiaDbParamb_1_1_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamb_1_1_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_1_1 (const PVPerf_Sandia_SandiaDbParamb_1_1_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamb_1_1_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamb_1_1 (::std::auto_ptr< PVPerf_Sandia_SandiaDbParamb_1_1_type > x)
      {
        this->PVPerf_Sandia_SandiaDbParamb_1_1_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb2_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb2 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamb2_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb2_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb2 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamb2_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb2 (const PVPerf_Sandia_SandiaDBParamb2_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb2_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb2 (const PVPerf_Sandia_SandiaDBParamb2_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb2_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb3_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb3 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamb3_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb3_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb3 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamb3_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb3 (const PVPerf_Sandia_SandiaDBParamb3_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb3_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb3 (const PVPerf_Sandia_SandiaDBParamb3_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb3_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb4_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb4 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamb4_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb4_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb4 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamb4_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb4 (const PVPerf_Sandia_SandiaDBParamb4_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb4_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb4 (const PVPerf_Sandia_SandiaDBParamb4_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb4_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb5_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb5 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamb5_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamb5_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb5 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamb5_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb5 (const PVPerf_Sandia_SandiaDBParamb5_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb5_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamb5 (const PVPerf_Sandia_SandiaDBParamb5_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamb5_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamDeltaTc_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamDeltaTc () const
      {
        return this->PVPerf_Sandia_SandiaDbParamDeltaTc_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamDeltaTc_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamDeltaTc ()
      {
        return this->PVPerf_Sandia_SandiaDbParamDeltaTc_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamDeltaTc (const PVPerf_Sandia_SandiaDbParamDeltaTc_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamDeltaTc_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamDeltaTc (const PVPerf_Sandia_SandiaDbParamDeltaTc_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamDeltaTc_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamFd_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamFd () const
      {
        return this->PVPerf_Sandia_SandiaDbParamFd_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamFd_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamFd ()
      {
        return this->PVPerf_Sandia_SandiaDbParamFd_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamFd (const PVPerf_Sandia_SandiaDbParamFd_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamFd_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamFd (const PVPerf_Sandia_SandiaDbParamFd_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamFd_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamA_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamA () const
      {
        return this->PVPerf_Sandia_SandiaDbParamA_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamA_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamA ()
      {
        return this->PVPerf_Sandia_SandiaDbParamA_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamA (const PVPerf_Sandia_SandiaDbParamA_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamA_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamA (const PVPerf_Sandia_SandiaDbParamA_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamA_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamB_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamB () const
      {
        return this->PVPerf_Sandia_SandiaDbParamB_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamB_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamB ()
      {
        return this->PVPerf_Sandia_SandiaDbParamB_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamB (const PVPerf_Sandia_SandiaDbParamB_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamB_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamB (const PVPerf_Sandia_SandiaDbParamB_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamB_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc4_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc4 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc4_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc4_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc4 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc4_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc4 (const PVPerf_Sandia_SandiaDBParamc4_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc4_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc4 (const PVPerf_Sandia_SandiaDBParamc4_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc4_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc5_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc5 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc5_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc5_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc5 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc5_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc5 (const PVPerf_Sandia_SandiaDBParamc5_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc5_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc5 (const PVPerf_Sandia_SandiaDBParamc5_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc5_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamIx0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIx0 () const
      {
        return this->PVPerf_Sandia_SandiaDbParamIx0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamIx0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIx0 ()
      {
        return this->PVPerf_Sandia_SandiaDbParamIx0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIx0 (const PVPerf_Sandia_SandiaDbParamIx0_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamIx0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIx0 (const PVPerf_Sandia_SandiaDbParamIx0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamIx0_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamIxx0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIxx0 () const
      {
        return this->PVPerf_Sandia_SandiaDbParamIxx0_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDbParamIxx0_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIxx0 ()
      {
        return this->PVPerf_Sandia_SandiaDbParamIxx0_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIxx0 (const PVPerf_Sandia_SandiaDbParamIxx0_type& x)
      {
        this->PVPerf_Sandia_SandiaDbParamIxx0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDbParamIxx0 (const PVPerf_Sandia_SandiaDbParamIxx0_optional& x)
      {
        this->PVPerf_Sandia_SandiaDbParamIxx0_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc6_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc6 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc6_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc6_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc6 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc6_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc6 (const PVPerf_Sandia_SandiaDBParamc6_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc6_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc6 (const PVPerf_Sandia_SandiaDBParamc6_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc6_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc7_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc7 () const
      {
        return this->PVPerf_Sandia_SandiaDBParamc7_;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::PVPerf_Sandia_SandiaDBParamc7_optional& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc7 ()
      {
        return this->PVPerf_Sandia_SandiaDBParamc7_;
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc7 (const PVPerf_Sandia_SandiaDBParamc7_type& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc7_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      PVPerf_Sandia_SandiaDBParamc7 (const PVPerf_Sandia_SandiaDBParamc7_optional& x)
      {
        this->PVPerf_Sandia_SandiaDBParamc7_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_Photovoltaic
      //

      SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ElectricalGenerator_Photovoltaic (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (RefId),
        SimFlowPlant_SurfName_ (this),
        SimFlowPlant_PhotovoltaicPerfObjType_ (this),
        SimFlowPlant_ModulePerfName_ (this),
        SimFlowPlant_HeatTranstegrationMode_ (this),
        SimFlowPlant_NumberofSeriesStringsinParallel_ (this),
        SimFlowPlant_NumModulesSeries_ (this),
        PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_ (this),
        PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_ (this),
        PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_ (this),
        PhotovoltaicPerformance_Simple_EfficiencyScheduleName_ (this),
        PVPerf_EquivOne_Diode_CellType_ (this),
        PVPerf_EquivOne_Diode_NumCellsSeries_ (this),
        PVPerf_EquivOne_Diode_ActiveArea_ (this),
        PVPerf_EquivOne_Diode_TransAbsorptanceProduct_ (this),
        PVPerf_EquivOne_Diode_SemiconductorBandgap_ (this),
        PVPerf_EquivOne_Diode_ShuntResist_ (this),
        PVPerf_EquivOne_Diode_ShortCircuitCurrent_ (this),
        PVPerf_EquivOne_Diode_OpenCircuitVolt_ (this),
        PVPerf_EquivOne_Diode_RefTemp_ (this),
        PVPerf_EquivOne_Diode_RefInsol_ (this),
        PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_ (this),
        PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_ (this),
        PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_ (this),
        PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_ (this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_ (this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_ (this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_ (this),
        PVPerf_EquivOne_Diode_ModuleHeatLossCoef_ (this),
        PVPerf_EquivOne_Diode_TotalHeatCap_ (this),
        PVPerf_Sandia_NumCellsParallel_ (this),
        PVPerf_Sandia_CurrentAtMaxPwrPoint_ (this),
        PVPerf_Sandia_VoltAtMaxPwrPoint_ (this),
        PVPerf_Sandia_SandiaDbParamAc_ (this),
        PVPerf_Sandia_SandiaDbParamAImp_ (this),
        PVPerf_Sandia_SandiaDBParamc0_ (this),
        PVPerf_Sandia_SandiaDBParamc1_ (this),
        PVPerf_Sandia_SandiaDbParamBVoc0_ (this),
        PVPerf_Sandia_SandiaDbParamMBVoc_ (this),
        PVPerf_Sandia_SandiaDbParamBVmp0_ (this),
        PVPerf_Sandia_SandiaDbParamMBVmp_ (this),
        PVPerf_Sandia_DiodeFactor_ (this),
        PVPerf_Sandia_SandiaDBParamc2_ (this),
        PVPerf_Sandia_SandiaDBParamc3_ (this),
        PVPerf_Sandia_SandiaDbParama_0_0_ (this),
        PVPerf_Sandia_SandiaDbParama_1_1_ (this),
        PVPerf_Sandia_SandiaDBParama2_ (this),
        PVPerf_Sandia_SandiaDBParama3_ (this),
        PVPerf_Sandia_SandiaDBParama4_ (this),
        PVPerf_Sandia_SandiaDbParamb_0_0_ (this),
        PVPerf_Sandia_SandiaDbParamb_1_1_ (this),
        PVPerf_Sandia_SandiaDBParamb2_ (this),
        PVPerf_Sandia_SandiaDBParamb3_ (this),
        PVPerf_Sandia_SandiaDBParamb4_ (this),
        PVPerf_Sandia_SandiaDBParamb5_ (this),
        PVPerf_Sandia_SandiaDbParamDeltaTc_ (this),
        PVPerf_Sandia_SandiaDbParamFd_ (this),
        PVPerf_Sandia_SandiaDbParamA_ (this),
        PVPerf_Sandia_SandiaDbParamB_ (this),
        PVPerf_Sandia_SandiaDBParamc4_ (this),
        PVPerf_Sandia_SandiaDBParamc5_ (this),
        PVPerf_Sandia_SandiaDbParamIx0_ (this),
        PVPerf_Sandia_SandiaDbParamIxx0_ (this),
        PVPerf_Sandia_SandiaDBParamc6_ (this),
        PVPerf_Sandia_SandiaDBParamc7_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ElectricalGenerator_Photovoltaic (const SimFlowPlant_ElectricalGenerator_Photovoltaic& x,
                                                     ::xml_schema::flags f,
                                                     ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (x, f, c),
        SimFlowPlant_SurfName_ (x.SimFlowPlant_SurfName_, f, this),
        SimFlowPlant_PhotovoltaicPerfObjType_ (x.SimFlowPlant_PhotovoltaicPerfObjType_, f, this),
        SimFlowPlant_ModulePerfName_ (x.SimFlowPlant_ModulePerfName_, f, this),
        SimFlowPlant_HeatTranstegrationMode_ (x.SimFlowPlant_HeatTranstegrationMode_, f, this),
        SimFlowPlant_NumberofSeriesStringsinParallel_ (x.SimFlowPlant_NumberofSeriesStringsinParallel_, f, this),
        SimFlowPlant_NumModulesSeries_ (x.SimFlowPlant_NumModulesSeries_, f, this),
        PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_ (x.PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_, f, this),
        PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_ (x.PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_, f, this),
        PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_ (x.PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_, f, this),
        PhotovoltaicPerformance_Simple_EfficiencyScheduleName_ (x.PhotovoltaicPerformance_Simple_EfficiencyScheduleName_, f, this),
        PVPerf_EquivOne_Diode_CellType_ (x.PVPerf_EquivOne_Diode_CellType_, f, this),
        PVPerf_EquivOne_Diode_NumCellsSeries_ (x.PVPerf_EquivOne_Diode_NumCellsSeries_, f, this),
        PVPerf_EquivOne_Diode_ActiveArea_ (x.PVPerf_EquivOne_Diode_ActiveArea_, f, this),
        PVPerf_EquivOne_Diode_TransAbsorptanceProduct_ (x.PVPerf_EquivOne_Diode_TransAbsorptanceProduct_, f, this),
        PVPerf_EquivOne_Diode_SemiconductorBandgap_ (x.PVPerf_EquivOne_Diode_SemiconductorBandgap_, f, this),
        PVPerf_EquivOne_Diode_ShuntResist_ (x.PVPerf_EquivOne_Diode_ShuntResist_, f, this),
        PVPerf_EquivOne_Diode_ShortCircuitCurrent_ (x.PVPerf_EquivOne_Diode_ShortCircuitCurrent_, f, this),
        PVPerf_EquivOne_Diode_OpenCircuitVolt_ (x.PVPerf_EquivOne_Diode_OpenCircuitVolt_, f, this),
        PVPerf_EquivOne_Diode_RefTemp_ (x.PVPerf_EquivOne_Diode_RefTemp_, f, this),
        PVPerf_EquivOne_Diode_RefInsol_ (x.PVPerf_EquivOne_Diode_RefInsol_, f, this),
        PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_ (x.PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_, f, this),
        PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_ (x.PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_, f, this),
        PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_ (x.PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_, f, this),
        PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_ (x.PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_, f, this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_ (x.PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_, f, this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_ (x.PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_, f, this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_ (x.PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_, f, this),
        PVPerf_EquivOne_Diode_ModuleHeatLossCoef_ (x.PVPerf_EquivOne_Diode_ModuleHeatLossCoef_, f, this),
        PVPerf_EquivOne_Diode_TotalHeatCap_ (x.PVPerf_EquivOne_Diode_TotalHeatCap_, f, this),
        PVPerf_Sandia_NumCellsParallel_ (x.PVPerf_Sandia_NumCellsParallel_, f, this),
        PVPerf_Sandia_CurrentAtMaxPwrPoint_ (x.PVPerf_Sandia_CurrentAtMaxPwrPoint_, f, this),
        PVPerf_Sandia_VoltAtMaxPwrPoint_ (x.PVPerf_Sandia_VoltAtMaxPwrPoint_, f, this),
        PVPerf_Sandia_SandiaDbParamAc_ (x.PVPerf_Sandia_SandiaDbParamAc_, f, this),
        PVPerf_Sandia_SandiaDbParamAImp_ (x.PVPerf_Sandia_SandiaDbParamAImp_, f, this),
        PVPerf_Sandia_SandiaDBParamc0_ (x.PVPerf_Sandia_SandiaDBParamc0_, f, this),
        PVPerf_Sandia_SandiaDBParamc1_ (x.PVPerf_Sandia_SandiaDBParamc1_, f, this),
        PVPerf_Sandia_SandiaDbParamBVoc0_ (x.PVPerf_Sandia_SandiaDbParamBVoc0_, f, this),
        PVPerf_Sandia_SandiaDbParamMBVoc_ (x.PVPerf_Sandia_SandiaDbParamMBVoc_, f, this),
        PVPerf_Sandia_SandiaDbParamBVmp0_ (x.PVPerf_Sandia_SandiaDbParamBVmp0_, f, this),
        PVPerf_Sandia_SandiaDbParamMBVmp_ (x.PVPerf_Sandia_SandiaDbParamMBVmp_, f, this),
        PVPerf_Sandia_DiodeFactor_ (x.PVPerf_Sandia_DiodeFactor_, f, this),
        PVPerf_Sandia_SandiaDBParamc2_ (x.PVPerf_Sandia_SandiaDBParamc2_, f, this),
        PVPerf_Sandia_SandiaDBParamc3_ (x.PVPerf_Sandia_SandiaDBParamc3_, f, this),
        PVPerf_Sandia_SandiaDbParama_0_0_ (x.PVPerf_Sandia_SandiaDbParama_0_0_, f, this),
        PVPerf_Sandia_SandiaDbParama_1_1_ (x.PVPerf_Sandia_SandiaDbParama_1_1_, f, this),
        PVPerf_Sandia_SandiaDBParama2_ (x.PVPerf_Sandia_SandiaDBParama2_, f, this),
        PVPerf_Sandia_SandiaDBParama3_ (x.PVPerf_Sandia_SandiaDBParama3_, f, this),
        PVPerf_Sandia_SandiaDBParama4_ (x.PVPerf_Sandia_SandiaDBParama4_, f, this),
        PVPerf_Sandia_SandiaDbParamb_0_0_ (x.PVPerf_Sandia_SandiaDbParamb_0_0_, f, this),
        PVPerf_Sandia_SandiaDbParamb_1_1_ (x.PVPerf_Sandia_SandiaDbParamb_1_1_, f, this),
        PVPerf_Sandia_SandiaDBParamb2_ (x.PVPerf_Sandia_SandiaDBParamb2_, f, this),
        PVPerf_Sandia_SandiaDBParamb3_ (x.PVPerf_Sandia_SandiaDBParamb3_, f, this),
        PVPerf_Sandia_SandiaDBParamb4_ (x.PVPerf_Sandia_SandiaDBParamb4_, f, this),
        PVPerf_Sandia_SandiaDBParamb5_ (x.PVPerf_Sandia_SandiaDBParamb5_, f, this),
        PVPerf_Sandia_SandiaDbParamDeltaTc_ (x.PVPerf_Sandia_SandiaDbParamDeltaTc_, f, this),
        PVPerf_Sandia_SandiaDbParamFd_ (x.PVPerf_Sandia_SandiaDbParamFd_, f, this),
        PVPerf_Sandia_SandiaDbParamA_ (x.PVPerf_Sandia_SandiaDbParamA_, f, this),
        PVPerf_Sandia_SandiaDbParamB_ (x.PVPerf_Sandia_SandiaDbParamB_, f, this),
        PVPerf_Sandia_SandiaDBParamc4_ (x.PVPerf_Sandia_SandiaDBParamc4_, f, this),
        PVPerf_Sandia_SandiaDBParamc5_ (x.PVPerf_Sandia_SandiaDBParamc5_, f, this),
        PVPerf_Sandia_SandiaDbParamIx0_ (x.PVPerf_Sandia_SandiaDbParamIx0_, f, this),
        PVPerf_Sandia_SandiaDbParamIxx0_ (x.PVPerf_Sandia_SandiaDbParamIxx0_, f, this),
        PVPerf_Sandia_SandiaDBParamc6_ (x.PVPerf_Sandia_SandiaDBParamc6_, f, this),
        PVPerf_Sandia_SandiaDBParamc7_ (x.PVPerf_Sandia_SandiaDBParamc7_, f, this)
      {
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::
      SimFlowPlant_ElectricalGenerator_Photovoltaic (const ::xercesc::DOMElement& e,
                                                     ::xml_schema::flags f,
                                                     ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_SurfName_ (this),
        SimFlowPlant_PhotovoltaicPerfObjType_ (this),
        SimFlowPlant_ModulePerfName_ (this),
        SimFlowPlant_HeatTranstegrationMode_ (this),
        SimFlowPlant_NumberofSeriesStringsinParallel_ (this),
        SimFlowPlant_NumModulesSeries_ (this),
        PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_ (this),
        PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_ (this),
        PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_ (this),
        PhotovoltaicPerformance_Simple_EfficiencyScheduleName_ (this),
        PVPerf_EquivOne_Diode_CellType_ (this),
        PVPerf_EquivOne_Diode_NumCellsSeries_ (this),
        PVPerf_EquivOne_Diode_ActiveArea_ (this),
        PVPerf_EquivOne_Diode_TransAbsorptanceProduct_ (this),
        PVPerf_EquivOne_Diode_SemiconductorBandgap_ (this),
        PVPerf_EquivOne_Diode_ShuntResist_ (this),
        PVPerf_EquivOne_Diode_ShortCircuitCurrent_ (this),
        PVPerf_EquivOne_Diode_OpenCircuitVolt_ (this),
        PVPerf_EquivOne_Diode_RefTemp_ (this),
        PVPerf_EquivOne_Diode_RefInsol_ (this),
        PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_ (this),
        PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_ (this),
        PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_ (this),
        PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_ (this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_ (this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_ (this),
        PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_ (this),
        PVPerf_EquivOne_Diode_ModuleHeatLossCoef_ (this),
        PVPerf_EquivOne_Diode_TotalHeatCap_ (this),
        PVPerf_Sandia_NumCellsParallel_ (this),
        PVPerf_Sandia_CurrentAtMaxPwrPoint_ (this),
        PVPerf_Sandia_VoltAtMaxPwrPoint_ (this),
        PVPerf_Sandia_SandiaDbParamAc_ (this),
        PVPerf_Sandia_SandiaDbParamAImp_ (this),
        PVPerf_Sandia_SandiaDBParamc0_ (this),
        PVPerf_Sandia_SandiaDBParamc1_ (this),
        PVPerf_Sandia_SandiaDbParamBVoc0_ (this),
        PVPerf_Sandia_SandiaDbParamMBVoc_ (this),
        PVPerf_Sandia_SandiaDbParamBVmp0_ (this),
        PVPerf_Sandia_SandiaDbParamMBVmp_ (this),
        PVPerf_Sandia_DiodeFactor_ (this),
        PVPerf_Sandia_SandiaDBParamc2_ (this),
        PVPerf_Sandia_SandiaDBParamc3_ (this),
        PVPerf_Sandia_SandiaDbParama_0_0_ (this),
        PVPerf_Sandia_SandiaDbParama_1_1_ (this),
        PVPerf_Sandia_SandiaDBParama2_ (this),
        PVPerf_Sandia_SandiaDBParama3_ (this),
        PVPerf_Sandia_SandiaDBParama4_ (this),
        PVPerf_Sandia_SandiaDbParamb_0_0_ (this),
        PVPerf_Sandia_SandiaDbParamb_1_1_ (this),
        PVPerf_Sandia_SandiaDBParamb2_ (this),
        PVPerf_Sandia_SandiaDBParamb3_ (this),
        PVPerf_Sandia_SandiaDBParamb4_ (this),
        PVPerf_Sandia_SandiaDBParamb5_ (this),
        PVPerf_Sandia_SandiaDbParamDeltaTc_ (this),
        PVPerf_Sandia_SandiaDbParamFd_ (this),
        PVPerf_Sandia_SandiaDbParamA_ (this),
        PVPerf_Sandia_SandiaDbParamB_ (this),
        PVPerf_Sandia_SandiaDBParamc4_ (this),
        PVPerf_Sandia_SandiaDBParamc5_ (this),
        PVPerf_Sandia_SandiaDbParamIx0_ (this),
        PVPerf_Sandia_SandiaDbParamIxx0_ (this),
        PVPerf_Sandia_SandiaDBParamc6_ (this),
        PVPerf_Sandia_SandiaDBParamc7_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_ElectricalGenerator_Photovoltaic::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_SurfName
          //
          if (n.name () == "SimFlowPlant_SurfName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_SurfName_type > r (
              SimFlowPlant_SurfName_traits::create (i, f, this));

            if (!this->SimFlowPlant_SurfName_)
            {
              this->SimFlowPlant_SurfName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_PhotovoltaicPerfObjType
          //
          if (n.name () == "SimFlowPlant_PhotovoltaicPerfObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_PhotovoltaicPerfObjType_type > r (
              SimFlowPlant_PhotovoltaicPerfObjType_traits::create (i, f, this));

            if (!this->SimFlowPlant_PhotovoltaicPerfObjType_)
            {
              this->SimFlowPlant_PhotovoltaicPerfObjType_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ModulePerfName
          //
          if (n.name () == "SimFlowPlant_ModulePerfName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ModulePerfName_type > r (
              SimFlowPlant_ModulePerfName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ModulePerfName_)
            {
              this->SimFlowPlant_ModulePerfName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatTranstegrationMode
          //
          if (n.name () == "SimFlowPlant_HeatTranstegrationMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatTranstegrationMode_type > r (
              SimFlowPlant_HeatTranstegrationMode_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatTranstegrationMode_)
            {
              this->SimFlowPlant_HeatTranstegrationMode_.set (r);
              continue;
            }
          }

          // SimFlowPlant_NumberofSeriesStringsinParallel
          //
          if (n.name () == "SimFlowPlant_NumberofSeriesStringsinParallel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_NumberofSeriesStringsinParallel_)
            {
              this->SimFlowPlant_NumberofSeriesStringsinParallel_.set (SimFlowPlant_NumberofSeriesStringsinParallel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_NumModulesSeries
          //
          if (n.name () == "SimFlowPlant_NumModulesSeries" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_NumModulesSeries_)
            {
              this->SimFlowPlant_NumModulesSeries_.set (SimFlowPlant_NumModulesSeries_traits::create (i, f, this));
              continue;
            }
          }

          // PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells
          //
          if (n.name () == "PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_)
            {
              this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_.set (PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_traits::create (i, f, this));
              continue;
            }
          }

          // PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode
          //
          if (n.name () == "PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_type > r (
              PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_traits::create (i, f, this));

            if (!this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_)
            {
              this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_.set (r);
              continue;
            }
          }

          // PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed
          //
          if (n.name () == "PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_)
            {
              this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_.set (PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_traits::create (i, f, this));
              continue;
            }
          }

          // PhotovoltaicPerformance_Simple_EfficiencyScheduleName
          //
          if (n.name () == "PhotovoltaicPerformance_Simple_EfficiencyScheduleName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PhotovoltaicPerformance_Simple_EfficiencyScheduleName_type > r (
              PhotovoltaicPerformance_Simple_EfficiencyScheduleName_traits::create (i, f, this));

            if (!this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_)
            {
              this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_.set (r);
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_CellType
          //
          if (n.name () == "PVPerf_EquivOne_Diode_CellType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PVPerf_EquivOne_Diode_CellType_type > r (
              PVPerf_EquivOne_Diode_CellType_traits::create (i, f, this));

            if (!this->PVPerf_EquivOne_Diode_CellType_)
            {
              this->PVPerf_EquivOne_Diode_CellType_.set (r);
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_NumCellsSeries
          //
          if (n.name () == "PVPerf_EquivOne_Diode_NumCellsSeries" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_NumCellsSeries_)
            {
              this->PVPerf_EquivOne_Diode_NumCellsSeries_.set (PVPerf_EquivOne_Diode_NumCellsSeries_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_ActiveArea
          //
          if (n.name () == "PVPerf_EquivOne_Diode_ActiveArea" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_ActiveArea_)
            {
              this->PVPerf_EquivOne_Diode_ActiveArea_.set (PVPerf_EquivOne_Diode_ActiveArea_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_TransAbsorptanceProduct
          //
          if (n.name () == "PVPerf_EquivOne_Diode_TransAbsorptanceProduct" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_)
            {
              this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_.set (PVPerf_EquivOne_Diode_TransAbsorptanceProduct_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_SemiconductorBandgap
          //
          if (n.name () == "PVPerf_EquivOne_Diode_SemiconductorBandgap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_SemiconductorBandgap_)
            {
              this->PVPerf_EquivOne_Diode_SemiconductorBandgap_.set (PVPerf_EquivOne_Diode_SemiconductorBandgap_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_ShuntResist
          //
          if (n.name () == "PVPerf_EquivOne_Diode_ShuntResist" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_ShuntResist_)
            {
              this->PVPerf_EquivOne_Diode_ShuntResist_.set (PVPerf_EquivOne_Diode_ShuntResist_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_ShortCircuitCurrent
          //
          if (n.name () == "PVPerf_EquivOne_Diode_ShortCircuitCurrent" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_)
            {
              this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_.set (PVPerf_EquivOne_Diode_ShortCircuitCurrent_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_OpenCircuitVolt
          //
          if (n.name () == "PVPerf_EquivOne_Diode_OpenCircuitVolt" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_OpenCircuitVolt_)
            {
              this->PVPerf_EquivOne_Diode_OpenCircuitVolt_.set (PVPerf_EquivOne_Diode_OpenCircuitVolt_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_RefTemp
          //
          if (n.name () == "PVPerf_EquivOne_Diode_RefTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_RefTemp_)
            {
              this->PVPerf_EquivOne_Diode_RefTemp_.set (PVPerf_EquivOne_Diode_RefTemp_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_RefInsol
          //
          if (n.name () == "PVPerf_EquivOne_Diode_RefInsol" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_RefInsol_)
            {
              this->PVPerf_EquivOne_Diode_RefInsol_.set (PVPerf_EquivOne_Diode_RefInsol_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr
          //
          if (n.name () == "PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_)
            {
              this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_.set (PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr
          //
          if (n.name () == "PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_)
            {
              this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_.set (PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent
          //
          if (n.name () == "PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_)
            {
              this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_.set (PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt
          //
          if (n.name () == "PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_)
            {
              this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_.set (PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp
          //
          if (n.name () == "PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_)
            {
              this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_.set (PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp
          //
          if (n.name () == "PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_)
            {
              this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_.set (PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol
          //
          if (n.name () == "PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_)
            {
              this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_.set (PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_ModuleHeatLossCoef
          //
          if (n.name () == "PVPerf_EquivOne_Diode_ModuleHeatLossCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_)
            {
              this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_.set (PVPerf_EquivOne_Diode_ModuleHeatLossCoef_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_EquivOne_Diode_TotalHeatCap
          //
          if (n.name () == "PVPerf_EquivOne_Diode_TotalHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_EquivOne_Diode_TotalHeatCap_)
            {
              this->PVPerf_EquivOne_Diode_TotalHeatCap_.set (PVPerf_EquivOne_Diode_TotalHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_NumCellsParallel
          //
          if (n.name () == "PVPerf_Sandia_NumCellsParallel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_NumCellsParallel_)
            {
              this->PVPerf_Sandia_NumCellsParallel_.set (PVPerf_Sandia_NumCellsParallel_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_CurrentAtMaxPwrPoint
          //
          if (n.name () == "PVPerf_Sandia_CurrentAtMaxPwrPoint" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_CurrentAtMaxPwrPoint_)
            {
              this->PVPerf_Sandia_CurrentAtMaxPwrPoint_.set (PVPerf_Sandia_CurrentAtMaxPwrPoint_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_VoltAtMaxPwrPoint
          //
          if (n.name () == "PVPerf_Sandia_VoltAtMaxPwrPoint" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_VoltAtMaxPwrPoint_)
            {
              this->PVPerf_Sandia_VoltAtMaxPwrPoint_.set (PVPerf_Sandia_VoltAtMaxPwrPoint_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamAc
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamAc" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamAc_)
            {
              this->PVPerf_Sandia_SandiaDbParamAc_.set (PVPerf_Sandia_SandiaDbParamAc_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamAImp
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamAImp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamAImp_)
            {
              this->PVPerf_Sandia_SandiaDbParamAImp_.set (PVPerf_Sandia_SandiaDbParamAImp_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc0_)
            {
              this->PVPerf_Sandia_SandiaDBParamc0_.set (PVPerf_Sandia_SandiaDBParamc0_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc1
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc1_)
            {
              this->PVPerf_Sandia_SandiaDBParamc1_.set (PVPerf_Sandia_SandiaDBParamc1_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamBVoc0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamBVoc0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamBVoc0_)
            {
              this->PVPerf_Sandia_SandiaDbParamBVoc0_.set (PVPerf_Sandia_SandiaDbParamBVoc0_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamMBVoc
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamMBVoc" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamMBVoc_)
            {
              this->PVPerf_Sandia_SandiaDbParamMBVoc_.set (PVPerf_Sandia_SandiaDbParamMBVoc_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamBVmp0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamBVmp0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamBVmp0_)
            {
              this->PVPerf_Sandia_SandiaDbParamBVmp0_.set (PVPerf_Sandia_SandiaDbParamBVmp0_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamMBVmp
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamMBVmp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamMBVmp_)
            {
              this->PVPerf_Sandia_SandiaDbParamMBVmp_.set (PVPerf_Sandia_SandiaDbParamMBVmp_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_DiodeFactor
          //
          if (n.name () == "PVPerf_Sandia_DiodeFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_DiodeFactor_)
            {
              this->PVPerf_Sandia_DiodeFactor_.set (PVPerf_Sandia_DiodeFactor_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc2
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc2_)
            {
              this->PVPerf_Sandia_SandiaDBParamc2_.set (PVPerf_Sandia_SandiaDBParamc2_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc3
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc3" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc3_)
            {
              this->PVPerf_Sandia_SandiaDBParamc3_.set (PVPerf_Sandia_SandiaDBParamc3_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParama_0_0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParama_0_0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PVPerf_Sandia_SandiaDbParama_0_0_type > r (
              PVPerf_Sandia_SandiaDbParama_0_0_traits::create (i, f, this));

            if (!this->PVPerf_Sandia_SandiaDbParama_0_0_)
            {
              this->PVPerf_Sandia_SandiaDbParama_0_0_.set (r);
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParama_1_1
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParama_1_1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PVPerf_Sandia_SandiaDbParama_1_1_type > r (
              PVPerf_Sandia_SandiaDbParama_1_1_traits::create (i, f, this));

            if (!this->PVPerf_Sandia_SandiaDbParama_1_1_)
            {
              this->PVPerf_Sandia_SandiaDbParama_1_1_.set (r);
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParama2
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParama2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParama2_)
            {
              this->PVPerf_Sandia_SandiaDBParama2_.set (PVPerf_Sandia_SandiaDBParama2_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParama3
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParama3" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParama3_)
            {
              this->PVPerf_Sandia_SandiaDBParama3_.set (PVPerf_Sandia_SandiaDBParama3_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParama4
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParama4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParama4_)
            {
              this->PVPerf_Sandia_SandiaDBParama4_.set (PVPerf_Sandia_SandiaDBParama4_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamb_0_0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamb_0_0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PVPerf_Sandia_SandiaDbParamb_0_0_type > r (
              PVPerf_Sandia_SandiaDbParamb_0_0_traits::create (i, f, this));

            if (!this->PVPerf_Sandia_SandiaDbParamb_0_0_)
            {
              this->PVPerf_Sandia_SandiaDbParamb_0_0_.set (r);
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamb_1_1
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamb_1_1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< PVPerf_Sandia_SandiaDbParamb_1_1_type > r (
              PVPerf_Sandia_SandiaDbParamb_1_1_traits::create (i, f, this));

            if (!this->PVPerf_Sandia_SandiaDbParamb_1_1_)
            {
              this->PVPerf_Sandia_SandiaDbParamb_1_1_.set (r);
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamb2
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamb2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamb2_)
            {
              this->PVPerf_Sandia_SandiaDBParamb2_.set (PVPerf_Sandia_SandiaDBParamb2_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamb3
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamb3" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamb3_)
            {
              this->PVPerf_Sandia_SandiaDBParamb3_.set (PVPerf_Sandia_SandiaDBParamb3_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamb4
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamb4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamb4_)
            {
              this->PVPerf_Sandia_SandiaDBParamb4_.set (PVPerf_Sandia_SandiaDBParamb4_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamb5
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamb5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamb5_)
            {
              this->PVPerf_Sandia_SandiaDBParamb5_.set (PVPerf_Sandia_SandiaDBParamb5_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamDeltaTc
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamDeltaTc" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamDeltaTc_)
            {
              this->PVPerf_Sandia_SandiaDbParamDeltaTc_.set (PVPerf_Sandia_SandiaDbParamDeltaTc_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamFd
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamFd" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamFd_)
            {
              this->PVPerf_Sandia_SandiaDbParamFd_.set (PVPerf_Sandia_SandiaDbParamFd_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamA
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamA" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamA_)
            {
              this->PVPerf_Sandia_SandiaDbParamA_.set (PVPerf_Sandia_SandiaDbParamA_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamB
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamB" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamB_)
            {
              this->PVPerf_Sandia_SandiaDbParamB_.set (PVPerf_Sandia_SandiaDbParamB_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc4
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc4_)
            {
              this->PVPerf_Sandia_SandiaDBParamc4_.set (PVPerf_Sandia_SandiaDBParamc4_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc5
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc5_)
            {
              this->PVPerf_Sandia_SandiaDBParamc5_.set (PVPerf_Sandia_SandiaDBParamc5_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamIx0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamIx0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamIx0_)
            {
              this->PVPerf_Sandia_SandiaDbParamIx0_.set (PVPerf_Sandia_SandiaDbParamIx0_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDbParamIxx0
          //
          if (n.name () == "PVPerf_Sandia_SandiaDbParamIxx0" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDbParamIxx0_)
            {
              this->PVPerf_Sandia_SandiaDbParamIxx0_.set (PVPerf_Sandia_SandiaDbParamIxx0_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc6
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc6" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc6_)
            {
              this->PVPerf_Sandia_SandiaDBParamc6_.set (PVPerf_Sandia_SandiaDBParamc6_traits::create (i, f, this));
              continue;
            }
          }

          // PVPerf_Sandia_SandiaDBParamc7
          //
          if (n.name () == "PVPerf_Sandia_SandiaDBParamc7" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->PVPerf_Sandia_SandiaDBParamc7_)
            {
              this->PVPerf_Sandia_SandiaDBParamc7_.set (PVPerf_Sandia_SandiaDBParamc7_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic* SimFlowPlant_ElectricalGenerator_Photovoltaic::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_ElectricalGenerator_Photovoltaic (*this, f, c);
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic& SimFlowPlant_ElectricalGenerator_Photovoltaic::
      operator= (const SimFlowPlant_ElectricalGenerator_Photovoltaic& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator& > (*this) = x;
          this->SimFlowPlant_SurfName_ = x.SimFlowPlant_SurfName_;
          this->SimFlowPlant_PhotovoltaicPerfObjType_ = x.SimFlowPlant_PhotovoltaicPerfObjType_;
          this->SimFlowPlant_ModulePerfName_ = x.SimFlowPlant_ModulePerfName_;
          this->SimFlowPlant_HeatTranstegrationMode_ = x.SimFlowPlant_HeatTranstegrationMode_;
          this->SimFlowPlant_NumberofSeriesStringsinParallel_ = x.SimFlowPlant_NumberofSeriesStringsinParallel_;
          this->SimFlowPlant_NumModulesSeries_ = x.SimFlowPlant_NumModulesSeries_;
          this->PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_ = x.PhotovoltaicPerformance_Simple_FractionOfSurfAreawithActiveSolarCells_;
          this->PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_ = x.PhotovoltaicPerformance_Simple_ConversionEfficiencyInputMode_;
          this->PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_ = x.PhotovoltaicPerformance_Simple_ValueforCellEfficiencyifFixed_;
          this->PhotovoltaicPerformance_Simple_EfficiencyScheduleName_ = x.PhotovoltaicPerformance_Simple_EfficiencyScheduleName_;
          this->PVPerf_EquivOne_Diode_CellType_ = x.PVPerf_EquivOne_Diode_CellType_;
          this->PVPerf_EquivOne_Diode_NumCellsSeries_ = x.PVPerf_EquivOne_Diode_NumCellsSeries_;
          this->PVPerf_EquivOne_Diode_ActiveArea_ = x.PVPerf_EquivOne_Diode_ActiveArea_;
          this->PVPerf_EquivOne_Diode_TransAbsorptanceProduct_ = x.PVPerf_EquivOne_Diode_TransAbsorptanceProduct_;
          this->PVPerf_EquivOne_Diode_SemiconductorBandgap_ = x.PVPerf_EquivOne_Diode_SemiconductorBandgap_;
          this->PVPerf_EquivOne_Diode_ShuntResist_ = x.PVPerf_EquivOne_Diode_ShuntResist_;
          this->PVPerf_EquivOne_Diode_ShortCircuitCurrent_ = x.PVPerf_EquivOne_Diode_ShortCircuitCurrent_;
          this->PVPerf_EquivOne_Diode_OpenCircuitVolt_ = x.PVPerf_EquivOne_Diode_OpenCircuitVolt_;
          this->PVPerf_EquivOne_Diode_RefTemp_ = x.PVPerf_EquivOne_Diode_RefTemp_;
          this->PVPerf_EquivOne_Diode_RefInsol_ = x.PVPerf_EquivOne_Diode_RefInsol_;
          this->PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_ = x.PVPerf_EquivOne_Diode_ModuleCurrentAtMaxPwr_;
          this->PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_ = x.PVPerf_EquivOne_Diode_ModuleVoltAtMaxPwr_;
          this->PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_ = x.PVPerf_EquivOne_Diode_TempCoefShortCircuitCurrent_;
          this->PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_ = x.PVPerf_EquivOne_Diode_TempCoefOpenCircuitVolt_;
          this->PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_ = x.PVPerf_EquivOne_Diode_NomOperatCellTempTestAmbTemp_;
          this->PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_ = x.PVPerf_EquivOne_Diode_NomOperatCellTempTestCellTemp_;
          this->PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_ = x.PVPerf_EquivOne_Diode_NomOperatCellTempTestInsol_;
          this->PVPerf_EquivOne_Diode_ModuleHeatLossCoef_ = x.PVPerf_EquivOne_Diode_ModuleHeatLossCoef_;
          this->PVPerf_EquivOne_Diode_TotalHeatCap_ = x.PVPerf_EquivOne_Diode_TotalHeatCap_;
          this->PVPerf_Sandia_NumCellsParallel_ = x.PVPerf_Sandia_NumCellsParallel_;
          this->PVPerf_Sandia_CurrentAtMaxPwrPoint_ = x.PVPerf_Sandia_CurrentAtMaxPwrPoint_;
          this->PVPerf_Sandia_VoltAtMaxPwrPoint_ = x.PVPerf_Sandia_VoltAtMaxPwrPoint_;
          this->PVPerf_Sandia_SandiaDbParamAc_ = x.PVPerf_Sandia_SandiaDbParamAc_;
          this->PVPerf_Sandia_SandiaDbParamAImp_ = x.PVPerf_Sandia_SandiaDbParamAImp_;
          this->PVPerf_Sandia_SandiaDBParamc0_ = x.PVPerf_Sandia_SandiaDBParamc0_;
          this->PVPerf_Sandia_SandiaDBParamc1_ = x.PVPerf_Sandia_SandiaDBParamc1_;
          this->PVPerf_Sandia_SandiaDbParamBVoc0_ = x.PVPerf_Sandia_SandiaDbParamBVoc0_;
          this->PVPerf_Sandia_SandiaDbParamMBVoc_ = x.PVPerf_Sandia_SandiaDbParamMBVoc_;
          this->PVPerf_Sandia_SandiaDbParamBVmp0_ = x.PVPerf_Sandia_SandiaDbParamBVmp0_;
          this->PVPerf_Sandia_SandiaDbParamMBVmp_ = x.PVPerf_Sandia_SandiaDbParamMBVmp_;
          this->PVPerf_Sandia_DiodeFactor_ = x.PVPerf_Sandia_DiodeFactor_;
          this->PVPerf_Sandia_SandiaDBParamc2_ = x.PVPerf_Sandia_SandiaDBParamc2_;
          this->PVPerf_Sandia_SandiaDBParamc3_ = x.PVPerf_Sandia_SandiaDBParamc3_;
          this->PVPerf_Sandia_SandiaDbParama_0_0_ = x.PVPerf_Sandia_SandiaDbParama_0_0_;
          this->PVPerf_Sandia_SandiaDbParama_1_1_ = x.PVPerf_Sandia_SandiaDbParama_1_1_;
          this->PVPerf_Sandia_SandiaDBParama2_ = x.PVPerf_Sandia_SandiaDBParama2_;
          this->PVPerf_Sandia_SandiaDBParama3_ = x.PVPerf_Sandia_SandiaDBParama3_;
          this->PVPerf_Sandia_SandiaDBParama4_ = x.PVPerf_Sandia_SandiaDBParama4_;
          this->PVPerf_Sandia_SandiaDbParamb_0_0_ = x.PVPerf_Sandia_SandiaDbParamb_0_0_;
          this->PVPerf_Sandia_SandiaDbParamb_1_1_ = x.PVPerf_Sandia_SandiaDbParamb_1_1_;
          this->PVPerf_Sandia_SandiaDBParamb2_ = x.PVPerf_Sandia_SandiaDBParamb2_;
          this->PVPerf_Sandia_SandiaDBParamb3_ = x.PVPerf_Sandia_SandiaDBParamb3_;
          this->PVPerf_Sandia_SandiaDBParamb4_ = x.PVPerf_Sandia_SandiaDBParamb4_;
          this->PVPerf_Sandia_SandiaDBParamb5_ = x.PVPerf_Sandia_SandiaDBParamb5_;
          this->PVPerf_Sandia_SandiaDbParamDeltaTc_ = x.PVPerf_Sandia_SandiaDbParamDeltaTc_;
          this->PVPerf_Sandia_SandiaDbParamFd_ = x.PVPerf_Sandia_SandiaDbParamFd_;
          this->PVPerf_Sandia_SandiaDbParamA_ = x.PVPerf_Sandia_SandiaDbParamA_;
          this->PVPerf_Sandia_SandiaDbParamB_ = x.PVPerf_Sandia_SandiaDbParamB_;
          this->PVPerf_Sandia_SandiaDBParamc4_ = x.PVPerf_Sandia_SandiaDBParamc4_;
          this->PVPerf_Sandia_SandiaDBParamc5_ = x.PVPerf_Sandia_SandiaDBParamc5_;
          this->PVPerf_Sandia_SandiaDbParamIx0_ = x.PVPerf_Sandia_SandiaDbParamIx0_;
          this->PVPerf_Sandia_SandiaDbParamIxx0_ = x.PVPerf_Sandia_SandiaDbParamIxx0_;
          this->PVPerf_Sandia_SandiaDBParamc6_ = x.PVPerf_Sandia_SandiaDBParamc6_;
          this->PVPerf_Sandia_SandiaDBParamc7_ = x.PVPerf_Sandia_SandiaDBParamc7_;
        }

        return *this;
      }

      SimFlowPlant_ElectricalGenerator_Photovoltaic::
      ~SimFlowPlant_ElectricalGenerator_Photovoltaic ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

