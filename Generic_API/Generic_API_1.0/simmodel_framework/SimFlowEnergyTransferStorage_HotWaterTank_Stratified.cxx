// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransferStorage_HotWaterTank_Stratified.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransferStorage_HotWaterTank_Stratified
      // 

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankVol_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankVol () const
      {
        return this->SimFlowEnergyTransSto_TankVol_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankVol_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankVol ()
      {
        return this->SimFlowEnergyTransSto_TankVol_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankVol (const SimFlowEnergyTransSto_TankVol_type& x)
      {
        this->SimFlowEnergyTransSto_TankVol_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankVol (const SimFlowEnergyTransSto_TankVol_optional& x)
      {
        this->SimFlowEnergyTransSto_TankVol_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_MaxTempLimit_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_MaxTempLimit () const
      {
        return this->SimFlowEnergyTransSto_MaxTempLimit_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_MaxTempLimit_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_MaxTempLimit ()
      {
        return this->SimFlowEnergyTransSto_MaxTempLimit_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_MaxTempLimit (const SimFlowEnergyTransSto_MaxTempLimit_type& x)
      {
        this->SimFlowEnergyTransSto_MaxTempLimit_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_MaxTempLimit (const SimFlowEnergyTransSto_MaxTempLimit_optional& x)
      {
        this->SimFlowEnergyTransSto_MaxTempLimit_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatFuelType_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatFuelType () const
      {
        return this->SimFlowEnergyTransSto_HeatFuelType_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatFuelType_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatFuelType ()
      {
        return this->SimFlowEnergyTransSto_HeatFuelType_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatFuelType (const SimFlowEnergyTransSto_HeatFuelType_type& x)
      {
        this->SimFlowEnergyTransSto_HeatFuelType_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatFuelType (const SimFlowEnergyTransSto_HeatFuelType_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatFuelType_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatFuelType (::std::auto_ptr< SimFlowEnergyTransSto_HeatFuelType_type > x)
      {
        this->SimFlowEnergyTransSto_HeatFuelType_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatThermalEff_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatThermalEff () const
      {
        return this->SimFlowEnergyTransSto_HeatThermalEff_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatThermalEff_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatThermalEff ()
      {
        return this->SimFlowEnergyTransSto_HeatThermalEff_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatThermalEff (const SimFlowEnergyTransSto_HeatThermalEff_type& x)
      {
        this->SimFlowEnergyTransSto_HeatThermalEff_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatThermalEff (const SimFlowEnergyTransSto_HeatThermalEff_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatThermalEff_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate () const
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate ()
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate (const SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_type& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate (const SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_optional& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticFuelType_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelType () const
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticFuelType_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticFuelType_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelType ()
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticFuelType_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelType (const SimFlowEnergyTransSto_fCycleParasiticFuelType_type& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticFuelType_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelType (const SimFlowEnergyTransSto_fCycleParasiticFuelType_optional& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticFuelType_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticFuelType (::std::auto_ptr< SimFlowEnergyTransSto_fCycleParasiticFuelType_type > x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticFuelType_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank () const
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank ()
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank (const SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_type& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank (const SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_optional& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate () const
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate ()
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate (const SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_type& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate (const SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_optional& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticFuelType_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelType () const
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticFuelType_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelType ()
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelType (const SimFlowEnergyTransSto_OnCycleParasiticFuelType_type& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelType (const SimFlowEnergyTransSto_OnCycleParasiticFuelType_optional& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticFuelType (::std::auto_ptr< SimFlowEnergyTransSto_OnCycleParasiticFuelType_type > x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank () const
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank ()
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank (const SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_type& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank (const SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_optional& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempdic_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempdic () const
      {
        return this->SimFlowEnergyTransSto_AmbTempdic_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempdic_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempdic ()
      {
        return this->SimFlowEnergyTransSto_AmbTempdic_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempdic (const SimFlowEnergyTransSto_AmbTempdic_type& x)
      {
        this->SimFlowEnergyTransSto_AmbTempdic_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempdic (const SimFlowEnergyTransSto_AmbTempdic_optional& x)
      {
        this->SimFlowEnergyTransSto_AmbTempdic_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempdic (::std::auto_ptr< SimFlowEnergyTransSto_AmbTempdic_type > x)
      {
        this->SimFlowEnergyTransSto_AmbTempdic_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempSchedName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempSchedName () const
      {
        return this->SimFlowEnergyTransSto_AmbTempSchedName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempSchedName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempSchedName ()
      {
        return this->SimFlowEnergyTransSto_AmbTempSchedName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempSchedName (const SimFlowEnergyTransSto_AmbTempSchedName_type& x)
      {
        this->SimFlowEnergyTransSto_AmbTempSchedName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempSchedName (const SimFlowEnergyTransSto_AmbTempSchedName_optional& x)
      {
        this->SimFlowEnergyTransSto_AmbTempSchedName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempSchedName (::std::auto_ptr< SimFlowEnergyTransSto_AmbTempSchedName_type > x)
      {
        this->SimFlowEnergyTransSto_AmbTempSchedName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempZoneName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempZoneName () const
      {
        return this->SimFlowEnergyTransSto_AmbTempZoneName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempZoneName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempZoneName ()
      {
        return this->SimFlowEnergyTransSto_AmbTempZoneName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempZoneName (const SimFlowEnergyTransSto_AmbTempZoneName_type& x)
      {
        this->SimFlowEnergyTransSto_AmbTempZoneName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempZoneName (const SimFlowEnergyTransSto_AmbTempZoneName_optional& x)
      {
        this->SimFlowEnergyTransSto_AmbTempZoneName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempZoneName (::std::auto_ptr< SimFlowEnergyTransSto_AmbTempZoneName_type > x)
      {
        this->SimFlowEnergyTransSto_AmbTempZoneName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempOutdrAirNodeName () const
      {
        return this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempOutdrAirNodeName ()
      {
        return this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempOutdrAirNodeName (const SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_type& x)
      {
        this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempOutdrAirNodeName (const SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_optional& x)
      {
        this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AmbTempOutdrAirNodeName (::std::auto_ptr< SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_type > x)
      {
        this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_PeakUseFlowRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_PeakUseFlowRate () const
      {
        return this->SimFlowEnergyTransSto_PeakUseFlowRate_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_PeakUseFlowRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_PeakUseFlowRate ()
      {
        return this->SimFlowEnergyTransSto_PeakUseFlowRate_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_PeakUseFlowRate (const SimFlowEnergyTransSto_PeakUseFlowRate_type& x)
      {
        this->SimFlowEnergyTransSto_PeakUseFlowRate_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_PeakUseFlowRate (const SimFlowEnergyTransSto_PeakUseFlowRate_optional& x)
      {
        this->SimFlowEnergyTransSto_PeakUseFlowRate_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseFlowRateFractSchedName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseFlowRateFractSchedName () const
      {
        return this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseFlowRateFractSchedName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseFlowRateFractSchedName ()
      {
        return this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseFlowRateFractSchedName (const SimFlowEnergyTransSto_UseFlowRateFractSchedName_type& x)
      {
        this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseFlowRateFractSchedName (const SimFlowEnergyTransSto_UseFlowRateFractSchedName_optional& x)
      {
        this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseFlowRateFractSchedName (::std::auto_ptr< SimFlowEnergyTransSto_UseFlowRateFractSchedName_type > x)
      {
        this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_ColdWaterSupTempSchedName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_ColdWaterSupTempSchedName () const
      {
        return this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_ColdWaterSupTempSchedName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_ColdWaterSupTempSchedName ()
      {
        return this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_ColdWaterSupTempSchedName (const SimFlowEnergyTransSto_ColdWaterSupTempSchedName_type& x)
      {
        this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_ColdWaterSupTempSchedName (const SimFlowEnergyTransSto_ColdWaterSupTempSchedName_optional& x)
      {
        this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_ColdWaterSupTempSchedName (::std::auto_ptr< SimFlowEnergyTransSto_ColdWaterSupTempSchedName_type > x)
      {
        this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideInletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletNodeName () const
      {
        return this->SimFlowEnergyTransSto_UseSideInletNodeName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideInletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletNodeName ()
      {
        return this->SimFlowEnergyTransSto_UseSideInletNodeName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletNodeName (const SimFlowEnergyTransSto_UseSideInletNodeName_type& x)
      {
        this->SimFlowEnergyTransSto_UseSideInletNodeName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletNodeName (const SimFlowEnergyTransSto_UseSideInletNodeName_optional& x)
      {
        this->SimFlowEnergyTransSto_UseSideInletNodeName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletNodeName (::std::auto_ptr< SimFlowEnergyTransSto_UseSideInletNodeName_type > x)
      {
        this->SimFlowEnergyTransSto_UseSideInletNodeName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideOutletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletNodeName () const
      {
        return this->SimFlowEnergyTransSto_UseSideOutletNodeName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideOutletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletNodeName ()
      {
        return this->SimFlowEnergyTransSto_UseSideOutletNodeName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletNodeName (const SimFlowEnergyTransSto_UseSideOutletNodeName_type& x)
      {
        this->SimFlowEnergyTransSto_UseSideOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletNodeName (const SimFlowEnergyTransSto_UseSideOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTransSto_UseSideOutletNodeName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletNodeName (::std::auto_ptr< SimFlowEnergyTransSto_UseSideOutletNodeName_type > x)
      {
        this->SimFlowEnergyTransSto_UseSideOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideEffect_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideEffect () const
      {
        return this->SimFlowEnergyTransSto_UseSideEffect_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideEffect_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideEffect ()
      {
        return this->SimFlowEnergyTransSto_UseSideEffect_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideEffect (const SimFlowEnergyTransSto_UseSideEffect_type& x)
      {
        this->SimFlowEnergyTransSto_UseSideEffect_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideEffect (const SimFlowEnergyTransSto_UseSideEffect_optional& x)
      {
        this->SimFlowEnergyTransSto_UseSideEffect_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideInletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletNodeName () const
      {
        return this->SimFlowEnergyTransSto_SrcSideInletNodeName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideInletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletNodeName ()
      {
        return this->SimFlowEnergyTransSto_SrcSideInletNodeName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletNodeName (const SimFlowEnergyTransSto_SrcSideInletNodeName_type& x)
      {
        this->SimFlowEnergyTransSto_SrcSideInletNodeName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletNodeName (const SimFlowEnergyTransSto_SrcSideInletNodeName_optional& x)
      {
        this->SimFlowEnergyTransSto_SrcSideInletNodeName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletNodeName (::std::auto_ptr< SimFlowEnergyTransSto_SrcSideInletNodeName_type > x)
      {
        this->SimFlowEnergyTransSto_SrcSideInletNodeName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideOutletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletNodeName () const
      {
        return this->SimFlowEnergyTransSto_SrcSideOutletNodeName_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideOutletNodeName_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletNodeName ()
      {
        return this->SimFlowEnergyTransSto_SrcSideOutletNodeName_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletNodeName (const SimFlowEnergyTransSto_SrcSideOutletNodeName_type& x)
      {
        this->SimFlowEnergyTransSto_SrcSideOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletNodeName (const SimFlowEnergyTransSto_SrcSideOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTransSto_SrcSideOutletNodeName_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletNodeName (::std::auto_ptr< SimFlowEnergyTransSto_SrcSideOutletNodeName_type > x)
      {
        this->SimFlowEnergyTransSto_SrcSideOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideEffect_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideEffect () const
      {
        return this->SimFlowEnergyTransSto_SrcSideEffect_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideEffect_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideEffect ()
      {
        return this->SimFlowEnergyTransSto_SrcSideEffect_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideEffect (const SimFlowEnergyTransSto_SrcSideEffect_type& x)
      {
        this->SimFlowEnergyTransSto_SrcSideEffect_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideEffect (const SimFlowEnergyTransSto_SrcSideEffect_optional& x)
      {
        this->SimFlowEnergyTransSto_SrcSideEffect_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideDesignFlowRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideDesignFlowRate () const
      {
        return this->SimFlowEnergyTransSto_UseSideDesignFlowRate_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideDesignFlowRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideDesignFlowRate ()
      {
        return this->SimFlowEnergyTransSto_UseSideDesignFlowRate_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideDesignFlowRate (const SimFlowEnergyTransSto_UseSideDesignFlowRate_type& x)
      {
        this->SimFlowEnergyTransSto_UseSideDesignFlowRate_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideDesignFlowRate (const SimFlowEnergyTransSto_UseSideDesignFlowRate_optional& x)
      {
        this->SimFlowEnergyTransSto_UseSideDesignFlowRate_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideDesignFlowRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideDesignFlowRate () const
      {
        return this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideDesignFlowRate_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideDesignFlowRate ()
      {
        return this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideDesignFlowRate (const SimFlowEnergyTransSto_SrcSideDesignFlowRate_type& x)
      {
        this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideDesignFlowRate (const SimFlowEnergyTransSto_SrcSideDesignFlowRate_optional& x)
      {
        this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_directWaterHeatingRecovTime_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_directWaterHeatingRecovTime () const
      {
        return this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_directWaterHeatingRecovTime_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_directWaterHeatingRecovTime ()
      {
        return this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_directWaterHeatingRecovTime (const SimFlowEnergyTransSto_directWaterHeatingRecovTime_type& x)
      {
        this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_directWaterHeatingRecovTime (const SimFlowEnergyTransSto_directWaterHeatingRecovTime_optional& x)
      {
        this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_EndUseSubCat_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_EndUseSubCat () const
      {
        return this->SimFlowEnergyTransSto_EndUseSubCat_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_EndUseSubCat_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_EndUseSubCat ()
      {
        return this->SimFlowEnergyTransSto_EndUseSubCat_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_EndUseSubCat (const SimFlowEnergyTransSto_EndUseSubCat_type& x)
      {
        this->SimFlowEnergyTransSto_EndUseSubCat_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_EndUseSubCat (const SimFlowEnergyTransSto_EndUseSubCat_optional& x)
      {
        this->SimFlowEnergyTransSto_EndUseSubCat_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_EndUseSubCat (::std::auto_ptr< SimFlowEnergyTransSto_EndUseSubCat_type > x)
      {
        this->SimFlowEnergyTransSto_EndUseSubCat_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankHeight () const
      {
        return this->SimFlowEnergyTransSto_TankHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankHeight ()
      {
        return this->SimFlowEnergyTransSto_TankHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankHeight (const SimFlowEnergyTransSto_TankHeight_type& x)
      {
        this->SimFlowEnergyTransSto_TankHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankHeight (const SimFlowEnergyTransSto_TankHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_TankHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankShape_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankShape () const
      {
        return this->SimFlowEnergyTransSto_TankShape_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankShape_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankShape ()
      {
        return this->SimFlowEnergyTransSto_TankShape_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankShape (const SimFlowEnergyTransSto_TankShape_type& x)
      {
        this->SimFlowEnergyTransSto_TankShape_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankShape (const SimFlowEnergyTransSto_TankShape_optional& x)
      {
        this->SimFlowEnergyTransSto_TankShape_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankShape (::std::auto_ptr< SimFlowEnergyTransSto_TankShape_type > x)
      {
        this->SimFlowEnergyTransSto_TankShape_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankPerimeter_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankPerimeter () const
      {
        return this->SimFlowEnergyTransSto_TankPerimeter_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_TankPerimeter_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankPerimeter ()
      {
        return this->SimFlowEnergyTransSto_TankPerimeter_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankPerimeter (const SimFlowEnergyTransSto_TankPerimeter_type& x)
      {
        this->SimFlowEnergyTransSto_TankPerimeter_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_TankPerimeter (const SimFlowEnergyTransSto_TankPerimeter_optional& x)
      {
        this->SimFlowEnergyTransSto_TankPerimeter_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatPriorityCntl_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatPriorityCntl () const
      {
        return this->SimFlowEnergyTransSto_HeatPriorityCntl_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatPriorityCntl_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatPriorityCntl ()
      {
        return this->SimFlowEnergyTransSto_HeatPriorityCntl_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatPriorityCntl (const SimFlowEnergyTransSto_HeatPriorityCntl_type& x)
      {
        this->SimFlowEnergyTransSto_HeatPriorityCntl_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatPriorityCntl (const SimFlowEnergyTransSto_HeatPriorityCntl_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatPriorityCntl_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatPriorityCntl (::std::auto_ptr< SimFlowEnergyTransSto_HeatPriorityCntl_type > x)
      {
        this->SimFlowEnergyTransSto_HeatPriorityCntl_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2 () const
      {
        return this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2 ()
      {
        return this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2 (const SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_type& x)
      {
        this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2 (const SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2 (::std::auto_ptr< SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_type > x)
      {
        this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2 () const
      {
        return this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2 ()
      {
        return this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2 (const SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_type& x)
      {
        this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2 (const SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2 (::std::auto_ptr< SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_type > x)
      {
        this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatCap_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatCap_1_2 () const
      {
        return this->SimFlowEnergyTransSto_HeatCap_1_2_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatCap_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatCap_1_2 ()
      {
        return this->SimFlowEnergyTransSto_HeatCap_1_2_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatCap_1_2 (const SimFlowEnergyTransSto_HeatCap_1_2_type& x)
      {
        this->SimFlowEnergyTransSto_HeatCap_1_2_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatCap_1_2 (const SimFlowEnergyTransSto_HeatCap_1_2_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatCap_1_2_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatCap_1_2 (::std::auto_ptr< SimFlowEnergyTransSto_HeatCap_1_2_type > x)
      {
        this->SimFlowEnergyTransSto_HeatCap_1_2_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatHeight_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatHeight_1_2 () const
      {
        return this->SimFlowEnergyTransSto_HeatHeight_1_2_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_HeatHeight_1_2_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatHeight_1_2 ()
      {
        return this->SimFlowEnergyTransSto_HeatHeight_1_2_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatHeight_1_2 (const SimFlowEnergyTransSto_HeatHeight_1_2_type& x)
      {
        this->SimFlowEnergyTransSto_HeatHeight_1_2_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatHeight_1_2 (const SimFlowEnergyTransSto_HeatHeight_1_2_optional& x)
      {
        this->SimFlowEnergyTransSto_HeatHeight_1_2_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_HeatHeight_1_2 (::std::auto_ptr< SimFlowEnergyTransSto_HeatHeight_1_2_type > x)
      {
        this->SimFlowEnergyTransSto_HeatHeight_1_2_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeight () const
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleParasiticHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeight ()
      {
        return this->SimFlowEnergyTransSto_fCycleParasiticHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeight (const SimFlowEnergyTransSto_fCycleParasiticHeight_type& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleParasiticHeight (const SimFlowEnergyTransSto_fCycleParasiticHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_fCycleParasiticHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeight () const
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_OnCycleParasiticHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeight ()
      {
        return this->SimFlowEnergyTransSto_OnCycleParasiticHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeight (const SimFlowEnergyTransSto_OnCycleParasiticHeight_type& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_OnCycleParasiticHeight (const SimFlowEnergyTransSto_OnCycleParasiticHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_OnCycleParasiticHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp () const
      {
        return this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp ()
      {
        return this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp (const SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_type& x)
      {
        this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp (const SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_optional& x)
      {
        this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SkinLossFractToZone_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SkinLossFractToZone () const
      {
        return this->SimFlowEnergyTransSto_SkinLossFractToZone_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SkinLossFractToZone_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SkinLossFractToZone ()
      {
        return this->SimFlowEnergyTransSto_SkinLossFractToZone_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SkinLossFractToZone (const SimFlowEnergyTransSto_SkinLossFractToZone_type& x)
      {
        this->SimFlowEnergyTransSto_SkinLossFractToZone_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SkinLossFractToZone (const SimFlowEnergyTransSto_SkinLossFractToZone_optional& x)
      {
        this->SimFlowEnergyTransSto_SkinLossFractToZone_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp () const
      {
        return this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp ()
      {
        return this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp (const SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_type& x)
      {
        this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp (const SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_optional& x)
      {
        this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleFlueLossFractToZone_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossFractToZone () const
      {
        return this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_fCycleFlueLossFractToZone_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossFractToZone ()
      {
        return this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossFractToZone (const SimFlowEnergyTransSto_fCycleFlueLossFractToZone_type& x)
      {
        this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_fCycleFlueLossFractToZone (const SimFlowEnergyTransSto_fCycleFlueLossFractToZone_optional& x)
      {
        this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideInletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletHeight () const
      {
        return this->SimFlowEnergyTransSto_UseSideInletHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideInletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletHeight ()
      {
        return this->SimFlowEnergyTransSto_UseSideInletHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletHeight (const SimFlowEnergyTransSto_UseSideInletHeight_type& x)
      {
        this->SimFlowEnergyTransSto_UseSideInletHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideInletHeight (const SimFlowEnergyTransSto_UseSideInletHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_UseSideInletHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideOutletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletHeight () const
      {
        return this->SimFlowEnergyTransSto_UseSideOutletHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_UseSideOutletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletHeight ()
      {
        return this->SimFlowEnergyTransSto_UseSideOutletHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletHeight (const SimFlowEnergyTransSto_UseSideOutletHeight_type& x)
      {
        this->SimFlowEnergyTransSto_UseSideOutletHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_UseSideOutletHeight (const SimFlowEnergyTransSto_UseSideOutletHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_UseSideOutletHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideInletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletHeight () const
      {
        return this->SimFlowEnergyTransSto_SrcSideInletHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideInletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletHeight ()
      {
        return this->SimFlowEnergyTransSto_SrcSideInletHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletHeight (const SimFlowEnergyTransSto_SrcSideInletHeight_type& x)
      {
        this->SimFlowEnergyTransSto_SrcSideInletHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideInletHeight (const SimFlowEnergyTransSto_SrcSideInletHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_SrcSideInletHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideOutletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletHeight () const
      {
        return this->SimFlowEnergyTransSto_SrcSideOutletHeight_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_SrcSideOutletHeight_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletHeight ()
      {
        return this->SimFlowEnergyTransSto_SrcSideOutletHeight_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletHeight (const SimFlowEnergyTransSto_SrcSideOutletHeight_type& x)
      {
        this->SimFlowEnergyTransSto_SrcSideOutletHeight_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_SrcSideOutletHeight (const SimFlowEnergyTransSto_SrcSideOutletHeight_optional& x)
      {
        this->SimFlowEnergyTransSto_SrcSideOutletHeight_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_InletMode_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_InletMode () const
      {
        return this->SimFlowEnergyTransSto_InletMode_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_InletMode_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_InletMode ()
      {
        return this->SimFlowEnergyTransSto_InletMode_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_InletMode (const SimFlowEnergyTransSto_InletMode_type& x)
      {
        this->SimFlowEnergyTransSto_InletMode_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_InletMode (const SimFlowEnergyTransSto_InletMode_optional& x)
      {
        this->SimFlowEnergyTransSto_InletMode_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_InletMode (::std::auto_ptr< SimFlowEnergyTransSto_InletMode_type > x)
      {
        this->SimFlowEnergyTransSto_InletMode_.set (x);
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_NumNodes_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NumNodes () const
      {
        return this->SimFlowEnergyTransSto_NumNodes_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_NumNodes_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NumNodes ()
      {
        return this->SimFlowEnergyTransSto_NumNodes_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NumNodes (const SimFlowEnergyTransSto_NumNodes_type& x)
      {
        this->SimFlowEnergyTransSto_NumNodes_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NumNodes (const SimFlowEnergyTransSto_NumNodes_optional& x)
      {
        this->SimFlowEnergyTransSto_NumNodes_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AddDestratCond_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AddDestratCond () const
      {
        return this->SimFlowEnergyTransSto_AddDestratCond_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_AddDestratCond_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AddDestratCond ()
      {
        return this->SimFlowEnergyTransSto_AddDestratCond_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AddDestratCond (const SimFlowEnergyTransSto_AddDestratCond_type& x)
      {
        this->SimFlowEnergyTransSto_AddDestratCond_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_AddDestratCond (const SimFlowEnergyTransSto_AddDestratCond_optional& x)
      {
        this->SimFlowEnergyTransSto_AddDestratCond_ = x;
      }

      const SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_NodeAddLossCoef_1_10_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NodeAddLossCoef_1_10 () const
      {
        return this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::SimFlowEnergyTransSto_NodeAddLossCoef_1_10_optional& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NodeAddLossCoef_1_10 ()
      {
        return this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NodeAddLossCoef_1_10 (const SimFlowEnergyTransSto_NodeAddLossCoef_1_10_type& x)
      {
        this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_.set (x);
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NodeAddLossCoef_1_10 (const SimFlowEnergyTransSto_NodeAddLossCoef_1_10_optional& x)
      {
        this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_ = x;
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransSto_NodeAddLossCoef_1_10 (::std::auto_ptr< SimFlowEnergyTransSto_NodeAddLossCoef_1_10_type > x)
      {
        this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransferStorage_HotWaterTank_Stratified
      //

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransferStorage_HotWaterTank_Stratified (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank (RefId),
        SimFlowEnergyTransSto_TankVol_ (this),
        SimFlowEnergyTransSto_MaxTempLimit_ (this),
        SimFlowEnergyTransSto_HeatFuelType_ (this),
        SimFlowEnergyTransSto_HeatThermalEff_ (this),
        SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_ (this),
        SimFlowEnergyTransSto_fCycleParasiticFuelType_ (this),
        SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticFuelType_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_ (this),
        SimFlowEnergyTransSto_AmbTempdic_ (this),
        SimFlowEnergyTransSto_AmbTempSchedName_ (this),
        SimFlowEnergyTransSto_AmbTempZoneName_ (this),
        SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_ (this),
        SimFlowEnergyTransSto_PeakUseFlowRate_ (this),
        SimFlowEnergyTransSto_UseFlowRateFractSchedName_ (this),
        SimFlowEnergyTransSto_ColdWaterSupTempSchedName_ (this),
        SimFlowEnergyTransSto_UseSideInletNodeName_ (this),
        SimFlowEnergyTransSto_UseSideOutletNodeName_ (this),
        SimFlowEnergyTransSto_UseSideEffect_ (this),
        SimFlowEnergyTransSto_SrcSideInletNodeName_ (this),
        SimFlowEnergyTransSto_SrcSideOutletNodeName_ (this),
        SimFlowEnergyTransSto_SrcSideEffect_ (this),
        SimFlowEnergyTransSto_UseSideDesignFlowRate_ (this),
        SimFlowEnergyTransSto_SrcSideDesignFlowRate_ (this),
        SimFlowEnergyTransSto_directWaterHeatingRecovTime_ (this),
        SimFlowEnergyTransSto_EndUseSubCat_ (this),
        SimFlowEnergyTransSto_TankHeight_ (this),
        SimFlowEnergyTransSto_TankShape_ (this),
        SimFlowEnergyTransSto_TankPerimeter_ (this),
        SimFlowEnergyTransSto_HeatPriorityCntl_ (this),
        SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_ (this),
        SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_ (this),
        SimFlowEnergyTransSto_HeatCap_1_2_ (this),
        SimFlowEnergyTransSto_HeatHeight_1_2_ (this),
        SimFlowEnergyTransSto_fCycleParasiticHeight_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticHeight_ (this),
        SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (this),
        SimFlowEnergyTransSto_SkinLossFractToZone_ (this),
        SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_ (this),
        SimFlowEnergyTransSto_fCycleFlueLossFractToZone_ (this),
        SimFlowEnergyTransSto_UseSideInletHeight_ (this),
        SimFlowEnergyTransSto_UseSideOutletHeight_ (this),
        SimFlowEnergyTransSto_SrcSideInletHeight_ (this),
        SimFlowEnergyTransSto_SrcSideOutletHeight_ (this),
        SimFlowEnergyTransSto_InletMode_ (this),
        SimFlowEnergyTransSto_NumNodes_ (this),
        SimFlowEnergyTransSto_AddDestratCond_ (this),
        SimFlowEnergyTransSto_NodeAddLossCoef_1_10_ (this)
      {
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransferStorage_HotWaterTank_Stratified (const SimFlowEnergyTransferStorage_HotWaterTank_Stratified& x,
                                                            ::xml_schema::flags f,
                                                            ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank (x, f, c),
        SimFlowEnergyTransSto_TankVol_ (x.SimFlowEnergyTransSto_TankVol_, f, this),
        SimFlowEnergyTransSto_MaxTempLimit_ (x.SimFlowEnergyTransSto_MaxTempLimit_, f, this),
        SimFlowEnergyTransSto_HeatFuelType_ (x.SimFlowEnergyTransSto_HeatFuelType_, f, this),
        SimFlowEnergyTransSto_HeatThermalEff_ (x.SimFlowEnergyTransSto_HeatThermalEff_, f, this),
        SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_ (x.SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_, f, this),
        SimFlowEnergyTransSto_fCycleParasiticFuelType_ (x.SimFlowEnergyTransSto_fCycleParasiticFuelType_, f, this),
        SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_ (x.SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_, f, this),
        SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_ (x.SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_, f, this),
        SimFlowEnergyTransSto_OnCycleParasiticFuelType_ (x.SimFlowEnergyTransSto_OnCycleParasiticFuelType_, f, this),
        SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_ (x.SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_, f, this),
        SimFlowEnergyTransSto_AmbTempdic_ (x.SimFlowEnergyTransSto_AmbTempdic_, f, this),
        SimFlowEnergyTransSto_AmbTempSchedName_ (x.SimFlowEnergyTransSto_AmbTempSchedName_, f, this),
        SimFlowEnergyTransSto_AmbTempZoneName_ (x.SimFlowEnergyTransSto_AmbTempZoneName_, f, this),
        SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_ (x.SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_, f, this),
        SimFlowEnergyTransSto_PeakUseFlowRate_ (x.SimFlowEnergyTransSto_PeakUseFlowRate_, f, this),
        SimFlowEnergyTransSto_UseFlowRateFractSchedName_ (x.SimFlowEnergyTransSto_UseFlowRateFractSchedName_, f, this),
        SimFlowEnergyTransSto_ColdWaterSupTempSchedName_ (x.SimFlowEnergyTransSto_ColdWaterSupTempSchedName_, f, this),
        SimFlowEnergyTransSto_UseSideInletNodeName_ (x.SimFlowEnergyTransSto_UseSideInletNodeName_, f, this),
        SimFlowEnergyTransSto_UseSideOutletNodeName_ (x.SimFlowEnergyTransSto_UseSideOutletNodeName_, f, this),
        SimFlowEnergyTransSto_UseSideEffect_ (x.SimFlowEnergyTransSto_UseSideEffect_, f, this),
        SimFlowEnergyTransSto_SrcSideInletNodeName_ (x.SimFlowEnergyTransSto_SrcSideInletNodeName_, f, this),
        SimFlowEnergyTransSto_SrcSideOutletNodeName_ (x.SimFlowEnergyTransSto_SrcSideOutletNodeName_, f, this),
        SimFlowEnergyTransSto_SrcSideEffect_ (x.SimFlowEnergyTransSto_SrcSideEffect_, f, this),
        SimFlowEnergyTransSto_UseSideDesignFlowRate_ (x.SimFlowEnergyTransSto_UseSideDesignFlowRate_, f, this),
        SimFlowEnergyTransSto_SrcSideDesignFlowRate_ (x.SimFlowEnergyTransSto_SrcSideDesignFlowRate_, f, this),
        SimFlowEnergyTransSto_directWaterHeatingRecovTime_ (x.SimFlowEnergyTransSto_directWaterHeatingRecovTime_, f, this),
        SimFlowEnergyTransSto_EndUseSubCat_ (x.SimFlowEnergyTransSto_EndUseSubCat_, f, this),
        SimFlowEnergyTransSto_TankHeight_ (x.SimFlowEnergyTransSto_TankHeight_, f, this),
        SimFlowEnergyTransSto_TankShape_ (x.SimFlowEnergyTransSto_TankShape_, f, this),
        SimFlowEnergyTransSto_TankPerimeter_ (x.SimFlowEnergyTransSto_TankPerimeter_, f, this),
        SimFlowEnergyTransSto_HeatPriorityCntl_ (x.SimFlowEnergyTransSto_HeatPriorityCntl_, f, this),
        SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_ (x.SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_, f, this),
        SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_ (x.SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_, f, this),
        SimFlowEnergyTransSto_HeatCap_1_2_ (x.SimFlowEnergyTransSto_HeatCap_1_2_, f, this),
        SimFlowEnergyTransSto_HeatHeight_1_2_ (x.SimFlowEnergyTransSto_HeatHeight_1_2_, f, this),
        SimFlowEnergyTransSto_fCycleParasiticHeight_ (x.SimFlowEnergyTransSto_fCycleParasiticHeight_, f, this),
        SimFlowEnergyTransSto_OnCycleParasiticHeight_ (x.SimFlowEnergyTransSto_OnCycleParasiticHeight_, f, this),
        SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (x.SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_, f, this),
        SimFlowEnergyTransSto_SkinLossFractToZone_ (x.SimFlowEnergyTransSto_SkinLossFractToZone_, f, this),
        SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_ (x.SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_, f, this),
        SimFlowEnergyTransSto_fCycleFlueLossFractToZone_ (x.SimFlowEnergyTransSto_fCycleFlueLossFractToZone_, f, this),
        SimFlowEnergyTransSto_UseSideInletHeight_ (x.SimFlowEnergyTransSto_UseSideInletHeight_, f, this),
        SimFlowEnergyTransSto_UseSideOutletHeight_ (x.SimFlowEnergyTransSto_UseSideOutletHeight_, f, this),
        SimFlowEnergyTransSto_SrcSideInletHeight_ (x.SimFlowEnergyTransSto_SrcSideInletHeight_, f, this),
        SimFlowEnergyTransSto_SrcSideOutletHeight_ (x.SimFlowEnergyTransSto_SrcSideOutletHeight_, f, this),
        SimFlowEnergyTransSto_InletMode_ (x.SimFlowEnergyTransSto_InletMode_, f, this),
        SimFlowEnergyTransSto_NumNodes_ (x.SimFlowEnergyTransSto_NumNodes_, f, this),
        SimFlowEnergyTransSto_AddDestratCond_ (x.SimFlowEnergyTransSto_AddDestratCond_, f, this),
        SimFlowEnergyTransSto_NodeAddLossCoef_1_10_ (x.SimFlowEnergyTransSto_NodeAddLossCoef_1_10_, f, this)
      {
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      SimFlowEnergyTransferStorage_HotWaterTank_Stratified (const ::xercesc::DOMElement& e,
                                                            ::xml_schema::flags f,
                                                            ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTransSto_TankVol_ (this),
        SimFlowEnergyTransSto_MaxTempLimit_ (this),
        SimFlowEnergyTransSto_HeatFuelType_ (this),
        SimFlowEnergyTransSto_HeatThermalEff_ (this),
        SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_ (this),
        SimFlowEnergyTransSto_fCycleParasiticFuelType_ (this),
        SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticFuelType_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_ (this),
        SimFlowEnergyTransSto_AmbTempdic_ (this),
        SimFlowEnergyTransSto_AmbTempSchedName_ (this),
        SimFlowEnergyTransSto_AmbTempZoneName_ (this),
        SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_ (this),
        SimFlowEnergyTransSto_PeakUseFlowRate_ (this),
        SimFlowEnergyTransSto_UseFlowRateFractSchedName_ (this),
        SimFlowEnergyTransSto_ColdWaterSupTempSchedName_ (this),
        SimFlowEnergyTransSto_UseSideInletNodeName_ (this),
        SimFlowEnergyTransSto_UseSideOutletNodeName_ (this),
        SimFlowEnergyTransSto_UseSideEffect_ (this),
        SimFlowEnergyTransSto_SrcSideInletNodeName_ (this),
        SimFlowEnergyTransSto_SrcSideOutletNodeName_ (this),
        SimFlowEnergyTransSto_SrcSideEffect_ (this),
        SimFlowEnergyTransSto_UseSideDesignFlowRate_ (this),
        SimFlowEnergyTransSto_SrcSideDesignFlowRate_ (this),
        SimFlowEnergyTransSto_directWaterHeatingRecovTime_ (this),
        SimFlowEnergyTransSto_EndUseSubCat_ (this),
        SimFlowEnergyTransSto_TankHeight_ (this),
        SimFlowEnergyTransSto_TankShape_ (this),
        SimFlowEnergyTransSto_TankPerimeter_ (this),
        SimFlowEnergyTransSto_HeatPriorityCntl_ (this),
        SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_ (this),
        SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_ (this),
        SimFlowEnergyTransSto_HeatCap_1_2_ (this),
        SimFlowEnergyTransSto_HeatHeight_1_2_ (this),
        SimFlowEnergyTransSto_fCycleParasiticHeight_ (this),
        SimFlowEnergyTransSto_OnCycleParasiticHeight_ (this),
        SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (this),
        SimFlowEnergyTransSto_SkinLossFractToZone_ (this),
        SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_ (this),
        SimFlowEnergyTransSto_fCycleFlueLossFractToZone_ (this),
        SimFlowEnergyTransSto_UseSideInletHeight_ (this),
        SimFlowEnergyTransSto_UseSideOutletHeight_ (this),
        SimFlowEnergyTransSto_SrcSideInletHeight_ (this),
        SimFlowEnergyTransSto_SrcSideOutletHeight_ (this),
        SimFlowEnergyTransSto_InletMode_ (this),
        SimFlowEnergyTransSto_NumNodes_ (this),
        SimFlowEnergyTransSto_AddDestratCond_ (this),
        SimFlowEnergyTransSto_NodeAddLossCoef_1_10_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTransSto_TankVol
          //
          if (n.name () == "SimFlowEnergyTransSto_TankVol" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_TankVol_)
            {
              this->SimFlowEnergyTransSto_TankVol_.set (SimFlowEnergyTransSto_TankVol_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_MaxTempLimit
          //
          if (n.name () == "SimFlowEnergyTransSto_MaxTempLimit" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_MaxTempLimit_)
            {
              this->SimFlowEnergyTransSto_MaxTempLimit_.set (SimFlowEnergyTransSto_MaxTempLimit_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatFuelType
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatFuelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_HeatFuelType_type > r (
              SimFlowEnergyTransSto_HeatFuelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_HeatFuelType_)
            {
              this->SimFlowEnergyTransSto_HeatFuelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatThermalEff
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatThermalEff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_HeatThermalEff_)
            {
              this->SimFlowEnergyTransSto_HeatThermalEff_.set (SimFlowEnergyTransSto_HeatThermalEff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate
          //
          if (n.name () == "SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_)
            {
              this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_.set (SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_fCycleParasiticFuelType
          //
          if (n.name () == "SimFlowEnergyTransSto_fCycleParasiticFuelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_fCycleParasiticFuelType_type > r (
              SimFlowEnergyTransSto_fCycleParasiticFuelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_fCycleParasiticFuelType_)
            {
              this->SimFlowEnergyTransSto_fCycleParasiticFuelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank
          //
          if (n.name () == "SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_)
            {
              this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_.set (SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate
          //
          if (n.name () == "SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_)
            {
              this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_.set (SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_OnCycleParasiticFuelType
          //
          if (n.name () == "SimFlowEnergyTransSto_OnCycleParasiticFuelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_OnCycleParasiticFuelType_type > r (
              SimFlowEnergyTransSto_OnCycleParasiticFuelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_)
            {
              this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank
          //
          if (n.name () == "SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_)
            {
              this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_.set (SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_AmbTempdic
          //
          if (n.name () == "SimFlowEnergyTransSto_AmbTempdic" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_AmbTempdic_type > r (
              SimFlowEnergyTransSto_AmbTempdic_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_AmbTempdic_)
            {
              this->SimFlowEnergyTransSto_AmbTempdic_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_AmbTempSchedName
          //
          if (n.name () == "SimFlowEnergyTransSto_AmbTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_AmbTempSchedName_type > r (
              SimFlowEnergyTransSto_AmbTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_AmbTempSchedName_)
            {
              this->SimFlowEnergyTransSto_AmbTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_AmbTempZoneName
          //
          if (n.name () == "SimFlowEnergyTransSto_AmbTempZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_AmbTempZoneName_type > r (
              SimFlowEnergyTransSto_AmbTempZoneName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_AmbTempZoneName_)
            {
              this->SimFlowEnergyTransSto_AmbTempZoneName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_AmbTempOutdrAirNodeName
          //
          if (n.name () == "SimFlowEnergyTransSto_AmbTempOutdrAirNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_type > r (
              SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_)
            {
              this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_PeakUseFlowRate
          //
          if (n.name () == "SimFlowEnergyTransSto_PeakUseFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_PeakUseFlowRate_)
            {
              this->SimFlowEnergyTransSto_PeakUseFlowRate_.set (SimFlowEnergyTransSto_PeakUseFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseFlowRateFractSchedName
          //
          if (n.name () == "SimFlowEnergyTransSto_UseFlowRateFractSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_UseFlowRateFractSchedName_type > r (
              SimFlowEnergyTransSto_UseFlowRateFractSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_)
            {
              this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_ColdWaterSupTempSchedName
          //
          if (n.name () == "SimFlowEnergyTransSto_ColdWaterSupTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_ColdWaterSupTempSchedName_type > r (
              SimFlowEnergyTransSto_ColdWaterSupTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_)
            {
              this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseSideInletNodeName
          //
          if (n.name () == "SimFlowEnergyTransSto_UseSideInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_UseSideInletNodeName_type > r (
              SimFlowEnergyTransSto_UseSideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_UseSideInletNodeName_)
            {
              this->SimFlowEnergyTransSto_UseSideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseSideOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTransSto_UseSideOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_UseSideOutletNodeName_type > r (
              SimFlowEnergyTransSto_UseSideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_UseSideOutletNodeName_)
            {
              this->SimFlowEnergyTransSto_UseSideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseSideEffect
          //
          if (n.name () == "SimFlowEnergyTransSto_UseSideEffect" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_UseSideEffect_)
            {
              this->SimFlowEnergyTransSto_UseSideEffect_.set (SimFlowEnergyTransSto_UseSideEffect_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_SrcSideInletNodeName
          //
          if (n.name () == "SimFlowEnergyTransSto_SrcSideInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_SrcSideInletNodeName_type > r (
              SimFlowEnergyTransSto_SrcSideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_SrcSideInletNodeName_)
            {
              this->SimFlowEnergyTransSto_SrcSideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_SrcSideOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTransSto_SrcSideOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_SrcSideOutletNodeName_type > r (
              SimFlowEnergyTransSto_SrcSideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_SrcSideOutletNodeName_)
            {
              this->SimFlowEnergyTransSto_SrcSideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_SrcSideEffect
          //
          if (n.name () == "SimFlowEnergyTransSto_SrcSideEffect" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_SrcSideEffect_)
            {
              this->SimFlowEnergyTransSto_SrcSideEffect_.set (SimFlowEnergyTransSto_SrcSideEffect_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseSideDesignFlowRate
          //
          if (n.name () == "SimFlowEnergyTransSto_UseSideDesignFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_UseSideDesignFlowRate_)
            {
              this->SimFlowEnergyTransSto_UseSideDesignFlowRate_.set (SimFlowEnergyTransSto_UseSideDesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_SrcSideDesignFlowRate
          //
          if (n.name () == "SimFlowEnergyTransSto_SrcSideDesignFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_)
            {
              this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_.set (SimFlowEnergyTransSto_SrcSideDesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_directWaterHeatingRecovTime
          //
          if (n.name () == "SimFlowEnergyTransSto_directWaterHeatingRecovTime" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_)
            {
              this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_.set (SimFlowEnergyTransSto_directWaterHeatingRecovTime_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_EndUseSubCat
          //
          if (n.name () == "SimFlowEnergyTransSto_EndUseSubCat" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_EndUseSubCat_type > r (
              SimFlowEnergyTransSto_EndUseSubCat_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_EndUseSubCat_)
            {
              this->SimFlowEnergyTransSto_EndUseSubCat_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_TankHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_TankHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_TankHeight_)
            {
              this->SimFlowEnergyTransSto_TankHeight_.set (SimFlowEnergyTransSto_TankHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_TankShape
          //
          if (n.name () == "SimFlowEnergyTransSto_TankShape" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_TankShape_type > r (
              SimFlowEnergyTransSto_TankShape_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_TankShape_)
            {
              this->SimFlowEnergyTransSto_TankShape_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_TankPerimeter
          //
          if (n.name () == "SimFlowEnergyTransSto_TankPerimeter" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_TankPerimeter_)
            {
              this->SimFlowEnergyTransSto_TankPerimeter_.set (SimFlowEnergyTransSto_TankPerimeter_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatPriorityCntl
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatPriorityCntl" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_HeatPriorityCntl_type > r (
              SimFlowEnergyTransSto_HeatPriorityCntl_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_HeatPriorityCntl_)
            {
              this->SimFlowEnergyTransSto_HeatPriorityCntl_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_type > r (
              SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_)
            {
              this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_type > r (
              SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_)
            {
              this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatCap_1_2
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatCap_1_2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_HeatCap_1_2_type > r (
              SimFlowEnergyTransSto_HeatCap_1_2_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_HeatCap_1_2_)
            {
              this->SimFlowEnergyTransSto_HeatCap_1_2_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_HeatHeight_1_2
          //
          if (n.name () == "SimFlowEnergyTransSto_HeatHeight_1_2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_HeatHeight_1_2_type > r (
              SimFlowEnergyTransSto_HeatHeight_1_2_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_HeatHeight_1_2_)
            {
              this->SimFlowEnergyTransSto_HeatHeight_1_2_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_fCycleParasiticHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_fCycleParasiticHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_fCycleParasiticHeight_)
            {
              this->SimFlowEnergyTransSto_fCycleParasiticHeight_.set (SimFlowEnergyTransSto_fCycleParasiticHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_OnCycleParasiticHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_OnCycleParasiticHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_OnCycleParasiticHeight_)
            {
              this->SimFlowEnergyTransSto_OnCycleParasiticHeight_.set (SimFlowEnergyTransSto_OnCycleParasiticHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp
          //
          if (n.name () == "SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_)
            {
              this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_.set (SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_SkinLossFractToZone
          //
          if (n.name () == "SimFlowEnergyTransSto_SkinLossFractToZone" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_SkinLossFractToZone_)
            {
              this->SimFlowEnergyTransSto_SkinLossFractToZone_.set (SimFlowEnergyTransSto_SkinLossFractToZone_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp
          //
          if (n.name () == "SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_)
            {
              this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_.set (SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_fCycleFlueLossFractToZone
          //
          if (n.name () == "SimFlowEnergyTransSto_fCycleFlueLossFractToZone" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_)
            {
              this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_.set (SimFlowEnergyTransSto_fCycleFlueLossFractToZone_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseSideInletHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_UseSideInletHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_UseSideInletHeight_)
            {
              this->SimFlowEnergyTransSto_UseSideInletHeight_.set (SimFlowEnergyTransSto_UseSideInletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_UseSideOutletHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_UseSideOutletHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_UseSideOutletHeight_)
            {
              this->SimFlowEnergyTransSto_UseSideOutletHeight_.set (SimFlowEnergyTransSto_UseSideOutletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_SrcSideInletHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_SrcSideInletHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_SrcSideInletHeight_)
            {
              this->SimFlowEnergyTransSto_SrcSideInletHeight_.set (SimFlowEnergyTransSto_SrcSideInletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_SrcSideOutletHeight
          //
          if (n.name () == "SimFlowEnergyTransSto_SrcSideOutletHeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_SrcSideOutletHeight_)
            {
              this->SimFlowEnergyTransSto_SrcSideOutletHeight_.set (SimFlowEnergyTransSto_SrcSideOutletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_InletMode
          //
          if (n.name () == "SimFlowEnergyTransSto_InletMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_InletMode_type > r (
              SimFlowEnergyTransSto_InletMode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_InletMode_)
            {
              this->SimFlowEnergyTransSto_InletMode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTransSto_NumNodes
          //
          if (n.name () == "SimFlowEnergyTransSto_NumNodes" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_NumNodes_)
            {
              this->SimFlowEnergyTransSto_NumNodes_.set (SimFlowEnergyTransSto_NumNodes_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_AddDestratCond
          //
          if (n.name () == "SimFlowEnergyTransSto_AddDestratCond" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTransSto_AddDestratCond_)
            {
              this->SimFlowEnergyTransSto_AddDestratCond_.set (SimFlowEnergyTransSto_AddDestratCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTransSto_NodeAddLossCoef_1_10
          //
          if (n.name () == "SimFlowEnergyTransSto_NodeAddLossCoef_1_10" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTransSto_NodeAddLossCoef_1_10_type > r (
              SimFlowEnergyTransSto_NodeAddLossCoef_1_10_traits::create (i, f, this));

            if (!this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_)
            {
              this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified* SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransferStorage_HotWaterTank_Stratified (*this, f, c);
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified& SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      operator= (const SimFlowEnergyTransferStorage_HotWaterTank_Stratified& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank& > (*this) = x;
          this->SimFlowEnergyTransSto_TankVol_ = x.SimFlowEnergyTransSto_TankVol_;
          this->SimFlowEnergyTransSto_MaxTempLimit_ = x.SimFlowEnergyTransSto_MaxTempLimit_;
          this->SimFlowEnergyTransSto_HeatFuelType_ = x.SimFlowEnergyTransSto_HeatFuelType_;
          this->SimFlowEnergyTransSto_HeatThermalEff_ = x.SimFlowEnergyTransSto_HeatThermalEff_;
          this->SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_ = x.SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate_;
          this->SimFlowEnergyTransSto_fCycleParasiticFuelType_ = x.SimFlowEnergyTransSto_fCycleParasiticFuelType_;
          this->SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_ = x.SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank_;
          this->SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_ = x.SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate_;
          this->SimFlowEnergyTransSto_OnCycleParasiticFuelType_ = x.SimFlowEnergyTransSto_OnCycleParasiticFuelType_;
          this->SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_ = x.SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank_;
          this->SimFlowEnergyTransSto_AmbTempdic_ = x.SimFlowEnergyTransSto_AmbTempdic_;
          this->SimFlowEnergyTransSto_AmbTempSchedName_ = x.SimFlowEnergyTransSto_AmbTempSchedName_;
          this->SimFlowEnergyTransSto_AmbTempZoneName_ = x.SimFlowEnergyTransSto_AmbTempZoneName_;
          this->SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_ = x.SimFlowEnergyTransSto_AmbTempOutdrAirNodeName_;
          this->SimFlowEnergyTransSto_PeakUseFlowRate_ = x.SimFlowEnergyTransSto_PeakUseFlowRate_;
          this->SimFlowEnergyTransSto_UseFlowRateFractSchedName_ = x.SimFlowEnergyTransSto_UseFlowRateFractSchedName_;
          this->SimFlowEnergyTransSto_ColdWaterSupTempSchedName_ = x.SimFlowEnergyTransSto_ColdWaterSupTempSchedName_;
          this->SimFlowEnergyTransSto_UseSideInletNodeName_ = x.SimFlowEnergyTransSto_UseSideInletNodeName_;
          this->SimFlowEnergyTransSto_UseSideOutletNodeName_ = x.SimFlowEnergyTransSto_UseSideOutletNodeName_;
          this->SimFlowEnergyTransSto_UseSideEffect_ = x.SimFlowEnergyTransSto_UseSideEffect_;
          this->SimFlowEnergyTransSto_SrcSideInletNodeName_ = x.SimFlowEnergyTransSto_SrcSideInletNodeName_;
          this->SimFlowEnergyTransSto_SrcSideOutletNodeName_ = x.SimFlowEnergyTransSto_SrcSideOutletNodeName_;
          this->SimFlowEnergyTransSto_SrcSideEffect_ = x.SimFlowEnergyTransSto_SrcSideEffect_;
          this->SimFlowEnergyTransSto_UseSideDesignFlowRate_ = x.SimFlowEnergyTransSto_UseSideDesignFlowRate_;
          this->SimFlowEnergyTransSto_SrcSideDesignFlowRate_ = x.SimFlowEnergyTransSto_SrcSideDesignFlowRate_;
          this->SimFlowEnergyTransSto_directWaterHeatingRecovTime_ = x.SimFlowEnergyTransSto_directWaterHeatingRecovTime_;
          this->SimFlowEnergyTransSto_EndUseSubCat_ = x.SimFlowEnergyTransSto_EndUseSubCat_;
          this->SimFlowEnergyTransSto_TankHeight_ = x.SimFlowEnergyTransSto_TankHeight_;
          this->SimFlowEnergyTransSto_TankShape_ = x.SimFlowEnergyTransSto_TankShape_;
          this->SimFlowEnergyTransSto_TankPerimeter_ = x.SimFlowEnergyTransSto_TankPerimeter_;
          this->SimFlowEnergyTransSto_HeatPriorityCntl_ = x.SimFlowEnergyTransSto_HeatPriorityCntl_;
          this->SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_ = x.SimFlowEnergyTransSto_HeatSetpointTempSchedName_1_2_;
          this->SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_ = x.SimFlowEnergyTransSto_HeatDeadbandTempDiff_1_2_;
          this->SimFlowEnergyTransSto_HeatCap_1_2_ = x.SimFlowEnergyTransSto_HeatCap_1_2_;
          this->SimFlowEnergyTransSto_HeatHeight_1_2_ = x.SimFlowEnergyTransSto_HeatHeight_1_2_;
          this->SimFlowEnergyTransSto_fCycleParasiticHeight_ = x.SimFlowEnergyTransSto_fCycleParasiticHeight_;
          this->SimFlowEnergyTransSto_OnCycleParasiticHeight_ = x.SimFlowEnergyTransSto_OnCycleParasiticHeight_;
          this->SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ = x.SimFlowEnergyTransSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_;
          this->SimFlowEnergyTransSto_SkinLossFractToZone_ = x.SimFlowEnergyTransSto_SkinLossFractToZone_;
          this->SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_ = x.SimFlowEnergyTransSto_fCycleFlueLossCoefToAmbTemp_;
          this->SimFlowEnergyTransSto_fCycleFlueLossFractToZone_ = x.SimFlowEnergyTransSto_fCycleFlueLossFractToZone_;
          this->SimFlowEnergyTransSto_UseSideInletHeight_ = x.SimFlowEnergyTransSto_UseSideInletHeight_;
          this->SimFlowEnergyTransSto_UseSideOutletHeight_ = x.SimFlowEnergyTransSto_UseSideOutletHeight_;
          this->SimFlowEnergyTransSto_SrcSideInletHeight_ = x.SimFlowEnergyTransSto_SrcSideInletHeight_;
          this->SimFlowEnergyTransSto_SrcSideOutletHeight_ = x.SimFlowEnergyTransSto_SrcSideOutletHeight_;
          this->SimFlowEnergyTransSto_InletMode_ = x.SimFlowEnergyTransSto_InletMode_;
          this->SimFlowEnergyTransSto_NumNodes_ = x.SimFlowEnergyTransSto_NumNodes_;
          this->SimFlowEnergyTransSto_AddDestratCond_ = x.SimFlowEnergyTransSto_AddDestratCond_;
          this->SimFlowEnergyTransSto_NodeAddLossCoef_1_10_ = x.SimFlowEnergyTransSto_NodeAddLossCoef_1_10_;
        }

        return *this;
      }

      SimFlowEnergyTransferStorage_HotWaterTank_Stratified::
      ~SimFlowEnergyTransferStorage_HotWaterTank_Stratified ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

