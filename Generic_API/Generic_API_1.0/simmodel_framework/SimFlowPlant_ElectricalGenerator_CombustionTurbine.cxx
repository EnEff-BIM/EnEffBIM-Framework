// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_ElectricalGenerator_CombustionTurbine.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_CombustionTurbine
      // 

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_FuelType_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelType () const
      {
        return this->SimFlowPlant_FuelType_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_FuelType_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelType ()
      {
        return this->SimFlowPlant_FuelType_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelType (const SimFlowPlant_FuelType_type& x)
      {
        this->SimFlowPlant_FuelType_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelType (const SimFlowPlant_FuelType_optional& x)
      {
        this->SimFlowPlant_FuelType_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelType (::std::auto_ptr< SimFlowPlant_FuelType_type > x)
      {
        this->SimFlowPlant_FuelType_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_MinPartLoadRatio_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MinPartLoadRatio () const
      {
        return this->SimFlowPlant_MinPartLoadRatio_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_MinPartLoadRatio_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MinPartLoadRatio ()
      {
        return this->SimFlowPlant_MinPartLoadRatio_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MinPartLoadRatio (const SimFlowPlant_MinPartLoadRatio_type& x)
      {
        this->SimFlowPlant_MinPartLoadRatio_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MinPartLoadRatio (const SimFlowPlant_MinPartLoadRatio_optional& x)
      {
        this->SimFlowPlant_MinPartLoadRatio_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_MaxPartLoadRatio_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxPartLoadRatio () const
      {
        return this->SimFlowPlant_MaxPartLoadRatio_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_MaxPartLoadRatio_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxPartLoadRatio ()
      {
        return this->SimFlowPlant_MaxPartLoadRatio_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxPartLoadRatio (const SimFlowPlant_MaxPartLoadRatio_type& x)
      {
        this->SimFlowPlant_MaxPartLoadRatio_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxPartLoadRatio (const SimFlowPlant_MaxPartLoadRatio_optional& x)
      {
        this->SimFlowPlant_MaxPartLoadRatio_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_OptimumPartLoadRatio_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OptimumPartLoadRatio () const
      {
        return this->SimFlowPlant_OptimumPartLoadRatio_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_OptimumPartLoadRatio_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OptimumPartLoadRatio ()
      {
        return this->SimFlowPlant_OptimumPartLoadRatio_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OptimumPartLoadRatio (const SimFlowPlant_OptimumPartLoadRatio_type& x)
      {
        this->SimFlowPlant_OptimumPartLoadRatio_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OptimumPartLoadRatio (const SimFlowPlant_OptimumPartLoadRatio_optional& x)
      {
        this->SimFlowPlant_OptimumPartLoadRatio_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_DesignHeatRecovWaterFlowRate_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignHeatRecovWaterFlowRate () const
      {
        return this->SimFlowPlant_DesignHeatRecovWaterFlowRate_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_DesignHeatRecovWaterFlowRate_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignHeatRecovWaterFlowRate ()
      {
        return this->SimFlowPlant_DesignHeatRecovWaterFlowRate_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignHeatRecovWaterFlowRate (const SimFlowPlant_DesignHeatRecovWaterFlowRate_type& x)
      {
        this->SimFlowPlant_DesignHeatRecovWaterFlowRate_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignHeatRecovWaterFlowRate (const SimFlowPlant_DesignHeatRecovWaterFlowRate_optional& x)
      {
        this->SimFlowPlant_DesignHeatRecovWaterFlowRate_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovInletNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovInletNodeName () const
      {
        return this->SimFlowPlant_HeatRecovInletNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovInletNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovInletNodeName ()
      {
        return this->SimFlowPlant_HeatRecovInletNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovInletNodeName (const SimFlowPlant_HeatRecovInletNodeName_type& x)
      {
        this->SimFlowPlant_HeatRecovInletNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovInletNodeName (const SimFlowPlant_HeatRecovInletNodeName_optional& x)
      {
        this->SimFlowPlant_HeatRecovInletNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovInletNodeName (::std::auto_ptr< SimFlowPlant_HeatRecovInletNodeName_type > x)
      {
        this->SimFlowPlant_HeatRecovInletNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovOutletNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovOutletNodeName () const
      {
        return this->SimFlowPlant_HeatRecovOutletNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovOutletNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovOutletNodeName ()
      {
        return this->SimFlowPlant_HeatRecovOutletNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovOutletNodeName (const SimFlowPlant_HeatRecovOutletNodeName_type& x)
      {
        this->SimFlowPlant_HeatRecovOutletNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovOutletNodeName (const SimFlowPlant_HeatRecovOutletNodeName_optional& x)
      {
        this->SimFlowPlant_HeatRecovOutletNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovOutletNodeName (::std::auto_ptr< SimFlowPlant_HeatRecovOutletNodeName_type > x)
      {
        this->SimFlowPlant_HeatRecovOutletNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_MaxExhFlowPerUnitPwrOutput_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxExhFlowPerUnitPwrOutput () const
      {
        return this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_MaxExhFlowPerUnitPwrOutput_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxExhFlowPerUnitPwrOutput ()
      {
        return this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxExhFlowPerUnitPwrOutput (const SimFlowPlant_MaxExhFlowPerUnitPwrOutput_type& x)
      {
        this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_MaxExhFlowPerUnitPwrOutput (const SimFlowPlant_MaxExhFlowPerUnitPwrOutput_optional& x)
      {
        this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_DesignMinExhTemp_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignMinExhTemp () const
      {
        return this->SimFlowPlant_DesignMinExhTemp_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_DesignMinExhTemp_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignMinExhTemp ()
      {
        return this->SimFlowPlant_DesignMinExhTemp_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignMinExhTemp (const SimFlowPlant_DesignMinExhTemp_type& x)
      {
        this->SimFlowPlant_DesignMinExhTemp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignMinExhTemp (const SimFlowPlant_DesignMinExhTemp_optional& x)
      {
        this->SimFlowPlant_DesignMinExhTemp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_FuelHigherHeatingVal_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelHigherHeatingVal () const
      {
        return this->SimFlowPlant_FuelHigherHeatingVal_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_FuelHigherHeatingVal_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelHigherHeatingVal ()
      {
        return this->SimFlowPlant_FuelHigherHeatingVal_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelHigherHeatingVal (const SimFlowPlant_FuelHigherHeatingVal_type& x)
      {
        this->SimFlowPlant_FuelHigherHeatingVal_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_FuelHigherHeatingVal (const SimFlowPlant_FuelHigherHeatingVal_optional& x)
      {
        this->SimFlowPlant_FuelHigherHeatingVal_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovMaxTemp_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovMaxTemp () const
      {
        return this->SimFlowPlant_HeatRecovMaxTemp_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovMaxTemp_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovMaxTemp ()
      {
        return this->SimFlowPlant_HeatRecovMaxTemp_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovMaxTemp (const SimFlowPlant_HeatRecovMaxTemp_type& x)
      {
        this->SimFlowPlant_HeatRecovMaxTemp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovMaxTemp (const SimFlowPlant_HeatRecovMaxTemp_optional& x)
      {
        this->SimFlowPlant_HeatRecovMaxTemp_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_OutdrAirInletNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OutdrAirInletNodeName () const
      {
        return this->SimFlowPlant_OutdrAirInletNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_OutdrAirInletNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OutdrAirInletNodeName ()
      {
        return this->SimFlowPlant_OutdrAirInletNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OutdrAirInletNodeName (const SimFlowPlant_OutdrAirInletNodeName_type& x)
      {
        this->SimFlowPlant_OutdrAirInletNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OutdrAirInletNodeName (const SimFlowPlant_OutdrAirInletNodeName_optional& x)
      {
        this->SimFlowPlant_OutdrAirInletNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_OutdrAirInletNodeName (::std::auto_ptr< SimFlowPlant_OutdrAirInletNodeName_type > x)
      {
        this->SimFlowPlant_OutdrAirInletNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_RatedPwrOutput_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_RatedPwrOutput () const
      {
        return this->SimFlowPlant_RatedPwrOutput_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_RatedPwrOutput_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_RatedPwrOutput ()
      {
        return this->SimFlowPlant_RatedPwrOutput_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_RatedPwrOutput (const SimFlowPlant_RatedPwrOutput_type& x)
      {
        this->SimFlowPlant_RatedPwrOutput_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_RatedPwrOutput (const SimFlowPlant_RatedPwrOutput_optional& x)
      {
        this->SimFlowPlant_RatedPwrOutput_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_ElecCircuitNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElecCircuitNodeName () const
      {
        return this->SimFlowPlant_ElecCircuitNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_ElecCircuitNodeName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElecCircuitNodeName ()
      {
        return this->SimFlowPlant_ElecCircuitNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElecCircuitNodeName (const SimFlowPlant_ElecCircuitNodeName_type& x)
      {
        this->SimFlowPlant_ElecCircuitNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElecCircuitNodeName (const SimFlowPlant_ElecCircuitNodeName_optional& x)
      {
        this->SimFlowPlant_ElecCircuitNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElecCircuitNodeName (::std::auto_ptr< SimFlowPlant_ElecCircuitNodeName_type > x)
      {
        this->SimFlowPlant_ElecCircuitNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_PartLoadBasedFuelInputCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedFuelInputCurveName () const
      {
        return this->SimFlowPlant_PartLoadBasedFuelInputCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_PartLoadBasedFuelInputCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedFuelInputCurveName ()
      {
        return this->SimFlowPlant_PartLoadBasedFuelInputCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedFuelInputCurveName (const SimFlowPlant_PartLoadBasedFuelInputCurveName_type& x)
      {
        this->SimFlowPlant_PartLoadBasedFuelInputCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedFuelInputCurveName (const SimFlowPlant_PartLoadBasedFuelInputCurveName_optional& x)
      {
        this->SimFlowPlant_PartLoadBasedFuelInputCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedFuelInputCurveName (::std::auto_ptr< SimFlowPlant_PartLoadBasedFuelInputCurveName_type > x)
      {
        this->SimFlowPlant_PartLoadBasedFuelInputCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_TempBasedFuelInputCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedFuelInputCurveName () const
      {
        return this->SimFlowPlant_TempBasedFuelInputCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_TempBasedFuelInputCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedFuelInputCurveName ()
      {
        return this->SimFlowPlant_TempBasedFuelInputCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedFuelInputCurveName (const SimFlowPlant_TempBasedFuelInputCurveName_type& x)
      {
        this->SimFlowPlant_TempBasedFuelInputCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedFuelInputCurveName (const SimFlowPlant_TempBasedFuelInputCurveName_optional& x)
      {
        this->SimFlowPlant_TempBasedFuelInputCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedFuelInputCurveName (::std::auto_ptr< SimFlowPlant_TempBasedFuelInputCurveName_type > x)
      {
        this->SimFlowPlant_TempBasedFuelInputCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_ExhFlowCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ExhFlowCurveName () const
      {
        return this->SimFlowPlant_ExhFlowCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_ExhFlowCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ExhFlowCurveName ()
      {
        return this->SimFlowPlant_ExhFlowCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ExhFlowCurveName (const SimFlowPlant_ExhFlowCurveName_type& x)
      {
        this->SimFlowPlant_ExhFlowCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ExhFlowCurveName (const SimFlowPlant_ExhFlowCurveName_optional& x)
      {
        this->SimFlowPlant_ExhFlowCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ExhFlowCurveName (::std::auto_ptr< SimFlowPlant_ExhFlowCurveName_type > x)
      {
        this->SimFlowPlant_ExhFlowCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_PartLoadBasedExhTempCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedExhTempCurveName () const
      {
        return this->SimFlowPlant_PartLoadBasedExhTempCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_PartLoadBasedExhTempCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedExhTempCurveName ()
      {
        return this->SimFlowPlant_PartLoadBasedExhTempCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedExhTempCurveName (const SimFlowPlant_PartLoadBasedExhTempCurveName_type& x)
      {
        this->SimFlowPlant_PartLoadBasedExhTempCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedExhTempCurveName (const SimFlowPlant_PartLoadBasedExhTempCurveName_optional& x)
      {
        this->SimFlowPlant_PartLoadBasedExhTempCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_PartLoadBasedExhTempCurveName (::std::auto_ptr< SimFlowPlant_PartLoadBasedExhTempCurveName_type > x)
      {
        this->SimFlowPlant_PartLoadBasedExhTempCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_TempBasedExhTempCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedExhTempCurveName () const
      {
        return this->SimFlowPlant_TempBasedExhTempCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_TempBasedExhTempCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedExhTempCurveName ()
      {
        return this->SimFlowPlant_TempBasedExhTempCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedExhTempCurveName (const SimFlowPlant_TempBasedExhTempCurveName_type& x)
      {
        this->SimFlowPlant_TempBasedExhTempCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedExhTempCurveName (const SimFlowPlant_TempBasedExhTempCurveName_optional& x)
      {
        this->SimFlowPlant_TempBasedExhTempCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_TempBasedExhTempCurveName (::std::auto_ptr< SimFlowPlant_TempBasedExhTempCurveName_type > x)
      {
        this->SimFlowPlant_TempBasedExhTempCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovLubeEnergyCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovLubeEnergyCurveName () const
      {
        return this->SimFlowPlant_HeatRecovLubeEnergyCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_HeatRecovLubeEnergyCurveName_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovLubeEnergyCurveName ()
      {
        return this->SimFlowPlant_HeatRecovLubeEnergyCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovLubeEnergyCurveName (const SimFlowPlant_HeatRecovLubeEnergyCurveName_type& x)
      {
        this->SimFlowPlant_HeatRecovLubeEnergyCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovLubeEnergyCurveName (const SimFlowPlant_HeatRecovLubeEnergyCurveName_optional& x)
      {
        this->SimFlowPlant_HeatRecovLubeEnergyCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_HeatRecovLubeEnergyCurveName (::std::auto_ptr< SimFlowPlant_HeatRecovLubeEnergyCurveName_type > x)
      {
        this->SimFlowPlant_HeatRecovLubeEnergyCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_DesignAirInletTemp_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignAirInletTemp () const
      {
        return this->SimFlowPlant_DesignAirInletTemp_;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::SimFlowPlant_DesignAirInletTemp_optional& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignAirInletTemp ()
      {
        return this->SimFlowPlant_DesignAirInletTemp_;
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignAirInletTemp (const SimFlowPlant_DesignAirInletTemp_type& x)
      {
        this->SimFlowPlant_DesignAirInletTemp_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_DesignAirInletTemp (const SimFlowPlant_DesignAirInletTemp_optional& x)
      {
        this->SimFlowPlant_DesignAirInletTemp_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_CombustionTurbine
      //

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElectricalGenerator_CombustionTurbine (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (RefId),
        SimFlowPlant_FuelType_ (this),
        SimFlowPlant_MinPartLoadRatio_ (this),
        SimFlowPlant_MaxPartLoadRatio_ (this),
        SimFlowPlant_OptimumPartLoadRatio_ (this),
        SimFlowPlant_DesignHeatRecovWaterFlowRate_ (this),
        SimFlowPlant_HeatRecovInletNodeName_ (this),
        SimFlowPlant_HeatRecovOutletNodeName_ (this),
        SimFlowPlant_MaxExhFlowPerUnitPwrOutput_ (this),
        SimFlowPlant_DesignMinExhTemp_ (this),
        SimFlowPlant_FuelHigherHeatingVal_ (this),
        SimFlowPlant_HeatRecovMaxTemp_ (this),
        SimFlowPlant_OutdrAirInletNodeName_ (this),
        SimFlowPlant_RatedPwrOutput_ (this),
        SimFlowPlant_ElecCircuitNodeName_ (this),
        SimFlowPlant_PartLoadBasedFuelInputCurveName_ (this),
        SimFlowPlant_TempBasedFuelInputCurveName_ (this),
        SimFlowPlant_ExhFlowCurveName_ (this),
        SimFlowPlant_PartLoadBasedExhTempCurveName_ (this),
        SimFlowPlant_TempBasedExhTempCurveName_ (this),
        SimFlowPlant_HeatRecovLubeEnergyCurveName_ (this),
        SimFlowPlant_DesignAirInletTemp_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElectricalGenerator_CombustionTurbine (const SimFlowPlant_ElectricalGenerator_CombustionTurbine& x,
                                                          ::xml_schema::flags f,
                                                          ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (x, f, c),
        SimFlowPlant_FuelType_ (x.SimFlowPlant_FuelType_, f, this),
        SimFlowPlant_MinPartLoadRatio_ (x.SimFlowPlant_MinPartLoadRatio_, f, this),
        SimFlowPlant_MaxPartLoadRatio_ (x.SimFlowPlant_MaxPartLoadRatio_, f, this),
        SimFlowPlant_OptimumPartLoadRatio_ (x.SimFlowPlant_OptimumPartLoadRatio_, f, this),
        SimFlowPlant_DesignHeatRecovWaterFlowRate_ (x.SimFlowPlant_DesignHeatRecovWaterFlowRate_, f, this),
        SimFlowPlant_HeatRecovInletNodeName_ (x.SimFlowPlant_HeatRecovInletNodeName_, f, this),
        SimFlowPlant_HeatRecovOutletNodeName_ (x.SimFlowPlant_HeatRecovOutletNodeName_, f, this),
        SimFlowPlant_MaxExhFlowPerUnitPwrOutput_ (x.SimFlowPlant_MaxExhFlowPerUnitPwrOutput_, f, this),
        SimFlowPlant_DesignMinExhTemp_ (x.SimFlowPlant_DesignMinExhTemp_, f, this),
        SimFlowPlant_FuelHigherHeatingVal_ (x.SimFlowPlant_FuelHigherHeatingVal_, f, this),
        SimFlowPlant_HeatRecovMaxTemp_ (x.SimFlowPlant_HeatRecovMaxTemp_, f, this),
        SimFlowPlant_OutdrAirInletNodeName_ (x.SimFlowPlant_OutdrAirInletNodeName_, f, this),
        SimFlowPlant_RatedPwrOutput_ (x.SimFlowPlant_RatedPwrOutput_, f, this),
        SimFlowPlant_ElecCircuitNodeName_ (x.SimFlowPlant_ElecCircuitNodeName_, f, this),
        SimFlowPlant_PartLoadBasedFuelInputCurveName_ (x.SimFlowPlant_PartLoadBasedFuelInputCurveName_, f, this),
        SimFlowPlant_TempBasedFuelInputCurveName_ (x.SimFlowPlant_TempBasedFuelInputCurveName_, f, this),
        SimFlowPlant_ExhFlowCurveName_ (x.SimFlowPlant_ExhFlowCurveName_, f, this),
        SimFlowPlant_PartLoadBasedExhTempCurveName_ (x.SimFlowPlant_PartLoadBasedExhTempCurveName_, f, this),
        SimFlowPlant_TempBasedExhTempCurveName_ (x.SimFlowPlant_TempBasedExhTempCurveName_, f, this),
        SimFlowPlant_HeatRecovLubeEnergyCurveName_ (x.SimFlowPlant_HeatRecovLubeEnergyCurveName_, f, this),
        SimFlowPlant_DesignAirInletTemp_ (x.SimFlowPlant_DesignAirInletTemp_, f, this)
      {
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      SimFlowPlant_ElectricalGenerator_CombustionTurbine (const ::xercesc::DOMElement& e,
                                                          ::xml_schema::flags f,
                                                          ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_FuelType_ (this),
        SimFlowPlant_MinPartLoadRatio_ (this),
        SimFlowPlant_MaxPartLoadRatio_ (this),
        SimFlowPlant_OptimumPartLoadRatio_ (this),
        SimFlowPlant_DesignHeatRecovWaterFlowRate_ (this),
        SimFlowPlant_HeatRecovInletNodeName_ (this),
        SimFlowPlant_HeatRecovOutletNodeName_ (this),
        SimFlowPlant_MaxExhFlowPerUnitPwrOutput_ (this),
        SimFlowPlant_DesignMinExhTemp_ (this),
        SimFlowPlant_FuelHigherHeatingVal_ (this),
        SimFlowPlant_HeatRecovMaxTemp_ (this),
        SimFlowPlant_OutdrAirInletNodeName_ (this),
        SimFlowPlant_RatedPwrOutput_ (this),
        SimFlowPlant_ElecCircuitNodeName_ (this),
        SimFlowPlant_PartLoadBasedFuelInputCurveName_ (this),
        SimFlowPlant_TempBasedFuelInputCurveName_ (this),
        SimFlowPlant_ExhFlowCurveName_ (this),
        SimFlowPlant_PartLoadBasedExhTempCurveName_ (this),
        SimFlowPlant_TempBasedExhTempCurveName_ (this),
        SimFlowPlant_HeatRecovLubeEnergyCurveName_ (this),
        SimFlowPlant_DesignAirInletTemp_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_FuelType
          //
          if (n.name () == "SimFlowPlant_FuelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_FuelType_type > r (
              SimFlowPlant_FuelType_traits::create (i, f, this));

            if (!this->SimFlowPlant_FuelType_)
            {
              this->SimFlowPlant_FuelType_.set (r);
              continue;
            }
          }

          // SimFlowPlant_MinPartLoadRatio
          //
          if (n.name () == "SimFlowPlant_MinPartLoadRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_MinPartLoadRatio_)
            {
              this->SimFlowPlant_MinPartLoadRatio_.set (SimFlowPlant_MinPartLoadRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_MaxPartLoadRatio
          //
          if (n.name () == "SimFlowPlant_MaxPartLoadRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_MaxPartLoadRatio_)
            {
              this->SimFlowPlant_MaxPartLoadRatio_.set (SimFlowPlant_MaxPartLoadRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_OptimumPartLoadRatio
          //
          if (n.name () == "SimFlowPlant_OptimumPartLoadRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_OptimumPartLoadRatio_)
            {
              this->SimFlowPlant_OptimumPartLoadRatio_.set (SimFlowPlant_OptimumPartLoadRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_DesignHeatRecovWaterFlowRate
          //
          if (n.name () == "SimFlowPlant_DesignHeatRecovWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignHeatRecovWaterFlowRate_)
            {
              this->SimFlowPlant_DesignHeatRecovWaterFlowRate_.set (SimFlowPlant_DesignHeatRecovWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_HeatRecovInletNodeName
          //
          if (n.name () == "SimFlowPlant_HeatRecovInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatRecovInletNodeName_type > r (
              SimFlowPlant_HeatRecovInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatRecovInletNodeName_)
            {
              this->SimFlowPlant_HeatRecovInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatRecovOutletNodeName
          //
          if (n.name () == "SimFlowPlant_HeatRecovOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatRecovOutletNodeName_type > r (
              SimFlowPlant_HeatRecovOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatRecovOutletNodeName_)
            {
              this->SimFlowPlant_HeatRecovOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_MaxExhFlowPerUnitPwrOutput
          //
          if (n.name () == "SimFlowPlant_MaxExhFlowPerUnitPwrOutput" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_)
            {
              this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_.set (SimFlowPlant_MaxExhFlowPerUnitPwrOutput_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_DesignMinExhTemp
          //
          if (n.name () == "SimFlowPlant_DesignMinExhTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignMinExhTemp_)
            {
              this->SimFlowPlant_DesignMinExhTemp_.set (SimFlowPlant_DesignMinExhTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_FuelHigherHeatingVal
          //
          if (n.name () == "SimFlowPlant_FuelHigherHeatingVal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_FuelHigherHeatingVal_)
            {
              this->SimFlowPlant_FuelHigherHeatingVal_.set (SimFlowPlant_FuelHigherHeatingVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_HeatRecovMaxTemp
          //
          if (n.name () == "SimFlowPlant_HeatRecovMaxTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_HeatRecovMaxTemp_)
            {
              this->SimFlowPlant_HeatRecovMaxTemp_.set (SimFlowPlant_HeatRecovMaxTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_OutdrAirInletNodeName
          //
          if (n.name () == "SimFlowPlant_OutdrAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_OutdrAirInletNodeName_type > r (
              SimFlowPlant_OutdrAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_OutdrAirInletNodeName_)
            {
              this->SimFlowPlant_OutdrAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_RatedPwrOutput
          //
          if (n.name () == "SimFlowPlant_RatedPwrOutput" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_RatedPwrOutput_)
            {
              this->SimFlowPlant_RatedPwrOutput_.set (SimFlowPlant_RatedPwrOutput_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_ElecCircuitNodeName
          //
          if (n.name () == "SimFlowPlant_ElecCircuitNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ElecCircuitNodeName_type > r (
              SimFlowPlant_ElecCircuitNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ElecCircuitNodeName_)
            {
              this->SimFlowPlant_ElecCircuitNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_PartLoadBasedFuelInputCurveName
          //
          if (n.name () == "SimFlowPlant_PartLoadBasedFuelInputCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_PartLoadBasedFuelInputCurveName_type > r (
              SimFlowPlant_PartLoadBasedFuelInputCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_PartLoadBasedFuelInputCurveName_)
            {
              this->SimFlowPlant_PartLoadBasedFuelInputCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_TempBasedFuelInputCurveName
          //
          if (n.name () == "SimFlowPlant_TempBasedFuelInputCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_TempBasedFuelInputCurveName_type > r (
              SimFlowPlant_TempBasedFuelInputCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_TempBasedFuelInputCurveName_)
            {
              this->SimFlowPlant_TempBasedFuelInputCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ExhFlowCurveName
          //
          if (n.name () == "SimFlowPlant_ExhFlowCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ExhFlowCurveName_type > r (
              SimFlowPlant_ExhFlowCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ExhFlowCurveName_)
            {
              this->SimFlowPlant_ExhFlowCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_PartLoadBasedExhTempCurveName
          //
          if (n.name () == "SimFlowPlant_PartLoadBasedExhTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_PartLoadBasedExhTempCurveName_type > r (
              SimFlowPlant_PartLoadBasedExhTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_PartLoadBasedExhTempCurveName_)
            {
              this->SimFlowPlant_PartLoadBasedExhTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_TempBasedExhTempCurveName
          //
          if (n.name () == "SimFlowPlant_TempBasedExhTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_TempBasedExhTempCurveName_type > r (
              SimFlowPlant_TempBasedExhTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_TempBasedExhTempCurveName_)
            {
              this->SimFlowPlant_TempBasedExhTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatRecovLubeEnergyCurveName
          //
          if (n.name () == "SimFlowPlant_HeatRecovLubeEnergyCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatRecovLubeEnergyCurveName_type > r (
              SimFlowPlant_HeatRecovLubeEnergyCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatRecovLubeEnergyCurveName_)
            {
              this->SimFlowPlant_HeatRecovLubeEnergyCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_DesignAirInletTemp
          //
          if (n.name () == "SimFlowPlant_DesignAirInletTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_DesignAirInletTemp_)
            {
              this->SimFlowPlant_DesignAirInletTemp_.set (SimFlowPlant_DesignAirInletTemp_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine* SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_ElectricalGenerator_CombustionTurbine (*this, f, c);
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine& SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      operator= (const SimFlowPlant_ElectricalGenerator_CombustionTurbine& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator& > (*this) = x;
          this->SimFlowPlant_FuelType_ = x.SimFlowPlant_FuelType_;
          this->SimFlowPlant_MinPartLoadRatio_ = x.SimFlowPlant_MinPartLoadRatio_;
          this->SimFlowPlant_MaxPartLoadRatio_ = x.SimFlowPlant_MaxPartLoadRatio_;
          this->SimFlowPlant_OptimumPartLoadRatio_ = x.SimFlowPlant_OptimumPartLoadRatio_;
          this->SimFlowPlant_DesignHeatRecovWaterFlowRate_ = x.SimFlowPlant_DesignHeatRecovWaterFlowRate_;
          this->SimFlowPlant_HeatRecovInletNodeName_ = x.SimFlowPlant_HeatRecovInletNodeName_;
          this->SimFlowPlant_HeatRecovOutletNodeName_ = x.SimFlowPlant_HeatRecovOutletNodeName_;
          this->SimFlowPlant_MaxExhFlowPerUnitPwrOutput_ = x.SimFlowPlant_MaxExhFlowPerUnitPwrOutput_;
          this->SimFlowPlant_DesignMinExhTemp_ = x.SimFlowPlant_DesignMinExhTemp_;
          this->SimFlowPlant_FuelHigherHeatingVal_ = x.SimFlowPlant_FuelHigherHeatingVal_;
          this->SimFlowPlant_HeatRecovMaxTemp_ = x.SimFlowPlant_HeatRecovMaxTemp_;
          this->SimFlowPlant_OutdrAirInletNodeName_ = x.SimFlowPlant_OutdrAirInletNodeName_;
          this->SimFlowPlant_RatedPwrOutput_ = x.SimFlowPlant_RatedPwrOutput_;
          this->SimFlowPlant_ElecCircuitNodeName_ = x.SimFlowPlant_ElecCircuitNodeName_;
          this->SimFlowPlant_PartLoadBasedFuelInputCurveName_ = x.SimFlowPlant_PartLoadBasedFuelInputCurveName_;
          this->SimFlowPlant_TempBasedFuelInputCurveName_ = x.SimFlowPlant_TempBasedFuelInputCurveName_;
          this->SimFlowPlant_ExhFlowCurveName_ = x.SimFlowPlant_ExhFlowCurveName_;
          this->SimFlowPlant_PartLoadBasedExhTempCurveName_ = x.SimFlowPlant_PartLoadBasedExhTempCurveName_;
          this->SimFlowPlant_TempBasedExhTempCurveName_ = x.SimFlowPlant_TempBasedExhTempCurveName_;
          this->SimFlowPlant_HeatRecovLubeEnergyCurveName_ = x.SimFlowPlant_HeatRecovLubeEnergyCurveName_;
          this->SimFlowPlant_DesignAirInletTemp_ = x.SimFlowPlant_DesignAirInletTemp_;
        }

        return *this;
      }

      SimFlowPlant_ElectricalGenerator_CombustionTurbine::
      ~SimFlowPlant_ElectricalGenerator_CombustionTurbine ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

