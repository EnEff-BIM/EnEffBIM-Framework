// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_ElectricalGenerator_FuelSupply.hxx"

#include "simflowplant_constname_1_12.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_FuelSupply
      // 

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelType_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelType () const
      {
        return this->SimFlowPlant_FuelType_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelType_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelType ()
      {
        return this->SimFlowPlant_FuelType_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelType (const SimFlowPlant_FuelType_type& x)
      {
        this->SimFlowPlant_FuelType_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelType (const SimFlowPlant_FuelType_optional& x)
      {
        this->SimFlowPlant_FuelType_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelType (::std::auto_ptr< SimFlowPlant_FuelType_type > x)
      {
        this->SimFlowPlant_FuelType_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelTempModelingMode_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempModelingMode () const
      {
        return this->SimFlowPlant_FuelTempModelingMode_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelTempModelingMode_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempModelingMode ()
      {
        return this->SimFlowPlant_FuelTempModelingMode_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempModelingMode (const SimFlowPlant_FuelTempModelingMode_type& x)
      {
        this->SimFlowPlant_FuelTempModelingMode_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempModelingMode (const SimFlowPlant_FuelTempModelingMode_optional& x)
      {
        this->SimFlowPlant_FuelTempModelingMode_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempModelingMode (::std::auto_ptr< SimFlowPlant_FuelTempModelingMode_type > x)
      {
        this->SimFlowPlant_FuelTempModelingMode_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelTempRefNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempRefNodeName () const
      {
        return this->SimFlowPlant_FuelTempRefNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelTempRefNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempRefNodeName ()
      {
        return this->SimFlowPlant_FuelTempRefNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempRefNodeName (const SimFlowPlant_FuelTempRefNodeName_type& x)
      {
        this->SimFlowPlant_FuelTempRefNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempRefNodeName (const SimFlowPlant_FuelTempRefNodeName_optional& x)
      {
        this->SimFlowPlant_FuelTempRefNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempRefNodeName (::std::auto_ptr< SimFlowPlant_FuelTempRefNodeName_type > x)
      {
        this->SimFlowPlant_FuelTempRefNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelTempSchedName_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempSchedName () const
      {
        return this->SimFlowPlant_FuelTempSchedName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_FuelTempSchedName_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempSchedName ()
      {
        return this->SimFlowPlant_FuelTempSchedName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempSchedName (const SimFlowPlant_FuelTempSchedName_type& x)
      {
        this->SimFlowPlant_FuelTempSchedName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempSchedName (const SimFlowPlant_FuelTempSchedName_optional& x)
      {
        this->SimFlowPlant_FuelTempSchedName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_FuelTempSchedName (::std::auto_ptr< SimFlowPlant_FuelTempSchedName_type > x)
      {
        this->SimFlowPlant_FuelTempSchedName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_CompPwrFuncFuelRateCurveName_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompPwrFuncFuelRateCurveName () const
      {
        return this->SimFlowPlant_CompPwrFuncFuelRateCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_CompPwrFuncFuelRateCurveName_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompPwrFuncFuelRateCurveName ()
      {
        return this->SimFlowPlant_CompPwrFuncFuelRateCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompPwrFuncFuelRateCurveName (const SimFlowPlant_CompPwrFuncFuelRateCurveName_type& x)
      {
        this->SimFlowPlant_CompPwrFuncFuelRateCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompPwrFuncFuelRateCurveName (const SimFlowPlant_CompPwrFuncFuelRateCurveName_optional& x)
      {
        this->SimFlowPlant_CompPwrFuncFuelRateCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompPwrFuncFuelRateCurveName (::std::auto_ptr< SimFlowPlant_CompPwrFuncFuelRateCurveName_type > x)
      {
        this->SimFlowPlant_CompPwrFuncFuelRateCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_CompHeatLossFactor_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompHeatLossFactor () const
      {
        return this->SimFlowPlant_CompHeatLossFactor_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_CompHeatLossFactor_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompHeatLossFactor ()
      {
        return this->SimFlowPlant_CompHeatLossFactor_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompHeatLossFactor (const SimFlowPlant_CompHeatLossFactor_type& x)
      {
        this->SimFlowPlant_CompHeatLossFactor_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_CompHeatLossFactor (const SimFlowPlant_CompHeatLossFactor_optional& x)
      {
        this->SimFlowPlant_CompHeatLossFactor_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelLowHeatingVal_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelLowHeatingVal () const
      {
        return this->SimFlowPlant_LiqGenericFuelLowHeatingVal_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelLowHeatingVal_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelLowHeatingVal ()
      {
        return this->SimFlowPlant_LiqGenericFuelLowHeatingVal_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelLowHeatingVal (const SimFlowPlant_LiqGenericFuelLowHeatingVal_type& x)
      {
        this->SimFlowPlant_LiqGenericFuelLowHeatingVal_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelLowHeatingVal (const SimFlowPlant_LiqGenericFuelLowHeatingVal_optional& x)
      {
        this->SimFlowPlant_LiqGenericFuelLowHeatingVal_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelHigherHeatingVal_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelHigherHeatingVal () const
      {
        return this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelHigherHeatingVal_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelHigherHeatingVal ()
      {
        return this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelHigherHeatingVal (const SimFlowPlant_LiqGenericFuelHigherHeatingVal_type& x)
      {
        this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelHigherHeatingVal (const SimFlowPlant_LiqGenericFuelHigherHeatingVal_optional& x)
      {
        this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelMolecularWeight_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelMolecularWeight () const
      {
        return this->SimFlowPlant_LiqGenericFuelMolecularWeight_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelMolecularWeight_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelMolecularWeight ()
      {
        return this->SimFlowPlant_LiqGenericFuelMolecularWeight_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelMolecularWeight (const SimFlowPlant_LiqGenericFuelMolecularWeight_type& x)
      {
        this->SimFlowPlant_LiqGenericFuelMolecularWeight_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelMolecularWeight (const SimFlowPlant_LiqGenericFuelMolecularWeight_optional& x)
      {
        this->SimFlowPlant_LiqGenericFuelMolecularWeight_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelCO2EmissionFactor_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelCO2EmissionFactor () const
      {
        return this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_LiqGenericFuelCO2EmissionFactor_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelCO2EmissionFactor ()
      {
        return this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelCO2EmissionFactor (const SimFlowPlant_LiqGenericFuelCO2EmissionFactor_type& x)
      {
        this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_LiqGenericFuelCO2EmissionFactor (const SimFlowPlant_LiqGenericFuelCO2EmissionFactor_optional& x)
      {
        this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_NumConstsGaseousConstFuelSupply_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_NumConstsGaseousConstFuelSupply () const
      {
        return this->SimFlowPlant_NumConstsGaseousConstFuelSupply_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_NumConstsGaseousConstFuelSupply_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_NumConstsGaseousConstFuelSupply ()
      {
        return this->SimFlowPlant_NumConstsGaseousConstFuelSupply_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_NumConstsGaseousConstFuelSupply (const SimFlowPlant_NumConstsGaseousConstFuelSupply_type& x)
      {
        this->SimFlowPlant_NumConstsGaseousConstFuelSupply_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_NumConstsGaseousConstFuelSupply (const SimFlowPlant_NumConstsGaseousConstFuelSupply_optional& x)
      {
        this->SimFlowPlant_NumConstsGaseousConstFuelSupply_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_ConstName_1_12_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstName_1_12 () const
      {
        return this->SimFlowPlant_ConstName_1_12_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_ConstName_1_12_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstName_1_12 ()
      {
        return this->SimFlowPlant_ConstName_1_12_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstName_1_12 (const SimFlowPlant_ConstName_1_12_type& x)
      {
        this->SimFlowPlant_ConstName_1_12_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstName_1_12 (const SimFlowPlant_ConstName_1_12_optional& x)
      {
        this->SimFlowPlant_ConstName_1_12_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstName_1_12 (::std::auto_ptr< SimFlowPlant_ConstName_1_12_type > x)
      {
        this->SimFlowPlant_ConstName_1_12_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_ConstMolarFract_1_12_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstMolarFract_1_12 () const
      {
        return this->SimFlowPlant_ConstMolarFract_1_12_;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::SimFlowPlant_ConstMolarFract_1_12_optional& SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstMolarFract_1_12 ()
      {
        return this->SimFlowPlant_ConstMolarFract_1_12_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstMolarFract_1_12 (const SimFlowPlant_ConstMolarFract_1_12_type& x)
      {
        this->SimFlowPlant_ConstMolarFract_1_12_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstMolarFract_1_12 (const SimFlowPlant_ConstMolarFract_1_12_optional& x)
      {
        this->SimFlowPlant_ConstMolarFract_1_12_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ConstMolarFract_1_12 (::std::auto_ptr< SimFlowPlant_ConstMolarFract_1_12_type > x)
      {
        this->SimFlowPlant_ConstMolarFract_1_12_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_FuelSupply
      //

      SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ElectricalGenerator_FuelSupply (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (RefId),
        SimFlowPlant_FuelType_ (this),
        SimFlowPlant_FuelTempModelingMode_ (this),
        SimFlowPlant_FuelTempRefNodeName_ (this),
        SimFlowPlant_FuelTempSchedName_ (this),
        SimFlowPlant_CompPwrFuncFuelRateCurveName_ (this),
        SimFlowPlant_CompHeatLossFactor_ (this),
        SimFlowPlant_LiqGenericFuelLowHeatingVal_ (this),
        SimFlowPlant_LiqGenericFuelHigherHeatingVal_ (this),
        SimFlowPlant_LiqGenericFuelMolecularWeight_ (this),
        SimFlowPlant_LiqGenericFuelCO2EmissionFactor_ (this),
        SimFlowPlant_NumConstsGaseousConstFuelSupply_ (this),
        SimFlowPlant_ConstName_1_12_ (this),
        SimFlowPlant_ConstMolarFract_1_12_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ElectricalGenerator_FuelSupply (const SimFlowPlant_ElectricalGenerator_FuelSupply& x,
                                                   ::xml_schema::flags f,
                                                   ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (x, f, c),
        SimFlowPlant_FuelType_ (x.SimFlowPlant_FuelType_, f, this),
        SimFlowPlant_FuelTempModelingMode_ (x.SimFlowPlant_FuelTempModelingMode_, f, this),
        SimFlowPlant_FuelTempRefNodeName_ (x.SimFlowPlant_FuelTempRefNodeName_, f, this),
        SimFlowPlant_FuelTempSchedName_ (x.SimFlowPlant_FuelTempSchedName_, f, this),
        SimFlowPlant_CompPwrFuncFuelRateCurveName_ (x.SimFlowPlant_CompPwrFuncFuelRateCurveName_, f, this),
        SimFlowPlant_CompHeatLossFactor_ (x.SimFlowPlant_CompHeatLossFactor_, f, this),
        SimFlowPlant_LiqGenericFuelLowHeatingVal_ (x.SimFlowPlant_LiqGenericFuelLowHeatingVal_, f, this),
        SimFlowPlant_LiqGenericFuelHigherHeatingVal_ (x.SimFlowPlant_LiqGenericFuelHigherHeatingVal_, f, this),
        SimFlowPlant_LiqGenericFuelMolecularWeight_ (x.SimFlowPlant_LiqGenericFuelMolecularWeight_, f, this),
        SimFlowPlant_LiqGenericFuelCO2EmissionFactor_ (x.SimFlowPlant_LiqGenericFuelCO2EmissionFactor_, f, this),
        SimFlowPlant_NumConstsGaseousConstFuelSupply_ (x.SimFlowPlant_NumConstsGaseousConstFuelSupply_, f, this),
        SimFlowPlant_ConstName_1_12_ (x.SimFlowPlant_ConstName_1_12_, f, this),
        SimFlowPlant_ConstMolarFract_1_12_ (x.SimFlowPlant_ConstMolarFract_1_12_, f, this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::
      SimFlowPlant_ElectricalGenerator_FuelSupply (const ::xercesc::DOMElement& e,
                                                   ::xml_schema::flags f,
                                                   ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_FuelType_ (this),
        SimFlowPlant_FuelTempModelingMode_ (this),
        SimFlowPlant_FuelTempRefNodeName_ (this),
        SimFlowPlant_FuelTempSchedName_ (this),
        SimFlowPlant_CompPwrFuncFuelRateCurveName_ (this),
        SimFlowPlant_CompHeatLossFactor_ (this),
        SimFlowPlant_LiqGenericFuelLowHeatingVal_ (this),
        SimFlowPlant_LiqGenericFuelHigherHeatingVal_ (this),
        SimFlowPlant_LiqGenericFuelMolecularWeight_ (this),
        SimFlowPlant_LiqGenericFuelCO2EmissionFactor_ (this),
        SimFlowPlant_NumConstsGaseousConstFuelSupply_ (this),
        SimFlowPlant_ConstName_1_12_ (this),
        SimFlowPlant_ConstMolarFract_1_12_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_ElectricalGenerator_FuelSupply::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_FuelType
          //
          if (n.name () == "SimFlowPlant_FuelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_FuelType_type > r (
              SimFlowPlant_FuelType_traits::create (i, f, this));

            if (!this->SimFlowPlant_FuelType_)
            {
              this->SimFlowPlant_FuelType_.set (r);
              continue;
            }
          }

          // SimFlowPlant_FuelTempModelingMode
          //
          if (n.name () == "SimFlowPlant_FuelTempModelingMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_FuelTempModelingMode_type > r (
              SimFlowPlant_FuelTempModelingMode_traits::create (i, f, this));

            if (!this->SimFlowPlant_FuelTempModelingMode_)
            {
              this->SimFlowPlant_FuelTempModelingMode_.set (r);
              continue;
            }
          }

          // SimFlowPlant_FuelTempRefNodeName
          //
          if (n.name () == "SimFlowPlant_FuelTempRefNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_FuelTempRefNodeName_type > r (
              SimFlowPlant_FuelTempRefNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_FuelTempRefNodeName_)
            {
              this->SimFlowPlant_FuelTempRefNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_FuelTempSchedName
          //
          if (n.name () == "SimFlowPlant_FuelTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_FuelTempSchedName_type > r (
              SimFlowPlant_FuelTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowPlant_FuelTempSchedName_)
            {
              this->SimFlowPlant_FuelTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CompPwrFuncFuelRateCurveName
          //
          if (n.name () == "SimFlowPlant_CompPwrFuncFuelRateCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CompPwrFuncFuelRateCurveName_type > r (
              SimFlowPlant_CompPwrFuncFuelRateCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_CompPwrFuncFuelRateCurveName_)
            {
              this->SimFlowPlant_CompPwrFuncFuelRateCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CompHeatLossFactor
          //
          if (n.name () == "SimFlowPlant_CompHeatLossFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_CompHeatLossFactor_)
            {
              this->SimFlowPlant_CompHeatLossFactor_.set (SimFlowPlant_CompHeatLossFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_LiqGenericFuelLowHeatingVal
          //
          if (n.name () == "SimFlowPlant_LiqGenericFuelLowHeatingVal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_LiqGenericFuelLowHeatingVal_)
            {
              this->SimFlowPlant_LiqGenericFuelLowHeatingVal_.set (SimFlowPlant_LiqGenericFuelLowHeatingVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_LiqGenericFuelHigherHeatingVal
          //
          if (n.name () == "SimFlowPlant_LiqGenericFuelHigherHeatingVal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_)
            {
              this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_.set (SimFlowPlant_LiqGenericFuelHigherHeatingVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_LiqGenericFuelMolecularWeight
          //
          if (n.name () == "SimFlowPlant_LiqGenericFuelMolecularWeight" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_LiqGenericFuelMolecularWeight_)
            {
              this->SimFlowPlant_LiqGenericFuelMolecularWeight_.set (SimFlowPlant_LiqGenericFuelMolecularWeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_LiqGenericFuelCO2EmissionFactor
          //
          if (n.name () == "SimFlowPlant_LiqGenericFuelCO2EmissionFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_)
            {
              this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_.set (SimFlowPlant_LiqGenericFuelCO2EmissionFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_NumConstsGaseousConstFuelSupply
          //
          if (n.name () == "SimFlowPlant_NumConstsGaseousConstFuelSupply" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowPlant_NumConstsGaseousConstFuelSupply_)
            {
              this->SimFlowPlant_NumConstsGaseousConstFuelSupply_.set (SimFlowPlant_NumConstsGaseousConstFuelSupply_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_ConstName_1_12
          //
          if (n.name () == "SimFlowPlant_ConstName_1_12" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ConstName_1_12_type > r (
              SimFlowPlant_ConstName_1_12_traits::create (i, f, this));

            if (!this->SimFlowPlant_ConstName_1_12_)
            {
              this->SimFlowPlant_ConstName_1_12_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ConstMolarFract_1_12
          //
          if (n.name () == "SimFlowPlant_ConstMolarFract_1_12" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ConstMolarFract_1_12_type > r (
              SimFlowPlant_ConstMolarFract_1_12_traits::create (i, f, this));

            if (!this->SimFlowPlant_ConstMolarFract_1_12_)
            {
              this->SimFlowPlant_ConstMolarFract_1_12_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply* SimFlowPlant_ElectricalGenerator_FuelSupply::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_ElectricalGenerator_FuelSupply (*this, f, c);
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply& SimFlowPlant_ElectricalGenerator_FuelSupply::
      operator= (const SimFlowPlant_ElectricalGenerator_FuelSupply& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator& > (*this) = x;
          this->SimFlowPlant_FuelType_ = x.SimFlowPlant_FuelType_;
          this->SimFlowPlant_FuelTempModelingMode_ = x.SimFlowPlant_FuelTempModelingMode_;
          this->SimFlowPlant_FuelTempRefNodeName_ = x.SimFlowPlant_FuelTempRefNodeName_;
          this->SimFlowPlant_FuelTempSchedName_ = x.SimFlowPlant_FuelTempSchedName_;
          this->SimFlowPlant_CompPwrFuncFuelRateCurveName_ = x.SimFlowPlant_CompPwrFuncFuelRateCurveName_;
          this->SimFlowPlant_CompHeatLossFactor_ = x.SimFlowPlant_CompHeatLossFactor_;
          this->SimFlowPlant_LiqGenericFuelLowHeatingVal_ = x.SimFlowPlant_LiqGenericFuelLowHeatingVal_;
          this->SimFlowPlant_LiqGenericFuelHigherHeatingVal_ = x.SimFlowPlant_LiqGenericFuelHigherHeatingVal_;
          this->SimFlowPlant_LiqGenericFuelMolecularWeight_ = x.SimFlowPlant_LiqGenericFuelMolecularWeight_;
          this->SimFlowPlant_LiqGenericFuelCO2EmissionFactor_ = x.SimFlowPlant_LiqGenericFuelCO2EmissionFactor_;
          this->SimFlowPlant_NumConstsGaseousConstFuelSupply_ = x.SimFlowPlant_NumConstsGaseousConstFuelSupply_;
          this->SimFlowPlant_ConstName_1_12_ = x.SimFlowPlant_ConstName_1_12_;
          this->SimFlowPlant_ConstMolarFract_1_12_ = x.SimFlowPlant_ConstMolarFract_1_12_;
        }

        return *this;
      }

      SimFlowPlant_ElectricalGenerator_FuelSupply::
      ~SimFlowPlant_ElectricalGenerator_FuelSupply ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

