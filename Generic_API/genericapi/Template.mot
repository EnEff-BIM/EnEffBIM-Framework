# -*- coding: utf-8 -*-

import genericapi.MapAPI.MapHierarchy as MapHierarchy

def instantiate_${TargetComponentName}(parent, project, sim_instance):
    """creates a instance of the ${TargetComponentName} for each instance in SimModel"""
    import SimFlowMover_Pump_VariableSpeedReturn
    map_${TargetComponentName} = []
    for id in range(sim_instance.${SourceComponentName}.sizeInt()):

        map_${TargetComponentName}.append(${TargetComponentName}(parent, 
                                          project, 
                                          sim_instance.${SourceComponentName}.at(id)))
    return map_pump
    
class ${TargetComponentName}(MapHierarchy.MapComponent):
    """Representation of AixLib.Fluid.Movers.Pump
    """
    
    def __init__(self, project, parent, sim_instance):
        
        super(Pump, self).__init__(project, parent)

        self.sim_ref_id = [sim_instance.RefId()] #by default
        self.target_name = sim_instance.SimModelName().getValue() #by default

        self.target_location = ${TargetLocation}
        self.ControlStrategy = self.add_parameter(name = "ControlStrategy",
                                                  value = 1.0) #from MR?
        self.Head_max = self.add_parameter(name = "Head_max",
                                           value = \
                        sim_instance.SimFlowMover_RatedPumpHead().getValue())
        self.V_flow_max = self.add_parameter(name = "V_flow_max",
                                             value = \
                        sim_instance.SimFlowMover_RatedFlowRate().getValue())

        #connector