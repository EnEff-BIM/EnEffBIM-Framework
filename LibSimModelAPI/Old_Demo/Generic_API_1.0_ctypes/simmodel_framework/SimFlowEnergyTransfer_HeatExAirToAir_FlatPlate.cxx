// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate
      // 

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SecondAirInletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_SecondAirInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SecondAirInletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_SecondAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirInletNodeName (const SimFlowEnergyTrans_SecondAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SecondAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirInletNodeName (const SimFlowEnergyTrans_SecondAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SecondAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_SecondAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SecondAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_FlowArrangementType_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_FlowArrangementType () const
      {
        return this->SimFlowEnergyTrans_FlowArrangementType_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_FlowArrangementType_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_FlowArrangementType ()
      {
        return this->SimFlowEnergyTrans_FlowArrangementType_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_FlowArrangementType (const SimFlowEnergyTrans_FlowArrangementType_type& x)
      {
        this->SimFlowEnergyTrans_FlowArrangementType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_FlowArrangementType (const SimFlowEnergyTrans_FlowArrangementType_optional& x)
      {
        this->SimFlowEnergyTrans_FlowArrangementType_ = x;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_FlowArrangementType (::std::auto_ptr< SimFlowEnergyTrans_FlowArrangementType_type > x)
      {
        this->SimFlowEnergyTrans_FlowArrangementType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_RatioSupplyToSecondHAVal_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_RatioSupplyToSecondHAVal () const
      {
        return this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_RatioSupplyToSecondHAVal_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_RatioSupplyToSecondHAVal ()
      {
        return this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_RatioSupplyToSecondHAVal (const SimFlowEnergyTrans_RatioSupplyToSecondHAVal_type& x)
      {
        this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_RatioSupplyToSecondHAVal (const SimFlowEnergyTrans_RatioSupplyToSecondHAVal_optional& x)
      {
        this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_ = x;
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSupplyAirFlowRate_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_NomSupplyAirFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSupplyAirFlowRate_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_NomSupplyAirFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirFlowRate (const SimFlowEnergyTrans_NomSupplyAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_NomSupplyAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirFlowRate (const SimFlowEnergyTrans_NomSupplyAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_NomSupplyAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSupplyAirInletTemp_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirInletTemp () const
      {
        return this->SimFlowEnergyTrans_NomSupplyAirInletTemp_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSupplyAirInletTemp_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirInletTemp ()
      {
        return this->SimFlowEnergyTrans_NomSupplyAirInletTemp_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirInletTemp (const SimFlowEnergyTrans_NomSupplyAirInletTemp_type& x)
      {
        this->SimFlowEnergyTrans_NomSupplyAirInletTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirInletTemp (const SimFlowEnergyTrans_NomSupplyAirInletTemp_optional& x)
      {
        this->SimFlowEnergyTrans_NomSupplyAirInletTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSupplyAirOutletTemp_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirOutletTemp () const
      {
        return this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSupplyAirOutletTemp_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirOutletTemp ()
      {
        return this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirOutletTemp (const SimFlowEnergyTrans_NomSupplyAirOutletTemp_type& x)
      {
        this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSupplyAirOutletTemp (const SimFlowEnergyTrans_NomSupplyAirOutletTemp_optional& x)
      {
        this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSecondAirFlowRate_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_NomSecondAirFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSecondAirFlowRate_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_NomSecondAirFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirFlowRate (const SimFlowEnergyTrans_NomSecondAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_NomSecondAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirFlowRate (const SimFlowEnergyTrans_NomSecondAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_NomSecondAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSecondAirInletTemp_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirInletTemp () const
      {
        return this->SimFlowEnergyTrans_NomSecondAirInletTemp_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_NomSecondAirInletTemp_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirInletTemp ()
      {
        return this->SimFlowEnergyTrans_NomSecondAirInletTemp_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirInletTemp (const SimFlowEnergyTrans_NomSecondAirInletTemp_type& x)
      {
        this->SimFlowEnergyTrans_NomSecondAirInletTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_NomSecondAirInletTemp (const SimFlowEnergyTrans_NomSecondAirInletTemp_optional& x)
      {
        this->SimFlowEnergyTrans_NomSecondAirInletTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SupplyAirInletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_SupplyAirInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SupplyAirInletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_SupplyAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirInletNodeName (const SimFlowEnergyTrans_SupplyAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirInletNodeName (const SimFlowEnergyTrans_SupplyAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_SupplyAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SupplyAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SupplyAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_SupplyAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SupplyAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_SupplyAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirOutletNodeName (const SimFlowEnergyTrans_SupplyAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SupplyAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirOutletNodeName (const SimFlowEnergyTrans_SupplyAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SupplyAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SupplyAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_SupplyAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SupplyAirOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SecondAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_SecondAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::SimFlowEnergyTrans_SecondAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_SecondAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirOutletNodeName (const SimFlowEnergyTrans_SecondAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SecondAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirOutletNodeName (const SimFlowEnergyTrans_SecondAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SecondAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTrans_SecondAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_SecondAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SecondAirOutletNodeName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate
      //

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir (RefId),
        SimFlowEnergyTrans_SecondAirInletNodeName_ (this),
        SimFlowEnergyTrans_FlowArrangementType_ (this),
        SimFlowEnergyTrans_RatioSupplyToSecondHAVal_ (this),
        SimFlowEnergyTrans_NomSupplyAirFlowRate_ (this),
        SimFlowEnergyTrans_NomSupplyAirInletTemp_ (this),
        SimFlowEnergyTrans_NomSupplyAirOutletTemp_ (this),
        SimFlowEnergyTrans_NomSecondAirFlowRate_ (this),
        SimFlowEnergyTrans_NomSecondAirInletTemp_ (this),
        SimFlowEnergyTrans_SupplyAirInletNodeName_ (this),
        SimFlowEnergyTrans_SupplyAirOutletNodeName_ (this),
        SimFlowEnergyTrans_SecondAirOutletNodeName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate (const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate& x,
                                                      ::xml_schema::flags f,
                                                      ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir (x, f, c),
        SimFlowEnergyTrans_SecondAirInletNodeName_ (x.SimFlowEnergyTrans_SecondAirInletNodeName_, f, this),
        SimFlowEnergyTrans_FlowArrangementType_ (x.SimFlowEnergyTrans_FlowArrangementType_, f, this),
        SimFlowEnergyTrans_RatioSupplyToSecondHAVal_ (x.SimFlowEnergyTrans_RatioSupplyToSecondHAVal_, f, this),
        SimFlowEnergyTrans_NomSupplyAirFlowRate_ (x.SimFlowEnergyTrans_NomSupplyAirFlowRate_, f, this),
        SimFlowEnergyTrans_NomSupplyAirInletTemp_ (x.SimFlowEnergyTrans_NomSupplyAirInletTemp_, f, this),
        SimFlowEnergyTrans_NomSupplyAirOutletTemp_ (x.SimFlowEnergyTrans_NomSupplyAirOutletTemp_, f, this),
        SimFlowEnergyTrans_NomSecondAirFlowRate_ (x.SimFlowEnergyTrans_NomSecondAirFlowRate_, f, this),
        SimFlowEnergyTrans_NomSecondAirInletTemp_ (x.SimFlowEnergyTrans_NomSecondAirInletTemp_, f, this),
        SimFlowEnergyTrans_SupplyAirInletNodeName_ (x.SimFlowEnergyTrans_SupplyAirInletNodeName_, f, this),
        SimFlowEnergyTrans_SupplyAirOutletNodeName_ (x.SimFlowEnergyTrans_SupplyAirOutletNodeName_, f, this),
        SimFlowEnergyTrans_SecondAirOutletNodeName_ (x.SimFlowEnergyTrans_SecondAirOutletNodeName_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate (const ::xercesc::DOMElement& e,
                                                      ::xml_schema::flags f,
                                                      ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_SecondAirInletNodeName_ (this),
        SimFlowEnergyTrans_FlowArrangementType_ (this),
        SimFlowEnergyTrans_RatioSupplyToSecondHAVal_ (this),
        SimFlowEnergyTrans_NomSupplyAirFlowRate_ (this),
        SimFlowEnergyTrans_NomSupplyAirInletTemp_ (this),
        SimFlowEnergyTrans_NomSupplyAirOutletTemp_ (this),
        SimFlowEnergyTrans_NomSecondAirFlowRate_ (this),
        SimFlowEnergyTrans_NomSecondAirInletTemp_ (this),
        SimFlowEnergyTrans_SupplyAirInletNodeName_ (this),
        SimFlowEnergyTrans_SupplyAirOutletNodeName_ (this),
        SimFlowEnergyTrans_SecondAirOutletNodeName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_SecondAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SecondAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SecondAirInletNodeName_type > r (
              SimFlowEnergyTrans_SecondAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SecondAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_SecondAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FlowArrangementType
          //
          if (n.name () == "SimFlowEnergyTrans_FlowArrangementType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FlowArrangementType_type > r (
              SimFlowEnergyTrans_FlowArrangementType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FlowArrangementType_)
            {
              this->SimFlowEnergyTrans_FlowArrangementType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RatioSupplyToSecondHAVal
          //
          if (n.name () == "SimFlowEnergyTrans_RatioSupplyToSecondHAVal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_)
            {
              this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_.set (SimFlowEnergyTrans_RatioSupplyToSecondHAVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NomSupplyAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_NomSupplyAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NomSupplyAirFlowRate_)
            {
              this->SimFlowEnergyTrans_NomSupplyAirFlowRate_.set (SimFlowEnergyTrans_NomSupplyAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NomSupplyAirInletTemp
          //
          if (n.name () == "SimFlowEnergyTrans_NomSupplyAirInletTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NomSupplyAirInletTemp_)
            {
              this->SimFlowEnergyTrans_NomSupplyAirInletTemp_.set (SimFlowEnergyTrans_NomSupplyAirInletTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NomSupplyAirOutletTemp
          //
          if (n.name () == "SimFlowEnergyTrans_NomSupplyAirOutletTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_)
            {
              this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_.set (SimFlowEnergyTrans_NomSupplyAirOutletTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NomSecondAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_NomSecondAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NomSecondAirFlowRate_)
            {
              this->SimFlowEnergyTrans_NomSecondAirFlowRate_.set (SimFlowEnergyTrans_NomSecondAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NomSecondAirInletTemp
          //
          if (n.name () == "SimFlowEnergyTrans_NomSecondAirInletTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NomSecondAirInletTemp_)
            {
              this->SimFlowEnergyTrans_NomSecondAirInletTemp_.set (SimFlowEnergyTrans_NomSecondAirInletTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplyAirInletNodeName_type > r (
              SimFlowEnergyTrans_SupplyAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplyAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_SupplyAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplyAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SupplyAirOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplyAirOutletNodeName_type > r (
              SimFlowEnergyTrans_SupplyAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplyAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_SupplyAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SecondAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SecondAirOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SecondAirOutletNodeName_type > r (
              SimFlowEnergyTrans_SecondAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SecondAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_SecondAirOutletNodeName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate* SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate& SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      operator= (const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir& > (*this) = x;
          this->SimFlowEnergyTrans_SecondAirInletNodeName_ = x.SimFlowEnergyTrans_SecondAirInletNodeName_;
          this->SimFlowEnergyTrans_FlowArrangementType_ = x.SimFlowEnergyTrans_FlowArrangementType_;
          this->SimFlowEnergyTrans_RatioSupplyToSecondHAVal_ = x.SimFlowEnergyTrans_RatioSupplyToSecondHAVal_;
          this->SimFlowEnergyTrans_NomSupplyAirFlowRate_ = x.SimFlowEnergyTrans_NomSupplyAirFlowRate_;
          this->SimFlowEnergyTrans_NomSupplyAirInletTemp_ = x.SimFlowEnergyTrans_NomSupplyAirInletTemp_;
          this->SimFlowEnergyTrans_NomSupplyAirOutletTemp_ = x.SimFlowEnergyTrans_NomSupplyAirOutletTemp_;
          this->SimFlowEnergyTrans_NomSecondAirFlowRate_ = x.SimFlowEnergyTrans_NomSecondAirFlowRate_;
          this->SimFlowEnergyTrans_NomSecondAirInletTemp_ = x.SimFlowEnergyTrans_NomSecondAirInletTemp_;
          this->SimFlowEnergyTrans_SupplyAirInletNodeName_ = x.SimFlowEnergyTrans_SupplyAirInletNodeName_;
          this->SimFlowEnergyTrans_SupplyAirOutletNodeName_ = x.SimFlowEnergyTrans_SupplyAirOutletNodeName_;
          this->SimFlowEnergyTrans_SecondAirOutletNodeName_ = x.SimFlowEnergyTrans_SecondAirOutletNodeName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate::
      ~SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

