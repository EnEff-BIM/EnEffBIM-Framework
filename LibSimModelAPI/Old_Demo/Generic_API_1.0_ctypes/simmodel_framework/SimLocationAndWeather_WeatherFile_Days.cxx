// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimLocationAndWeather_WeatherFile_Days.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimLocationAndWeather_WeatherFile_Days
      // 

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_Name_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_Name () const
      {
        return this->SimLocationAndWeather_Name_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_Name_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_Name ()
      {
        return this->SimLocationAndWeather_Name_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_Name (const SimLocationAndWeather_Name_type& x)
      {
        this->SimLocationAndWeather_Name_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_Name (const SimLocationAndWeather_Name_optional& x)
      {
        this->SimLocationAndWeather_Name_ = x;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_Name (::std::auto_ptr< SimLocationAndWeather_Name_type > x)
      {
        this->SimLocationAndWeather_Name_.set (x);
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_BeginMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginMonth () const
      {
        return this->SimLocationAndWeather_BeginMonth_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_BeginMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginMonth ()
      {
        return this->SimLocationAndWeather_BeginMonth_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginMonth (const SimLocationAndWeather_BeginMonth_type& x)
      {
        this->SimLocationAndWeather_BeginMonth_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginMonth (const SimLocationAndWeather_BeginMonth_optional& x)
      {
        this->SimLocationAndWeather_BeginMonth_ = x;
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_BeginDayMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginDayMonth () const
      {
        return this->SimLocationAndWeather_BeginDayMonth_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_BeginDayMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginDayMonth ()
      {
        return this->SimLocationAndWeather_BeginDayMonth_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginDayMonth (const SimLocationAndWeather_BeginDayMonth_type& x)
      {
        this->SimLocationAndWeather_BeginDayMonth_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_BeginDayMonth (const SimLocationAndWeather_BeginDayMonth_optional& x)
      {
        this->SimLocationAndWeather_BeginDayMonth_ = x;
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_EndMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndMonth () const
      {
        return this->SimLocationAndWeather_EndMonth_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_EndMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndMonth ()
      {
        return this->SimLocationAndWeather_EndMonth_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndMonth (const SimLocationAndWeather_EndMonth_type& x)
      {
        this->SimLocationAndWeather_EndMonth_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndMonth (const SimLocationAndWeather_EndMonth_optional& x)
      {
        this->SimLocationAndWeather_EndMonth_ = x;
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_EndDayMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndDayMonth () const
      {
        return this->SimLocationAndWeather_EndDayMonth_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_EndDayMonth_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndDayMonth ()
      {
        return this->SimLocationAndWeather_EndDayMonth_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndDayMonth (const SimLocationAndWeather_EndDayMonth_type& x)
      {
        this->SimLocationAndWeather_EndDayMonth_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_EndDayMonth (const SimLocationAndWeather_EndDayMonth_optional& x)
      {
        this->SimLocationAndWeather_EndDayMonth_ = x;
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_DayOfWeekStartDay_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_DayOfWeekStartDay () const
      {
        return this->SimLocationAndWeather_DayOfWeekStartDay_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_DayOfWeekStartDay_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_DayOfWeekStartDay ()
      {
        return this->SimLocationAndWeather_DayOfWeekStartDay_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_DayOfWeekStartDay (const SimLocationAndWeather_DayOfWeekStartDay_type& x)
      {
        this->SimLocationAndWeather_DayOfWeekStartDay_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_DayOfWeekStartDay (const SimLocationAndWeather_DayOfWeekStartDay_optional& x)
      {
        this->SimLocationAndWeather_DayOfWeekStartDay_ = x;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_DayOfWeekStartDay (::std::auto_ptr< SimLocationAndWeather_DayOfWeekStartDay_type > x)
      {
        this->SimLocationAndWeather_DayOfWeekStartDay_.set (x);
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_UseWtherFileDylghtSavingPer_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileDylghtSavingPer () const
      {
        return this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_UseWtherFileDylghtSavingPer_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileDylghtSavingPer ()
      {
        return this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileDylghtSavingPer (const SimLocationAndWeather_UseWtherFileDylghtSavingPer_type& x)
      {
        this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileDylghtSavingPer (const SimLocationAndWeather_UseWtherFileDylghtSavingPer_optional& x)
      {
        this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_ = x;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileDylghtSavingPer (::std::auto_ptr< SimLocationAndWeather_UseWtherFileDylghtSavingPer_type > x)
      {
        this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_.set (x);
      }

      const SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_UseWtherFileRainAndSnowInd_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileRainAndSnowInd () const
      {
        return this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_;
      }

      SimLocationAndWeather_WeatherFile_Days::SimLocationAndWeather_UseWtherFileRainAndSnowInd_optional& SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileRainAndSnowInd ()
      {
        return this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileRainAndSnowInd (const SimLocationAndWeather_UseWtherFileRainAndSnowInd_type& x)
      {
        this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileRainAndSnowInd (const SimLocationAndWeather_UseWtherFileRainAndSnowInd_optional& x)
      {
        this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_ = x;
      }

      void SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_UseWtherFileRainAndSnowInd (::std::auto_ptr< SimLocationAndWeather_UseWtherFileRainAndSnowInd_type > x)
      {
        this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimLocationAndWeather_WeatherFile_Days
      //

      SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_WeatherFile_Days (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile (RefId),
        SimLocationAndWeather_Name_ (this),
        SimLocationAndWeather_BeginMonth_ (this),
        SimLocationAndWeather_BeginDayMonth_ (this),
        SimLocationAndWeather_EndMonth_ (this),
        SimLocationAndWeather_EndDayMonth_ (this),
        SimLocationAndWeather_DayOfWeekStartDay_ (this),
        SimLocationAndWeather_UseWtherFileDylghtSavingPer_ (this),
        SimLocationAndWeather_UseWtherFileRainAndSnowInd_ (this)
      {
      }

      SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_WeatherFile_Days (const SimLocationAndWeather_WeatherFile_Days& x,
                                              ::xml_schema::flags f,
                                              ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile (x, f, c),
        SimLocationAndWeather_Name_ (x.SimLocationAndWeather_Name_, f, this),
        SimLocationAndWeather_BeginMonth_ (x.SimLocationAndWeather_BeginMonth_, f, this),
        SimLocationAndWeather_BeginDayMonth_ (x.SimLocationAndWeather_BeginDayMonth_, f, this),
        SimLocationAndWeather_EndMonth_ (x.SimLocationAndWeather_EndMonth_, f, this),
        SimLocationAndWeather_EndDayMonth_ (x.SimLocationAndWeather_EndDayMonth_, f, this),
        SimLocationAndWeather_DayOfWeekStartDay_ (x.SimLocationAndWeather_DayOfWeekStartDay_, f, this),
        SimLocationAndWeather_UseWtherFileDylghtSavingPer_ (x.SimLocationAndWeather_UseWtherFileDylghtSavingPer_, f, this),
        SimLocationAndWeather_UseWtherFileRainAndSnowInd_ (x.SimLocationAndWeather_UseWtherFileRainAndSnowInd_, f, this)
      {
      }

      SimLocationAndWeather_WeatherFile_Days::
      SimLocationAndWeather_WeatherFile_Days (const ::xercesc::DOMElement& e,
                                              ::xml_schema::flags f,
                                              ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile (e, f | ::xml_schema::flags::base, c),
        SimLocationAndWeather_Name_ (this),
        SimLocationAndWeather_BeginMonth_ (this),
        SimLocationAndWeather_BeginDayMonth_ (this),
        SimLocationAndWeather_EndMonth_ (this),
        SimLocationAndWeather_EndDayMonth_ (this),
        SimLocationAndWeather_DayOfWeekStartDay_ (this),
        SimLocationAndWeather_UseWtherFileDylghtSavingPer_ (this),
        SimLocationAndWeather_UseWtherFileRainAndSnowInd_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimLocationAndWeather_WeatherFile_Days::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimLocationAndWeather_Name
          //
          if (n.name () == "SimLocationAndWeather_Name" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimLocationAndWeather_Name_type > r (
              SimLocationAndWeather_Name_traits::create (i, f, this));

            if (!this->SimLocationAndWeather_Name_)
            {
              this->SimLocationAndWeather_Name_.set (r);
              continue;
            }
          }

          // SimLocationAndWeather_BeginMonth
          //
          if (n.name () == "SimLocationAndWeather_BeginMonth" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_BeginMonth_)
            {
              this->SimLocationAndWeather_BeginMonth_.set (SimLocationAndWeather_BeginMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_BeginDayMonth
          //
          if (n.name () == "SimLocationAndWeather_BeginDayMonth" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_BeginDayMonth_)
            {
              this->SimLocationAndWeather_BeginDayMonth_.set (SimLocationAndWeather_BeginDayMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_EndMonth
          //
          if (n.name () == "SimLocationAndWeather_EndMonth" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_EndMonth_)
            {
              this->SimLocationAndWeather_EndMonth_.set (SimLocationAndWeather_EndMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_EndDayMonth
          //
          if (n.name () == "SimLocationAndWeather_EndDayMonth" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_EndDayMonth_)
            {
              this->SimLocationAndWeather_EndDayMonth_.set (SimLocationAndWeather_EndDayMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_DayOfWeekStartDay
          //
          if (n.name () == "SimLocationAndWeather_DayOfWeekStartDay" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimLocationAndWeather_DayOfWeekStartDay_type > r (
              SimLocationAndWeather_DayOfWeekStartDay_traits::create (i, f, this));

            if (!this->SimLocationAndWeather_DayOfWeekStartDay_)
            {
              this->SimLocationAndWeather_DayOfWeekStartDay_.set (r);
              continue;
            }
          }

          // SimLocationAndWeather_UseWtherFileDylghtSavingPer
          //
          if (n.name () == "SimLocationAndWeather_UseWtherFileDylghtSavingPer" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimLocationAndWeather_UseWtherFileDylghtSavingPer_type > r (
              SimLocationAndWeather_UseWtherFileDylghtSavingPer_traits::create (i, f, this));

            if (!this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_)
            {
              this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_.set (r);
              continue;
            }
          }

          // SimLocationAndWeather_UseWtherFileRainAndSnowInd
          //
          if (n.name () == "SimLocationAndWeather_UseWtherFileRainAndSnowInd" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimLocationAndWeather_UseWtherFileRainAndSnowInd_type > r (
              SimLocationAndWeather_UseWtherFileRainAndSnowInd_traits::create (i, f, this));

            if (!this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_)
            {
              this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimLocationAndWeather_WeatherFile_Days* SimLocationAndWeather_WeatherFile_Days::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimLocationAndWeather_WeatherFile_Days (*this, f, c);
      }

      SimLocationAndWeather_WeatherFile_Days& SimLocationAndWeather_WeatherFile_Days::
      operator= (const SimLocationAndWeather_WeatherFile_Days& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile& > (*this) = x;
          this->SimLocationAndWeather_Name_ = x.SimLocationAndWeather_Name_;
          this->SimLocationAndWeather_BeginMonth_ = x.SimLocationAndWeather_BeginMonth_;
          this->SimLocationAndWeather_BeginDayMonth_ = x.SimLocationAndWeather_BeginDayMonth_;
          this->SimLocationAndWeather_EndMonth_ = x.SimLocationAndWeather_EndMonth_;
          this->SimLocationAndWeather_EndDayMonth_ = x.SimLocationAndWeather_EndDayMonth_;
          this->SimLocationAndWeather_DayOfWeekStartDay_ = x.SimLocationAndWeather_DayOfWeekStartDay_;
          this->SimLocationAndWeather_UseWtherFileDylghtSavingPer_ = x.SimLocationAndWeather_UseWtherFileDylghtSavingPer_;
          this->SimLocationAndWeather_UseWtherFileRainAndSnowInd_ = x.SimLocationAndWeather_UseWtherFileRainAndSnowInd_;
        }

        return *this;
      }

      SimLocationAndWeather_WeatherFile_Days::
      ~SimLocationAndWeather_WeatherFile_Days ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

