// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed
      // 

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_FuelType_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType () const
      {
        return this->SimFlowEnergyTrans_FuelType_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_FuelType_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType ()
      {
        return this->SimFlowEnergyTrans_FuelType_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType (const SimFlowEnergyTrans_FuelType_type& x)
      {
        this->SimFlowEnergyTrans_FuelType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType (const SimFlowEnergyTrans_FuelType_optional& x)
      {
        this->SimFlowEnergyTrans_FuelType_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType (::std::auto_ptr< SimFlowEnergyTrans_FuelType_type > x)
      {
        this->SimFlowEnergyTrans_FuelType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName () const
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName ()
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName () const
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName ()
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap () const
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap ()
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 () const
      {
        return this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 ()
      {
        return this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 (const SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_type& x)
      {
        this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 (const SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_optional& x)
      {
        this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 (::std::auto_ptr< SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_type > x)
      {
        this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds () const
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds ()
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_type& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_optional& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName () const
      {
        return this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName ()
      {
        return this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName (const SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName (const SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp () const
      {
        return this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp ()
      {
        return this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp (const SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_type& x)
      {
        this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp (const SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_optional& x)
      {
        this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostStrategy_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostStrategy () const
      {
        return this->SimFlowEnergyTrans_DefrostStrategy_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostStrategy_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostStrategy ()
      {
        return this->SimFlowEnergyTrans_DefrostStrategy_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostStrategy (const SimFlowEnergyTrans_DefrostStrategy_type& x)
      {
        this->SimFlowEnergyTrans_DefrostStrategy_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostStrategy (const SimFlowEnergyTrans_DefrostStrategy_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostStrategy_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostStrategy (::std::auto_ptr< SimFlowEnergyTrans_DefrostStrategy_type > x)
      {
        this->SimFlowEnergyTrans_DefrostStrategy_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostCntl_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostCntl () const
      {
        return this->SimFlowEnergyTrans_DefrostCntl_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostCntl_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostCntl ()
      {
        return this->SimFlowEnergyTrans_DefrostCntl_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostCntl (const SimFlowEnergyTrans_DefrostCntl_type& x)
      {
        this->SimFlowEnergyTrans_DefrostCntl_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostCntl (const SimFlowEnergyTrans_DefrostCntl_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostCntl_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostCntl (::std::auto_ptr< SimFlowEnergyTrans_DefrostCntl_type > x)
      {
        this->SimFlowEnergyTrans_DefrostCntl_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostTimePeriodFract_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract () const
      {
        return this->SimFlowEnergyTrans_DefrostTimePeriodFract_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_DefrostTimePeriodFract_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract ()
      {
        return this->SimFlowEnergyTrans_DefrostTimePeriodFract_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract (const SimFlowEnergyTrans_DefrostTimePeriodFract_type& x)
      {
        this->SimFlowEnergyTrans_DefrostTimePeriodFract_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract (const SimFlowEnergyTrans_DefrostTimePeriodFract_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostTimePeriodFract_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_ResistDefrostHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap () const
      {
        return this->SimFlowEnergyTrans_ResistDefrostHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_ResistDefrostHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap ()
      {
        return this->SimFlowEnergyTrans_ResistDefrostHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap (const SimFlowEnergyTrans_ResistDefrostHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_ResistDefrostHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap (const SimFlowEnergyTrans_ResistDefrostHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_ResistDefrostHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4 (const SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4 (const SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed
      //

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (RefId),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (this),
        SimFlowEnergyTrans_DefrostStrategy_ (this),
        SimFlowEnergyTrans_DefrostCntl_ (this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (this),
        SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed& x,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (x, f, c),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_FuelType_ (x.SimFlowEnergyTrans_FuelType_, f, this),
        SimFlowEnergyTrans_AirInNodeName_ (x.SimFlowEnergyTrans_AirInNodeName_, f, this),
        SimFlowEnergyTrans_AirOutNodeName_ (x.SimFlowEnergyTrans_AirOutNodeName_, f, this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (x.SimFlowEnergyTrans_CrankcaseHeatCap_, f, this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_, f, this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (x.SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_, f, this),
        SimFlowEnergyTrans_NumSpeeds_ (x.SimFlowEnergyTrans_NumSpeeds_, f, this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (x.SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_, f, this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (x.SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_, f, this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_, f, this),
        SimFlowEnergyTrans_DefrostStrategy_ (x.SimFlowEnergyTrans_DefrostStrategy_, f, this),
        SimFlowEnergyTrans_DefrostCntl_ (x.SimFlowEnergyTrans_DefrostCntl_, f, this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (x.SimFlowEnergyTrans_DefrostTimePeriodFract_, f, this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (x.SimFlowEnergyTrans_ResistDefrostHeatCap_, f, this),
        SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_ (x.SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_, f, this),
        SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed (const ::xercesc::DOMElement& e,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (this),
        SimFlowEnergyTrans_DefrostStrategy_ (this),
        SimFlowEnergyTrans_DefrostCntl_ (this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (this),
        SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FuelType
          //
          if (n.name () == "SimFlowEnergyTrans_FuelType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FuelType_type > r (
              SimFlowEnergyTrans_FuelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FuelType_)
            {
              this->SimFlowEnergyTrans_FuelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirInNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > r (
              SimFlowEnergyTrans_AirInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirInNodeName_)
            {
              this->SimFlowEnergyTrans_AirInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirOutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirOutNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > r (
              SimFlowEnergyTrans_AirOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirOutNodeName_)
            {
              this->SimFlowEnergyTrans_AirOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CrankcaseHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_CrankcaseHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CrankcaseHeatCap_)
            {
              this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (SimFlowEnergyTrans_CrankcaseHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_)
            {
              this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1
          //
          if (n.name () == "SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_type > r (
              SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_)
            {
              this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_NumSpeeds
          //
          if (n.name () == "SimFlowEnergyTrans_NumSpeeds" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumSpeeds_)
            {
              this->SimFlowEnergyTrans_NumSpeeds_.set (SimFlowEnergyTrans_NumSpeeds_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_type > r (
              SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_)
            {
              this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp
          //
          if (n.name () == "SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_)
            {
              this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_.set (SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_)
            {
              this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_.set (SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostStrategy
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostStrategy" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DefrostStrategy_type > r (
              SimFlowEnergyTrans_DefrostStrategy_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DefrostStrategy_)
            {
              this->SimFlowEnergyTrans_DefrostStrategy_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostCntl
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostCntl" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DefrostCntl_type > r (
              SimFlowEnergyTrans_DefrostCntl_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DefrostCntl_)
            {
              this->SimFlowEnergyTrans_DefrostCntl_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostTimePeriodFract
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostTimePeriodFract" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_DefrostTimePeriodFract_)
            {
              this->SimFlowEnergyTrans_DefrostTimePeriodFract_.set (SimFlowEnergyTrans_DefrostTimePeriodFract_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_ResistDefrostHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_ResistDefrostHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_ResistDefrostHeatCap_)
            {
              this->SimFlowEnergyTrans_ResistDefrostHeatCap_.set (SimFlowEnergyTrans_ResistDefrostHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_type > r (
              SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed* SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      operator= (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX& > (*this) = x;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_FuelType_ = x.SimFlowEnergyTrans_FuelType_;
          this->SimFlowEnergyTrans_AirInNodeName_ = x.SimFlowEnergyTrans_AirInNodeName_;
          this->SimFlowEnergyTrans_AirOutNodeName_ = x.SimFlowEnergyTrans_AirOutNodeName_;
          this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x.SimFlowEnergyTrans_CrankcaseHeatCap_;
          this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
          this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ = x.SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_;
          this->SimFlowEnergyTrans_NumSpeeds_ = x.SimFlowEnergyTrans_NumSpeeds_;
          this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ = x.SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_;
          this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ = x.SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_;
          this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ = x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_;
          this->SimFlowEnergyTrans_DefrostStrategy_ = x.SimFlowEnergyTrans_DefrostStrategy_;
          this->SimFlowEnergyTrans_DefrostCntl_ = x.SimFlowEnergyTrans_DefrostCntl_;
          this->SimFlowEnergyTrans_DefrostTimePeriodFract_ = x.SimFlowEnergyTrans_DefrostTimePeriodFract_;
          this->SimFlowEnergyTrans_ResistDefrostHeatCap_ = x.SimFlowEnergyTrans_ResistDefrostHeatCap_;
          this->SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_ = x.SimFlowEnergyTrans_SpeedRatedTotalHeatingCap_1_4_;
          this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedTotalHeatingCapFuncTempCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedTotalHeatingCapFuncFlowFractCurveName_1_4_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed::
      ~SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

