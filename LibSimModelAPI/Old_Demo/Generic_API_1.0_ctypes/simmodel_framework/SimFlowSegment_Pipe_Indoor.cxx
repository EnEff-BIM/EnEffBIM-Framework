// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowSegment_Pipe_Indoor.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowSegment_Pipe_Indoor
      // 

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_ConstructionName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_ConstructionName () const
      {
        return this->SimFlowSeg_ConstructionName_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_ConstructionName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_ConstructionName ()
      {
        return this->SimFlowSeg_ConstructionName_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_ConstructionName (const SimFlowSeg_ConstructionName_type& x)
      {
        this->SimFlowSeg_ConstructionName_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_ConstructionName (const SimFlowSeg_ConstructionName_optional& x)
      {
        this->SimFlowSeg_ConstructionName_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_ConstructionName (::std::auto_ptr< SimFlowSeg_ConstructionName_type > x)
      {
        this->SimFlowSeg_ConstructionName_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_FluidInletNodeName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidInletNodeName () const
      {
        return this->SimFlowSeg_FluidInletNodeName_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_FluidInletNodeName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidInletNodeName ()
      {
        return this->SimFlowSeg_FluidInletNodeName_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidInletNodeName (const SimFlowSeg_FluidInletNodeName_type& x)
      {
        this->SimFlowSeg_FluidInletNodeName_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidInletNodeName (const SimFlowSeg_FluidInletNodeName_optional& x)
      {
        this->SimFlowSeg_FluidInletNodeName_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidInletNodeName (::std::auto_ptr< SimFlowSeg_FluidInletNodeName_type > x)
      {
        this->SimFlowSeg_FluidInletNodeName_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_FluidOutletNodeName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidOutletNodeName () const
      {
        return this->SimFlowSeg_FluidOutletNodeName_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_FluidOutletNodeName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidOutletNodeName ()
      {
        return this->SimFlowSeg_FluidOutletNodeName_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidOutletNodeName (const SimFlowSeg_FluidOutletNodeName_type& x)
      {
        this->SimFlowSeg_FluidOutletNodeName_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidOutletNodeName (const SimFlowSeg_FluidOutletNodeName_optional& x)
      {
        this->SimFlowSeg_FluidOutletNodeName_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_FluidOutletNodeName (::std::auto_ptr< SimFlowSeg_FluidOutletNodeName_type > x)
      {
        this->SimFlowSeg_FluidOutletNodeName_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_EnvironmentType_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_EnvironmentType () const
      {
        return this->SimFlowSeg_EnvironmentType_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_EnvironmentType_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_EnvironmentType ()
      {
        return this->SimFlowSeg_EnvironmentType_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_EnvironmentType (const SimFlowSeg_EnvironmentType_type& x)
      {
        this->SimFlowSeg_EnvironmentType_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_EnvironmentType (const SimFlowSeg_EnvironmentType_optional& x)
      {
        this->SimFlowSeg_EnvironmentType_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_EnvironmentType (::std::auto_ptr< SimFlowSeg_EnvironmentType_type > x)
      {
        this->SimFlowSeg_EnvironmentType_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_AmbTempZoneName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempZoneName () const
      {
        return this->SimFlowSeg_AmbTempZoneName_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_AmbTempZoneName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempZoneName ()
      {
        return this->SimFlowSeg_AmbTempZoneName_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempZoneName (const SimFlowSeg_AmbTempZoneName_type& x)
      {
        this->SimFlowSeg_AmbTempZoneName_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempZoneName (const SimFlowSeg_AmbTempZoneName_optional& x)
      {
        this->SimFlowSeg_AmbTempZoneName_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempZoneName (::std::auto_ptr< SimFlowSeg_AmbTempZoneName_type > x)
      {
        this->SimFlowSeg_AmbTempZoneName_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_AmbTempSchedName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempSchedName () const
      {
        return this->SimFlowSeg_AmbTempSchedName_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_AmbTempSchedName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempSchedName ()
      {
        return this->SimFlowSeg_AmbTempSchedName_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempSchedName (const SimFlowSeg_AmbTempSchedName_type& x)
      {
        this->SimFlowSeg_AmbTempSchedName_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempSchedName (const SimFlowSeg_AmbTempSchedName_optional& x)
      {
        this->SimFlowSeg_AmbTempSchedName_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbTempSchedName (::std::auto_ptr< SimFlowSeg_AmbTempSchedName_type > x)
      {
        this->SimFlowSeg_AmbTempSchedName_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_AmbAirVeloSchedName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbAirVeloSchedName () const
      {
        return this->SimFlowSeg_AmbAirVeloSchedName_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_AmbAirVeloSchedName_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbAirVeloSchedName ()
      {
        return this->SimFlowSeg_AmbAirVeloSchedName_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbAirVeloSchedName (const SimFlowSeg_AmbAirVeloSchedName_type& x)
      {
        this->SimFlowSeg_AmbAirVeloSchedName_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbAirVeloSchedName (const SimFlowSeg_AmbAirVeloSchedName_optional& x)
      {
        this->SimFlowSeg_AmbAirVeloSchedName_ = x;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_AmbAirVeloSchedName (::std::auto_ptr< SimFlowSeg_AmbAirVeloSchedName_type > x)
      {
        this->SimFlowSeg_AmbAirVeloSchedName_.set (x);
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_PipesideDiam_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipesideDiam () const
      {
        return this->SimFlowSeg_PipesideDiam_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_PipesideDiam_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipesideDiam ()
      {
        return this->SimFlowSeg_PipesideDiam_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipesideDiam (const SimFlowSeg_PipesideDiam_type& x)
      {
        this->SimFlowSeg_PipesideDiam_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipesideDiam (const SimFlowSeg_PipesideDiam_optional& x)
      {
        this->SimFlowSeg_PipesideDiam_ = x;
      }

      const SimFlowSegment_Pipe_Indoor::SimFlowSeg_PipeLength_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipeLength () const
      {
        return this->SimFlowSeg_PipeLength_;
      }

      SimFlowSegment_Pipe_Indoor::SimFlowSeg_PipeLength_optional& SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipeLength ()
      {
        return this->SimFlowSeg_PipeLength_;
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipeLength (const SimFlowSeg_PipeLength_type& x)
      {
        this->SimFlowSeg_PipeLength_.set (x);
      }

      void SimFlowSegment_Pipe_Indoor::
      SimFlowSeg_PipeLength (const SimFlowSeg_PipeLength_optional& x)
      {
        this->SimFlowSeg_PipeLength_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowSegment_Pipe_Indoor
      //

      SimFlowSegment_Pipe_Indoor::
      SimFlowSegment_Pipe_Indoor (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowSegment_Pipe (RefId),
        SimFlowSeg_ConstructionName_ (this),
        SimFlowSeg_FluidInletNodeName_ (this),
        SimFlowSeg_FluidOutletNodeName_ (this),
        SimFlowSeg_EnvironmentType_ (this),
        SimFlowSeg_AmbTempZoneName_ (this),
        SimFlowSeg_AmbTempSchedName_ (this),
        SimFlowSeg_AmbAirVeloSchedName_ (this),
        SimFlowSeg_PipesideDiam_ (this),
        SimFlowSeg_PipeLength_ (this)
      {
      }

      SimFlowSegment_Pipe_Indoor::
      SimFlowSegment_Pipe_Indoor (const SimFlowSegment_Pipe_Indoor& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowSegment_Pipe (x, f, c),
        SimFlowSeg_ConstructionName_ (x.SimFlowSeg_ConstructionName_, f, this),
        SimFlowSeg_FluidInletNodeName_ (x.SimFlowSeg_FluidInletNodeName_, f, this),
        SimFlowSeg_FluidOutletNodeName_ (x.SimFlowSeg_FluidOutletNodeName_, f, this),
        SimFlowSeg_EnvironmentType_ (x.SimFlowSeg_EnvironmentType_, f, this),
        SimFlowSeg_AmbTempZoneName_ (x.SimFlowSeg_AmbTempZoneName_, f, this),
        SimFlowSeg_AmbTempSchedName_ (x.SimFlowSeg_AmbTempSchedName_, f, this),
        SimFlowSeg_AmbAirVeloSchedName_ (x.SimFlowSeg_AmbAirVeloSchedName_, f, this),
        SimFlowSeg_PipesideDiam_ (x.SimFlowSeg_PipesideDiam_, f, this),
        SimFlowSeg_PipeLength_ (x.SimFlowSeg_PipeLength_, f, this)
      {
      }

      SimFlowSegment_Pipe_Indoor::
      SimFlowSegment_Pipe_Indoor (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowSegment_Pipe (e, f | ::xml_schema::flags::base, c),
        SimFlowSeg_ConstructionName_ (this),
        SimFlowSeg_FluidInletNodeName_ (this),
        SimFlowSeg_FluidOutletNodeName_ (this),
        SimFlowSeg_EnvironmentType_ (this),
        SimFlowSeg_AmbTempZoneName_ (this),
        SimFlowSeg_AmbTempSchedName_ (this),
        SimFlowSeg_AmbAirVeloSchedName_ (this),
        SimFlowSeg_PipesideDiam_ (this),
        SimFlowSeg_PipeLength_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowSegment_Pipe_Indoor::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowSegment_Pipe::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowSeg_ConstructionName
          //
          if (n.name () == "SimFlowSeg_ConstructionName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_ConstructionName_type > r (
              SimFlowSeg_ConstructionName_traits::create (i, f, this));

            if (!this->SimFlowSeg_ConstructionName_)
            {
              this->SimFlowSeg_ConstructionName_.set (r);
              continue;
            }
          }

          // SimFlowSeg_FluidInletNodeName
          //
          if (n.name () == "SimFlowSeg_FluidInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_FluidInletNodeName_type > r (
              SimFlowSeg_FluidInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowSeg_FluidInletNodeName_)
            {
              this->SimFlowSeg_FluidInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSeg_FluidOutletNodeName
          //
          if (n.name () == "SimFlowSeg_FluidOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_FluidOutletNodeName_type > r (
              SimFlowSeg_FluidOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowSeg_FluidOutletNodeName_)
            {
              this->SimFlowSeg_FluidOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSeg_EnvironmentType
          //
          if (n.name () == "SimFlowSeg_EnvironmentType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_EnvironmentType_type > r (
              SimFlowSeg_EnvironmentType_traits::create (i, f, this));

            if (!this->SimFlowSeg_EnvironmentType_)
            {
              this->SimFlowSeg_EnvironmentType_.set (r);
              continue;
            }
          }

          // SimFlowSeg_AmbTempZoneName
          //
          if (n.name () == "SimFlowSeg_AmbTempZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_AmbTempZoneName_type > r (
              SimFlowSeg_AmbTempZoneName_traits::create (i, f, this));

            if (!this->SimFlowSeg_AmbTempZoneName_)
            {
              this->SimFlowSeg_AmbTempZoneName_.set (r);
              continue;
            }
          }

          // SimFlowSeg_AmbTempSchedName
          //
          if (n.name () == "SimFlowSeg_AmbTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_AmbTempSchedName_type > r (
              SimFlowSeg_AmbTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowSeg_AmbTempSchedName_)
            {
              this->SimFlowSeg_AmbTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowSeg_AmbAirVeloSchedName
          //
          if (n.name () == "SimFlowSeg_AmbAirVeloSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowSeg_AmbAirVeloSchedName_type > r (
              SimFlowSeg_AmbAirVeloSchedName_traits::create (i, f, this));

            if (!this->SimFlowSeg_AmbAirVeloSchedName_)
            {
              this->SimFlowSeg_AmbAirVeloSchedName_.set (r);
              continue;
            }
          }

          // SimFlowSeg_PipesideDiam
          //
          if (n.name () == "SimFlowSeg_PipesideDiam" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowSeg_PipesideDiam_)
            {
              this->SimFlowSeg_PipesideDiam_.set (SimFlowSeg_PipesideDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSeg_PipeLength
          //
          if (n.name () == "SimFlowSeg_PipeLength" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowSeg_PipeLength_)
            {
              this->SimFlowSeg_PipeLength_.set (SimFlowSeg_PipeLength_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowSegment_Pipe_Indoor* SimFlowSegment_Pipe_Indoor::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowSegment_Pipe_Indoor (*this, f, c);
      }

      SimFlowSegment_Pipe_Indoor& SimFlowSegment_Pipe_Indoor::
      operator= (const SimFlowSegment_Pipe_Indoor& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowSegment_Pipe& > (*this) = x;
          this->SimFlowSeg_ConstructionName_ = x.SimFlowSeg_ConstructionName_;
          this->SimFlowSeg_FluidInletNodeName_ = x.SimFlowSeg_FluidInletNodeName_;
          this->SimFlowSeg_FluidOutletNodeName_ = x.SimFlowSeg_FluidOutletNodeName_;
          this->SimFlowSeg_EnvironmentType_ = x.SimFlowSeg_EnvironmentType_;
          this->SimFlowSeg_AmbTempZoneName_ = x.SimFlowSeg_AmbTempZoneName_;
          this->SimFlowSeg_AmbTempSchedName_ = x.SimFlowSeg_AmbTempSchedName_;
          this->SimFlowSeg_AmbAirVeloSchedName_ = x.SimFlowSeg_AmbAirVeloSchedName_;
          this->SimFlowSeg_PipesideDiam_ = x.SimFlowSeg_PipesideDiam_;
          this->SimFlowSeg_PipeLength_ = x.SimFlowSeg_PipeLength_;
        }

        return *this;
      }

      SimFlowSegment_Pipe_Indoor::
      ~SimFlowSegment_Pipe_Indoor ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

