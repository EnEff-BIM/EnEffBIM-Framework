// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimTemplateHvacZoneEquipment.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimTemplateHvacZoneEquipment
      // 

      const SimTemplateHvacZoneEquipment::TemplateZoneEquipment1_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment1 () const
      {
        return this->TemplateZoneEquipment1_;
      }

      SimTemplateHvacZoneEquipment::TemplateZoneEquipment1_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment1 ()
      {
        return this->TemplateZoneEquipment1_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment1 (const TemplateZoneEquipment1_type& x)
      {
        this->TemplateZoneEquipment1_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment1 (const TemplateZoneEquipment1_optional& x)
      {
        this->TemplateZoneEquipment1_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment1 (::std::auto_ptr< TemplateZoneEquipment1_type > x)
      {
        this->TemplateZoneEquipment1_.set (x);
      }

      const SimTemplateHvacZoneEquipment::CoolingPriority_Equpment1_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment1 () const
      {
        return this->CoolingPriority_Equpment1_;
      }

      SimTemplateHvacZoneEquipment::CoolingPriority_Equpment1_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment1 ()
      {
        return this->CoolingPriority_Equpment1_;
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment1 (const CoolingPriority_Equpment1_type& x)
      {
        this->CoolingPriority_Equpment1_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment1 (const CoolingPriority_Equpment1_optional& x)
      {
        this->CoolingPriority_Equpment1_ = x;
      }

      const SimTemplateHvacZoneEquipment::HeatingPriority_Equpment1_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment1 () const
      {
        return this->HeatingPriority_Equpment1_;
      }

      SimTemplateHvacZoneEquipment::HeatingPriority_Equpment1_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment1 ()
      {
        return this->HeatingPriority_Equpment1_;
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment1 (const HeatingPriority_Equpment1_type& x)
      {
        this->HeatingPriority_Equpment1_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment1 (const HeatingPriority_Equpment1_optional& x)
      {
        this->HeatingPriority_Equpment1_ = x;
      }

      const SimTemplateHvacZoneEquipment::TemplateZoneEquipment2_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment2 () const
      {
        return this->TemplateZoneEquipment2_;
      }

      SimTemplateHvacZoneEquipment::TemplateZoneEquipment2_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment2 ()
      {
        return this->TemplateZoneEquipment2_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment2 (const TemplateZoneEquipment2_type& x)
      {
        this->TemplateZoneEquipment2_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment2 (const TemplateZoneEquipment2_optional& x)
      {
        this->TemplateZoneEquipment2_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment2 (::std::auto_ptr< TemplateZoneEquipment2_type > x)
      {
        this->TemplateZoneEquipment2_.set (x);
      }

      const SimTemplateHvacZoneEquipment::CoolingPriority_Equpment2_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment2 () const
      {
        return this->CoolingPriority_Equpment2_;
      }

      SimTemplateHvacZoneEquipment::CoolingPriority_Equpment2_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment2 ()
      {
        return this->CoolingPriority_Equpment2_;
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment2 (const CoolingPriority_Equpment2_type& x)
      {
        this->CoolingPriority_Equpment2_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment2 (const CoolingPriority_Equpment2_optional& x)
      {
        this->CoolingPriority_Equpment2_ = x;
      }

      const SimTemplateHvacZoneEquipment::HeatingPriority_Equpment2_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment2 () const
      {
        return this->HeatingPriority_Equpment2_;
      }

      SimTemplateHvacZoneEquipment::HeatingPriority_Equpment2_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment2 ()
      {
        return this->HeatingPriority_Equpment2_;
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment2 (const HeatingPriority_Equpment2_type& x)
      {
        this->HeatingPriority_Equpment2_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment2 (const HeatingPriority_Equpment2_optional& x)
      {
        this->HeatingPriority_Equpment2_ = x;
      }

      const SimTemplateHvacZoneEquipment::TemplateZoneEquipment3_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment3 () const
      {
        return this->TemplateZoneEquipment3_;
      }

      SimTemplateHvacZoneEquipment::TemplateZoneEquipment3_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment3 ()
      {
        return this->TemplateZoneEquipment3_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment3 (const TemplateZoneEquipment3_type& x)
      {
        this->TemplateZoneEquipment3_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment3 (const TemplateZoneEquipment3_optional& x)
      {
        this->TemplateZoneEquipment3_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment3 (::std::auto_ptr< TemplateZoneEquipment3_type > x)
      {
        this->TemplateZoneEquipment3_.set (x);
      }

      const SimTemplateHvacZoneEquipment::CoolingPriority_Equpment3_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment3 () const
      {
        return this->CoolingPriority_Equpment3_;
      }

      SimTemplateHvacZoneEquipment::CoolingPriority_Equpment3_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment3 ()
      {
        return this->CoolingPriority_Equpment3_;
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment3 (const CoolingPriority_Equpment3_type& x)
      {
        this->CoolingPriority_Equpment3_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment3 (const CoolingPriority_Equpment3_optional& x)
      {
        this->CoolingPriority_Equpment3_ = x;
      }

      const SimTemplateHvacZoneEquipment::HeatingPriority_Equpment3_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment3 () const
      {
        return this->HeatingPriority_Equpment3_;
      }

      SimTemplateHvacZoneEquipment::HeatingPriority_Equpment3_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment3 ()
      {
        return this->HeatingPriority_Equpment3_;
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment3 (const HeatingPriority_Equpment3_type& x)
      {
        this->HeatingPriority_Equpment3_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment3 (const HeatingPriority_Equpment3_optional& x)
      {
        this->HeatingPriority_Equpment3_ = x;
      }

      const SimTemplateHvacZoneEquipment::TemplateZoneEquipment4_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment4 () const
      {
        return this->TemplateZoneEquipment4_;
      }

      SimTemplateHvacZoneEquipment::TemplateZoneEquipment4_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment4 ()
      {
        return this->TemplateZoneEquipment4_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment4 (const TemplateZoneEquipment4_type& x)
      {
        this->TemplateZoneEquipment4_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment4 (const TemplateZoneEquipment4_optional& x)
      {
        this->TemplateZoneEquipment4_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment4 (::std::auto_ptr< TemplateZoneEquipment4_type > x)
      {
        this->TemplateZoneEquipment4_.set (x);
      }

      const SimTemplateHvacZoneEquipment::CoolingPriority_Equpment4_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment4 () const
      {
        return this->CoolingPriority_Equpment4_;
      }

      SimTemplateHvacZoneEquipment::CoolingPriority_Equpment4_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment4 ()
      {
        return this->CoolingPriority_Equpment4_;
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment4 (const CoolingPriority_Equpment4_type& x)
      {
        this->CoolingPriority_Equpment4_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment4 (const CoolingPriority_Equpment4_optional& x)
      {
        this->CoolingPriority_Equpment4_ = x;
      }

      const SimTemplateHvacZoneEquipment::HeatingPriority_Equpment4_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment4 () const
      {
        return this->HeatingPriority_Equpment4_;
      }

      SimTemplateHvacZoneEquipment::HeatingPriority_Equpment4_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment4 ()
      {
        return this->HeatingPriority_Equpment4_;
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment4 (const HeatingPriority_Equpment4_type& x)
      {
        this->HeatingPriority_Equpment4_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment4 (const HeatingPriority_Equpment4_optional& x)
      {
        this->HeatingPriority_Equpment4_ = x;
      }

      const SimTemplateHvacZoneEquipment::TemplateZoneEquipment5_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment5 () const
      {
        return this->TemplateZoneEquipment5_;
      }

      SimTemplateHvacZoneEquipment::TemplateZoneEquipment5_optional& SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment5 ()
      {
        return this->TemplateZoneEquipment5_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment5 (const TemplateZoneEquipment5_type& x)
      {
        this->TemplateZoneEquipment5_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment5 (const TemplateZoneEquipment5_optional& x)
      {
        this->TemplateZoneEquipment5_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateZoneEquipment5 (::std::auto_ptr< TemplateZoneEquipment5_type > x)
      {
        this->TemplateZoneEquipment5_.set (x);
      }

      const SimTemplateHvacZoneEquipment::CoolingPriority_Equpment5_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment5 () const
      {
        return this->CoolingPriority_Equpment5_;
      }

      SimTemplateHvacZoneEquipment::CoolingPriority_Equpment5_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment5 ()
      {
        return this->CoolingPriority_Equpment5_;
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment5 (const CoolingPriority_Equpment5_type& x)
      {
        this->CoolingPriority_Equpment5_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_Equpment5 (const CoolingPriority_Equpment5_optional& x)
      {
        this->CoolingPriority_Equpment5_ = x;
      }

      const SimTemplateHvacZoneEquipment::HeatingPriority_Equpment5_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment5 () const
      {
        return this->HeatingPriority_Equpment5_;
      }

      SimTemplateHvacZoneEquipment::HeatingPriority_Equpment5_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment5 ()
      {
        return this->HeatingPriority_Equpment5_;
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment5 (const HeatingPriority_Equpment5_type& x)
      {
        this->HeatingPriority_Equpment5_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_Equpment5 (const HeatingPriority_Equpment5_optional& x)
      {
        this->HeatingPriority_Equpment5_ = x;
      }

      const SimTemplateHvacZoneEquipment::TemplateAirTerminal_optional& SimTemplateHvacZoneEquipment::
      TemplateAirTerminal () const
      {
        return this->TemplateAirTerminal_;
      }

      SimTemplateHvacZoneEquipment::TemplateAirTerminal_optional& SimTemplateHvacZoneEquipment::
      TemplateAirTerminal ()
      {
        return this->TemplateAirTerminal_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateAirTerminal (const TemplateAirTerminal_type& x)
      {
        this->TemplateAirTerminal_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateAirTerminal (const TemplateAirTerminal_optional& x)
      {
        this->TemplateAirTerminal_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateAirTerminal (::std::auto_ptr< TemplateAirTerminal_type > x)
      {
        this->TemplateAirTerminal_.set (x);
      }

      const SimTemplateHvacZoneEquipment::CoolingPriority_AirTerminal_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_AirTerminal () const
      {
        return this->CoolingPriority_AirTerminal_;
      }

      SimTemplateHvacZoneEquipment::CoolingPriority_AirTerminal_optional& SimTemplateHvacZoneEquipment::
      CoolingPriority_AirTerminal ()
      {
        return this->CoolingPriority_AirTerminal_;
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_AirTerminal (const CoolingPriority_AirTerminal_type& x)
      {
        this->CoolingPriority_AirTerminal_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      CoolingPriority_AirTerminal (const CoolingPriority_AirTerminal_optional& x)
      {
        this->CoolingPriority_AirTerminal_ = x;
      }

      const SimTemplateHvacZoneEquipment::HeatingPriority_AirTerminal_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_AirTerminal () const
      {
        return this->HeatingPriority_AirTerminal_;
      }

      SimTemplateHvacZoneEquipment::HeatingPriority_AirTerminal_optional& SimTemplateHvacZoneEquipment::
      HeatingPriority_AirTerminal ()
      {
        return this->HeatingPriority_AirTerminal_;
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_AirTerminal (const HeatingPriority_AirTerminal_type& x)
      {
        this->HeatingPriority_AirTerminal_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      HeatingPriority_AirTerminal (const HeatingPriority_AirTerminal_optional& x)
      {
        this->HeatingPriority_AirTerminal_ = x;
      }

      const SimTemplateHvacZoneEquipment::IncludesSensors_optional& SimTemplateHvacZoneEquipment::
      IncludesSensors () const
      {
        return this->IncludesSensors_;
      }

      SimTemplateHvacZoneEquipment::IncludesSensors_optional& SimTemplateHvacZoneEquipment::
      IncludesSensors ()
      {
        return this->IncludesSensors_;
      }

      void SimTemplateHvacZoneEquipment::
      IncludesSensors (const IncludesSensors_type& x)
      {
        this->IncludesSensors_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      IncludesSensors (const IncludesSensors_optional& x)
      {
        this->IncludesSensors_ = x;
      }

      const SimTemplateHvacZoneEquipment::TemplateDryBulbTempSensor_optional& SimTemplateHvacZoneEquipment::
      TemplateDryBulbTempSensor () const
      {
        return this->TemplateDryBulbTempSensor_;
      }

      SimTemplateHvacZoneEquipment::TemplateDryBulbTempSensor_optional& SimTemplateHvacZoneEquipment::
      TemplateDryBulbTempSensor ()
      {
        return this->TemplateDryBulbTempSensor_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateDryBulbTempSensor (const TemplateDryBulbTempSensor_type& x)
      {
        this->TemplateDryBulbTempSensor_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateDryBulbTempSensor (const TemplateDryBulbTempSensor_optional& x)
      {
        this->TemplateDryBulbTempSensor_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateDryBulbTempSensor (::std::auto_ptr< TemplateDryBulbTempSensor_type > x)
      {
        this->TemplateDryBulbTempSensor_.set (x);
      }

      const SimTemplateHvacZoneEquipment::TemplateRadiantTempSensor_optional& SimTemplateHvacZoneEquipment::
      TemplateRadiantTempSensor () const
      {
        return this->TemplateRadiantTempSensor_;
      }

      SimTemplateHvacZoneEquipment::TemplateRadiantTempSensor_optional& SimTemplateHvacZoneEquipment::
      TemplateRadiantTempSensor ()
      {
        return this->TemplateRadiantTempSensor_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateRadiantTempSensor (const TemplateRadiantTempSensor_type& x)
      {
        this->TemplateRadiantTempSensor_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateRadiantTempSensor (const TemplateRadiantTempSensor_optional& x)
      {
        this->TemplateRadiantTempSensor_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateRadiantTempSensor (::std::auto_ptr< TemplateRadiantTempSensor_type > x)
      {
        this->TemplateRadiantTempSensor_.set (x);
      }

      const SimTemplateHvacZoneEquipment::ZoneTemperatureController_optional& SimTemplateHvacZoneEquipment::
      ZoneTemperatureController () const
      {
        return this->ZoneTemperatureController_;
      }

      SimTemplateHvacZoneEquipment::ZoneTemperatureController_optional& SimTemplateHvacZoneEquipment::
      ZoneTemperatureController ()
      {
        return this->ZoneTemperatureController_;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneTemperatureController (const ZoneTemperatureController_type& x)
      {
        this->ZoneTemperatureController_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      ZoneTemperatureController (const ZoneTemperatureController_optional& x)
      {
        this->ZoneTemperatureController_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneTemperatureController (::std::auto_ptr< ZoneTemperatureController_type > x)
      {
        this->ZoneTemperatureController_.set (x);
      }

      const SimTemplateHvacZoneEquipment::TemplateRelativeHumiditySensor_optional& SimTemplateHvacZoneEquipment::
      TemplateRelativeHumiditySensor () const
      {
        return this->TemplateRelativeHumiditySensor_;
      }

      SimTemplateHvacZoneEquipment::TemplateRelativeHumiditySensor_optional& SimTemplateHvacZoneEquipment::
      TemplateRelativeHumiditySensor ()
      {
        return this->TemplateRelativeHumiditySensor_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateRelativeHumiditySensor (const TemplateRelativeHumiditySensor_type& x)
      {
        this->TemplateRelativeHumiditySensor_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateRelativeHumiditySensor (const TemplateRelativeHumiditySensor_optional& x)
      {
        this->TemplateRelativeHumiditySensor_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateRelativeHumiditySensor (::std::auto_ptr< TemplateRelativeHumiditySensor_type > x)
      {
        this->TemplateRelativeHumiditySensor_.set (x);
      }

      const SimTemplateHvacZoneEquipment::ZoneHumidityController_optional& SimTemplateHvacZoneEquipment::
      ZoneHumidityController () const
      {
        return this->ZoneHumidityController_;
      }

      SimTemplateHvacZoneEquipment::ZoneHumidityController_optional& SimTemplateHvacZoneEquipment::
      ZoneHumidityController ()
      {
        return this->ZoneHumidityController_;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneHumidityController (const ZoneHumidityController_type& x)
      {
        this->ZoneHumidityController_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      ZoneHumidityController (const ZoneHumidityController_optional& x)
      {
        this->ZoneHumidityController_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneHumidityController (::std::auto_ptr< ZoneHumidityController_type > x)
      {
        this->ZoneHumidityController_.set (x);
      }

      const SimTemplateHvacZoneEquipment::TemplateCO2Sensor_optional& SimTemplateHvacZoneEquipment::
      TemplateCO2Sensor () const
      {
        return this->TemplateCO2Sensor_;
      }

      SimTemplateHvacZoneEquipment::TemplateCO2Sensor_optional& SimTemplateHvacZoneEquipment::
      TemplateCO2Sensor ()
      {
        return this->TemplateCO2Sensor_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateCO2Sensor (const TemplateCO2Sensor_type& x)
      {
        this->TemplateCO2Sensor_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateCO2Sensor (const TemplateCO2Sensor_optional& x)
      {
        this->TemplateCO2Sensor_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateCO2Sensor (::std::auto_ptr< TemplateCO2Sensor_type > x)
      {
        this->TemplateCO2Sensor_.set (x);
      }

      const SimTemplateHvacZoneEquipment::ZoneVentilationController_optional& SimTemplateHvacZoneEquipment::
      ZoneVentilationController () const
      {
        return this->ZoneVentilationController_;
      }

      SimTemplateHvacZoneEquipment::ZoneVentilationController_optional& SimTemplateHvacZoneEquipment::
      ZoneVentilationController ()
      {
        return this->ZoneVentilationController_;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneVentilationController (const ZoneVentilationController_type& x)
      {
        this->ZoneVentilationController_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      ZoneVentilationController (const ZoneVentilationController_optional& x)
      {
        this->ZoneVentilationController_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneVentilationController (::std::auto_ptr< ZoneVentilationController_type > x)
      {
        this->ZoneVentilationController_.set (x);
      }

      const SimTemplateHvacZoneEquipment::TemplateDayLightingSensor_optional& SimTemplateHvacZoneEquipment::
      TemplateDayLightingSensor () const
      {
        return this->TemplateDayLightingSensor_;
      }

      SimTemplateHvacZoneEquipment::TemplateDayLightingSensor_optional& SimTemplateHvacZoneEquipment::
      TemplateDayLightingSensor ()
      {
        return this->TemplateDayLightingSensor_;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateDayLightingSensor (const TemplateDayLightingSensor_type& x)
      {
        this->TemplateDayLightingSensor_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      TemplateDayLightingSensor (const TemplateDayLightingSensor_optional& x)
      {
        this->TemplateDayLightingSensor_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      TemplateDayLightingSensor (::std::auto_ptr< TemplateDayLightingSensor_type > x)
      {
        this->TemplateDayLightingSensor_.set (x);
      }

      const SimTemplateHvacZoneEquipment::ZoneDaylightingController_optional& SimTemplateHvacZoneEquipment::
      ZoneDaylightingController () const
      {
        return this->ZoneDaylightingController_;
      }

      SimTemplateHvacZoneEquipment::ZoneDaylightingController_optional& SimTemplateHvacZoneEquipment::
      ZoneDaylightingController ()
      {
        return this->ZoneDaylightingController_;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneDaylightingController (const ZoneDaylightingController_type& x)
      {
        this->ZoneDaylightingController_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      ZoneDaylightingController (const ZoneDaylightingController_optional& x)
      {
        this->ZoneDaylightingController_ = x;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneDaylightingController (::std::auto_ptr< ZoneDaylightingController_type > x)
      {
        this->ZoneDaylightingController_.set (x);
      }

      const SimTemplateHvacZoneEquipment::ZoneBranchesIncludePlena_optional& SimTemplateHvacZoneEquipment::
      ZoneBranchesIncludePlena () const
      {
        return this->ZoneBranchesIncludePlena_;
      }

      SimTemplateHvacZoneEquipment::ZoneBranchesIncludePlena_optional& SimTemplateHvacZoneEquipment::
      ZoneBranchesIncludePlena ()
      {
        return this->ZoneBranchesIncludePlena_;
      }

      void SimTemplateHvacZoneEquipment::
      ZoneBranchesIncludePlena (const ZoneBranchesIncludePlena_type& x)
      {
        this->ZoneBranchesIncludePlena_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      ZoneBranchesIncludePlena (const ZoneBranchesIncludePlena_optional& x)
      {
        this->ZoneBranchesIncludePlena_ = x;
      }

      const SimTemplateHvacZoneEquipment::IncludesSharedSupplyPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesSharedSupplyPlenum () const
      {
        return this->IncludesSharedSupplyPlenum_;
      }

      SimTemplateHvacZoneEquipment::IncludesSharedSupplyPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesSharedSupplyPlenum ()
      {
        return this->IncludesSharedSupplyPlenum_;
      }

      void SimTemplateHvacZoneEquipment::
      IncludesSharedSupplyPlenum (const IncludesSharedSupplyPlenum_type& x)
      {
        this->IncludesSharedSupplyPlenum_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      IncludesSharedSupplyPlenum (const IncludesSharedSupplyPlenum_optional& x)
      {
        this->IncludesSharedSupplyPlenum_ = x;
      }

      const SimTemplateHvacZoneEquipment::IncludesDedicatedSupplyPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesDedicatedSupplyPlenum () const
      {
        return this->IncludesDedicatedSupplyPlenum_;
      }

      SimTemplateHvacZoneEquipment::IncludesDedicatedSupplyPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesDedicatedSupplyPlenum ()
      {
        return this->IncludesDedicatedSupplyPlenum_;
      }

      void SimTemplateHvacZoneEquipment::
      IncludesDedicatedSupplyPlenum (const IncludesDedicatedSupplyPlenum_type& x)
      {
        this->IncludesDedicatedSupplyPlenum_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      IncludesDedicatedSupplyPlenum (const IncludesDedicatedSupplyPlenum_optional& x)
      {
        this->IncludesDedicatedSupplyPlenum_ = x;
      }

      const SimTemplateHvacZoneEquipment::IncludesDedicatedReturnPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesDedicatedReturnPlenum () const
      {
        return this->IncludesDedicatedReturnPlenum_;
      }

      SimTemplateHvacZoneEquipment::IncludesDedicatedReturnPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesDedicatedReturnPlenum ()
      {
        return this->IncludesDedicatedReturnPlenum_;
      }

      void SimTemplateHvacZoneEquipment::
      IncludesDedicatedReturnPlenum (const IncludesDedicatedReturnPlenum_type& x)
      {
        this->IncludesDedicatedReturnPlenum_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      IncludesDedicatedReturnPlenum (const IncludesDedicatedReturnPlenum_optional& x)
      {
        this->IncludesDedicatedReturnPlenum_ = x;
      }

      const SimTemplateHvacZoneEquipment::IncludesSharedReturnPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesSharedReturnPlenum () const
      {
        return this->IncludesSharedReturnPlenum_;
      }

      SimTemplateHvacZoneEquipment::IncludesSharedReturnPlenum_optional& SimTemplateHvacZoneEquipment::
      IncludesSharedReturnPlenum ()
      {
        return this->IncludesSharedReturnPlenum_;
      }

      void SimTemplateHvacZoneEquipment::
      IncludesSharedReturnPlenum (const IncludesSharedReturnPlenum_type& x)
      {
        this->IncludesSharedReturnPlenum_.set (x);
      }

      void SimTemplateHvacZoneEquipment::
      IncludesSharedReturnPlenum (const IncludesSharedReturnPlenum_optional& x)
      {
        this->IncludesSharedReturnPlenum_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimTemplateHvacZoneEquipment
      //

      SimTemplateHvacZoneEquipment::
      SimTemplateHvacZoneEquipment (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeneral::SimTemplate (RefId),
        TemplateZoneEquipment1_ (this),
        CoolingPriority_Equpment1_ (this),
        HeatingPriority_Equpment1_ (this),
        TemplateZoneEquipment2_ (this),
        CoolingPriority_Equpment2_ (this),
        HeatingPriority_Equpment2_ (this),
        TemplateZoneEquipment3_ (this),
        CoolingPriority_Equpment3_ (this),
        HeatingPriority_Equpment3_ (this),
        TemplateZoneEquipment4_ (this),
        CoolingPriority_Equpment4_ (this),
        HeatingPriority_Equpment4_ (this),
        TemplateZoneEquipment5_ (this),
        CoolingPriority_Equpment5_ (this),
        HeatingPriority_Equpment5_ (this),
        TemplateAirTerminal_ (this),
        CoolingPriority_AirTerminal_ (this),
        HeatingPriority_AirTerminal_ (this),
        IncludesSensors_ (this),
        TemplateDryBulbTempSensor_ (this),
        TemplateRadiantTempSensor_ (this),
        ZoneTemperatureController_ (this),
        TemplateRelativeHumiditySensor_ (this),
        ZoneHumidityController_ (this),
        TemplateCO2Sensor_ (this),
        ZoneVentilationController_ (this),
        TemplateDayLightingSensor_ (this),
        ZoneDaylightingController_ (this),
        ZoneBranchesIncludePlena_ (this),
        IncludesSharedSupplyPlenum_ (this),
        IncludesDedicatedSupplyPlenum_ (this),
        IncludesDedicatedReturnPlenum_ (this),
        IncludesSharedReturnPlenum_ (this)
      {
      }

      SimTemplateHvacZoneEquipment::
      SimTemplateHvacZoneEquipment (const SimTemplateHvacZoneEquipment& x,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimTemplate (x, f, c),
        TemplateZoneEquipment1_ (x.TemplateZoneEquipment1_, f, this),
        CoolingPriority_Equpment1_ (x.CoolingPriority_Equpment1_, f, this),
        HeatingPriority_Equpment1_ (x.HeatingPriority_Equpment1_, f, this),
        TemplateZoneEquipment2_ (x.TemplateZoneEquipment2_, f, this),
        CoolingPriority_Equpment2_ (x.CoolingPriority_Equpment2_, f, this),
        HeatingPriority_Equpment2_ (x.HeatingPriority_Equpment2_, f, this),
        TemplateZoneEquipment3_ (x.TemplateZoneEquipment3_, f, this),
        CoolingPriority_Equpment3_ (x.CoolingPriority_Equpment3_, f, this),
        HeatingPriority_Equpment3_ (x.HeatingPriority_Equpment3_, f, this),
        TemplateZoneEquipment4_ (x.TemplateZoneEquipment4_, f, this),
        CoolingPriority_Equpment4_ (x.CoolingPriority_Equpment4_, f, this),
        HeatingPriority_Equpment4_ (x.HeatingPriority_Equpment4_, f, this),
        TemplateZoneEquipment5_ (x.TemplateZoneEquipment5_, f, this),
        CoolingPriority_Equpment5_ (x.CoolingPriority_Equpment5_, f, this),
        HeatingPriority_Equpment5_ (x.HeatingPriority_Equpment5_, f, this),
        TemplateAirTerminal_ (x.TemplateAirTerminal_, f, this),
        CoolingPriority_AirTerminal_ (x.CoolingPriority_AirTerminal_, f, this),
        HeatingPriority_AirTerminal_ (x.HeatingPriority_AirTerminal_, f, this),
        IncludesSensors_ (x.IncludesSensors_, f, this),
        TemplateDryBulbTempSensor_ (x.TemplateDryBulbTempSensor_, f, this),
        TemplateRadiantTempSensor_ (x.TemplateRadiantTempSensor_, f, this),
        ZoneTemperatureController_ (x.ZoneTemperatureController_, f, this),
        TemplateRelativeHumiditySensor_ (x.TemplateRelativeHumiditySensor_, f, this),
        ZoneHumidityController_ (x.ZoneHumidityController_, f, this),
        TemplateCO2Sensor_ (x.TemplateCO2Sensor_, f, this),
        ZoneVentilationController_ (x.ZoneVentilationController_, f, this),
        TemplateDayLightingSensor_ (x.TemplateDayLightingSensor_, f, this),
        ZoneDaylightingController_ (x.ZoneDaylightingController_, f, this),
        ZoneBranchesIncludePlena_ (x.ZoneBranchesIncludePlena_, f, this),
        IncludesSharedSupplyPlenum_ (x.IncludesSharedSupplyPlenum_, f, this),
        IncludesDedicatedSupplyPlenum_ (x.IncludesDedicatedSupplyPlenum_, f, this),
        IncludesDedicatedReturnPlenum_ (x.IncludesDedicatedReturnPlenum_, f, this),
        IncludesSharedReturnPlenum_ (x.IncludesSharedReturnPlenum_, f, this)
      {
      }

      SimTemplateHvacZoneEquipment::
      SimTemplateHvacZoneEquipment (const ::xercesc::DOMElement& e,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimTemplate (e, f | ::xml_schema::flags::base, c),
        TemplateZoneEquipment1_ (this),
        CoolingPriority_Equpment1_ (this),
        HeatingPriority_Equpment1_ (this),
        TemplateZoneEquipment2_ (this),
        CoolingPriority_Equpment2_ (this),
        HeatingPriority_Equpment2_ (this),
        TemplateZoneEquipment3_ (this),
        CoolingPriority_Equpment3_ (this),
        HeatingPriority_Equpment3_ (this),
        TemplateZoneEquipment4_ (this),
        CoolingPriority_Equpment4_ (this),
        HeatingPriority_Equpment4_ (this),
        TemplateZoneEquipment5_ (this),
        CoolingPriority_Equpment5_ (this),
        HeatingPriority_Equpment5_ (this),
        TemplateAirTerminal_ (this),
        CoolingPriority_AirTerminal_ (this),
        HeatingPriority_AirTerminal_ (this),
        IncludesSensors_ (this),
        TemplateDryBulbTempSensor_ (this),
        TemplateRadiantTempSensor_ (this),
        ZoneTemperatureController_ (this),
        TemplateRelativeHumiditySensor_ (this),
        ZoneHumidityController_ (this),
        TemplateCO2Sensor_ (this),
        ZoneVentilationController_ (this),
        TemplateDayLightingSensor_ (this),
        ZoneDaylightingController_ (this),
        ZoneBranchesIncludePlena_ (this),
        IncludesSharedSupplyPlenum_ (this),
        IncludesDedicatedSupplyPlenum_ (this),
        IncludesDedicatedReturnPlenum_ (this),
        IncludesSharedReturnPlenum_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimTemplateHvacZoneEquipment::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeneral::SimTemplate::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // TemplateZoneEquipment1
          //
          if (n.name () == "TemplateZoneEquipment1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateZoneEquipment1_type > r (
              TemplateZoneEquipment1_traits::create (i, f, this));

            if (!this->TemplateZoneEquipment1_)
            {
              this->TemplateZoneEquipment1_.set (r);
              continue;
            }
          }

          // CoolingPriority_Equpment1
          //
          if (n.name () == "CoolingPriority_Equpment1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->CoolingPriority_Equpment1_)
            {
              this->CoolingPriority_Equpment1_.set (CoolingPriority_Equpment1_traits::create (i, f, this));
              continue;
            }
          }

          // HeatingPriority_Equpment1
          //
          if (n.name () == "HeatingPriority_Equpment1" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->HeatingPriority_Equpment1_)
            {
              this->HeatingPriority_Equpment1_.set (HeatingPriority_Equpment1_traits::create (i, f, this));
              continue;
            }
          }

          // TemplateZoneEquipment2
          //
          if (n.name () == "TemplateZoneEquipment2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateZoneEquipment2_type > r (
              TemplateZoneEquipment2_traits::create (i, f, this));

            if (!this->TemplateZoneEquipment2_)
            {
              this->TemplateZoneEquipment2_.set (r);
              continue;
            }
          }

          // CoolingPriority_Equpment2
          //
          if (n.name () == "CoolingPriority_Equpment2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->CoolingPriority_Equpment2_)
            {
              this->CoolingPriority_Equpment2_.set (CoolingPriority_Equpment2_traits::create (i, f, this));
              continue;
            }
          }

          // HeatingPriority_Equpment2
          //
          if (n.name () == "HeatingPriority_Equpment2" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->HeatingPriority_Equpment2_)
            {
              this->HeatingPriority_Equpment2_.set (HeatingPriority_Equpment2_traits::create (i, f, this));
              continue;
            }
          }

          // TemplateZoneEquipment3
          //
          if (n.name () == "TemplateZoneEquipment3" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateZoneEquipment3_type > r (
              TemplateZoneEquipment3_traits::create (i, f, this));

            if (!this->TemplateZoneEquipment3_)
            {
              this->TemplateZoneEquipment3_.set (r);
              continue;
            }
          }

          // CoolingPriority_Equpment3
          //
          if (n.name () == "CoolingPriority_Equpment3" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->CoolingPriority_Equpment3_)
            {
              this->CoolingPriority_Equpment3_.set (CoolingPriority_Equpment3_traits::create (i, f, this));
              continue;
            }
          }

          // HeatingPriority_Equpment3
          //
          if (n.name () == "HeatingPriority_Equpment3" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->HeatingPriority_Equpment3_)
            {
              this->HeatingPriority_Equpment3_.set (HeatingPriority_Equpment3_traits::create (i, f, this));
              continue;
            }
          }

          // TemplateZoneEquipment4
          //
          if (n.name () == "TemplateZoneEquipment4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateZoneEquipment4_type > r (
              TemplateZoneEquipment4_traits::create (i, f, this));

            if (!this->TemplateZoneEquipment4_)
            {
              this->TemplateZoneEquipment4_.set (r);
              continue;
            }
          }

          // CoolingPriority_Equpment4
          //
          if (n.name () == "CoolingPriority_Equpment4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->CoolingPriority_Equpment4_)
            {
              this->CoolingPriority_Equpment4_.set (CoolingPriority_Equpment4_traits::create (i, f, this));
              continue;
            }
          }

          // HeatingPriority_Equpment4
          //
          if (n.name () == "HeatingPriority_Equpment4" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->HeatingPriority_Equpment4_)
            {
              this->HeatingPriority_Equpment4_.set (HeatingPriority_Equpment4_traits::create (i, f, this));
              continue;
            }
          }

          // TemplateZoneEquipment5
          //
          if (n.name () == "TemplateZoneEquipment5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateZoneEquipment5_type > r (
              TemplateZoneEquipment5_traits::create (i, f, this));

            if (!this->TemplateZoneEquipment5_)
            {
              this->TemplateZoneEquipment5_.set (r);
              continue;
            }
          }

          // CoolingPriority_Equpment5
          //
          if (n.name () == "CoolingPriority_Equpment5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->CoolingPriority_Equpment5_)
            {
              this->CoolingPriority_Equpment5_.set (CoolingPriority_Equpment5_traits::create (i, f, this));
              continue;
            }
          }

          // HeatingPriority_Equpment5
          //
          if (n.name () == "HeatingPriority_Equpment5" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->HeatingPriority_Equpment5_)
            {
              this->HeatingPriority_Equpment5_.set (HeatingPriority_Equpment5_traits::create (i, f, this));
              continue;
            }
          }

          // TemplateAirTerminal
          //
          if (n.name () == "TemplateAirTerminal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateAirTerminal_type > r (
              TemplateAirTerminal_traits::create (i, f, this));

            if (!this->TemplateAirTerminal_)
            {
              this->TemplateAirTerminal_.set (r);
              continue;
            }
          }

          // CoolingPriority_AirTerminal
          //
          if (n.name () == "CoolingPriority_AirTerminal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->CoolingPriority_AirTerminal_)
            {
              this->CoolingPriority_AirTerminal_.set (CoolingPriority_AirTerminal_traits::create (i, f, this));
              continue;
            }
          }

          // HeatingPriority_AirTerminal
          //
          if (n.name () == "HeatingPriority_AirTerminal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->HeatingPriority_AirTerminal_)
            {
              this->HeatingPriority_AirTerminal_.set (HeatingPriority_AirTerminal_traits::create (i, f, this));
              continue;
            }
          }

          // IncludesSensors
          //
          if (n.name () == "IncludesSensors" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->IncludesSensors_)
            {
              this->IncludesSensors_.set (IncludesSensors_traits::create (i, f, this));
              continue;
            }
          }

          // TemplateDryBulbTempSensor
          //
          if (n.name () == "TemplateDryBulbTempSensor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateDryBulbTempSensor_type > r (
              TemplateDryBulbTempSensor_traits::create (i, f, this));

            if (!this->TemplateDryBulbTempSensor_)
            {
              this->TemplateDryBulbTempSensor_.set (r);
              continue;
            }
          }

          // TemplateRadiantTempSensor
          //
          if (n.name () == "TemplateRadiantTempSensor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateRadiantTempSensor_type > r (
              TemplateRadiantTempSensor_traits::create (i, f, this));

            if (!this->TemplateRadiantTempSensor_)
            {
              this->TemplateRadiantTempSensor_.set (r);
              continue;
            }
          }

          // ZoneTemperatureController
          //
          if (n.name () == "ZoneTemperatureController" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< ZoneTemperatureController_type > r (
              ZoneTemperatureController_traits::create (i, f, this));

            if (!this->ZoneTemperatureController_)
            {
              this->ZoneTemperatureController_.set (r);
              continue;
            }
          }

          // TemplateRelativeHumiditySensor
          //
          if (n.name () == "TemplateRelativeHumiditySensor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateRelativeHumiditySensor_type > r (
              TemplateRelativeHumiditySensor_traits::create (i, f, this));

            if (!this->TemplateRelativeHumiditySensor_)
            {
              this->TemplateRelativeHumiditySensor_.set (r);
              continue;
            }
          }

          // ZoneHumidityController
          //
          if (n.name () == "ZoneHumidityController" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< ZoneHumidityController_type > r (
              ZoneHumidityController_traits::create (i, f, this));

            if (!this->ZoneHumidityController_)
            {
              this->ZoneHumidityController_.set (r);
              continue;
            }
          }

          // TemplateCO2Sensor
          //
          if (n.name () == "TemplateCO2Sensor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateCO2Sensor_type > r (
              TemplateCO2Sensor_traits::create (i, f, this));

            if (!this->TemplateCO2Sensor_)
            {
              this->TemplateCO2Sensor_.set (r);
              continue;
            }
          }

          // ZoneVentilationController
          //
          if (n.name () == "ZoneVentilationController" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< ZoneVentilationController_type > r (
              ZoneVentilationController_traits::create (i, f, this));

            if (!this->ZoneVentilationController_)
            {
              this->ZoneVentilationController_.set (r);
              continue;
            }
          }

          // TemplateDayLightingSensor
          //
          if (n.name () == "TemplateDayLightingSensor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< TemplateDayLightingSensor_type > r (
              TemplateDayLightingSensor_traits::create (i, f, this));

            if (!this->TemplateDayLightingSensor_)
            {
              this->TemplateDayLightingSensor_.set (r);
              continue;
            }
          }

          // ZoneDaylightingController
          //
          if (n.name () == "ZoneDaylightingController" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< ZoneDaylightingController_type > r (
              ZoneDaylightingController_traits::create (i, f, this));

            if (!this->ZoneDaylightingController_)
            {
              this->ZoneDaylightingController_.set (r);
              continue;
            }
          }

          // ZoneBranchesIncludePlena
          //
          if (n.name () == "ZoneBranchesIncludePlena" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->ZoneBranchesIncludePlena_)
            {
              this->ZoneBranchesIncludePlena_.set (ZoneBranchesIncludePlena_traits::create (i, f, this));
              continue;
            }
          }

          // IncludesSharedSupplyPlenum
          //
          if (n.name () == "IncludesSharedSupplyPlenum" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->IncludesSharedSupplyPlenum_)
            {
              this->IncludesSharedSupplyPlenum_.set (IncludesSharedSupplyPlenum_traits::create (i, f, this));
              continue;
            }
          }

          // IncludesDedicatedSupplyPlenum
          //
          if (n.name () == "IncludesDedicatedSupplyPlenum" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->IncludesDedicatedSupplyPlenum_)
            {
              this->IncludesDedicatedSupplyPlenum_.set (IncludesDedicatedSupplyPlenum_traits::create (i, f, this));
              continue;
            }
          }

          // IncludesDedicatedReturnPlenum
          //
          if (n.name () == "IncludesDedicatedReturnPlenum" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->IncludesDedicatedReturnPlenum_)
            {
              this->IncludesDedicatedReturnPlenum_.set (IncludesDedicatedReturnPlenum_traits::create (i, f, this));
              continue;
            }
          }

          // IncludesSharedReturnPlenum
          //
          if (n.name () == "IncludesSharedReturnPlenum" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->IncludesSharedReturnPlenum_)
            {
              this->IncludesSharedReturnPlenum_.set (IncludesSharedReturnPlenum_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimTemplateHvacZoneEquipment* SimTemplateHvacZoneEquipment::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimTemplateHvacZoneEquipment (*this, f, c);
      }

      SimTemplateHvacZoneEquipment& SimTemplateHvacZoneEquipment::
      operator= (const SimTemplateHvacZoneEquipment& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeneral::SimTemplate& > (*this) = x;
          this->TemplateZoneEquipment1_ = x.TemplateZoneEquipment1_;
          this->CoolingPriority_Equpment1_ = x.CoolingPriority_Equpment1_;
          this->HeatingPriority_Equpment1_ = x.HeatingPriority_Equpment1_;
          this->TemplateZoneEquipment2_ = x.TemplateZoneEquipment2_;
          this->CoolingPriority_Equpment2_ = x.CoolingPriority_Equpment2_;
          this->HeatingPriority_Equpment2_ = x.HeatingPriority_Equpment2_;
          this->TemplateZoneEquipment3_ = x.TemplateZoneEquipment3_;
          this->CoolingPriority_Equpment3_ = x.CoolingPriority_Equpment3_;
          this->HeatingPriority_Equpment3_ = x.HeatingPriority_Equpment3_;
          this->TemplateZoneEquipment4_ = x.TemplateZoneEquipment4_;
          this->CoolingPriority_Equpment4_ = x.CoolingPriority_Equpment4_;
          this->HeatingPriority_Equpment4_ = x.HeatingPriority_Equpment4_;
          this->TemplateZoneEquipment5_ = x.TemplateZoneEquipment5_;
          this->CoolingPriority_Equpment5_ = x.CoolingPriority_Equpment5_;
          this->HeatingPriority_Equpment5_ = x.HeatingPriority_Equpment5_;
          this->TemplateAirTerminal_ = x.TemplateAirTerminal_;
          this->CoolingPriority_AirTerminal_ = x.CoolingPriority_AirTerminal_;
          this->HeatingPriority_AirTerminal_ = x.HeatingPriority_AirTerminal_;
          this->IncludesSensors_ = x.IncludesSensors_;
          this->TemplateDryBulbTempSensor_ = x.TemplateDryBulbTempSensor_;
          this->TemplateRadiantTempSensor_ = x.TemplateRadiantTempSensor_;
          this->ZoneTemperatureController_ = x.ZoneTemperatureController_;
          this->TemplateRelativeHumiditySensor_ = x.TemplateRelativeHumiditySensor_;
          this->ZoneHumidityController_ = x.ZoneHumidityController_;
          this->TemplateCO2Sensor_ = x.TemplateCO2Sensor_;
          this->ZoneVentilationController_ = x.ZoneVentilationController_;
          this->TemplateDayLightingSensor_ = x.TemplateDayLightingSensor_;
          this->ZoneDaylightingController_ = x.ZoneDaylightingController_;
          this->ZoneBranchesIncludePlena_ = x.ZoneBranchesIncludePlena_;
          this->IncludesSharedSupplyPlenum_ = x.IncludesSharedSupplyPlenum_;
          this->IncludesDedicatedSupplyPlenum_ = x.IncludesDedicatedSupplyPlenum_;
          this->IncludesDedicatedReturnPlenum_ = x.IncludesDedicatedReturnPlenum_;
          this->IncludesSharedReturnPlenum_ = x.IncludesSharedReturnPlenum_;
        }

        return *this;
      }

      SimTemplateHvacZoneEquipment::
      ~SimTemplateHvacZoneEquipment ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

