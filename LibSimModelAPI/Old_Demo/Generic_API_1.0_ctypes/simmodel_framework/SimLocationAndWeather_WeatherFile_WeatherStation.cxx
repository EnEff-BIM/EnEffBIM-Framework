// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimLocationAndWeather_WeatherFile_WeatherStation.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimLocationAndWeather_WeatherFile_WeatherStation
      // 

      const SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_WindSensHtAbvGnd_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSensHtAbvGnd () const
      {
        return this->SimLocationAndWeather_WindSensHtAbvGnd_;
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_WindSensHtAbvGnd_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSensHtAbvGnd ()
      {
        return this->SimLocationAndWeather_WindSensHtAbvGnd_;
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSensHtAbvGnd (const SimLocationAndWeather_WindSensHtAbvGnd_type& x)
      {
        this->SimLocationAndWeather_WindSensHtAbvGnd_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSensHtAbvGnd (const SimLocationAndWeather_WindSensHtAbvGnd_optional& x)
      {
        this->SimLocationAndWeather_WindSensHtAbvGnd_ = x;
      }

      const SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_WindSpdProfExp_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfExp () const
      {
        return this->SimLocationAndWeather_WindSpdProfExp_;
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_WindSpdProfExp_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfExp ()
      {
        return this->SimLocationAndWeather_WindSpdProfExp_;
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfExp (const SimLocationAndWeather_WindSpdProfExp_type& x)
      {
        this->SimLocationAndWeather_WindSpdProfExp_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfExp (const SimLocationAndWeather_WindSpdProfExp_optional& x)
      {
        this->SimLocationAndWeather_WindSpdProfExp_ = x;
      }

      const SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_WindSpdProfBndLayerThick_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfBndLayerThick () const
      {
        return this->SimLocationAndWeather_WindSpdProfBndLayerThick_;
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_WindSpdProfBndLayerThick_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfBndLayerThick ()
      {
        return this->SimLocationAndWeather_WindSpdProfBndLayerThick_;
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfBndLayerThick (const SimLocationAndWeather_WindSpdProfBndLayerThick_type& x)
      {
        this->SimLocationAndWeather_WindSpdProfBndLayerThick_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WindSpdProfBndLayerThick (const SimLocationAndWeather_WindSpdProfBndLayerThick_optional& x)
      {
        this->SimLocationAndWeather_WindSpdProfBndLayerThick_ = x;
      }

      const SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_AirTempSensHtAbvGnd_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_AirTempSensHtAbvGnd () const
      {
        return this->SimLocationAndWeather_AirTempSensHtAbvGnd_;
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::SimLocationAndWeather_AirTempSensHtAbvGnd_optional& SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_AirTempSensHtAbvGnd ()
      {
        return this->SimLocationAndWeather_AirTempSensHtAbvGnd_;
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_AirTempSensHtAbvGnd (const SimLocationAndWeather_AirTempSensHtAbvGnd_type& x)
      {
        this->SimLocationAndWeather_AirTempSensHtAbvGnd_.set (x);
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_AirTempSensHtAbvGnd (const SimLocationAndWeather_AirTempSensHtAbvGnd_optional& x)
      {
        this->SimLocationAndWeather_AirTempSensHtAbvGnd_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimLocationAndWeather_WeatherFile_WeatherStation
      //

      SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WeatherFile_WeatherStation (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile (RefId),
        SimLocationAndWeather_WindSensHtAbvGnd_ (this),
        SimLocationAndWeather_WindSpdProfExp_ (this),
        SimLocationAndWeather_WindSpdProfBndLayerThick_ (this),
        SimLocationAndWeather_AirTempSensHtAbvGnd_ (this)
      {
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WeatherFile_WeatherStation (const SimLocationAndWeather_WeatherFile_WeatherStation& x,
                                                        ::xml_schema::flags f,
                                                        ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile (x, f, c),
        SimLocationAndWeather_WindSensHtAbvGnd_ (x.SimLocationAndWeather_WindSensHtAbvGnd_, f, this),
        SimLocationAndWeather_WindSpdProfExp_ (x.SimLocationAndWeather_WindSpdProfExp_, f, this),
        SimLocationAndWeather_WindSpdProfBndLayerThick_ (x.SimLocationAndWeather_WindSpdProfBndLayerThick_, f, this),
        SimLocationAndWeather_AirTempSensHtAbvGnd_ (x.SimLocationAndWeather_AirTempSensHtAbvGnd_, f, this)
      {
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::
      SimLocationAndWeather_WeatherFile_WeatherStation (const ::xercesc::DOMElement& e,
                                                        ::xml_schema::flags f,
                                                        ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile (e, f | ::xml_schema::flags::base, c),
        SimLocationAndWeather_WindSensHtAbvGnd_ (this),
        SimLocationAndWeather_WindSpdProfExp_ (this),
        SimLocationAndWeather_WindSpdProfBndLayerThick_ (this),
        SimLocationAndWeather_AirTempSensHtAbvGnd_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimLocationAndWeather_WeatherFile_WeatherStation::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimLocationAndWeather_WindSensHtAbvGnd
          //
          if (n.name () == "SimLocationAndWeather_WindSensHtAbvGnd" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_WindSensHtAbvGnd_)
            {
              this->SimLocationAndWeather_WindSensHtAbvGnd_.set (SimLocationAndWeather_WindSensHtAbvGnd_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_WindSpdProfExp
          //
          if (n.name () == "SimLocationAndWeather_WindSpdProfExp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_WindSpdProfExp_)
            {
              this->SimLocationAndWeather_WindSpdProfExp_.set (SimLocationAndWeather_WindSpdProfExp_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_WindSpdProfBndLayerThick
          //
          if (n.name () == "SimLocationAndWeather_WindSpdProfBndLayerThick" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_WindSpdProfBndLayerThick_)
            {
              this->SimLocationAndWeather_WindSpdProfBndLayerThick_.set (SimLocationAndWeather_WindSpdProfBndLayerThick_traits::create (i, f, this));
              continue;
            }
          }

          // SimLocationAndWeather_AirTempSensHtAbvGnd
          //
          if (n.name () == "SimLocationAndWeather_AirTempSensHtAbvGnd" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimLocationAndWeather_AirTempSensHtAbvGnd_)
            {
              this->SimLocationAndWeather_AirTempSensHtAbvGnd_.set (SimLocationAndWeather_AirTempSensHtAbvGnd_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimLocationAndWeather_WeatherFile_WeatherStation* SimLocationAndWeather_WeatherFile_WeatherStation::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimLocationAndWeather_WeatherFile_WeatherStation (*this, f, c);
      }

      SimLocationAndWeather_WeatherFile_WeatherStation& SimLocationAndWeather_WeatherFile_WeatherStation::
      operator= (const SimLocationAndWeather_WeatherFile_WeatherStation& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile& > (*this) = x;
          this->SimLocationAndWeather_WindSensHtAbvGnd_ = x.SimLocationAndWeather_WindSensHtAbvGnd_;
          this->SimLocationAndWeather_WindSpdProfExp_ = x.SimLocationAndWeather_WindSpdProfExp_;
          this->SimLocationAndWeather_WindSpdProfBndLayerThick_ = x.SimLocationAndWeather_WindSpdProfBndLayerThick_;
          this->SimLocationAndWeather_AirTempSensHtAbvGnd_ = x.SimLocationAndWeather_AirTempSensHtAbvGnd_;
        }

        return *this;
      }

      SimLocationAndWeather_WeatherFile_WeatherStation::
      ~SimLocationAndWeather_WeatherFile_WeatherStation ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

