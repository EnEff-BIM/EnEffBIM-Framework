// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatExPlate.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExPlate
      // 

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_UFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_UFactorTimesAreaVal () const
      {
        return this->SimFlowEnergyTrans_UFactorTimesAreaVal_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_UFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_UFactorTimesAreaVal ()
      {
        return this->SimFlowEnergyTrans_UFactorTimesAreaVal_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_UFactorTimesAreaVal (const SimFlowEnergyTrans_UFactorTimesAreaVal_type& x)
      {
        this->SimFlowEnergyTrans_UFactorTimesAreaVal_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_UFactorTimesAreaVal (const SimFlowEnergyTrans_UFactorTimesAreaVal_optional& x)
      {
        this->SimFlowEnergyTrans_UFactorTimesAreaVal_ = x;
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_CntlledCompName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompName () const
      {
        return this->SimFlowEnergyTrans_CntlledCompName_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_CntlledCompName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompName ()
      {
        return this->SimFlowEnergyTrans_CntlledCompName_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompName (const SimFlowEnergyTrans_CntlledCompName_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompName (const SimFlowEnergyTrans_CntlledCompName_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompName (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompName_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_CntlledCompObjType_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompObjType () const
      {
        return this->SimFlowEnergyTrans_CntlledCompObjType_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_CntlledCompObjType_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompObjType ()
      {
        return this->SimFlowEnergyTrans_CntlledCompObjType_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompObjType (const SimFlowEnergyTrans_CntlledCompObjType_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompObjType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompObjType (const SimFlowEnergyTrans_CntlledCompObjType_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompObjType_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_CntlledCompObjType (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompObjType_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompObjType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_HeatExchangeMode_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_HeatExchangeMode () const
      {
        return this->SimFlowEnergyTrans_HeatExchangeMode_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_HeatExchangeMode_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_HeatExchangeMode ()
      {
        return this->SimFlowEnergyTrans_HeatExchangeMode_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_HeatExchangeMode (const SimFlowEnergyTrans_HeatExchangeMode_type& x)
      {
        this->SimFlowEnergyTrans_HeatExchangeMode_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_HeatExchangeMode (const SimFlowEnergyTrans_HeatExchangeMode_optional& x)
      {
        this->SimFlowEnergyTrans_HeatExchangeMode_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_HeatExchangeMode (::std::auto_ptr< SimFlowEnergyTrans_HeatExchangeMode_type > x)
      {
        this->SimFlowEnergyTrans_HeatExchangeMode_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_DemandSideInNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideInNodeName () const
      {
        return this->SimFlowEnergyTrans_DemandSideInNodeName_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_DemandSideInNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideInNodeName ()
      {
        return this->SimFlowEnergyTrans_DemandSideInNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideInNodeName (const SimFlowEnergyTrans_DemandSideInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_DemandSideInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideInNodeName (const SimFlowEnergyTrans_DemandSideInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_DemandSideInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideInNodeName (::std::auto_ptr< SimFlowEnergyTrans_DemandSideInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_DemandSideInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_DemandSideOutNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideOutNodeName () const
      {
        return this->SimFlowEnergyTrans_DemandSideOutNodeName_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_DemandSideOutNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideOutNodeName ()
      {
        return this->SimFlowEnergyTrans_DemandSideOutNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideOutNodeName (const SimFlowEnergyTrans_DemandSideOutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_DemandSideOutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideOutNodeName (const SimFlowEnergyTrans_DemandSideOutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_DemandSideOutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideOutNodeName (::std::auto_ptr< SimFlowEnergyTrans_DemandSideOutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_DemandSideOutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_SupSideInNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupSideInNodeName () const
      {
        return this->SimFlowEnergyTrans_SupSideInNodeName_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_SupSideInNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupSideInNodeName ()
      {
        return this->SimFlowEnergyTrans_SupSideInNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupSideInNodeName (const SimFlowEnergyTrans_SupSideInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SupSideInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupSideInNodeName (const SimFlowEnergyTrans_SupSideInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SupSideInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupSideInNodeName (::std::auto_ptr< SimFlowEnergyTrans_SupSideInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SupSideInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_SupplySideOutletNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_SupplySideOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_SupplySideOutletNodeName_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_SupplySideOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideOutletNodeName (const SimFlowEnergyTrans_SupplySideOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SupplySideOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideOutletNodeName (const SimFlowEnergyTrans_SupplySideOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SupplySideOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_SupplySideOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SupplySideOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_DemandSideFlowRate_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideFlowRate () const
      {
        return this->SimFlowEnergyTrans_DemandSideFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_DemandSideFlowRate_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideFlowRate ()
      {
        return this->SimFlowEnergyTrans_DemandSideFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideFlowRate (const SimFlowEnergyTrans_DemandSideFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_DemandSideFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_DemandSideFlowRate (const SimFlowEnergyTrans_DemandSideFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_DemandSideFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_SupplySideFlowRate_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideFlowRate () const
      {
        return this->SimFlowEnergyTrans_SupplySideFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExPlate::SimFlowEnergyTrans_SupplySideFlowRate_optional& SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideFlowRate ()
      {
        return this->SimFlowEnergyTrans_SupplySideFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideFlowRate (const SimFlowEnergyTrans_SupplySideFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_SupplySideFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTrans_SupplySideFlowRate (const SimFlowEnergyTrans_SupplySideFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_SupplySideFlowRate_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExPlate
      //

      SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTransfer_HeatExPlate (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer (RefId),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_CntlledCompName_ (this),
        SimFlowEnergyTrans_CntlledCompObjType_ (this),
        SimFlowEnergyTrans_HeatExchangeMode_ (this),
        SimFlowEnergyTrans_DemandSideInNodeName_ (this),
        SimFlowEnergyTrans_DemandSideOutNodeName_ (this),
        SimFlowEnergyTrans_SupSideInNodeName_ (this),
        SimFlowEnergyTrans_SupplySideOutletNodeName_ (this),
        SimFlowEnergyTrans_DemandSideFlowRate_ (this),
        SimFlowEnergyTrans_SupplySideFlowRate_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTransfer_HeatExPlate (const SimFlowEnergyTransfer_HeatExPlate& x,
                                         ::xml_schema::flags f,
                                         ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer (x, f, c),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (x.SimFlowEnergyTrans_UFactorTimesAreaVal_, f, this),
        SimFlowEnergyTrans_CntlledCompName_ (x.SimFlowEnergyTrans_CntlledCompName_, f, this),
        SimFlowEnergyTrans_CntlledCompObjType_ (x.SimFlowEnergyTrans_CntlledCompObjType_, f, this),
        SimFlowEnergyTrans_HeatExchangeMode_ (x.SimFlowEnergyTrans_HeatExchangeMode_, f, this),
        SimFlowEnergyTrans_DemandSideInNodeName_ (x.SimFlowEnergyTrans_DemandSideInNodeName_, f, this),
        SimFlowEnergyTrans_DemandSideOutNodeName_ (x.SimFlowEnergyTrans_DemandSideOutNodeName_, f, this),
        SimFlowEnergyTrans_SupSideInNodeName_ (x.SimFlowEnergyTrans_SupSideInNodeName_, f, this),
        SimFlowEnergyTrans_SupplySideOutletNodeName_ (x.SimFlowEnergyTrans_SupplySideOutletNodeName_, f, this),
        SimFlowEnergyTrans_DemandSideFlowRate_ (x.SimFlowEnergyTrans_DemandSideFlowRate_, f, this),
        SimFlowEnergyTrans_SupplySideFlowRate_ (x.SimFlowEnergyTrans_SupplySideFlowRate_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatExPlate::
      SimFlowEnergyTransfer_HeatExPlate (const ::xercesc::DOMElement& e,
                                         ::xml_schema::flags f,
                                         ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_CntlledCompName_ (this),
        SimFlowEnergyTrans_CntlledCompObjType_ (this),
        SimFlowEnergyTrans_HeatExchangeMode_ (this),
        SimFlowEnergyTrans_DemandSideInNodeName_ (this),
        SimFlowEnergyTrans_DemandSideOutNodeName_ (this),
        SimFlowEnergyTrans_SupSideInNodeName_ (this),
        SimFlowEnergyTrans_SupplySideOutletNodeName_ (this),
        SimFlowEnergyTrans_DemandSideFlowRate_ (this),
        SimFlowEnergyTrans_SupplySideFlowRate_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatExPlate::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_UFactorTimesAreaVal
          //
          if (n.name () == "SimFlowEnergyTrans_UFactorTimesAreaVal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_UFactorTimesAreaVal_)
            {
              this->SimFlowEnergyTrans_UFactorTimesAreaVal_.set (SimFlowEnergyTrans_UFactorTimesAreaVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompName
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompName_type > r (
              SimFlowEnergyTrans_CntlledCompName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompName_)
            {
              this->SimFlowEnergyTrans_CntlledCompName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompObjType
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompObjType_type > r (
              SimFlowEnergyTrans_CntlledCompObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompObjType_)
            {
              this->SimFlowEnergyTrans_CntlledCompObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatExchangeMode
          //
          if (n.name () == "SimFlowEnergyTrans_HeatExchangeMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatExchangeMode_type > r (
              SimFlowEnergyTrans_HeatExchangeMode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatExchangeMode_)
            {
              this->SimFlowEnergyTrans_HeatExchangeMode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DemandSideInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_DemandSideInNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DemandSideInNodeName_type > r (
              SimFlowEnergyTrans_DemandSideInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DemandSideInNodeName_)
            {
              this->SimFlowEnergyTrans_DemandSideInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DemandSideOutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_DemandSideOutNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DemandSideOutNodeName_type > r (
              SimFlowEnergyTrans_DemandSideOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DemandSideOutNodeName_)
            {
              this->SimFlowEnergyTrans_DemandSideOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupSideInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SupSideInNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupSideInNodeName_type > r (
              SimFlowEnergyTrans_SupSideInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupSideInNodeName_)
            {
              this->SimFlowEnergyTrans_SupSideInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplySideOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SupplySideOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupplySideOutletNodeName_type > r (
              SimFlowEnergyTrans_SupplySideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupplySideOutletNodeName_)
            {
              this->SimFlowEnergyTrans_SupplySideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DemandSideFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_DemandSideFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_DemandSideFlowRate_)
            {
              this->SimFlowEnergyTrans_DemandSideFlowRate_.set (SimFlowEnergyTrans_DemandSideFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupplySideFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_SupplySideFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SupplySideFlowRate_)
            {
              this->SimFlowEnergyTrans_SupplySideFlowRate_.set (SimFlowEnergyTrans_SupplySideFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatExPlate* SimFlowEnergyTransfer_HeatExPlate::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatExPlate (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatExPlate& SimFlowEnergyTransfer_HeatExPlate::
      operator= (const SimFlowEnergyTransfer_HeatExPlate& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer& > (*this) = x;
          this->SimFlowEnergyTrans_UFactorTimesAreaVal_ = x.SimFlowEnergyTrans_UFactorTimesAreaVal_;
          this->SimFlowEnergyTrans_CntlledCompName_ = x.SimFlowEnergyTrans_CntlledCompName_;
          this->SimFlowEnergyTrans_CntlledCompObjType_ = x.SimFlowEnergyTrans_CntlledCompObjType_;
          this->SimFlowEnergyTrans_HeatExchangeMode_ = x.SimFlowEnergyTrans_HeatExchangeMode_;
          this->SimFlowEnergyTrans_DemandSideInNodeName_ = x.SimFlowEnergyTrans_DemandSideInNodeName_;
          this->SimFlowEnergyTrans_DemandSideOutNodeName_ = x.SimFlowEnergyTrans_DemandSideOutNodeName_;
          this->SimFlowEnergyTrans_SupSideInNodeName_ = x.SimFlowEnergyTrans_SupSideInNodeName_;
          this->SimFlowEnergyTrans_SupplySideOutletNodeName_ = x.SimFlowEnergyTrans_SupplySideOutletNodeName_;
          this->SimFlowEnergyTrans_DemandSideFlowRate_ = x.SimFlowEnergyTrans_DemandSideFlowRate_;
          this->SimFlowEnergyTrans_SupplySideFlowRate_ = x.SimFlowEnergyTrans_SupplySideFlowRate_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatExPlate::
      ~SimFlowEnergyTransfer_HeatExPlate ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

