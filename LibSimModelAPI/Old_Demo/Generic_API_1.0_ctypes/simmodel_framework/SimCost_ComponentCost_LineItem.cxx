// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimCost_ComponentCost_LineItem.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimCost_ComponentCost_LineItem
      // 

      const SimCost_ComponentCost_LineItem::SimCost_Name_optional& SimCost_ComponentCost_LineItem::
      SimCost_Name () const
      {
        return this->SimCost_Name_;
      }

      SimCost_ComponentCost_LineItem::SimCost_Name_optional& SimCost_ComponentCost_LineItem::
      SimCost_Name ()
      {
        return this->SimCost_Name_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Name (const SimCost_Name_type& x)
      {
        this->SimCost_Name_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Name (const SimCost_Name_optional& x)
      {
        this->SimCost_Name_ = x;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Name (::std::auto_ptr< SimCost_Name_type > x)
      {
        this->SimCost_Name_.set (x);
      }

      const SimCost_ComponentCost_LineItem::SimCost_Type_optional& SimCost_ComponentCost_LineItem::
      SimCost_Type () const
      {
        return this->SimCost_Type_;
      }

      SimCost_ComponentCost_LineItem::SimCost_Type_optional& SimCost_ComponentCost_LineItem::
      SimCost_Type ()
      {
        return this->SimCost_Type_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Type (const SimCost_Type_type& x)
      {
        this->SimCost_Type_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Type (const SimCost_Type_optional& x)
      {
        this->SimCost_Type_ = x;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Type (::std::auto_ptr< SimCost_Type_type > x)
      {
        this->SimCost_Type_.set (x);
      }

      const SimCost_ComponentCost_LineItem::SimCost_LineItemType_optional& SimCost_ComponentCost_LineItem::
      SimCost_LineItemType () const
      {
        return this->SimCost_LineItemType_;
      }

      SimCost_ComponentCost_LineItem::SimCost_LineItemType_optional& SimCost_ComponentCost_LineItem::
      SimCost_LineItemType ()
      {
        return this->SimCost_LineItemType_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_LineItemType (const SimCost_LineItemType_type& x)
      {
        this->SimCost_LineItemType_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_LineItemType (const SimCost_LineItemType_optional& x)
      {
        this->SimCost_LineItemType_ = x;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_LineItemType (::std::auto_ptr< SimCost_LineItemType_type > x)
      {
        this->SimCost_LineItemType_.set (x);
      }

      const SimCost_ComponentCost_LineItem::SimCost_ItemName_optional& SimCost_ComponentCost_LineItem::
      SimCost_ItemName () const
      {
        return this->SimCost_ItemName_;
      }

      SimCost_ComponentCost_LineItem::SimCost_ItemName_optional& SimCost_ComponentCost_LineItem::
      SimCost_ItemName ()
      {
        return this->SimCost_ItemName_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_ItemName (const SimCost_ItemName_type& x)
      {
        this->SimCost_ItemName_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_ItemName (const SimCost_ItemName_optional& x)
      {
        this->SimCost_ItemName_ = x;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_ItemName (::std::auto_ptr< SimCost_ItemName_type > x)
      {
        this->SimCost_ItemName_.set (x);
      }

      const SimCost_ComponentCost_LineItem::SimCost_ObjEndUseKey_optional& SimCost_ComponentCost_LineItem::
      SimCost_ObjEndUseKey () const
      {
        return this->SimCost_ObjEndUseKey_;
      }

      SimCost_ComponentCost_LineItem::SimCost_ObjEndUseKey_optional& SimCost_ComponentCost_LineItem::
      SimCost_ObjEndUseKey ()
      {
        return this->SimCost_ObjEndUseKey_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_ObjEndUseKey (const SimCost_ObjEndUseKey_type& x)
      {
        this->SimCost_ObjEndUseKey_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_ObjEndUseKey (const SimCost_ObjEndUseKey_optional& x)
      {
        this->SimCost_ObjEndUseKey_ = x;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_ObjEndUseKey (::std::auto_ptr< SimCost_ObjEndUseKey_type > x)
      {
        this->SimCost_ObjEndUseKey_.set (x);
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerEach_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerEach () const
      {
        return this->SimCost_CostPerEach_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerEach_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerEach ()
      {
        return this->SimCost_CostPerEach_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerEach (const SimCost_CostPerEach_type& x)
      {
        this->SimCost_CostPerEach_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerEach (const SimCost_CostPerEach_optional& x)
      {
        this->SimCost_CostPerEach_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerArea_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerArea () const
      {
        return this->SimCost_CostPerArea_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerArea_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerArea ()
      {
        return this->SimCost_CostPerArea_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerArea (const SimCost_CostPerArea_type& x)
      {
        this->SimCost_CostPerArea_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerArea (const SimCost_CostPerArea_optional& x)
      {
        this->SimCost_CostPerArea_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerUnitOutputCap_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCap () const
      {
        return this->SimCost_CostPerUnitOutputCap_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerUnitOutputCap_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCap ()
      {
        return this->SimCost_CostPerUnitOutputCap_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCap (const SimCost_CostPerUnitOutputCap_type& x)
      {
        this->SimCost_CostPerUnitOutputCap_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCap (const SimCost_CostPerUnitOutputCap_optional& x)
      {
        this->SimCost_CostPerUnitOutputCap_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerUnitOutputCapPerCOP_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCapPerCOP () const
      {
        return this->SimCost_CostPerUnitOutputCapPerCOP_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerUnitOutputCapPerCOP_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCapPerCOP ()
      {
        return this->SimCost_CostPerUnitOutputCapPerCOP_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCapPerCOP (const SimCost_CostPerUnitOutputCapPerCOP_type& x)
      {
        this->SimCost_CostPerUnitOutputCapPerCOP_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerUnitOutputCapPerCOP (const SimCost_CostPerUnitOutputCapPerCOP_optional& x)
      {
        this->SimCost_CostPerUnitOutputCapPerCOP_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerVol_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerVol () const
      {
        return this->SimCost_CostPerVol_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerVol_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerVol ()
      {
        return this->SimCost_CostPerVol_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerVol (const SimCost_CostPerVol_type& x)
      {
        this->SimCost_CostPerVol_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerVol (const SimCost_CostPerVol_optional& x)
      {
        this->SimCost_CostPerVol_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerVolRate_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerVolRate () const
      {
        return this->SimCost_CostPerVolRate_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerVolRate_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerVolRate ()
      {
        return this->SimCost_CostPerVolRate_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerVolRate (const SimCost_CostPerVolRate_type& x)
      {
        this->SimCost_CostPerVolRate_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerVolRate (const SimCost_CostPerVolRate_optional& x)
      {
        this->SimCost_CostPerVolRate_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_CostPerEnergyPerTempDiff_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerEnergyPerTempDiff () const
      {
        return this->SimCost_CostPerEnergyPerTempDiff_;
      }

      SimCost_ComponentCost_LineItem::SimCost_CostPerEnergyPerTempDiff_optional& SimCost_ComponentCost_LineItem::
      SimCost_CostPerEnergyPerTempDiff ()
      {
        return this->SimCost_CostPerEnergyPerTempDiff_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerEnergyPerTempDiff (const SimCost_CostPerEnergyPerTempDiff_type& x)
      {
        this->SimCost_CostPerEnergyPerTempDiff_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_CostPerEnergyPerTempDiff (const SimCost_CostPerEnergyPerTempDiff_optional& x)
      {
        this->SimCost_CostPerEnergyPerTempDiff_ = x;
      }

      const SimCost_ComponentCost_LineItem::SimCost_Quantity_optional& SimCost_ComponentCost_LineItem::
      SimCost_Quantity () const
      {
        return this->SimCost_Quantity_;
      }

      SimCost_ComponentCost_LineItem::SimCost_Quantity_optional& SimCost_ComponentCost_LineItem::
      SimCost_Quantity ()
      {
        return this->SimCost_Quantity_;
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Quantity (const SimCost_Quantity_type& x)
      {
        this->SimCost_Quantity_.set (x);
      }

      void SimCost_ComponentCost_LineItem::
      SimCost_Quantity (const SimCost_Quantity_optional& x)
      {
        this->SimCost_Quantity_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimCost_ComponentCost_LineItem
      //

      SimCost_ComponentCost_LineItem::
      SimCost_ComponentCost_LineItem (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost (RefId),
        SimCost_Name_ (this),
        SimCost_Type_ (this),
        SimCost_LineItemType_ (this),
        SimCost_ItemName_ (this),
        SimCost_ObjEndUseKey_ (this),
        SimCost_CostPerEach_ (this),
        SimCost_CostPerArea_ (this),
        SimCost_CostPerUnitOutputCap_ (this),
        SimCost_CostPerUnitOutputCapPerCOP_ (this),
        SimCost_CostPerVol_ (this),
        SimCost_CostPerVolRate_ (this),
        SimCost_CostPerEnergyPerTempDiff_ (this),
        SimCost_Quantity_ (this)
      {
      }

      SimCost_ComponentCost_LineItem::
      SimCost_ComponentCost_LineItem (const SimCost_ComponentCost_LineItem& x,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost (x, f, c),
        SimCost_Name_ (x.SimCost_Name_, f, this),
        SimCost_Type_ (x.SimCost_Type_, f, this),
        SimCost_LineItemType_ (x.SimCost_LineItemType_, f, this),
        SimCost_ItemName_ (x.SimCost_ItemName_, f, this),
        SimCost_ObjEndUseKey_ (x.SimCost_ObjEndUseKey_, f, this),
        SimCost_CostPerEach_ (x.SimCost_CostPerEach_, f, this),
        SimCost_CostPerArea_ (x.SimCost_CostPerArea_, f, this),
        SimCost_CostPerUnitOutputCap_ (x.SimCost_CostPerUnitOutputCap_, f, this),
        SimCost_CostPerUnitOutputCapPerCOP_ (x.SimCost_CostPerUnitOutputCapPerCOP_, f, this),
        SimCost_CostPerVol_ (x.SimCost_CostPerVol_, f, this),
        SimCost_CostPerVolRate_ (x.SimCost_CostPerVolRate_, f, this),
        SimCost_CostPerEnergyPerTempDiff_ (x.SimCost_CostPerEnergyPerTempDiff_, f, this),
        SimCost_Quantity_ (x.SimCost_Quantity_, f, this)
      {
      }

      SimCost_ComponentCost_LineItem::
      SimCost_ComponentCost_LineItem (const ::xercesc::DOMElement& e,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost (e, f | ::xml_schema::flags::base, c),
        SimCost_Name_ (this),
        SimCost_Type_ (this),
        SimCost_LineItemType_ (this),
        SimCost_ItemName_ (this),
        SimCost_ObjEndUseKey_ (this),
        SimCost_CostPerEach_ (this),
        SimCost_CostPerArea_ (this),
        SimCost_CostPerUnitOutputCap_ (this),
        SimCost_CostPerUnitOutputCapPerCOP_ (this),
        SimCost_CostPerVol_ (this),
        SimCost_CostPerVolRate_ (this),
        SimCost_CostPerEnergyPerTempDiff_ (this),
        SimCost_Quantity_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimCost_ComponentCost_LineItem::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimCost_Name
          //
          if (n.name () == "SimCost_Name" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_Name_type > r (
              SimCost_Name_traits::create (i, f, this));

            if (!this->SimCost_Name_)
            {
              this->SimCost_Name_.set (r);
              continue;
            }
          }

          // SimCost_Type
          //
          if (n.name () == "SimCost_Type" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_Type_type > r (
              SimCost_Type_traits::create (i, f, this));

            if (!this->SimCost_Type_)
            {
              this->SimCost_Type_.set (r);
              continue;
            }
          }

          // SimCost_LineItemType
          //
          if (n.name () == "SimCost_LineItemType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_LineItemType_type > r (
              SimCost_LineItemType_traits::create (i, f, this));

            if (!this->SimCost_LineItemType_)
            {
              this->SimCost_LineItemType_.set (r);
              continue;
            }
          }

          // SimCost_ItemName
          //
          if (n.name () == "SimCost_ItemName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_ItemName_type > r (
              SimCost_ItemName_traits::create (i, f, this));

            if (!this->SimCost_ItemName_)
            {
              this->SimCost_ItemName_.set (r);
              continue;
            }
          }

          // SimCost_ObjEndUseKey
          //
          if (n.name () == "SimCost_ObjEndUseKey" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_ObjEndUseKey_type > r (
              SimCost_ObjEndUseKey_traits::create (i, f, this));

            if (!this->SimCost_ObjEndUseKey_)
            {
              this->SimCost_ObjEndUseKey_.set (r);
              continue;
            }
          }

          // SimCost_CostPerEach
          //
          if (n.name () == "SimCost_CostPerEach" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerEach_)
            {
              this->SimCost_CostPerEach_.set (SimCost_CostPerEach_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_CostPerArea
          //
          if (n.name () == "SimCost_CostPerArea" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerArea_)
            {
              this->SimCost_CostPerArea_.set (SimCost_CostPerArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_CostPerUnitOutputCap
          //
          if (n.name () == "SimCost_CostPerUnitOutputCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerUnitOutputCap_)
            {
              this->SimCost_CostPerUnitOutputCap_.set (SimCost_CostPerUnitOutputCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_CostPerUnitOutputCapPerCOP
          //
          if (n.name () == "SimCost_CostPerUnitOutputCapPerCOP" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerUnitOutputCapPerCOP_)
            {
              this->SimCost_CostPerUnitOutputCapPerCOP_.set (SimCost_CostPerUnitOutputCapPerCOP_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_CostPerVol
          //
          if (n.name () == "SimCost_CostPerVol" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerVol_)
            {
              this->SimCost_CostPerVol_.set (SimCost_CostPerVol_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_CostPerVolRate
          //
          if (n.name () == "SimCost_CostPerVolRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerVolRate_)
            {
              this->SimCost_CostPerVolRate_.set (SimCost_CostPerVolRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_CostPerEnergyPerTempDiff
          //
          if (n.name () == "SimCost_CostPerEnergyPerTempDiff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_CostPerEnergyPerTempDiff_)
            {
              this->SimCost_CostPerEnergyPerTempDiff_.set (SimCost_CostPerEnergyPerTempDiff_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_Quantity
          //
          if (n.name () == "SimCost_Quantity" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->SimCost_Quantity_)
            {
              this->SimCost_Quantity_.set (SimCost_Quantity_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimCost_ComponentCost_LineItem* SimCost_ComponentCost_LineItem::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimCost_ComponentCost_LineItem (*this, f, c);
      }

      SimCost_ComponentCost_LineItem& SimCost_ComponentCost_LineItem::
      operator= (const SimCost_ComponentCost_LineItem& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost& > (*this) = x;
          this->SimCost_Name_ = x.SimCost_Name_;
          this->SimCost_Type_ = x.SimCost_Type_;
          this->SimCost_LineItemType_ = x.SimCost_LineItemType_;
          this->SimCost_ItemName_ = x.SimCost_ItemName_;
          this->SimCost_ObjEndUseKey_ = x.SimCost_ObjEndUseKey_;
          this->SimCost_CostPerEach_ = x.SimCost_CostPerEach_;
          this->SimCost_CostPerArea_ = x.SimCost_CostPerArea_;
          this->SimCost_CostPerUnitOutputCap_ = x.SimCost_CostPerUnitOutputCap_;
          this->SimCost_CostPerUnitOutputCapPerCOP_ = x.SimCost_CostPerUnitOutputCapPerCOP_;
          this->SimCost_CostPerVol_ = x.SimCost_CostPerVol_;
          this->SimCost_CostPerVolRate_ = x.SimCost_CostPerVolRate_;
          this->SimCost_CostPerEnergyPerTempDiff_ = x.SimCost_CostPerEnergyPerTempDiff_;
          this->SimCost_Quantity_ = x.SimCost_Quantity_;
        }

        return *this;
      }

      SimCost_ComponentCost_LineItem::
      ~SimCost_ComponentCost_LineItem ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

