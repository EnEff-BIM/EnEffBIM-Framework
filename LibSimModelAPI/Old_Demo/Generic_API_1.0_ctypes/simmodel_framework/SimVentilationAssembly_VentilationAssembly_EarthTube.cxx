// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimVentilationAssembly_VentilationAssembly_EarthTube.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      // SimVentilationAssembly_VentilationAssembly_EarthTube
      // 

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_SchedName_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SchedName () const
      {
        return this->SimVentilationAssembly_SchedName_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_SchedName_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SchedName ()
      {
        return this->SimVentilationAssembly_SchedName_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SchedName (const SimVentilationAssembly_SchedName_type& x)
      {
        this->SimVentilationAssembly_SchedName_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SchedName (const SimVentilationAssembly_SchedName_optional& x)
      {
        this->SimVentilationAssembly_SchedName_ = x;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SchedName (::std::auto_ptr< SimVentilationAssembly_SchedName_type > x)
      {
        this->SimVentilationAssembly_SchedName_.set (x);
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_ZoneName_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ZoneName () const
      {
        return this->SimVentilationAssembly_ZoneName_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_ZoneName_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ZoneName ()
      {
        return this->SimVentilationAssembly_ZoneName_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ZoneName (const SimVentilationAssembly_ZoneName_type& x)
      {
        this->SimVentilationAssembly_ZoneName_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ZoneName (const SimVentilationAssembly_ZoneName_optional& x)
      {
        this->SimVentilationAssembly_ZoneName_ = x;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ZoneName (::std::auto_ptr< SimVentilationAssembly_ZoneName_type > x)
      {
        this->SimVentilationAssembly_ZoneName_.set (x);
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_DesignFlowRate_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DesignFlowRate () const
      {
        return this->SimVentilationAssembly_DesignFlowRate_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_DesignFlowRate_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DesignFlowRate ()
      {
        return this->SimVentilationAssembly_DesignFlowRate_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DesignFlowRate (const SimVentilationAssembly_DesignFlowRate_type& x)
      {
        this->SimVentilationAssembly_DesignFlowRate_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DesignFlowRate (const SimVentilationAssembly_DesignFlowRate_optional& x)
      {
        this->SimVentilationAssembly_DesignFlowRate_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_MinZoneTempWhenCooling_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MinZoneTempWhenCooling () const
      {
        return this->SimVentilationAssembly_MinZoneTempWhenCooling_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_MinZoneTempWhenCooling_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MinZoneTempWhenCooling ()
      {
        return this->SimVentilationAssembly_MinZoneTempWhenCooling_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MinZoneTempWhenCooling (const SimVentilationAssembly_MinZoneTempWhenCooling_type& x)
      {
        this->SimVentilationAssembly_MinZoneTempWhenCooling_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MinZoneTempWhenCooling (const SimVentilationAssembly_MinZoneTempWhenCooling_optional& x)
      {
        this->SimVentilationAssembly_MinZoneTempWhenCooling_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_MaxZoneTempWhenHeating_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MaxZoneTempWhenHeating () const
      {
        return this->SimVentilationAssembly_MaxZoneTempWhenHeating_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_MaxZoneTempWhenHeating_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MaxZoneTempWhenHeating ()
      {
        return this->SimVentilationAssembly_MaxZoneTempWhenHeating_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MaxZoneTempWhenHeating (const SimVentilationAssembly_MaxZoneTempWhenHeating_type& x)
      {
        this->SimVentilationAssembly_MaxZoneTempWhenHeating_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_MaxZoneTempWhenHeating (const SimVentilationAssembly_MaxZoneTempWhenHeating_optional& x)
      {
        this->SimVentilationAssembly_MaxZoneTempWhenHeating_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_DeltaTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DeltaTemp () const
      {
        return this->SimVentilationAssembly_DeltaTemp_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_DeltaTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DeltaTemp ()
      {
        return this->SimVentilationAssembly_DeltaTemp_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DeltaTemp (const SimVentilationAssembly_DeltaTemp_type& x)
      {
        this->SimVentilationAssembly_DeltaTemp_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_DeltaTemp (const SimVentilationAssembly_DeltaTemp_optional& x)
      {
        this->SimVentilationAssembly_DeltaTemp_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_EarthtubeType_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_EarthtubeType () const
      {
        return this->SimVentilationAssembly_EarthtubeType_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_EarthtubeType_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_EarthtubeType ()
      {
        return this->SimVentilationAssembly_EarthtubeType_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_EarthtubeType (const SimVentilationAssembly_EarthtubeType_type& x)
      {
        this->SimVentilationAssembly_EarthtubeType_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_EarthtubeType (const SimVentilationAssembly_EarthtubeType_optional& x)
      {
        this->SimVentilationAssembly_EarthtubeType_ = x;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_EarthtubeType (::std::auto_ptr< SimVentilationAssembly_EarthtubeType_type > x)
      {
        this->SimVentilationAssembly_EarthtubeType_.set (x);
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_FanPresRise_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanPresRise () const
      {
        return this->SimVentilationAssembly_FanPresRise_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_FanPresRise_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanPresRise ()
      {
        return this->SimVentilationAssembly_FanPresRise_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanPresRise (const SimVentilationAssembly_FanPresRise_type& x)
      {
        this->SimVentilationAssembly_FanPresRise_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanPresRise (const SimVentilationAssembly_FanPresRise_optional& x)
      {
        this->SimVentilationAssembly_FanPresRise_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_FanTotalEff_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanTotalEff () const
      {
        return this->SimVentilationAssembly_FanTotalEff_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_FanTotalEff_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanTotalEff ()
      {
        return this->SimVentilationAssembly_FanTotalEff_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanTotalEff (const SimVentilationAssembly_FanTotalEff_type& x)
      {
        this->SimVentilationAssembly_FanTotalEff_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_FanTotalEff (const SimVentilationAssembly_FanTotalEff_optional& x)
      {
        this->SimVentilationAssembly_FanTotalEff_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeRadius_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeRadius () const
      {
        return this->SimVentilationAssembly_PipeRadius_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeRadius_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeRadius ()
      {
        return this->SimVentilationAssembly_PipeRadius_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeRadius (const SimVentilationAssembly_PipeRadius_type& x)
      {
        this->SimVentilationAssembly_PipeRadius_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeRadius (const SimVentilationAssembly_PipeRadius_optional& x)
      {
        this->SimVentilationAssembly_PipeRadius_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeThick_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThick () const
      {
        return this->SimVentilationAssembly_PipeThick_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeThick_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThick ()
      {
        return this->SimVentilationAssembly_PipeThick_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThick (const SimVentilationAssembly_PipeThick_type& x)
      {
        this->SimVentilationAssembly_PipeThick_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThick (const SimVentilationAssembly_PipeThick_optional& x)
      {
        this->SimVentilationAssembly_PipeThick_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeLength_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeLength () const
      {
        return this->SimVentilationAssembly_PipeLength_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeLength_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeLength ()
      {
        return this->SimVentilationAssembly_PipeLength_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeLength (const SimVentilationAssembly_PipeLength_type& x)
      {
        this->SimVentilationAssembly_PipeLength_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeLength (const SimVentilationAssembly_PipeLength_optional& x)
      {
        this->SimVentilationAssembly_PipeLength_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeThermalCond_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThermalCond () const
      {
        return this->SimVentilationAssembly_PipeThermalCond_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeThermalCond_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThermalCond ()
      {
        return this->SimVentilationAssembly_PipeThermalCond_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThermalCond (const SimVentilationAssembly_PipeThermalCond_type& x)
      {
        this->SimVentilationAssembly_PipeThermalCond_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeThermalCond (const SimVentilationAssembly_PipeThermalCond_optional& x)
      {
        this->SimVentilationAssembly_PipeThermalCond_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeDepthUnderGroundSurf_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeDepthUnderGroundSurf () const
      {
        return this->SimVentilationAssembly_PipeDepthUnderGroundSurf_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PipeDepthUnderGroundSurf_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeDepthUnderGroundSurf ()
      {
        return this->SimVentilationAssembly_PipeDepthUnderGroundSurf_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeDepthUnderGroundSurf (const SimVentilationAssembly_PipeDepthUnderGroundSurf_type& x)
      {
        this->SimVentilationAssembly_PipeDepthUnderGroundSurf_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PipeDepthUnderGroundSurf (const SimVentilationAssembly_PipeDepthUnderGroundSurf_optional& x)
      {
        this->SimVentilationAssembly_PipeDepthUnderGroundSurf_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_SoilCondition_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SoilCondition () const
      {
        return this->SimVentilationAssembly_SoilCondition_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_SoilCondition_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SoilCondition ()
      {
        return this->SimVentilationAssembly_SoilCondition_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SoilCondition (const SimVentilationAssembly_SoilCondition_type& x)
      {
        this->SimVentilationAssembly_SoilCondition_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SoilCondition (const SimVentilationAssembly_SoilCondition_optional& x)
      {
        this->SimVentilationAssembly_SoilCondition_ = x;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_SoilCondition (::std::auto_ptr< SimVentilationAssembly_SoilCondition_type > x)
      {
        this->SimVentilationAssembly_SoilCondition_.set (x);
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_AverageSoilSurfTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AverageSoilSurfTemp () const
      {
        return this->SimVentilationAssembly_AverageSoilSurfTemp_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_AverageSoilSurfTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AverageSoilSurfTemp ()
      {
        return this->SimVentilationAssembly_AverageSoilSurfTemp_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AverageSoilSurfTemp (const SimVentilationAssembly_AverageSoilSurfTemp_type& x)
      {
        this->SimVentilationAssembly_AverageSoilSurfTemp_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AverageSoilSurfTemp (const SimVentilationAssembly_AverageSoilSurfTemp_optional& x)
      {
        this->SimVentilationAssembly_AverageSoilSurfTemp_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_AmplSoilSurfTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AmplSoilSurfTemp () const
      {
        return this->SimVentilationAssembly_AmplSoilSurfTemp_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_AmplSoilSurfTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AmplSoilSurfTemp ()
      {
        return this->SimVentilationAssembly_AmplSoilSurfTemp_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AmplSoilSurfTemp (const SimVentilationAssembly_AmplSoilSurfTemp_type& x)
      {
        this->SimVentilationAssembly_AmplSoilSurfTemp_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_AmplSoilSurfTemp (const SimVentilationAssembly_AmplSoilSurfTemp_optional& x)
      {
        this->SimVentilationAssembly_AmplSoilSurfTemp_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PhaseConstSoilSurfTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PhaseConstSoilSurfTemp () const
      {
        return this->SimVentilationAssembly_PhaseConstSoilSurfTemp_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_PhaseConstSoilSurfTemp_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PhaseConstSoilSurfTemp ()
      {
        return this->SimVentilationAssembly_PhaseConstSoilSurfTemp_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PhaseConstSoilSurfTemp (const SimVentilationAssembly_PhaseConstSoilSurfTemp_type& x)
      {
        this->SimVentilationAssembly_PhaseConstSoilSurfTemp_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_PhaseConstSoilSurfTemp (const SimVentilationAssembly_PhaseConstSoilSurfTemp_optional& x)
      {
        this->SimVentilationAssembly_PhaseConstSoilSurfTemp_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_ConstTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ConstTermFlowCoef () const
      {
        return this->SimVentilationAssembly_ConstTermFlowCoef_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_ConstTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ConstTermFlowCoef ()
      {
        return this->SimVentilationAssembly_ConstTermFlowCoef_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ConstTermFlowCoef (const SimVentilationAssembly_ConstTermFlowCoef_type& x)
      {
        this->SimVentilationAssembly_ConstTermFlowCoef_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_ConstTermFlowCoef (const SimVentilationAssembly_ConstTermFlowCoef_optional& x)
      {
        this->SimVentilationAssembly_ConstTermFlowCoef_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_TempTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_TempTermFlowCoef () const
      {
        return this->SimVentilationAssembly_TempTermFlowCoef_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_TempTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_TempTermFlowCoef ()
      {
        return this->SimVentilationAssembly_TempTermFlowCoef_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_TempTermFlowCoef (const SimVentilationAssembly_TempTermFlowCoef_type& x)
      {
        this->SimVentilationAssembly_TempTermFlowCoef_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_TempTermFlowCoef (const SimVentilationAssembly_TempTermFlowCoef_optional& x)
      {
        this->SimVentilationAssembly_TempTermFlowCoef_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_VeloTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloTermFlowCoef () const
      {
        return this->SimVentilationAssembly_VeloTermFlowCoef_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_VeloTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloTermFlowCoef ()
      {
        return this->SimVentilationAssembly_VeloTermFlowCoef_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloTermFlowCoef (const SimVentilationAssembly_VeloTermFlowCoef_type& x)
      {
        this->SimVentilationAssembly_VeloTermFlowCoef_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloTermFlowCoef (const SimVentilationAssembly_VeloTermFlowCoef_optional& x)
      {
        this->SimVentilationAssembly_VeloTermFlowCoef_ = x;
      }

      const SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_VeloSquaredTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloSquaredTermFlowCoef () const
      {
        return this->SimVentilationAssembly_VeloSquaredTermFlowCoef_;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::SimVentilationAssembly_VeloSquaredTermFlowCoef_optional& SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloSquaredTermFlowCoef ()
      {
        return this->SimVentilationAssembly_VeloSquaredTermFlowCoef_;
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloSquaredTermFlowCoef (const SimVentilationAssembly_VeloSquaredTermFlowCoef_type& x)
      {
        this->SimVentilationAssembly_VeloSquaredTermFlowCoef_.set (x);
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VeloSquaredTermFlowCoef (const SimVentilationAssembly_VeloSquaredTermFlowCoef_optional& x)
      {
        this->SimVentilationAssembly_VeloSquaredTermFlowCoef_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      // SimVentilationAssembly_VentilationAssembly_EarthTube
      //

      SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VentilationAssembly_EarthTube (const RefId_type& RefId)
      : ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly (RefId),
        SimVentilationAssembly_SchedName_ (this),
        SimVentilationAssembly_ZoneName_ (this),
        SimVentilationAssembly_DesignFlowRate_ (this),
        SimVentilationAssembly_MinZoneTempWhenCooling_ (this),
        SimVentilationAssembly_MaxZoneTempWhenHeating_ (this),
        SimVentilationAssembly_DeltaTemp_ (this),
        SimVentilationAssembly_EarthtubeType_ (this),
        SimVentilationAssembly_FanPresRise_ (this),
        SimVentilationAssembly_FanTotalEff_ (this),
        SimVentilationAssembly_PipeRadius_ (this),
        SimVentilationAssembly_PipeThick_ (this),
        SimVentilationAssembly_PipeLength_ (this),
        SimVentilationAssembly_PipeThermalCond_ (this),
        SimVentilationAssembly_PipeDepthUnderGroundSurf_ (this),
        SimVentilationAssembly_SoilCondition_ (this),
        SimVentilationAssembly_AverageSoilSurfTemp_ (this),
        SimVentilationAssembly_AmplSoilSurfTemp_ (this),
        SimVentilationAssembly_PhaseConstSoilSurfTemp_ (this),
        SimVentilationAssembly_ConstTermFlowCoef_ (this),
        SimVentilationAssembly_TempTermFlowCoef_ (this),
        SimVentilationAssembly_VeloTermFlowCoef_ (this),
        SimVentilationAssembly_VeloSquaredTermFlowCoef_ (this)
      {
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VentilationAssembly_EarthTube (const SimVentilationAssembly_VentilationAssembly_EarthTube& x,
                                                            ::xml_schema::flags f,
                                                            ::xml_schema::container* c)
      : ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly (x, f, c),
        SimVentilationAssembly_SchedName_ (x.SimVentilationAssembly_SchedName_, f, this),
        SimVentilationAssembly_ZoneName_ (x.SimVentilationAssembly_ZoneName_, f, this),
        SimVentilationAssembly_DesignFlowRate_ (x.SimVentilationAssembly_DesignFlowRate_, f, this),
        SimVentilationAssembly_MinZoneTempWhenCooling_ (x.SimVentilationAssembly_MinZoneTempWhenCooling_, f, this),
        SimVentilationAssembly_MaxZoneTempWhenHeating_ (x.SimVentilationAssembly_MaxZoneTempWhenHeating_, f, this),
        SimVentilationAssembly_DeltaTemp_ (x.SimVentilationAssembly_DeltaTemp_, f, this),
        SimVentilationAssembly_EarthtubeType_ (x.SimVentilationAssembly_EarthtubeType_, f, this),
        SimVentilationAssembly_FanPresRise_ (x.SimVentilationAssembly_FanPresRise_, f, this),
        SimVentilationAssembly_FanTotalEff_ (x.SimVentilationAssembly_FanTotalEff_, f, this),
        SimVentilationAssembly_PipeRadius_ (x.SimVentilationAssembly_PipeRadius_, f, this),
        SimVentilationAssembly_PipeThick_ (x.SimVentilationAssembly_PipeThick_, f, this),
        SimVentilationAssembly_PipeLength_ (x.SimVentilationAssembly_PipeLength_, f, this),
        SimVentilationAssembly_PipeThermalCond_ (x.SimVentilationAssembly_PipeThermalCond_, f, this),
        SimVentilationAssembly_PipeDepthUnderGroundSurf_ (x.SimVentilationAssembly_PipeDepthUnderGroundSurf_, f, this),
        SimVentilationAssembly_SoilCondition_ (x.SimVentilationAssembly_SoilCondition_, f, this),
        SimVentilationAssembly_AverageSoilSurfTemp_ (x.SimVentilationAssembly_AverageSoilSurfTemp_, f, this),
        SimVentilationAssembly_AmplSoilSurfTemp_ (x.SimVentilationAssembly_AmplSoilSurfTemp_, f, this),
        SimVentilationAssembly_PhaseConstSoilSurfTemp_ (x.SimVentilationAssembly_PhaseConstSoilSurfTemp_, f, this),
        SimVentilationAssembly_ConstTermFlowCoef_ (x.SimVentilationAssembly_ConstTermFlowCoef_, f, this),
        SimVentilationAssembly_TempTermFlowCoef_ (x.SimVentilationAssembly_TempTermFlowCoef_, f, this),
        SimVentilationAssembly_VeloTermFlowCoef_ (x.SimVentilationAssembly_VeloTermFlowCoef_, f, this),
        SimVentilationAssembly_VeloSquaredTermFlowCoef_ (x.SimVentilationAssembly_VeloSquaredTermFlowCoef_, f, this)
      {
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::
      SimVentilationAssembly_VentilationAssembly_EarthTube (const ::xercesc::DOMElement& e,
                                                            ::xml_schema::flags f,
                                                            ::xml_schema::container* c)
      : ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly (e, f | ::xml_schema::flags::base, c),
        SimVentilationAssembly_SchedName_ (this),
        SimVentilationAssembly_ZoneName_ (this),
        SimVentilationAssembly_DesignFlowRate_ (this),
        SimVentilationAssembly_MinZoneTempWhenCooling_ (this),
        SimVentilationAssembly_MaxZoneTempWhenHeating_ (this),
        SimVentilationAssembly_DeltaTemp_ (this),
        SimVentilationAssembly_EarthtubeType_ (this),
        SimVentilationAssembly_FanPresRise_ (this),
        SimVentilationAssembly_FanTotalEff_ (this),
        SimVentilationAssembly_PipeRadius_ (this),
        SimVentilationAssembly_PipeThick_ (this),
        SimVentilationAssembly_PipeLength_ (this),
        SimVentilationAssembly_PipeThermalCond_ (this),
        SimVentilationAssembly_PipeDepthUnderGroundSurf_ (this),
        SimVentilationAssembly_SoilCondition_ (this),
        SimVentilationAssembly_AverageSoilSurfTemp_ (this),
        SimVentilationAssembly_AmplSoilSurfTemp_ (this),
        SimVentilationAssembly_PhaseConstSoilSurfTemp_ (this),
        SimVentilationAssembly_ConstTermFlowCoef_ (this),
        SimVentilationAssembly_TempTermFlowCoef_ (this),
        SimVentilationAssembly_VeloTermFlowCoef_ (this),
        SimVentilationAssembly_VeloSquaredTermFlowCoef_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimVentilationAssembly_VentilationAssembly_EarthTube::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimVentilationAssembly_SchedName
          //
          if (n.name () == "SimVentilationAssembly_SchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimVentilationAssembly_SchedName_type > r (
              SimVentilationAssembly_SchedName_traits::create (i, f, this));

            if (!this->SimVentilationAssembly_SchedName_)
            {
              this->SimVentilationAssembly_SchedName_.set (r);
              continue;
            }
          }

          // SimVentilationAssembly_ZoneName
          //
          if (n.name () == "SimVentilationAssembly_ZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimVentilationAssembly_ZoneName_type > r (
              SimVentilationAssembly_ZoneName_traits::create (i, f, this));

            if (!this->SimVentilationAssembly_ZoneName_)
            {
              this->SimVentilationAssembly_ZoneName_.set (r);
              continue;
            }
          }

          // SimVentilationAssembly_DesignFlowRate
          //
          if (n.name () == "SimVentilationAssembly_DesignFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_DesignFlowRate_)
            {
              this->SimVentilationAssembly_DesignFlowRate_.set (SimVentilationAssembly_DesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_MinZoneTempWhenCooling
          //
          if (n.name () == "SimVentilationAssembly_MinZoneTempWhenCooling" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_MinZoneTempWhenCooling_)
            {
              this->SimVentilationAssembly_MinZoneTempWhenCooling_.set (SimVentilationAssembly_MinZoneTempWhenCooling_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_MaxZoneTempWhenHeating
          //
          if (n.name () == "SimVentilationAssembly_MaxZoneTempWhenHeating" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_MaxZoneTempWhenHeating_)
            {
              this->SimVentilationAssembly_MaxZoneTempWhenHeating_.set (SimVentilationAssembly_MaxZoneTempWhenHeating_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_DeltaTemp
          //
          if (n.name () == "SimVentilationAssembly_DeltaTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_DeltaTemp_)
            {
              this->SimVentilationAssembly_DeltaTemp_.set (SimVentilationAssembly_DeltaTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_EarthtubeType
          //
          if (n.name () == "SimVentilationAssembly_EarthtubeType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimVentilationAssembly_EarthtubeType_type > r (
              SimVentilationAssembly_EarthtubeType_traits::create (i, f, this));

            if (!this->SimVentilationAssembly_EarthtubeType_)
            {
              this->SimVentilationAssembly_EarthtubeType_.set (r);
              continue;
            }
          }

          // SimVentilationAssembly_FanPresRise
          //
          if (n.name () == "SimVentilationAssembly_FanPresRise" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_FanPresRise_)
            {
              this->SimVentilationAssembly_FanPresRise_.set (SimVentilationAssembly_FanPresRise_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_FanTotalEff
          //
          if (n.name () == "SimVentilationAssembly_FanTotalEff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_FanTotalEff_)
            {
              this->SimVentilationAssembly_FanTotalEff_.set (SimVentilationAssembly_FanTotalEff_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_PipeRadius
          //
          if (n.name () == "SimVentilationAssembly_PipeRadius" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_PipeRadius_)
            {
              this->SimVentilationAssembly_PipeRadius_.set (SimVentilationAssembly_PipeRadius_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_PipeThick
          //
          if (n.name () == "SimVentilationAssembly_PipeThick" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_PipeThick_)
            {
              this->SimVentilationAssembly_PipeThick_.set (SimVentilationAssembly_PipeThick_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_PipeLength
          //
          if (n.name () == "SimVentilationAssembly_PipeLength" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_PipeLength_)
            {
              this->SimVentilationAssembly_PipeLength_.set (SimVentilationAssembly_PipeLength_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_PipeThermalCond
          //
          if (n.name () == "SimVentilationAssembly_PipeThermalCond" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_PipeThermalCond_)
            {
              this->SimVentilationAssembly_PipeThermalCond_.set (SimVentilationAssembly_PipeThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_PipeDepthUnderGroundSurf
          //
          if (n.name () == "SimVentilationAssembly_PipeDepthUnderGroundSurf" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_PipeDepthUnderGroundSurf_)
            {
              this->SimVentilationAssembly_PipeDepthUnderGroundSurf_.set (SimVentilationAssembly_PipeDepthUnderGroundSurf_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_SoilCondition
          //
          if (n.name () == "SimVentilationAssembly_SoilCondition" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimVentilationAssembly_SoilCondition_type > r (
              SimVentilationAssembly_SoilCondition_traits::create (i, f, this));

            if (!this->SimVentilationAssembly_SoilCondition_)
            {
              this->SimVentilationAssembly_SoilCondition_.set (r);
              continue;
            }
          }

          // SimVentilationAssembly_AverageSoilSurfTemp
          //
          if (n.name () == "SimVentilationAssembly_AverageSoilSurfTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_AverageSoilSurfTemp_)
            {
              this->SimVentilationAssembly_AverageSoilSurfTemp_.set (SimVentilationAssembly_AverageSoilSurfTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_AmplSoilSurfTemp
          //
          if (n.name () == "SimVentilationAssembly_AmplSoilSurfTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_AmplSoilSurfTemp_)
            {
              this->SimVentilationAssembly_AmplSoilSurfTemp_.set (SimVentilationAssembly_AmplSoilSurfTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_PhaseConstSoilSurfTemp
          //
          if (n.name () == "SimVentilationAssembly_PhaseConstSoilSurfTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_PhaseConstSoilSurfTemp_)
            {
              this->SimVentilationAssembly_PhaseConstSoilSurfTemp_.set (SimVentilationAssembly_PhaseConstSoilSurfTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_ConstTermFlowCoef
          //
          if (n.name () == "SimVentilationAssembly_ConstTermFlowCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_ConstTermFlowCoef_)
            {
              this->SimVentilationAssembly_ConstTermFlowCoef_.set (SimVentilationAssembly_ConstTermFlowCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_TempTermFlowCoef
          //
          if (n.name () == "SimVentilationAssembly_TempTermFlowCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_TempTermFlowCoef_)
            {
              this->SimVentilationAssembly_TempTermFlowCoef_.set (SimVentilationAssembly_TempTermFlowCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_VeloTermFlowCoef
          //
          if (n.name () == "SimVentilationAssembly_VeloTermFlowCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_VeloTermFlowCoef_)
            {
              this->SimVentilationAssembly_VeloTermFlowCoef_.set (SimVentilationAssembly_VeloTermFlowCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimVentilationAssembly_VeloSquaredTermFlowCoef
          //
          if (n.name () == "SimVentilationAssembly_VeloSquaredTermFlowCoef" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimVentilationAssembly_VeloSquaredTermFlowCoef_)
            {
              this->SimVentilationAssembly_VeloSquaredTermFlowCoef_.set (SimVentilationAssembly_VeloSquaredTermFlowCoef_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube* SimVentilationAssembly_VentilationAssembly_EarthTube::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimVentilationAssembly_VentilationAssembly_EarthTube (*this, f, c);
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube& SimVentilationAssembly_VentilationAssembly_EarthTube::
      operator= (const SimVentilationAssembly_VentilationAssembly_EarthTube& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly& > (*this) = x;
          this->SimVentilationAssembly_SchedName_ = x.SimVentilationAssembly_SchedName_;
          this->SimVentilationAssembly_ZoneName_ = x.SimVentilationAssembly_ZoneName_;
          this->SimVentilationAssembly_DesignFlowRate_ = x.SimVentilationAssembly_DesignFlowRate_;
          this->SimVentilationAssembly_MinZoneTempWhenCooling_ = x.SimVentilationAssembly_MinZoneTempWhenCooling_;
          this->SimVentilationAssembly_MaxZoneTempWhenHeating_ = x.SimVentilationAssembly_MaxZoneTempWhenHeating_;
          this->SimVentilationAssembly_DeltaTemp_ = x.SimVentilationAssembly_DeltaTemp_;
          this->SimVentilationAssembly_EarthtubeType_ = x.SimVentilationAssembly_EarthtubeType_;
          this->SimVentilationAssembly_FanPresRise_ = x.SimVentilationAssembly_FanPresRise_;
          this->SimVentilationAssembly_FanTotalEff_ = x.SimVentilationAssembly_FanTotalEff_;
          this->SimVentilationAssembly_PipeRadius_ = x.SimVentilationAssembly_PipeRadius_;
          this->SimVentilationAssembly_PipeThick_ = x.SimVentilationAssembly_PipeThick_;
          this->SimVentilationAssembly_PipeLength_ = x.SimVentilationAssembly_PipeLength_;
          this->SimVentilationAssembly_PipeThermalCond_ = x.SimVentilationAssembly_PipeThermalCond_;
          this->SimVentilationAssembly_PipeDepthUnderGroundSurf_ = x.SimVentilationAssembly_PipeDepthUnderGroundSurf_;
          this->SimVentilationAssembly_SoilCondition_ = x.SimVentilationAssembly_SoilCondition_;
          this->SimVentilationAssembly_AverageSoilSurfTemp_ = x.SimVentilationAssembly_AverageSoilSurfTemp_;
          this->SimVentilationAssembly_AmplSoilSurfTemp_ = x.SimVentilationAssembly_AmplSoilSurfTemp_;
          this->SimVentilationAssembly_PhaseConstSoilSurfTemp_ = x.SimVentilationAssembly_PhaseConstSoilSurfTemp_;
          this->SimVentilationAssembly_ConstTermFlowCoef_ = x.SimVentilationAssembly_ConstTermFlowCoef_;
          this->SimVentilationAssembly_TempTermFlowCoef_ = x.SimVentilationAssembly_TempTermFlowCoef_;
          this->SimVentilationAssembly_VeloTermFlowCoef_ = x.SimVentilationAssembly_VeloTermFlowCoef_;
          this->SimVentilationAssembly_VeloSquaredTermFlowCoef_ = x.SimVentilationAssembly_VeloSquaredTermFlowCoef_;
        }

        return *this;
      }

      SimVentilationAssembly_VentilationAssembly_EarthTube::
      ~SimVentilationAssembly_VentilationAssembly_EarthTube ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

