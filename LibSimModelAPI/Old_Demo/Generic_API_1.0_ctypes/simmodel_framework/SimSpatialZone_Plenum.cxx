// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSpatialZone_Plenum.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      // SimSpatialZone_Plenum
      // 

      const SimSpatialZone_Plenum::SimSpatialZone_DirRelNorth_optional& SimSpatialZone_Plenum::
      SimSpatialZone_DirRelNorth () const
      {
        return this->SimSpatialZone_DirRelNorth_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_DirRelNorth_optional& SimSpatialZone_Plenum::
      SimSpatialZone_DirRelNorth ()
      {
        return this->SimSpatialZone_DirRelNorth_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_DirRelNorth (const SimSpatialZone_DirRelNorth_type& x)
      {
        this->SimSpatialZone_DirRelNorth_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_DirRelNorth (const SimSpatialZone_DirRelNorth_optional& x)
      {
        this->SimSpatialZone_DirRelNorth_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_XOrigin_optional& SimSpatialZone_Plenum::
      SimSpatialZone_XOrigin () const
      {
        return this->SimSpatialZone_XOrigin_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_XOrigin_optional& SimSpatialZone_Plenum::
      SimSpatialZone_XOrigin ()
      {
        return this->SimSpatialZone_XOrigin_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_XOrigin (const SimSpatialZone_XOrigin_type& x)
      {
        this->SimSpatialZone_XOrigin_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_XOrigin (const SimSpatialZone_XOrigin_optional& x)
      {
        this->SimSpatialZone_XOrigin_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_YOrigin_optional& SimSpatialZone_Plenum::
      SimSpatialZone_YOrigin () const
      {
        return this->SimSpatialZone_YOrigin_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_YOrigin_optional& SimSpatialZone_Plenum::
      SimSpatialZone_YOrigin ()
      {
        return this->SimSpatialZone_YOrigin_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_YOrigin (const SimSpatialZone_YOrigin_type& x)
      {
        this->SimSpatialZone_YOrigin_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_YOrigin (const SimSpatialZone_YOrigin_optional& x)
      {
        this->SimSpatialZone_YOrigin_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_ZOrigin_optional& SimSpatialZone_Plenum::
      SimSpatialZone_ZOrigin () const
      {
        return this->SimSpatialZone_ZOrigin_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_ZOrigin_optional& SimSpatialZone_Plenum::
      SimSpatialZone_ZOrigin ()
      {
        return this->SimSpatialZone_ZOrigin_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZOrigin (const SimSpatialZone_ZOrigin_type& x)
      {
        this->SimSpatialZone_ZOrigin_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZOrigin (const SimSpatialZone_ZOrigin_optional& x)
      {
        this->SimSpatialZone_ZOrigin_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_Type_optional& SimSpatialZone_Plenum::
      SimSpatialZone_Type () const
      {
        return this->SimSpatialZone_Type_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_Type_optional& SimSpatialZone_Plenum::
      SimSpatialZone_Type ()
      {
        return this->SimSpatialZone_Type_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_Type (const SimSpatialZone_Type_type& x)
      {
        this->SimSpatialZone_Type_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_Type (const SimSpatialZone_Type_optional& x)
      {
        this->SimSpatialZone_Type_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_Mult_optional& SimSpatialZone_Plenum::
      SimSpatialZone_Mult () const
      {
        return this->SimSpatialZone_Mult_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_Mult_optional& SimSpatialZone_Plenum::
      SimSpatialZone_Mult ()
      {
        return this->SimSpatialZone_Mult_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_Mult (const SimSpatialZone_Mult_type& x)
      {
        this->SimSpatialZone_Mult_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_Mult (const SimSpatialZone_Mult_optional& x)
      {
        this->SimSpatialZone_Mult_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_CeilingHt_optional& SimSpatialZone_Plenum::
      SimSpatialZone_CeilingHt () const
      {
        return this->SimSpatialZone_CeilingHt_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_CeilingHt_optional& SimSpatialZone_Plenum::
      SimSpatialZone_CeilingHt ()
      {
        return this->SimSpatialZone_CeilingHt_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_CeilingHt (const SimSpatialZone_CeilingHt_type& x)
      {
        this->SimSpatialZone_CeilingHt_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_CeilingHt (const SimSpatialZone_CeilingHt_optional& x)
      {
        this->SimSpatialZone_CeilingHt_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_Volume_optional& SimSpatialZone_Plenum::
      SimSpatialZone_Volume () const
      {
        return this->SimSpatialZone_Volume_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_Volume_optional& SimSpatialZone_Plenum::
      SimSpatialZone_Volume ()
      {
        return this->SimSpatialZone_Volume_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_Volume (const SimSpatialZone_Volume_type& x)
      {
        this->SimSpatialZone_Volume_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_Volume (const SimSpatialZone_Volume_optional& x)
      {
        this->SimSpatialZone_Volume_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_FloorArea_optional& SimSpatialZone_Plenum::
      SimSpatialZone_FloorArea () const
      {
        return this->SimSpatialZone_FloorArea_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_FloorArea_optional& SimSpatialZone_Plenum::
      SimSpatialZone_FloorArea ()
      {
        return this->SimSpatialZone_FloorArea_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_FloorArea (const SimSpatialZone_FloorArea_type& x)
      {
        this->SimSpatialZone_FloorArea_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_FloorArea (const SimSpatialZone_FloorArea_optional& x)
      {
        this->SimSpatialZone_FloorArea_ = x;
      }

      const SimSpatialZone_Plenum::SimSpatialZone_ZoneInsideConvAlgo_optional& SimSpatialZone_Plenum::
      SimSpatialZone_ZoneInsideConvAlgo () const
      {
        return this->SimSpatialZone_ZoneInsideConvAlgo_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_ZoneInsideConvAlgo_optional& SimSpatialZone_Plenum::
      SimSpatialZone_ZoneInsideConvAlgo ()
      {
        return this->SimSpatialZone_ZoneInsideConvAlgo_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZoneInsideConvAlgo (const SimSpatialZone_ZoneInsideConvAlgo_type& x)
      {
        this->SimSpatialZone_ZoneInsideConvAlgo_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZoneInsideConvAlgo (const SimSpatialZone_ZoneInsideConvAlgo_optional& x)
      {
        this->SimSpatialZone_ZoneInsideConvAlgo_ = x;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZoneInsideConvAlgo (::std::auto_ptr< SimSpatialZone_ZoneInsideConvAlgo_type > x)
      {
        this->SimSpatialZone_ZoneInsideConvAlgo_.set (x);
      }

      const SimSpatialZone_Plenum::SimSpatialZone_ZoneOutsdConvAlgo_optional& SimSpatialZone_Plenum::
      SimSpatialZone_ZoneOutsdConvAlgo () const
      {
        return this->SimSpatialZone_ZoneOutsdConvAlgo_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_ZoneOutsdConvAlgo_optional& SimSpatialZone_Plenum::
      SimSpatialZone_ZoneOutsdConvAlgo ()
      {
        return this->SimSpatialZone_ZoneOutsdConvAlgo_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZoneOutsdConvAlgo (const SimSpatialZone_ZoneOutsdConvAlgo_type& x)
      {
        this->SimSpatialZone_ZoneOutsdConvAlgo_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZoneOutsdConvAlgo (const SimSpatialZone_ZoneOutsdConvAlgo_optional& x)
      {
        this->SimSpatialZone_ZoneOutsdConvAlgo_ = x;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_ZoneOutsdConvAlgo (::std::auto_ptr< SimSpatialZone_ZoneOutsdConvAlgo_type > x)
      {
        this->SimSpatialZone_ZoneOutsdConvAlgo_.set (x);
      }

      const SimSpatialZone_Plenum::SimSpatialZone_PartTotalFlrArea_optional& SimSpatialZone_Plenum::
      SimSpatialZone_PartTotalFlrArea () const
      {
        return this->SimSpatialZone_PartTotalFlrArea_;
      }

      SimSpatialZone_Plenum::SimSpatialZone_PartTotalFlrArea_optional& SimSpatialZone_Plenum::
      SimSpatialZone_PartTotalFlrArea ()
      {
        return this->SimSpatialZone_PartTotalFlrArea_;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_PartTotalFlrArea (const SimSpatialZone_PartTotalFlrArea_type& x)
      {
        this->SimSpatialZone_PartTotalFlrArea_.set (x);
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_PartTotalFlrArea (const SimSpatialZone_PartTotalFlrArea_optional& x)
      {
        this->SimSpatialZone_PartTotalFlrArea_ = x;
      }

      void SimSpatialZone_Plenum::
      SimSpatialZone_PartTotalFlrArea (::std::auto_ptr< SimSpatialZone_PartTotalFlrArea_type > x)
      {
        this->SimSpatialZone_PartTotalFlrArea_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      // SimSpatialZone_Plenum
      //

      SimSpatialZone_Plenum::
      SimSpatialZone_Plenum (const RefId_type& RefId)
      : ::namespaces::Sim::BuildingModel::SimSpatialZone (RefId),
        SimSpatialZone_DirRelNorth_ (this),
        SimSpatialZone_XOrigin_ (this),
        SimSpatialZone_YOrigin_ (this),
        SimSpatialZone_ZOrigin_ (this),
        SimSpatialZone_Type_ (this),
        SimSpatialZone_Mult_ (this),
        SimSpatialZone_CeilingHt_ (this),
        SimSpatialZone_Volume_ (this),
        SimSpatialZone_FloorArea_ (this),
        SimSpatialZone_ZoneInsideConvAlgo_ (this),
        SimSpatialZone_ZoneOutsdConvAlgo_ (this),
        SimSpatialZone_PartTotalFlrArea_ (this)
      {
      }

      SimSpatialZone_Plenum::
      SimSpatialZone_Plenum (const SimSpatialZone_Plenum& x,
                             ::xml_schema::flags f,
                             ::xml_schema::container* c)
      : ::namespaces::Sim::BuildingModel::SimSpatialZone (x, f, c),
        SimSpatialZone_DirRelNorth_ (x.SimSpatialZone_DirRelNorth_, f, this),
        SimSpatialZone_XOrigin_ (x.SimSpatialZone_XOrigin_, f, this),
        SimSpatialZone_YOrigin_ (x.SimSpatialZone_YOrigin_, f, this),
        SimSpatialZone_ZOrigin_ (x.SimSpatialZone_ZOrigin_, f, this),
        SimSpatialZone_Type_ (x.SimSpatialZone_Type_, f, this),
        SimSpatialZone_Mult_ (x.SimSpatialZone_Mult_, f, this),
        SimSpatialZone_CeilingHt_ (x.SimSpatialZone_CeilingHt_, f, this),
        SimSpatialZone_Volume_ (x.SimSpatialZone_Volume_, f, this),
        SimSpatialZone_FloorArea_ (x.SimSpatialZone_FloorArea_, f, this),
        SimSpatialZone_ZoneInsideConvAlgo_ (x.SimSpatialZone_ZoneInsideConvAlgo_, f, this),
        SimSpatialZone_ZoneOutsdConvAlgo_ (x.SimSpatialZone_ZoneOutsdConvAlgo_, f, this),
        SimSpatialZone_PartTotalFlrArea_ (x.SimSpatialZone_PartTotalFlrArea_, f, this)
      {
      }

      SimSpatialZone_Plenum::
      SimSpatialZone_Plenum (const ::xercesc::DOMElement& e,
                             ::xml_schema::flags f,
                             ::xml_schema::container* c)
      : ::namespaces::Sim::BuildingModel::SimSpatialZone (e, f | ::xml_schema::flags::base, c),
        SimSpatialZone_DirRelNorth_ (this),
        SimSpatialZone_XOrigin_ (this),
        SimSpatialZone_YOrigin_ (this),
        SimSpatialZone_ZOrigin_ (this),
        SimSpatialZone_Type_ (this),
        SimSpatialZone_Mult_ (this),
        SimSpatialZone_CeilingHt_ (this),
        SimSpatialZone_Volume_ (this),
        SimSpatialZone_FloorArea_ (this),
        SimSpatialZone_ZoneInsideConvAlgo_ (this),
        SimSpatialZone_ZoneOutsdConvAlgo_ (this),
        SimSpatialZone_PartTotalFlrArea_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSpatialZone_Plenum::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::BuildingModel::SimSpatialZone::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSpatialZone_DirRelNorth
          //
          if (n.name () == "SimSpatialZone_DirRelNorth" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_DirRelNorth_)
            {
              this->SimSpatialZone_DirRelNorth_.set (SimSpatialZone_DirRelNorth_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_XOrigin
          //
          if (n.name () == "SimSpatialZone_XOrigin" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_XOrigin_)
            {
              this->SimSpatialZone_XOrigin_.set (SimSpatialZone_XOrigin_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_YOrigin
          //
          if (n.name () == "SimSpatialZone_YOrigin" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_YOrigin_)
            {
              this->SimSpatialZone_YOrigin_.set (SimSpatialZone_YOrigin_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_ZOrigin
          //
          if (n.name () == "SimSpatialZone_ZOrigin" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_ZOrigin_)
            {
              this->SimSpatialZone_ZOrigin_.set (SimSpatialZone_ZOrigin_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_Type
          //
          if (n.name () == "SimSpatialZone_Type" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_Type_)
            {
              this->SimSpatialZone_Type_.set (SimSpatialZone_Type_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_Mult
          //
          if (n.name () == "SimSpatialZone_Mult" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_Mult_)
            {
              this->SimSpatialZone_Mult_.set (SimSpatialZone_Mult_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_CeilingHt
          //
          if (n.name () == "SimSpatialZone_CeilingHt" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_CeilingHt_)
            {
              this->SimSpatialZone_CeilingHt_.set (SimSpatialZone_CeilingHt_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_Volume
          //
          if (n.name () == "SimSpatialZone_Volume" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_Volume_)
            {
              this->SimSpatialZone_Volume_.set (SimSpatialZone_Volume_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_FloorArea
          //
          if (n.name () == "SimSpatialZone_FloorArea" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimSpatialZone_FloorArea_)
            {
              this->SimSpatialZone_FloorArea_.set (SimSpatialZone_FloorArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimSpatialZone_ZoneInsideConvAlgo
          //
          if (n.name () == "SimSpatialZone_ZoneInsideConvAlgo" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimSpatialZone_ZoneInsideConvAlgo_type > r (
              SimSpatialZone_ZoneInsideConvAlgo_traits::create (i, f, this));

            if (!this->SimSpatialZone_ZoneInsideConvAlgo_)
            {
              this->SimSpatialZone_ZoneInsideConvAlgo_.set (r);
              continue;
            }
          }

          // SimSpatialZone_ZoneOutsdConvAlgo
          //
          if (n.name () == "SimSpatialZone_ZoneOutsdConvAlgo" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimSpatialZone_ZoneOutsdConvAlgo_type > r (
              SimSpatialZone_ZoneOutsdConvAlgo_traits::create (i, f, this));

            if (!this->SimSpatialZone_ZoneOutsdConvAlgo_)
            {
              this->SimSpatialZone_ZoneOutsdConvAlgo_.set (r);
              continue;
            }
          }

          // SimSpatialZone_PartTotalFlrArea
          //
          if (n.name () == "SimSpatialZone_PartTotalFlrArea" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimSpatialZone_PartTotalFlrArea_type > r (
              SimSpatialZone_PartTotalFlrArea_traits::create (i, f, this));

            if (!this->SimSpatialZone_PartTotalFlrArea_)
            {
              this->SimSpatialZone_PartTotalFlrArea_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimSpatialZone_Plenum* SimSpatialZone_Plenum::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSpatialZone_Plenum (*this, f, c);
      }

      SimSpatialZone_Plenum& SimSpatialZone_Plenum::
      operator= (const SimSpatialZone_Plenum& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::BuildingModel::SimSpatialZone& > (*this) = x;
          this->SimSpatialZone_DirRelNorth_ = x.SimSpatialZone_DirRelNorth_;
          this->SimSpatialZone_XOrigin_ = x.SimSpatialZone_XOrigin_;
          this->SimSpatialZone_YOrigin_ = x.SimSpatialZone_YOrigin_;
          this->SimSpatialZone_ZOrigin_ = x.SimSpatialZone_ZOrigin_;
          this->SimSpatialZone_Type_ = x.SimSpatialZone_Type_;
          this->SimSpatialZone_Mult_ = x.SimSpatialZone_Mult_;
          this->SimSpatialZone_CeilingHt_ = x.SimSpatialZone_CeilingHt_;
          this->SimSpatialZone_Volume_ = x.SimSpatialZone_Volume_;
          this->SimSpatialZone_FloorArea_ = x.SimSpatialZone_FloorArea_;
          this->SimSpatialZone_ZoneInsideConvAlgo_ = x.SimSpatialZone_ZoneInsideConvAlgo_;
          this->SimSpatialZone_ZoneOutsdConvAlgo_ = x.SimSpatialZone_ZoneOutsdConvAlgo_;
          this->SimSpatialZone_PartTotalFlrArea_ = x.SimSpatialZone_PartTotalFlrArea_;
        }

        return *this;
      }

      SimSpatialZone_Plenum::
      ~SimSpatialZone_Plenum ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

