// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SIM_GROUND_HEAT_TRANSFER_BASEMENT_HXX
#define SIM_GROUND_HEAT_TRANSFER_BASEMENT_HXX

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::no_type_info< char > no_type_info;
  typedef ::xsd::cxx::tree::not_derived< char > not_derived;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimGroundHeatTransferBasement;
    }
  }
}


#include <memory>    // ::std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "simgroundheattransfer.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace SimModelCore
    {
      class doubleList;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimGroundHeatTransferBasement: public ::namespaces::Sim::ResourcesGeneral::SimGroundHeatTransfer
      {
        public:
        // SimGrndHeatTransBasement_DWALLWallThick
        //
        typedef ::xml_schema::double_ SimGrndHeatTransBasement_DWALLWallThick_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransBasement_DWALLWallThick_type > SimGrndHeatTransBasement_DWALLWallThick_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransBasement_DWALLWallThick_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransBasement_DWALLWallThick_traits;

        const SimGrndHeatTransBasement_DWALLWallThick_optional&
        SimGrndHeatTransBasement_DWALLWallThick () const;

        SimGrndHeatTransBasement_DWALLWallThick_optional&
        SimGrndHeatTransBasement_DWALLWallThick ();

        void
        SimGrndHeatTransBasement_DWALLWallThick (const SimGrndHeatTransBasement_DWALLWallThick_type& x);

        void
        SimGrndHeatTransBasement_DWALLWallThick (const SimGrndHeatTransBasement_DWALLWallThick_optional& x);

        // SimGrndHeatTransBasement_DSLABFlrSlabThick
        //
        typedef ::xml_schema::double_ SimGrndHeatTransBasement_DSLABFlrSlabThick_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransBasement_DSLABFlrSlabThick_type > SimGrndHeatTransBasement_DSLABFlrSlabThick_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransBasement_DSLABFlrSlabThick_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransBasement_DSLABFlrSlabThick_traits;

        const SimGrndHeatTransBasement_DSLABFlrSlabThick_optional&
        SimGrndHeatTransBasement_DSLABFlrSlabThick () const;

        SimGrndHeatTransBasement_DSLABFlrSlabThick_optional&
        SimGrndHeatTransBasement_DSLABFlrSlabThick ();

        void
        SimGrndHeatTransBasement_DSLABFlrSlabThick (const SimGrndHeatTransBasement_DSLABFlrSlabThick_type& x);

        void
        SimGrndHeatTransBasement_DSLABFlrSlabThick (const SimGrndHeatTransBasement_DSLABFlrSlabThick_optional& x);

        // SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall
        //
        typedef ::xml_schema::double_ SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_type > SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_traits;

        const SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_optional&
        SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall () const;

        SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_optional&
        SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall ();

        void
        SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall (const SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_type& x);

        void
        SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall (const SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_optional& x);

        // SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab
        //
        typedef ::xml_schema::double_ SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_type > SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_traits;

        const SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_optional&
        SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab () const;

        SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_optional&
        SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab ();

        void
        SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab (const SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_type& x);

        void
        SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab (const SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_optional& x);

        // SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab
        //
        typedef ::xml_schema::double_ SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_type > SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_traits;

        const SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_optional&
        SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab () const;

        SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_optional&
        SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab ();

        void
        SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab (const SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_type& x);

        void
        SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab (const SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_optional& x);

        // GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution
        //
        typedef ::xml_schema::double_ GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_type > GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_traits;

        const GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_optional&
        GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution () const;

        GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_optional&
        GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution ();

        void
        GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution (const GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_type& x);

        void
        GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution (const GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_optional& x);

        // GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations_
        //
        typedef ::xml_schema::double_ GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__type > GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__traits;

        const GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__optional&
        GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations_ () const;

        GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__optional&
        GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations_ ();

        void
        GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations_ (const GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__type& x);

        void
        GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations_ (const GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__optional& x);

        // GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_type > GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_traits;

        const GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_optional&
        GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn () const;

        GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_optional&
        GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn ();

        void
        GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn (const GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn (const GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_DensityFoundWall
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_type > GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_traits;

        const GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityFoundWall () const;

        GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityFoundWall ();

        void
        GndHeatTrans_Bsmt_MatlProps_DensityFoundWall (const GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_DensityFoundWall (const GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_type > GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_traits;

        const GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab () const;

        GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab ();

        void
        GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab (const GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab (const GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_DensityCeiling
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_DensityCeiling_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_DensityCeiling_type > GndHeatTrans_Bsmt_MatlProps_DensityCeiling_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_DensityCeiling_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_DensityCeiling_traits;

        const GndHeatTrans_Bsmt_MatlProps_DensityCeiling_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityCeiling () const;

        GndHeatTrans_Bsmt_MatlProps_DensityCeiling_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityCeiling ();

        void
        GndHeatTrans_Bsmt_MatlProps_DensityCeiling (const GndHeatTrans_Bsmt_MatlProps_DensityCeiling_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_DensityCeiling (const GndHeatTrans_Bsmt_MatlProps_DensityCeiling_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_DensitySoil
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_DensitySoil_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_DensitySoil_type > GndHeatTrans_Bsmt_MatlProps_DensitySoil_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_DensitySoil_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_DensitySoil_traits;

        const GndHeatTrans_Bsmt_MatlProps_DensitySoil_optional&
        GndHeatTrans_Bsmt_MatlProps_DensitySoil () const;

        GndHeatTrans_Bsmt_MatlProps_DensitySoil_optional&
        GndHeatTrans_Bsmt_MatlProps_DensitySoil ();

        void
        GndHeatTrans_Bsmt_MatlProps_DensitySoil (const GndHeatTrans_Bsmt_MatlProps_DensitySoil_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_DensitySoil (const GndHeatTrans_Bsmt_MatlProps_DensitySoil_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_DensityGravel
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_DensityGravel_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_DensityGravel_type > GndHeatTrans_Bsmt_MatlProps_DensityGravel_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_DensityGravel_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_DensityGravel_traits;

        const GndHeatTrans_Bsmt_MatlProps_DensityGravel_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityGravel () const;

        GndHeatTrans_Bsmt_MatlProps_DensityGravel_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityGravel ();

        void
        GndHeatTrans_Bsmt_MatlProps_DensityGravel (const GndHeatTrans_Bsmt_MatlProps_DensityGravel_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_DensityGravel (const GndHeatTrans_Bsmt_MatlProps_DensityGravel_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_DensityWood
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_DensityWood_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_DensityWood_type > GndHeatTrans_Bsmt_MatlProps_DensityWood_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_DensityWood_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_DensityWood_traits;

        const GndHeatTrans_Bsmt_MatlProps_DensityWood_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityWood () const;

        GndHeatTrans_Bsmt_MatlProps_DensityWood_optional&
        GndHeatTrans_Bsmt_MatlProps_DensityWood ();

        void
        GndHeatTrans_Bsmt_MatlProps_DensityWood (const GndHeatTrans_Bsmt_MatlProps_DensityWood_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_DensityWood (const GndHeatTrans_Bsmt_MatlProps_DensityWood_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_type > GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_traits;

        const GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall () const;

        GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall ();

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall (const GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall (const GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_type > GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_traits;

        const GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab () const;

        GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab ();

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab (const GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab (const GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_type > GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_traits;

        const GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling () const;

        GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling ();

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling (const GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling (const GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_type > GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_traits;

        const GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil () const;

        GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil ();

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil (const GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil (const GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_type > GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_traits;

        const GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel () const;

        GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel ();

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel (const GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel (const GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_SpecHeatWood
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_type > GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_traits;

        const GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatWood () const;

        GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_optional&
        GndHeatTrans_Bsmt_MatlProps_SpecHeatWood ();

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatWood (const GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_SpecHeatWood (const GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_type > GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_traits;

        const GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall () const;

        GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall ();

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall (const GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall (const GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_type > GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_traits;

        const GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab () const;

        GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab ();

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab (const GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab (const GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_type > GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_traits;

        const GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling () const;

        GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling ();

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling (const GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling (const GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_ThermCondSoil
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_type > GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_traits;

        const GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondSoil () const;

        GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondSoil ();

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondSoil (const GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondSoil (const GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_ThermCondGravel
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_type > GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_traits;

        const GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondGravel () const;

        GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondGravel ();

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondGravel (const GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondGravel (const GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_optional& x);

        // GndHeatTrans_Bsmt_MatlProps_ThermCondWood
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_MatlProps_ThermCondWood_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_MatlProps_ThermCondWood_type > GndHeatTrans_Bsmt_MatlProps_ThermCondWood_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_MatlProps_ThermCondWood_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_MatlProps_ThermCondWood_traits;

        const GndHeatTrans_Bsmt_MatlProps_ThermCondWood_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondWood () const;

        GndHeatTrans_Bsmt_MatlProps_ThermCondWood_optional&
        GndHeatTrans_Bsmt_MatlProps_ThermCondWood ();

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondWood (const GndHeatTrans_Bsmt_MatlProps_ThermCondWood_type& x);

        void
        GndHeatTrans_Bsmt_MatlProps_ThermCondWood (const GndHeatTrans_Bsmt_MatlProps_ThermCondWood_optional& x);

        // GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_type > GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_traits;

        const GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_optional&
        GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul () const;

        GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_optional&
        GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul ();

        void
        GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul (const GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_type& x);

        void
        GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul (const GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_optional& x);

        // GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul
        //
        typedef ::xml_schema::string GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_type > GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_type, char > GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_traits;

        const GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_optional&
        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul () const;

        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_optional&
        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul ();

        void
        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul (const GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_type& x);

        void
        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul (const GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_optional& x);

        void
        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul (::std::auto_ptr< GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_type > p);

        // GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_type > GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond () const;

        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_optional& x);

        // GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_type > GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond () const;

        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_optional& x);

        // GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_type > GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_optional&
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow () const;

        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_optional&
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow (const GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow (const GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_optional& x);

        // GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_type > GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_optional&
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow () const;

        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_optional&
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow (const GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow (const GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_optional& x);

        // GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_type > GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond () const;

        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_optional& x);

        // GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_type > GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond () const;

        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_optional&
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond (const GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_optional& x);

        // GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn
        //
        typedef ::xml_schema::string GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_type > GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_type, char > GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_traits;

        const GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_optional&
        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn () const;

        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_optional&
        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn ();

        void
        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn (const GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_type& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn (const GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_optional& x);

        void
        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn (::std::auto_ptr< GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_type > p);

        // GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded
        //
        typedef ::xml_schema::string GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_type > GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_type, char > GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_traits;

        const GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_optional&
        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded () const;

        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_optional&
        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded ();

        void
        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded (const GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_type& x);

        void
        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded (const GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_optional& x);

        void
        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded (::std::auto_ptr< GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_type > p);

        // GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_type > GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_traits;

        const GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff () const;

        GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff ();

        void
        GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_type& x);

        void
        GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_optional& x);

        // GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_type > GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_traits;

        const GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff () const;

        GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff ();

        void
        GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_type& x);

        void
        GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_optional& x);

        // GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_type > GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_traits;

        const GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff () const;

        GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff ();

        void
        GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_type& x);

        void
        GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_optional& x);

        // GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_type > GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_traits;

        const GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff () const;

        GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff ();

        void
        GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_type& x);

        void
        GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_optional& x);

        // GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_type > GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_traits;

        const GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff () const;

        GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff ();

        void
        GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_type& x);

        void
        GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_optional& x);

        // GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_type > GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_traits;

        const GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff () const;

        GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_optional&
        GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff ();

        void
        GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_type& x);

        void
        GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff (const GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_JanAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_JanAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_JanAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_JanAvgTemp (const GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_JanAvgTemp (const GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_FebAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_FebAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_FebAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_FebAvgTemp (const GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_FebAvgTemp (const GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp (const GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp (const GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp (const GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp (const GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_MayAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_MayAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_MayAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_MayAvgTemp (const GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_MayAvgTemp (const GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp (const GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp (const GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp (const GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp (const GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_AugAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_AugAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_AugAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_AugAvgTemp (const GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_AugAvgTemp (const GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_SepAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_SepAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_SepAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_SepAvgTemp (const GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_SepAvgTemp (const GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_OctAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_OctAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_OctAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_OctAvgTemp (const GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_OctAvgTemp (const GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_NovAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_NovAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_NovAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_NovAvgTemp (const GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_NovAvgTemp (const GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_DecAvgTemp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_type > GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_traits;

        const GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_DecAvgTemp () const;

        GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_optional&
        GndHeatTrans_Bsmt_ComBldg_DecAvgTemp ();

        void
        GndHeatTrans_Bsmt_ComBldg_DecAvgTemp (const GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_DecAvgTemp (const GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_optional& x);

        // GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_type > GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_traits;

        const GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_optional&
        GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp () const;

        GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_optional&
        GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp ();

        void
        GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp (const GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_type& x);

        void
        GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp (const GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_optional& x);

        // GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_type > GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_traits;

        const GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_optional&
        GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab () const;

        GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_optional&
        GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab ();

        void
        GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab (const GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_type& x);

        void
        GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab (const GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_optional& x);

        // GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag
        //
        typedef ::xml_schema::string GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_type > GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_type, char > GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_traits;

        const GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_optional&
        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag () const;

        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_optional&
        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag ();

        void
        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag (const GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_type& x);

        void
        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag (const GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_optional& x);

        void
        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag (::std::auto_ptr< GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_type > p);

        // GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_type > GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_traits;

        const GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_optional&
        GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn () const;

        GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_optional&
        GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn ();

        void
        GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn (const GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_type& x);

        void
        GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn (const GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_optional& x);

        // GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_type > GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_traits;

        const GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_optional&
        GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab () const;

        GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_optional&
        GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab ();

        void
        GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab (const GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_type& x);

        void
        GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab (const GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_optional& x);

        // GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_type > GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_traits;

        const GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_optional&
        GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd () const;

        GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_optional&
        GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd ();

        void
        GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd (const GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_type& x);

        void
        GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd (const GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_optional& x);

        // GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_type > GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_traits;

        const GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_optional&
        GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge () const;

        GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_optional&
        GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge ();

        void
        GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge (const GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_type& x);

        void
        GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge (const GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_optional& x);

        // GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_type > GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_traits;

        const GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_optional&
        GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab () const;

        GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_optional&
        GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab ();

        void
        GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab (const GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_type& x);

        void
        GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab (const GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_optional& x);

        // GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_type > GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_traits;

        const GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_optional&
        GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab () const;

        GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_optional&
        GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab ();

        void
        GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab (const GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_type& x);

        void
        GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab (const GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_optional& x);

        // GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_type > GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_traits;

        const GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_optional&
        GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd () const;

        GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_optional&
        GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd ();

        void
        GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd (const GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_type& x);

        void
        GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd (const GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_type > GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_traits;

        const GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20 () const;

        GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20 ();

        void
        GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20 (const GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20 (const GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_type > GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_traits;

        const GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20 () const;

        GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20 ();

        void
        GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20 (const GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20 (const GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_type > GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_traits;

        const GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_optional&
        GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always () const;

        GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_optional&
        GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always ();

        void
        GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always (const GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always (const GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_type > GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_traits;

        const GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_optional&
        GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35 () const;

        GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_optional&
        GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35 ();

        void
        GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35 (const GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35 (const GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_type > GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_traits;

        const GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20 () const;

        GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20 ();

        void
        GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20 (const GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20 (const GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_type > GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_traits;

        const GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20 () const;

        GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20 ();

        void
        GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20 (const GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20 (const GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_optional& x);

        // GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20
        //
        typedef ::xml_schema::double_ GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_type > GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_traits;

        const GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20 () const;

        GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_optional&
        GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20 ();

        void
        GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20 (const GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_type& x);

        void
        GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20 (const GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_optional& x);

        // GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44
        //
        typedef ::namespaces::Sim::SimModelCore::doubleList GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_type > GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_type, char > GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_traits;

        const GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_optional&
        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44 () const;

        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_optional&
        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44 ();

        void
        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44 (const GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_type& x);

        void
        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44 (const GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_optional& x);

        void
        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44 (::std::auto_ptr< GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_type > p);

        // GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44
        //
        typedef ::namespaces::Sim::SimModelCore::doubleList GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_type > GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_type, char > GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_traits;

        const GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_optional&
        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44 () const;

        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_optional&
        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44 ();

        void
        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44 (const GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_type& x);

        void
        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44 (const GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_optional& x);

        void
        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44 (::std::auto_ptr< GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_type > p);

        // GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44
        //
        typedef ::namespaces::Sim::SimModelCore::doubleList GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_type > GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_type, char > GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_traits;

        const GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_optional&
        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44 () const;

        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_optional&
        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44 ();

        void
        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44 (const GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_type& x);

        void
        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44 (const GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_optional& x);

        void
        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44 (::std::auto_ptr< GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_type > p);

        // Constructors.
        //
        SimGroundHeatTransferBasement (const RefId_type&);

        SimGroundHeatTransferBasement (const ::xercesc::DOMElement& e,
                                       ::xml_schema::flags f = 0,
                                       ::xml_schema::container* c = 0);

        SimGroundHeatTransferBasement (const SimGroundHeatTransferBasement& x,
                                       ::xml_schema::flags f = 0,
                                       ::xml_schema::container* c = 0);

        virtual SimGroundHeatTransferBasement*
        _clone (::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0) const;

        SimGroundHeatTransferBasement&
        operator= (const SimGroundHeatTransferBasement& x);

        virtual 
        ~SimGroundHeatTransferBasement ();

        // Implementation.
        //
        protected:
        void
        parse (::xsd::cxx::xml::dom::parser< char >&,
               ::xml_schema::flags);

        protected:
        SimGrndHeatTransBasement_DWALLWallThick_optional SimGrndHeatTransBasement_DWALLWallThick_;
        SimGrndHeatTransBasement_DSLABFlrSlabThick_optional SimGrndHeatTransBasement_DSLABFlrSlabThick_;
        SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_optional SimGrndHeatTransBasement_DGRAVXYWidthGravelPitBesideBsmtWall_;
        SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_optional SimGrndHeatTransBasement_DGRAVZNGravelDepthExtendAbvFlrSlab_;
        SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_optional SimGrndHeatTransBasement_DGRAVZPGravelDepthBelowFlrSlab_;
        GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_optional GndHeatTransf_Basement_SimParameters_F_MultiplierAdiSolution_;
        GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__optional GndHeatTransf_Basement_SimParameters_IYRS_MaxNumYearlyIterations__;
        GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_optional GndHeatTrans_Bsmt_MatlProps_NMAT_NumMatsInThisDomn_;
        GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_optional GndHeatTrans_Bsmt_MatlProps_DensityFoundWall_;
        GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_optional GndHeatTrans_Bsmt_MatlProps_DensityFlrSlab_;
        GndHeatTrans_Bsmt_MatlProps_DensityCeiling_optional GndHeatTrans_Bsmt_MatlProps_DensityCeiling_;
        GndHeatTrans_Bsmt_MatlProps_DensitySoil_optional GndHeatTrans_Bsmt_MatlProps_DensitySoil_;
        GndHeatTrans_Bsmt_MatlProps_DensityGravel_optional GndHeatTrans_Bsmt_MatlProps_DensityGravel_;
        GndHeatTrans_Bsmt_MatlProps_DensityWood_optional GndHeatTrans_Bsmt_MatlProps_DensityWood_;
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_optional GndHeatTrans_Bsmt_MatlProps_SpecHeatFoundWall_;
        GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_optional GndHeatTrans_Bsmt_MatlProps_SpecHeatFlrSlab_;
        GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_optional GndHeatTrans_Bsmt_MatlProps_SpecHeatCeiling_;
        GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_optional GndHeatTrans_Bsmt_MatlProps_SpecHeatSoil_;
        GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_optional GndHeatTrans_Bsmt_MatlProps_SpecHeatGravel_;
        GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_optional GndHeatTrans_Bsmt_MatlProps_SpecHeatWood_;
        GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_optional GndHeatTrans_Bsmt_MatlProps_ThermCondFoundWall_;
        GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_optional GndHeatTrans_Bsmt_MatlProps_ThermCondFlrSlab_;
        GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_optional GndHeatTrans_Bsmt_MatlProps_ThermCondCeiling_;
        GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_optional GndHeatTrans_Bsmt_MatlProps_ThermCondSoil_;
        GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_optional GndHeatTrans_Bsmt_MatlProps_ThermCondGravel_;
        GndHeatTrans_Bsmt_MatlProps_ThermCondWood_optional GndHeatTrans_Bsmt_MatlProps_ThermCondWood_;
        GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_optional GndHeatTrans_Bsmt_Insulation_REXTRValAnyExtInsul_;
        GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_optional GndHeatTrans_Bsmt_Insulation_INSFULL_FlagIsWallFullyInsul_;
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_optional GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoNoSnowCond_;
        GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_optional GndHeatTrans_Bsmt_SurfaceProps_ALBEDOSurfAlbedoSnowCond_;
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_optional GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissNoSnow_;
        GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_optional GndHeatTrans_Bsmt_SurfaceProps_EPSLNSurfEmissWithSnow_;
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_optional GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughNoSnowCond_;
        GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_optional GndHeatTrans_Bsmt_SurfaceProps_VEGHTSurfRoughSnowCond_;
        GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_optional GndHeatTrans_Bsmt_SurfaceProps_PETFlagPotentialEvapTransOn_;
        GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_optional GndHeatTrans_Bsmt_Interior_CONDFlagIsBsmtConded_;
        GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_optional GndHeatTrans_Bsmt_Interior_HINDownwConvOnlyHeatTransCoeff_;
        GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_optional GndHeatTrans_Bsmt_Interior_HIN_UpwardConvOnlyHeatTransCoeff_;
        GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_optional GndHeatTrans_Bsmt_Interior_HINHorzConvOnlyHeatTransCoeff_;
        GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_optional GndHeatTrans_Bsmt_Interior_HINDownwComb_ConvAndRad_HeatTransCoeff_;
        GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_optional GndHeatTrans_Bsmt_Interior_HINUpwardComb_ConvAndRad_HeatTransCoeff_;
        GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_optional GndHeatTrans_Bsmt_Interior_HINHorzComb_ConvAndRad_HeatTransCoeff_;
        GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_JanAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_FebAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_MarchAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_AprilAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_MayAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_JuneAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_JulyAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_AugAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_SepAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_OctAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_NovAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_optional GndHeatTrans_Bsmt_ComBldg_DecAvgTemp_;
        GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_optional GndHeatTrans_Bsmt_ComBldg_DailyVarSineWaveAmp_;
        GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_optional GndHeatTrans_Bsmt_EquivSlab_APRatioAreaToPerimRatioThisSlab_;
        GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_optional GndHeatTrans_Bsmt_EquivSlab_EquivSizingFlag_;
        GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_optional GndHeatTrans_Bsmt_EquivAutoGrid_ClearDistFromOutsdWallToEdge3DGndDomn_;
        GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_optional GndHeatTrans_Bsmt_EquivAutoGrid_SlabDepthThickFlrSlab_;
        GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_optional GndHeatTrans_Bsmt_EquivAutoGrid_BaseDepthDepthBsmtWallBlwGrd_;
        GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_optional GndHeatTrans_Bsmt_AutoGrid_ClearDistFromOutsdWallToEdge_;
        GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_optional GndHeatTrans_Bsmt_AutoGrid_SLABXXDimensionBldgSlab_;
        GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_optional GndHeatTrans_Bsmt_AutoGrid_SLABYYDimensionBldgSlab_;
        GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_optional GndHeatTrans_Bsmt_AutoGrid_ConcAGHtHtFoundWallAbvGrd_;
        GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_optional GndHeatTrans_Bsmt_ManualGrid_NXNumbCellsInXDir_20_;
        GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_optional GndHeatTrans_Bsmt_ManualGrid_NYNumbCellsInYDir_20_;
        GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_optional GndHeatTrans_Bsmt_ManualGrid_NZAGNumbCellsInZDir_AbvGrd_4_Always_;
        GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_optional GndHeatTrans_Bsmt_ManualGrid_NZBGNumbCellsInZDir_BelowGrd_10_35_;
        GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_optional GndHeatTrans_Bsmt_ManualGrid_IBASE_XDirCellIndlabEdge_5_20_;
        GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_optional GndHeatTrans_Bsmt_ManualGrid_JBASEYDirCellIndlabEdge_5_20_;
        GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_optional GndHeatTrans_Bsmt_ManualGrid_KBASEZDirCellIndTopFlrSlab_5_20_;
        GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_optional GndHeatTrans_Bsmt_XFACE_SlabXCoord_1_44_;
        GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_optional GndHeatTrans_Bsmt_YFACE_SlabYCoord_1_44_;
        GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_optional GndHeatTrans_Bsmt_ZFACE_SlabZCoord_1_44_;
      };
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // SIM_GROUND_HEAT_TRANSFER_BASEMENT_HXX
