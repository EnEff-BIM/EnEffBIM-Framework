// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFeatureAirFlowNetwork_Zone.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      // SimFeatureAirFlowNetwork_Zone
      // 

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_ZoneName_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_ZoneName () const
      {
        return this->SimFeatureAirFlowNetwk_ZoneName_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_ZoneName_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_ZoneName ()
      {
        return this->SimFeatureAirFlowNetwk_ZoneName_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_ZoneName (const SimFeatureAirFlowNetwk_ZoneName_type& x)
      {
        this->SimFeatureAirFlowNetwk_ZoneName_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_ZoneName (const SimFeatureAirFlowNetwk_ZoneName_optional& x)
      {
        this->SimFeatureAirFlowNetwk_ZoneName_ = x;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_ZoneName (::std::auto_ptr< SimFeatureAirFlowNetwk_ZoneName_type > x)
      {
        this->SimFeatureAirFlowNetwk_ZoneName_.set (x);
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_VentCntlMode_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlMode () const
      {
        return this->SimFeatureAirFlowNetwk_VentCntlMode_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_VentCntlMode_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlMode ()
      {
        return this->SimFeatureAirFlowNetwk_VentCntlMode_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlMode (const SimFeatureAirFlowNetwk_VentCntlMode_type& x)
      {
        this->SimFeatureAirFlowNetwk_VentCntlMode_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlMode (const SimFeatureAirFlowNetwk_VentCntlMode_optional& x)
      {
        this->SimFeatureAirFlowNetwk_VentCntlMode_ = x;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlMode (::std::auto_ptr< SimFeatureAirFlowNetwk_VentCntlMode_type > x)
      {
        this->SimFeatureAirFlowNetwk_VentCntlMode_.set (x);
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName () const
      {
        return this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName ()
      {
        return this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName (const SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_type& x)
      {
        this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName (const SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_optional& x)
      {
        this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_ = x;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName (::std::auto_ptr< SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_type > x)
      {
        this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_.set (x);
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_MinVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_MinVentOpenFactor () const
      {
        return this->SimFeatureAirFlowNetwk_MinVentOpenFactor_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_MinVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_MinVentOpenFactor ()
      {
        return this->SimFeatureAirFlowNetwk_MinVentOpenFactor_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_MinVentOpenFactor (const SimFeatureAirFlowNetwk_MinVentOpenFactor_type& x)
      {
        this->SimFeatureAirFlowNetwk_MinVentOpenFactor_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_MinVentOpenFactor (const SimFeatureAirFlowNetwk_MinVentOpenFactor_optional& x)
      {
        this->SimFeatureAirFlowNetwk_MinVentOpenFactor_ = x;
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor () const
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor ()
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_type& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_optional& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_ = x;
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor () const
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor ()
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_type& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_optional& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_ = x;
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor () const
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor ()
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_type& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_optional& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_ = x;
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor () const
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor ()
      {
        return this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_type& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor (const SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_optional& x)
      {
        this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_ = x;
      }

      const SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_VentAvailSchedName_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentAvailSchedName () const
      {
        return this->SimFeatureAirFlowNetwk_VentAvailSchedName_;
      }

      SimFeatureAirFlowNetwork_Zone::SimFeatureAirFlowNetwk_VentAvailSchedName_optional& SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentAvailSchedName ()
      {
        return this->SimFeatureAirFlowNetwk_VentAvailSchedName_;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentAvailSchedName (const SimFeatureAirFlowNetwk_VentAvailSchedName_type& x)
      {
        this->SimFeatureAirFlowNetwk_VentAvailSchedName_.set (x);
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentAvailSchedName (const SimFeatureAirFlowNetwk_VentAvailSchedName_optional& x)
      {
        this->SimFeatureAirFlowNetwk_VentAvailSchedName_ = x;
      }

      void SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwk_VentAvailSchedName (::std::auto_ptr< SimFeatureAirFlowNetwk_VentAvailSchedName_type > x)
      {
        this->SimFeatureAirFlowNetwk_VentAvailSchedName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      // SimFeatureAirFlowNetwork_Zone
      //

      SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwork_Zone (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork (RefId),
        SimFeatureAirFlowNetwk_ZoneName_ (this),
        SimFeatureAirFlowNetwk_VentCntlMode_ (this),
        SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_ (this),
        SimFeatureAirFlowNetwk_MinVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_VentAvailSchedName_ (this)
      {
      }

      SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwork_Zone (const SimFeatureAirFlowNetwork_Zone& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork (x, f, c),
        SimFeatureAirFlowNetwk_ZoneName_ (x.SimFeatureAirFlowNetwk_ZoneName_, f, this),
        SimFeatureAirFlowNetwk_VentCntlMode_ (x.SimFeatureAirFlowNetwk_VentCntlMode_, f, this),
        SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_ (x.SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_, f, this),
        SimFeatureAirFlowNetwk_MinVentOpenFactor_ (x.SimFeatureAirFlowNetwk_MinVentOpenFactor_, f, this),
        SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_ (x.SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_, f, this),
        SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_ (x.SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_, f, this),
        SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_ (x.SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_, f, this),
        SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_ (x.SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_, f, this),
        SimFeatureAirFlowNetwk_VentAvailSchedName_ (x.SimFeatureAirFlowNetwk_VentAvailSchedName_, f, this)
      {
      }

      SimFeatureAirFlowNetwork_Zone::
      SimFeatureAirFlowNetwork_Zone (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork (e, f | ::xml_schema::flags::base, c),
        SimFeatureAirFlowNetwk_ZoneName_ (this),
        SimFeatureAirFlowNetwk_VentCntlMode_ (this),
        SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_ (this),
        SimFeatureAirFlowNetwk_MinVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_ (this),
        SimFeatureAirFlowNetwk_VentAvailSchedName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFeatureAirFlowNetwork_Zone::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFeatureAirFlowNetwk_ZoneName
          //
          if (n.name () == "SimFeatureAirFlowNetwk_ZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimFeatureAirFlowNetwk_ZoneName_type > r (
              SimFeatureAirFlowNetwk_ZoneName_traits::create (i, f, this));

            if (!this->SimFeatureAirFlowNetwk_ZoneName_)
            {
              this->SimFeatureAirFlowNetwk_ZoneName_.set (r);
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_VentCntlMode
          //
          if (n.name () == "SimFeatureAirFlowNetwk_VentCntlMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimFeatureAirFlowNetwk_VentCntlMode_type > r (
              SimFeatureAirFlowNetwk_VentCntlMode_traits::create (i, f, this));

            if (!this->SimFeatureAirFlowNetwk_VentCntlMode_)
            {
              this->SimFeatureAirFlowNetwk_VentCntlMode_.set (r);
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName
          //
          if (n.name () == "SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_type > r (
              SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_traits::create (i, f, this));

            if (!this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_)
            {
              this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_.set (r);
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_MinVentOpenFactor
          //
          if (n.name () == "SimFeatureAirFlowNetwk_MinVentOpenFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimFeatureAirFlowNetwk_MinVentOpenFactor_)
            {
              this->SimFeatureAirFlowNetwk_MinVentOpenFactor_.set (SimFeatureAirFlowNetwk_MinVentOpenFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor
          //
          if (n.name () == "SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_)
            {
              this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_.set (SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor
          //
          if (n.name () == "SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_)
            {
              this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_.set (SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor
          //
          if (n.name () == "SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_)
            {
              this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_.set (SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor
          //
          if (n.name () == "SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            if (!this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_)
            {
              this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_.set (SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFeatureAirFlowNetwk_VentAvailSchedName
          //
          if (n.name () == "SimFeatureAirFlowNetwk_VentAvailSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeometry")
          {
            ::std::auto_ptr< SimFeatureAirFlowNetwk_VentAvailSchedName_type > r (
              SimFeatureAirFlowNetwk_VentAvailSchedName_traits::create (i, f, this));

            if (!this->SimFeatureAirFlowNetwk_VentAvailSchedName_)
            {
              this->SimFeatureAirFlowNetwk_VentAvailSchedName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFeatureAirFlowNetwork_Zone* SimFeatureAirFlowNetwork_Zone::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFeatureAirFlowNetwork_Zone (*this, f, c);
      }

      SimFeatureAirFlowNetwork_Zone& SimFeatureAirFlowNetwork_Zone::
      operator= (const SimFeatureAirFlowNetwork_Zone& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork& > (*this) = x;
          this->SimFeatureAirFlowNetwk_ZoneName_ = x.SimFeatureAirFlowNetwk_ZoneName_;
          this->SimFeatureAirFlowNetwk_VentCntlMode_ = x.SimFeatureAirFlowNetwk_VentCntlMode_;
          this->SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_ = x.SimFeatureAirFlowNetwk_VentCntlZoneTempSetpointSchedName_;
          this->SimFeatureAirFlowNetwk_MinVentOpenFactor_ = x.SimFeatureAirFlowNetwk_MinVentOpenFactor_;
          this->SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_ = x.SimFeatureAirFlowNetwk_door_OutdrTempDiffLowLimitForMaxVentOpenFactor_;
          this->SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_ = x.SimFeatureAirFlowNetwk_door_OutdrTempDiffUpLimitForMinVentOpenFactor_;
          this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_ = x.SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffLowLimitForMaxVentOpenFactor_;
          this->SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_ = x.SimFeatureAirFlowNetwk_door_OutdrEnthalpyDiffUpLimitForMinVentOpenFactor_;
          this->SimFeatureAirFlowNetwk_VentAvailSchedName_ = x.SimFeatureAirFlowNetwk_VentAvailSchedName_;
        }

        return *this;
      }

      SimFeatureAirFlowNetwork_Zone::
      ~SimFeatureAirFlowNetwork_Zone ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

