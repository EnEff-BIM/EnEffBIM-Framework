// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState
      // 

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Name_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Name () const
      {
        return this->SimMatLayerSet_Name_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Name_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Name ()
      {
        return this->SimMatLayerSet_Name_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Name (const SimMatLayerSet_Name_type& x)
      {
        this->SimMatLayerSet_Name_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Name (const SimMatLayerSet_Name_optional& x)
      {
        this->SimMatLayerSet_Name_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Name (::std::auto_ptr< SimMatLayerSet_Name_type > x)
      {
        this->SimMatLayerSet_Name_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_BasisType_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisType () const
      {
        return this->SimMatLayerSet_BasisType_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_BasisType_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisType ()
      {
        return this->SimMatLayerSet_BasisType_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisType (const SimMatLayerSet_BasisType_type& x)
      {
        this->SimMatLayerSet_BasisType_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisType (const SimMatLayerSet_BasisType_optional& x)
      {
        this->SimMatLayerSet_BasisType_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisType (::std::auto_ptr< SimMatLayerSet_BasisType_type > x)
      {
        this->SimMatLayerSet_BasisType_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_BasisSymmetryType_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisSymmetryType () const
      {
        return this->SimMatLayerSet_BasisSymmetryType_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_BasisSymmetryType_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisSymmetryType ()
      {
        return this->SimMatLayerSet_BasisSymmetryType_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisSymmetryType (const SimMatLayerSet_BasisSymmetryType_type& x)
      {
        this->SimMatLayerSet_BasisSymmetryType_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisSymmetryType (const SimMatLayerSet_BasisSymmetryType_optional& x)
      {
        this->SimMatLayerSet_BasisSymmetryType_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisSymmetryType (::std::auto_ptr< SimMatLayerSet_BasisSymmetryType_type > x)
      {
        this->SimMatLayerSet_BasisSymmetryType_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_WindowThermalModel_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_WindowThermalModel () const
      {
        return this->SimMatLayerSet_WindowThermalModel_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_WindowThermalModel_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_WindowThermalModel ()
      {
        return this->SimMatLayerSet_WindowThermalModel_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_WindowThermalModel (const SimMatLayerSet_WindowThermalModel_type& x)
      {
        this->SimMatLayerSet_WindowThermalModel_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_WindowThermalModel (const SimMatLayerSet_WindowThermalModel_optional& x)
      {
        this->SimMatLayerSet_WindowThermalModel_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_WindowThermalModel (::std::auto_ptr< SimMatLayerSet_WindowThermalModel_type > x)
      {
        this->SimMatLayerSet_WindowThermalModel_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_BasisMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisMatrixName () const
      {
        return this->SimMatLayerSet_BasisMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_BasisMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisMatrixName ()
      {
        return this->SimMatLayerSet_BasisMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisMatrixName (const SimMatLayerSet_BasisMatrixName_type& x)
      {
        this->SimMatLayerSet_BasisMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisMatrixName (const SimMatLayerSet_BasisMatrixName_optional& x)
      {
        this->SimMatLayerSet_BasisMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_BasisMatrixName (::std::auto_ptr< SimMatLayerSet_BasisMatrixName_type > x)
      {
        this->SimMatLayerSet_BasisMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName () const
      {
        return this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName ()
      {
        return this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName (const SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_type& x)
      {
        this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName (const SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_optional& x)
      {
        this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName (::std::auto_ptr< SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_type > x)
      {
        this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName () const
      {
        return this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName ()
      {
        return this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName (const SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_type& x)
      {
        this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName (const SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_optional& x)
      {
        this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName (::std::auto_ptr< SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_type > x)
      {
        this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName () const
      {
        return this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName ()
      {
        return this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName (const SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_type& x)
      {
        this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName (const SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_optional& x)
      {
        this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName (::std::auto_ptr< SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_type > x)
      {
        this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName () const
      {
        return this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName ()
      {
        return this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName (const SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_type& x)
      {
        this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName (const SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_optional& x)
      {
        this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName (::std::auto_ptr< SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_type > x)
      {
        this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_OutsideLayerMatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerMatlName () const
      {
        return this->SimMatLayerSet_OutsideLayerMatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_OutsideLayerMatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerMatlName ()
      {
        return this->SimMatLayerSet_OutsideLayerMatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerMatlName (const SimMatLayerSet_OutsideLayerMatlName_type& x)
      {
        this->SimMatLayerSet_OutsideLayerMatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerMatlName (const SimMatLayerSet_OutsideLayerMatlName_optional& x)
      {
        this->SimMatLayerSet_OutsideLayerMatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerMatlName (::std::auto_ptr< SimMatLayerSet_OutsideLayerMatlName_type > x)
      {
        this->SimMatLayerSet_OutsideLayerMatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName (const SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName (const SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName (const SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName (const SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer2MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2MatlName () const
      {
        return this->SimMatLayerSet_Layer2MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer2MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2MatlName ()
      {
        return this->SimMatLayerSet_Layer2MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2MatlName (const SimMatLayerSet_Layer2MatlName_type& x)
      {
        this->SimMatLayerSet_Layer2MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2MatlName (const SimMatLayerSet_Layer2MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer2MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2MatlName (::std::auto_ptr< SimMatLayerSet_Layer2MatlName_type > x)
      {
        this->SimMatLayerSet_Layer2MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer2DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer3MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3MatlName () const
      {
        return this->SimMatLayerSet_Layer3MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer3MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3MatlName ()
      {
        return this->SimMatLayerSet_Layer3MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3MatlName (const SimMatLayerSet_Layer3MatlName_type& x)
      {
        this->SimMatLayerSet_Layer3MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3MatlName (const SimMatLayerSet_Layer3MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer3MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3MatlName (::std::auto_ptr< SimMatLayerSet_Layer3MatlName_type > x)
      {
        this->SimMatLayerSet_Layer3MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer3DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer4MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4MatlName () const
      {
        return this->SimMatLayerSet_Layer4MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer4MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4MatlName ()
      {
        return this->SimMatLayerSet_Layer4MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4MatlName (const SimMatLayerSet_Layer4MatlName_type& x)
      {
        this->SimMatLayerSet_Layer4MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4MatlName (const SimMatLayerSet_Layer4MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer4MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4MatlName (::std::auto_ptr< SimMatLayerSet_Layer4MatlName_type > x)
      {
        this->SimMatLayerSet_Layer4MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer4DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer5MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5MatlName () const
      {
        return this->SimMatLayerSet_Layer5MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer5MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5MatlName ()
      {
        return this->SimMatLayerSet_Layer5MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5MatlName (const SimMatLayerSet_Layer5MatlName_type& x)
      {
        this->SimMatLayerSet_Layer5MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5MatlName (const SimMatLayerSet_Layer5MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer5MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5MatlName (::std::auto_ptr< SimMatLayerSet_Layer5MatlName_type > x)
      {
        this->SimMatLayerSet_Layer5MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer5DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer6MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6MatlName () const
      {
        return this->SimMatLayerSet_Layer6MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer6MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6MatlName ()
      {
        return this->SimMatLayerSet_Layer6MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6MatlName (const SimMatLayerSet_Layer6MatlName_type& x)
      {
        this->SimMatLayerSet_Layer6MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6MatlName (const SimMatLayerSet_Layer6MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer6MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6MatlName (::std::auto_ptr< SimMatLayerSet_Layer6MatlName_type > x)
      {
        this->SimMatLayerSet_Layer6MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer6DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer7MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7MatlName () const
      {
        return this->SimMatLayerSet_Layer7MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer7MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7MatlName ()
      {
        return this->SimMatLayerSet_Layer7MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7MatlName (const SimMatLayerSet_Layer7MatlName_type& x)
      {
        this->SimMatLayerSet_Layer7MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7MatlName (const SimMatLayerSet_Layer7MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer7MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7MatlName (::std::auto_ptr< SimMatLayerSet_Layer7MatlName_type > x)
      {
        this->SimMatLayerSet_Layer7MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer7DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer8MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8MatlName () const
      {
        return this->SimMatLayerSet_Layer8MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer8MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8MatlName ()
      {
        return this->SimMatLayerSet_Layer8MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8MatlName (const SimMatLayerSet_Layer8MatlName_type& x)
      {
        this->SimMatLayerSet_Layer8MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8MatlName (const SimMatLayerSet_Layer8MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer8MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8MatlName (::std::auto_ptr< SimMatLayerSet_Layer8MatlName_type > x)
      {
        this->SimMatLayerSet_Layer8MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer8DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer9MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9MatlName () const
      {
        return this->SimMatLayerSet_Layer9MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer9MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9MatlName ()
      {
        return this->SimMatLayerSet_Layer9MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9MatlName (const SimMatLayerSet_Layer9MatlName_type& x)
      {
        this->SimMatLayerSet_Layer9MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9MatlName (const SimMatLayerSet_Layer9MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer9MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9MatlName (::std::auto_ptr< SimMatLayerSet_Layer9MatlName_type > x)
      {
        this->SimMatLayerSet_Layer9MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer9DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer10MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10MatlName () const
      {
        return this->SimMatLayerSet_Layer10MatlName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer10MatlName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10MatlName ()
      {
        return this->SimMatLayerSet_Layer10MatlName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10MatlName (const SimMatLayerSet_Layer10MatlName_type& x)
      {
        this->SimMatLayerSet_Layer10MatlName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10MatlName (const SimMatLayerSet_Layer10MatlName_optional& x)
      {
        this->SimMatLayerSet_Layer10MatlName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10MatlName (::std::auto_ptr< SimMatLayerSet_Layer10MatlName_type > x)
      {
        this->SimMatLayerSet_Layer10MatlName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName (const SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectBackAbsoptMatrixName () const
      {
        return this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectBackAbsoptMatrixName ()
      {
        return this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_type& x)
      {
        this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectBackAbsoptMatrixName (const SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_optional& x)
      {
        this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMatLayerSet_Layer10DirectBackAbsoptMatrixName (::std::auto_ptr< SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_type > x)
      {
        this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_standard_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_standard () const
      {
        return this->WindowThermalModel_Params_standard_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_standard_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_standard ()
      {
        return this->WindowThermalModel_Params_standard_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_standard (const WindowThermalModel_Params_standard_type& x)
      {
        this->WindowThermalModel_Params_standard_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_standard (const WindowThermalModel_Params_standard_optional& x)
      {
        this->WindowThermalModel_Params_standard_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_standard (::std::auto_ptr< WindowThermalModel_Params_standard_type > x)
      {
        this->WindowThermalModel_Params_standard_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_ThermalModel_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_ThermalModel () const
      {
        return this->WindowThermalModel_Params_ThermalModel_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_ThermalModel_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_ThermalModel ()
      {
        return this->WindowThermalModel_Params_ThermalModel_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_ThermalModel (const WindowThermalModel_Params_ThermalModel_type& x)
      {
        this->WindowThermalModel_Params_ThermalModel_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_ThermalModel (const WindowThermalModel_Params_ThermalModel_optional& x)
      {
        this->WindowThermalModel_Params_ThermalModel_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_ThermalModel (::std::auto_ptr< WindowThermalModel_Params_ThermalModel_type > x)
      {
        this->WindowThermalModel_Params_ThermalModel_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_SDScalar_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_SDScalar () const
      {
        return this->WindowThermalModel_Params_SDScalar_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_SDScalar_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_SDScalar ()
      {
        return this->WindowThermalModel_Params_SDScalar_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_SDScalar (const WindowThermalModel_Params_SDScalar_type& x)
      {
        this->WindowThermalModel_Params_SDScalar_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_SDScalar (const WindowThermalModel_Params_SDScalar_optional& x)
      {
        this->WindowThermalModel_Params_SDScalar_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_DeflectionModel_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_DeflectionModel () const
      {
        return this->WindowThermalModel_Params_DeflectionModel_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_DeflectionModel_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_DeflectionModel ()
      {
        return this->WindowThermalModel_Params_DeflectionModel_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_DeflectionModel (const WindowThermalModel_Params_DeflectionModel_type& x)
      {
        this->WindowThermalModel_Params_DeflectionModel_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_DeflectionModel (const WindowThermalModel_Params_DeflectionModel_optional& x)
      {
        this->WindowThermalModel_Params_DeflectionModel_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_DeflectionModel (::std::auto_ptr< WindowThermalModel_Params_DeflectionModel_type > x)
      {
        this->WindowThermalModel_Params_DeflectionModel_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_VacuumPressureLimit_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_VacuumPressureLimit () const
      {
        return this->WindowThermalModel_Params_VacuumPressureLimit_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_VacuumPressureLimit_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_VacuumPressureLimit ()
      {
        return this->WindowThermalModel_Params_VacuumPressureLimit_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_VacuumPressureLimit (const WindowThermalModel_Params_VacuumPressureLimit_type& x)
      {
        this->WindowThermalModel_Params_VacuumPressureLimit_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_VacuumPressureLimit (const WindowThermalModel_Params_VacuumPressureLimit_optional& x)
      {
        this->WindowThermalModel_Params_VacuumPressureLimit_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_InitialTemperature_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialTemperature () const
      {
        return this->WindowThermalModel_Params_InitialTemperature_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_InitialTemperature_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialTemperature ()
      {
        return this->WindowThermalModel_Params_InitialTemperature_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialTemperature (const WindowThermalModel_Params_InitialTemperature_type& x)
      {
        this->WindowThermalModel_Params_InitialTemperature_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialTemperature (const WindowThermalModel_Params_InitialTemperature_optional& x)
      {
        this->WindowThermalModel_Params_InitialTemperature_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_InitialPressure_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialPressure () const
      {
        return this->WindowThermalModel_Params_InitialPressure_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::WindowThermalModel_Params_InitialPressure_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialPressure ()
      {
        return this->WindowThermalModel_Params_InitialPressure_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialPressure (const WindowThermalModel_Params_InitialPressure_type& x)
      {
        this->WindowThermalModel_Params_InitialPressure_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      WindowThermalModel_Params_InitialPressure (const WindowThermalModel_Params_InitialPressure_optional& x)
      {
        this->WindowThermalModel_Params_InitialPressure_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::Matrix_TwoDimension_NumberofRows_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofRows () const
      {
        return this->Matrix_TwoDimension_NumberofRows_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::Matrix_TwoDimension_NumberofRows_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofRows ()
      {
        return this->Matrix_TwoDimension_NumberofRows_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofRows (const Matrix_TwoDimension_NumberofRows_type& x)
      {
        this->Matrix_TwoDimension_NumberofRows_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofRows (const Matrix_TwoDimension_NumberofRows_optional& x)
      {
        this->Matrix_TwoDimension_NumberofRows_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::Matrix_TwoDimension_NumberofColumns_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofColumns () const
      {
        return this->Matrix_TwoDimension_NumberofColumns_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::Matrix_TwoDimension_NumberofColumns_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofColumns ()
      {
        return this->Matrix_TwoDimension_NumberofColumns_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofColumns (const Matrix_TwoDimension_NumberofColumns_type& x)
      {
        this->Matrix_TwoDimension_NumberofColumns_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_NumberofColumns (const Matrix_TwoDimension_NumberofColumns_optional& x)
      {
        this->Matrix_TwoDimension_NumberofColumns_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::Matrix_TwoDimension_Value_1_2500_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_Value_1_2500 () const
      {
        return this->Matrix_TwoDimension_Value_1_2500_;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::Matrix_TwoDimension_Value_1_2500_optional& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_Value_1_2500 ()
      {
        return this->Matrix_TwoDimension_Value_1_2500_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_Value_1_2500 (const Matrix_TwoDimension_Value_1_2500_type& x)
      {
        this->Matrix_TwoDimension_Value_1_2500_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_Value_1_2500 (const Matrix_TwoDimension_Value_1_2500_optional& x)
      {
        this->Matrix_TwoDimension_Value_1_2500_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      Matrix_TwoDimension_Value_1_2500 (::std::auto_ptr< Matrix_TwoDimension_Value_1_2500_type > x)
      {
        this->Matrix_TwoDimension_Value_1_2500_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      // SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState
      //

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState (const RefId_type& RefId)
      : ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (RefId),
        SimMatLayerSet_Name_ (this),
        SimMatLayerSet_BasisType_ (this),
        SimMatLayerSet_BasisSymmetryType_ (this),
        SimMatLayerSet_WindowThermalModel_ (this),
        SimMatLayerSet_BasisMatrixName_ (this),
        SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_ (this),
        SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_ (this),
        SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_ (this),
        SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_ (this),
        SimMatLayerSet_OutsideLayerMatlName_ (this),
        SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer2MatlName_ (this),
        SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer3MatlName_ (this),
        SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer4MatlName_ (this),
        SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer5MatlName_ (this),
        SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer6MatlName_ (this),
        SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer7MatlName_ (this),
        SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer8MatlName_ (this),
        SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer9MatlName_ (this),
        SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer10MatlName_ (this),
        SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_ (this),
        WindowThermalModel_Params_standard_ (this),
        WindowThermalModel_Params_ThermalModel_ (this),
        WindowThermalModel_Params_SDScalar_ (this),
        WindowThermalModel_Params_DeflectionModel_ (this),
        WindowThermalModel_Params_VacuumPressureLimit_ (this),
        WindowThermalModel_Params_InitialTemperature_ (this),
        WindowThermalModel_Params_InitialPressure_ (this),
        Matrix_TwoDimension_NumberofRows_ (this),
        Matrix_TwoDimension_NumberofColumns_ (this),
        Matrix_TwoDimension_Value_1_2500_ (this)
      {
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState (const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState& x,
                                                                    ::xml_schema::flags f,
                                                                    ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (x, f, c),
        SimMatLayerSet_Name_ (x.SimMatLayerSet_Name_, f, this),
        SimMatLayerSet_BasisType_ (x.SimMatLayerSet_BasisType_, f, this),
        SimMatLayerSet_BasisSymmetryType_ (x.SimMatLayerSet_BasisSymmetryType_, f, this),
        SimMatLayerSet_WindowThermalModel_ (x.SimMatLayerSet_WindowThermalModel_, f, this),
        SimMatLayerSet_BasisMatrixName_ (x.SimMatLayerSet_BasisMatrixName_, f, this),
        SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_ (x.SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_, f, this),
        SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_ (x.SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_, f, this),
        SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_ (x.SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_, f, this),
        SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_ (x.SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_, f, this),
        SimMatLayerSet_OutsideLayerMatlName_ (x.SimMatLayerSet_OutsideLayerMatlName_, f, this),
        SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_ (x.SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer2MatlName_ (x.SimMatLayerSet_Layer2MatlName_, f, this),
        SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer3MatlName_ (x.SimMatLayerSet_Layer3MatlName_, f, this),
        SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer4MatlName_ (x.SimMatLayerSet_Layer4MatlName_, f, this),
        SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer5MatlName_ (x.SimMatLayerSet_Layer5MatlName_, f, this),
        SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer6MatlName_ (x.SimMatLayerSet_Layer6MatlName_, f, this),
        SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer7MatlName_ (x.SimMatLayerSet_Layer7MatlName_, f, this),
        SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer8MatlName_ (x.SimMatLayerSet_Layer8MatlName_, f, this),
        SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer9MatlName_ (x.SimMatLayerSet_Layer9MatlName_, f, this),
        SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer10MatlName_ (x.SimMatLayerSet_Layer10MatlName_, f, this),
        SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_ (x.SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_, f, this),
        SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_ (x.SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_, f, this),
        WindowThermalModel_Params_standard_ (x.WindowThermalModel_Params_standard_, f, this),
        WindowThermalModel_Params_ThermalModel_ (x.WindowThermalModel_Params_ThermalModel_, f, this),
        WindowThermalModel_Params_SDScalar_ (x.WindowThermalModel_Params_SDScalar_, f, this),
        WindowThermalModel_Params_DeflectionModel_ (x.WindowThermalModel_Params_DeflectionModel_, f, this),
        WindowThermalModel_Params_VacuumPressureLimit_ (x.WindowThermalModel_Params_VacuumPressureLimit_, f, this),
        WindowThermalModel_Params_InitialTemperature_ (x.WindowThermalModel_Params_InitialTemperature_, f, this),
        WindowThermalModel_Params_InitialPressure_ (x.WindowThermalModel_Params_InitialPressure_, f, this),
        Matrix_TwoDimension_NumberofRows_ (x.Matrix_TwoDimension_NumberofRows_, f, this),
        Matrix_TwoDimension_NumberofColumns_ (x.Matrix_TwoDimension_NumberofColumns_, f, this),
        Matrix_TwoDimension_Value_1_2500_ (x.Matrix_TwoDimension_Value_1_2500_, f, this)
      {
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState (const ::xercesc::DOMElement& e,
                                                                    ::xml_schema::flags f,
                                                                    ::xml_schema::container* c)
      : ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (e, f | ::xml_schema::flags::base, c),
        SimMatLayerSet_Name_ (this),
        SimMatLayerSet_BasisType_ (this),
        SimMatLayerSet_BasisSymmetryType_ (this),
        SimMatLayerSet_WindowThermalModel_ (this),
        SimMatLayerSet_BasisMatrixName_ (this),
        SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_ (this),
        SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_ (this),
        SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_ (this),
        SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_ (this),
        SimMatLayerSet_OutsideLayerMatlName_ (this),
        SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer2MatlName_ (this),
        SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer3MatlName_ (this),
        SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer4MatlName_ (this),
        SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer5MatlName_ (this),
        SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer6MatlName_ (this),
        SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer7MatlName_ (this),
        SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer8MatlName_ (this),
        SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer9MatlName_ (this),
        SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer10MatlName_ (this),
        SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_ (this),
        SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_ (this),
        WindowThermalModel_Params_standard_ (this),
        WindowThermalModel_Params_ThermalModel_ (this),
        WindowThermalModel_Params_SDScalar_ (this),
        WindowThermalModel_Params_DeflectionModel_ (this),
        WindowThermalModel_Params_VacuumPressureLimit_ (this),
        WindowThermalModel_Params_InitialTemperature_ (this),
        WindowThermalModel_Params_InitialPressure_ (this),
        Matrix_TwoDimension_NumberofRows_ (this),
        Matrix_TwoDimension_NumberofColumns_ (this),
        Matrix_TwoDimension_Value_1_2500_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimMatLayerSet_Name
          //
          if (n.name () == "SimMatLayerSet_Name" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Name_type > r (
              SimMatLayerSet_Name_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Name_)
            {
              this->SimMatLayerSet_Name_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_BasisType
          //
          if (n.name () == "SimMatLayerSet_BasisType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_BasisType_type > r (
              SimMatLayerSet_BasisType_traits::create (i, f, this));

            if (!this->SimMatLayerSet_BasisType_)
            {
              this->SimMatLayerSet_BasisType_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_BasisSymmetryType
          //
          if (n.name () == "SimMatLayerSet_BasisSymmetryType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_BasisSymmetryType_type > r (
              SimMatLayerSet_BasisSymmetryType_traits::create (i, f, this));

            if (!this->SimMatLayerSet_BasisSymmetryType_)
            {
              this->SimMatLayerSet_BasisSymmetryType_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_WindowThermalModel
          //
          if (n.name () == "SimMatLayerSet_WindowThermalModel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_WindowThermalModel_type > r (
              SimMatLayerSet_WindowThermalModel_traits::create (i, f, this));

            if (!this->SimMatLayerSet_WindowThermalModel_)
            {
              this->SimMatLayerSet_WindowThermalModel_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_BasisMatrixName
          //
          if (n.name () == "SimMatLayerSet_BasisMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_BasisMatrixName_type > r (
              SimMatLayerSet_BasisMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_BasisMatrixName_)
            {
              this->SimMatLayerSet_BasisMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName
          //
          if (n.name () == "SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_type > r (
              SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_)
            {
              this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName
          //
          if (n.name () == "SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_type > r (
              SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_)
            {
              this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName
          //
          if (n.name () == "SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_type > r (
              SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_)
            {
              this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName
          //
          if (n.name () == "SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_type > r (
              SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_)
            {
              this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_OutsideLayerMatlName
          //
          if (n.name () == "SimMatLayerSet_OutsideLayerMatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_OutsideLayerMatlName_type > r (
              SimMatLayerSet_OutsideLayerMatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_OutsideLayerMatlName_)
            {
              this->SimMatLayerSet_OutsideLayerMatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer2MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer2MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer2MatlName_type > r (
              SimMatLayerSet_Layer2MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer2MatlName_)
            {
              this->SimMatLayerSet_Layer2MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer2DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer2DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer3MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer3MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer3MatlName_type > r (
              SimMatLayerSet_Layer3MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer3MatlName_)
            {
              this->SimMatLayerSet_Layer3MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer3DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer3DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer4MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer4MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer4MatlName_type > r (
              SimMatLayerSet_Layer4MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer4MatlName_)
            {
              this->SimMatLayerSet_Layer4MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer4DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer4DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer5MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer5MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer5MatlName_type > r (
              SimMatLayerSet_Layer5MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer5MatlName_)
            {
              this->SimMatLayerSet_Layer5MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer5DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer5DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer6MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer6MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer6MatlName_type > r (
              SimMatLayerSet_Layer6MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer6MatlName_)
            {
              this->SimMatLayerSet_Layer6MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer6DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer6DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer7MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer7MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer7MatlName_type > r (
              SimMatLayerSet_Layer7MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer7MatlName_)
            {
              this->SimMatLayerSet_Layer7MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer7DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer7DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer8MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer8MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer8MatlName_type > r (
              SimMatLayerSet_Layer8MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer8MatlName_)
            {
              this->SimMatLayerSet_Layer8MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer8DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer8DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer9MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer9MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer9MatlName_type > r (
              SimMatLayerSet_Layer9MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer9MatlName_)
            {
              this->SimMatLayerSet_Layer9MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer9DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer9DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer10MatlName
          //
          if (n.name () == "SimMatLayerSet_Layer10MatlName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer10MatlName_type > r (
              SimMatLayerSet_Layer10MatlName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer10MatlName_)
            {
              this->SimMatLayerSet_Layer10MatlName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_Layer10DirectBackAbsoptMatrixName
          //
          if (n.name () == "SimMatLayerSet_Layer10DirectBackAbsoptMatrixName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_type > r (
              SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_)
            {
              this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_.set (r);
              continue;
            }
          }

          // WindowThermalModel_Params_standard
          //
          if (n.name () == "WindowThermalModel_Params_standard" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< WindowThermalModel_Params_standard_type > r (
              WindowThermalModel_Params_standard_traits::create (i, f, this));

            if (!this->WindowThermalModel_Params_standard_)
            {
              this->WindowThermalModel_Params_standard_.set (r);
              continue;
            }
          }

          // WindowThermalModel_Params_ThermalModel
          //
          if (n.name () == "WindowThermalModel_Params_ThermalModel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< WindowThermalModel_Params_ThermalModel_type > r (
              WindowThermalModel_Params_ThermalModel_traits::create (i, f, this));

            if (!this->WindowThermalModel_Params_ThermalModel_)
            {
              this->WindowThermalModel_Params_ThermalModel_.set (r);
              continue;
            }
          }

          // WindowThermalModel_Params_SDScalar
          //
          if (n.name () == "WindowThermalModel_Params_SDScalar" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->WindowThermalModel_Params_SDScalar_)
            {
              this->WindowThermalModel_Params_SDScalar_.set (WindowThermalModel_Params_SDScalar_traits::create (i, f, this));
              continue;
            }
          }

          // WindowThermalModel_Params_DeflectionModel
          //
          if (n.name () == "WindowThermalModel_Params_DeflectionModel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< WindowThermalModel_Params_DeflectionModel_type > r (
              WindowThermalModel_Params_DeflectionModel_traits::create (i, f, this));

            if (!this->WindowThermalModel_Params_DeflectionModel_)
            {
              this->WindowThermalModel_Params_DeflectionModel_.set (r);
              continue;
            }
          }

          // WindowThermalModel_Params_VacuumPressureLimit
          //
          if (n.name () == "WindowThermalModel_Params_VacuumPressureLimit" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->WindowThermalModel_Params_VacuumPressureLimit_)
            {
              this->WindowThermalModel_Params_VacuumPressureLimit_.set (WindowThermalModel_Params_VacuumPressureLimit_traits::create (i, f, this));
              continue;
            }
          }

          // WindowThermalModel_Params_InitialTemperature
          //
          if (n.name () == "WindowThermalModel_Params_InitialTemperature" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->WindowThermalModel_Params_InitialTemperature_)
            {
              this->WindowThermalModel_Params_InitialTemperature_.set (WindowThermalModel_Params_InitialTemperature_traits::create (i, f, this));
              continue;
            }
          }

          // WindowThermalModel_Params_InitialPressure
          //
          if (n.name () == "WindowThermalModel_Params_InitialPressure" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->WindowThermalModel_Params_InitialPressure_)
            {
              this->WindowThermalModel_Params_InitialPressure_.set (WindowThermalModel_Params_InitialPressure_traits::create (i, f, this));
              continue;
            }
          }

          // Matrix_TwoDimension_NumberofRows
          //
          if (n.name () == "Matrix_TwoDimension_NumberofRows" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->Matrix_TwoDimension_NumberofRows_)
            {
              this->Matrix_TwoDimension_NumberofRows_.set (Matrix_TwoDimension_NumberofRows_traits::create (i, f, this));
              continue;
            }
          }

          // Matrix_TwoDimension_NumberofColumns
          //
          if (n.name () == "Matrix_TwoDimension_NumberofColumns" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            if (!this->Matrix_TwoDimension_NumberofColumns_)
            {
              this->Matrix_TwoDimension_NumberofColumns_.set (Matrix_TwoDimension_NumberofColumns_traits::create (i, f, this));
              continue;
            }
          }

          // Matrix_TwoDimension_Value_1_2500
          //
          if (n.name () == "Matrix_TwoDimension_Value_1_2500" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/ResourcesGeneral")
          {
            ::std::auto_ptr< Matrix_TwoDimension_Value_1_2500_type > r (
              Matrix_TwoDimension_Value_1_2500_traits::create (i, f, this));

            if (!this->Matrix_TwoDimension_Value_1_2500_)
            {
              this->Matrix_TwoDimension_Value_1_2500_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState* SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState (*this, f, c);
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState& SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      operator= (const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet& > (*this) = x;
          this->SimMatLayerSet_Name_ = x.SimMatLayerSet_Name_;
          this->SimMatLayerSet_BasisType_ = x.SimMatLayerSet_BasisType_;
          this->SimMatLayerSet_BasisSymmetryType_ = x.SimMatLayerSet_BasisSymmetryType_;
          this->SimMatLayerSet_WindowThermalModel_ = x.SimMatLayerSet_WindowThermalModel_;
          this->SimMatLayerSet_BasisMatrixName_ = x.SimMatLayerSet_BasisMatrixName_;
          this->SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_ = x.SimMatLayerSet_SolarOpticalComplexFrontTransmitMatrixName_;
          this->SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_ = x.SimMatLayerSet_SolarOpticalComplexBackReflectMatrixName_;
          this->SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_ = x.SimMatLayerSet_VisibleOpticalComplexFrontTransmitMatrixName_;
          this->SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_ = x.SimMatLayerSet_VisibleOpticalComplexBackTransmitMatrixName_;
          this->SimMatLayerSet_OutsideLayerMatlName_ = x.SimMatLayerSet_OutsideLayerMatlName_;
          this->SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_OutsideLayerDirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_ = x.SimMatLayerSet_OutsideLayerDirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer2MatlName_ = x.SimMatLayerSet_Layer2MatlName_;
          this->SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer2DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer2DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer3MatlName_ = x.SimMatLayerSet_Layer3MatlName_;
          this->SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer3DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer3DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer4MatlName_ = x.SimMatLayerSet_Layer4MatlName_;
          this->SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer4DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer4DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer5MatlName_ = x.SimMatLayerSet_Layer5MatlName_;
          this->SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer5DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer5DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer6MatlName_ = x.SimMatLayerSet_Layer6MatlName_;
          this->SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer6DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer6DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer7MatlName_ = x.SimMatLayerSet_Layer7MatlName_;
          this->SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer7DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer7DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer8MatlName_ = x.SimMatLayerSet_Layer8MatlName_;
          this->SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer8DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer8DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer9MatlName_ = x.SimMatLayerSet_Layer9MatlName_;
          this->SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer9DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer9DirectBackAbsoptMatrixName_;
          this->SimMatLayerSet_Layer10MatlName_ = x.SimMatLayerSet_Layer10MatlName_;
          this->SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_ = x.SimMatLayerSet_Layer10DirectFrontAbsoptMatrixName_;
          this->SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_ = x.SimMatLayerSet_Layer10DirectBackAbsoptMatrixName_;
          this->WindowThermalModel_Params_standard_ = x.WindowThermalModel_Params_standard_;
          this->WindowThermalModel_Params_ThermalModel_ = x.WindowThermalModel_Params_ThermalModel_;
          this->WindowThermalModel_Params_SDScalar_ = x.WindowThermalModel_Params_SDScalar_;
          this->WindowThermalModel_Params_DeflectionModel_ = x.WindowThermalModel_Params_DeflectionModel_;
          this->WindowThermalModel_Params_VacuumPressureLimit_ = x.WindowThermalModel_Params_VacuumPressureLimit_;
          this->WindowThermalModel_Params_InitialTemperature_ = x.WindowThermalModel_Params_InitialTemperature_;
          this->WindowThermalModel_Params_InitialPressure_ = x.WindowThermalModel_Params_InitialPressure_;
          this->Matrix_TwoDimension_NumberofRows_ = x.Matrix_TwoDimension_NumberofRows_;
          this->Matrix_TwoDimension_NumberofColumns_ = x.Matrix_TwoDimension_NumberofColumns_;
          this->Matrix_TwoDimension_Value_1_2500_ = x.Matrix_TwoDimension_Value_1_2500_;
        }

        return *this;
      }

      SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState::
      ~SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

