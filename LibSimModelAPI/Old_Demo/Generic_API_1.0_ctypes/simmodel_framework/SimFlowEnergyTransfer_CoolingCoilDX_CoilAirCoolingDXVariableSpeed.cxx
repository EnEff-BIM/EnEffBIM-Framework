// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed.hxx"

#include "doublelist.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed
      // 

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName () const
      {
        return this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName ()
      {
        return this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type& x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CondAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CondAirInletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CondAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CondAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName (const SimFlowEnergyTrans_CondAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CondAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName (const SimFlowEnergyTrans_CondAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CondAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CondAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CondType_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondType () const
      {
        return this->SimFlowEnergyTrans_CondType_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CondType_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondType ()
      {
        return this->SimFlowEnergyTrans_CondType_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondType (const SimFlowEnergyTrans_CondType_type& x)
      {
        this->SimFlowEnergyTrans_CondType_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondType (const SimFlowEnergyTrans_CondType_optional& x)
      {
        this->SimFlowEnergyTrans_CondType_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CondType (::std::auto_ptr< SimFlowEnergyTrans_CondType_type > x)
      {
        this->SimFlowEnergyTrans_CondType_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump () const
      {
        return this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump ()
      {
        return this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump (const SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_type& x)
      {
        this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump (const SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional& x)
      {
        this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap () const
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap ()
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_SupWaterStoTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName () const
      {
        return this->SimFlowEnergyTrans_SupWaterStoTankName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_SupWaterStoTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName ()
      {
        return this->SimFlowEnergyTrans_SupWaterStoTankName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName (const SimFlowEnergyTrans_SupWaterStoTankName_type& x)
      {
        this->SimFlowEnergyTrans_SupWaterStoTankName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName (const SimFlowEnergyTrans_SupWaterStoTankName_optional& x)
      {
        this->SimFlowEnergyTrans_SupWaterStoTankName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName (::std::auto_ptr< SimFlowEnergyTrans_SupWaterStoTankName_type > x)
      {
        this->SimFlowEnergyTrans_SupWaterStoTankName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_BasinHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatCap () const
      {
        return this->SimFlowEnergyTrans_BasinHeatCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_BasinHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatCap ()
      {
        return this->SimFlowEnergyTrans_BasinHeatCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatCap (const SimFlowEnergyTrans_BasinHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_BasinHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatCap (const SimFlowEnergyTrans_BasinHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_BasinHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp () const
      {
        return this->SimFlowEnergyTrans_BasinHeatSetpointTemp_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp ()
      {
        return this->SimFlowEnergyTrans_BasinHeatSetpointTemp_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp (const SimFlowEnergyTrans_BasinHeatSetpointTemp_type& x)
      {
        this->SimFlowEnergyTrans_BasinHeatSetpointTemp_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp (const SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& x)
      {
        this->SimFlowEnergyTrans_BasinHeatSetpointTemp_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_BasinHeatOperatSchedName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName () const
      {
        return this->SimFlowEnergyTrans_BasinHeatOperatSchedName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_BasinHeatOperatSchedName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName ()
      {
        return this->SimFlowEnergyTrans_BasinHeatOperatSchedName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName (const SimFlowEnergyTrans_BasinHeatOperatSchedName_type& x)
      {
        this->SimFlowEnergyTrans_BasinHeatOperatSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName (const SimFlowEnergyTrans_BasinHeatOperatSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_BasinHeatOperatSchedName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName (::std::auto_ptr< SimFlowEnergyTrans_BasinHeatOperatSchedName_type > x)
      {
        this->SimFlowEnergyTrans_BasinHeatOperatSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds () const
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds ()
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_type& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_optional& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_IndoorAirInletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_IndoorAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName (const SimFlowEnergyTrans_IndoorAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName (const SimFlowEnergyTrans_IndoorAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_IndoorAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_IndoorAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_IndoorAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (const SimFlowEnergyTrans_IndoorAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (const SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_IndoorAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_NominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_NominalSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_NominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_NominalSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel (const SimFlowEnergyTrans_NominalSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_NominalSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel (const SimFlowEnergyTrans_NominalSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_NominalSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel (const SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel (const SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel (const SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel (const SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil () const
      {
        return this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil ()
      {
        return this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil (const SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_type& x)
      {
        this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil (const SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_optional& x)
      {
        this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap () const
      {
        return this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap ()
      {
        return this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap (const SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_type& x)
      {
        this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap (const SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_optional& x)
      {
        this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (const SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (const SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond () const
      {
        return this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond ()
      {
        return this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond (const SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_type& x)
      {
        this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond (const SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_optional& x)
      {
        this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond (::std::auto_ptr< SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_type > x)
      {
        this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond () const
      {
        return this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond ()
      {
        return this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond (const SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_type& x)
      {
        this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond (const SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_optional& x)
      {
        this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond (::std::auto_ptr< SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_type > x)
      {
        this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed
      //

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (RefId),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (this),
        SimFlowEnergyTrans_CondType_ (this),
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (this),
        SimFlowEnergyTrans_BasinHeatCap_ (this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_ (this),
        SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_ (this),
        SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed& x,
                                                                         ::xml_schema::flags f,
                                                                         ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (x, f, c),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (x.SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_, f, this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (x.SimFlowEnergyTrans_CondAirInletNodeName_, f, this),
        SimFlowEnergyTrans_CondType_ (x.SimFlowEnergyTrans_CondType_, f, this),
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_ (x.SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_, f, this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (x.SimFlowEnergyTrans_CrankcaseHeatCap_, f, this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_, f, this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (x.SimFlowEnergyTrans_SupWaterStoTankName_, f, this),
        SimFlowEnergyTrans_BasinHeatCap_ (x.SimFlowEnergyTrans_BasinHeatCap_, f, this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (x.SimFlowEnergyTrans_BasinHeatSetpointTemp_, f, this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (x.SimFlowEnergyTrans_BasinHeatOperatSchedName_, f, this),
        SimFlowEnergyTrans_NumSpeeds_ (x.SimFlowEnergyTrans_NumSpeeds_, f, this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (x.SimFlowEnergyTrans_IndoorAirInletNodeName_, f, this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (x.SimFlowEnergyTrans_IndoorAirOutletNodeName_, f, this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (x.SimFlowEnergyTrans_NominalSpeedLevel_, f, this),
        SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_ (x.SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_, f, this),
        SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_ (x.SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_, f, this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (x.SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_, f, this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (x.SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_, f, this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (x.SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_, f, this),
        SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_ (x.SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_, f, this),
        SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_ (x.SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_, f, this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_, f, this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed (const ::xercesc::DOMElement& e,
                                                                         ::xml_schema::flags f,
                                                                         ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (this),
        SimFlowEnergyTrans_CondType_ (this),
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (this),
        SimFlowEnergyTrans_BasinHeatCap_ (this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_ (this),
        SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_ (this),
        SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_CondsCollectionWaterStorageTankName
          //
          if (n.name () == "SimFlowEnergyTrans_CondsCollectionWaterStorageTankName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > r (
              SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_)
            {
              this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CondAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondAirInletNodeName_type > r (
              SimFlowEnergyTrans_CondAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_CondAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondType
          //
          if (n.name () == "SimFlowEnergyTrans_CondType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondType_type > r (
              SimFlowEnergyTrans_CondType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondType_)
            {
              this->SimFlowEnergyTrans_CondType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump
          //
          if (n.name () == "SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_)
            {
              this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_.set (SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CrankcaseHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_CrankcaseHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CrankcaseHeatCap_)
            {
              this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (SimFlowEnergyTrans_CrankcaseHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_)
            {
              this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupWaterStoTankName
          //
          if (n.name () == "SimFlowEnergyTrans_SupWaterStoTankName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupWaterStoTankName_type > r (
              SimFlowEnergyTrans_SupWaterStoTankName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupWaterStoTankName_)
            {
              this->SimFlowEnergyTrans_SupWaterStoTankName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_BasinHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_BasinHeatCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BasinHeatCap_)
            {
              this->SimFlowEnergyTrans_BasinHeatCap_.set (SimFlowEnergyTrans_BasinHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BasinHeatSetpointTemp
          //
          if (n.name () == "SimFlowEnergyTrans_BasinHeatSetpointTemp" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BasinHeatSetpointTemp_)
            {
              this->SimFlowEnergyTrans_BasinHeatSetpointTemp_.set (SimFlowEnergyTrans_BasinHeatSetpointTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BasinHeatOperatSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_BasinHeatOperatSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_BasinHeatOperatSchedName_type > r (
              SimFlowEnergyTrans_BasinHeatOperatSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_BasinHeatOperatSchedName_)
            {
              this->SimFlowEnergyTrans_BasinHeatOperatSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_NumSpeeds
          //
          if (n.name () == "SimFlowEnergyTrans_NumSpeeds" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumSpeeds_)
            {
              this->SimFlowEnergyTrans_NumSpeeds_.set (SimFlowEnergyTrans_NumSpeeds_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_IndoorAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_IndoorAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_IndoorAirInletNodeName_type > r (
              SimFlowEnergyTrans_IndoorAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_IndoorAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_IndoorAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_IndoorAirOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_IndoorAirOutletNodeName_type > r (
              SimFlowEnergyTrans_IndoorAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_IndoorAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_NominalSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_NominalSpeedLevel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NominalSpeedLevel_)
            {
              this->SimFlowEnergyTrans_NominalSpeedLevel_.set (SimFlowEnergyTrans_NominalSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_)
            {
              this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_.set (SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_)
            {
              this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_.set (SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil
          //
          if (n.name () == "SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_)
            {
              this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_.set (SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap
          //
          if (n.name () == "SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_)
            {
              this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_.set (SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EnergyPartLoadFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_EnergyPartLoadFractionCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type > r (
              SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_)
            {
              this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond
          //
          if (n.name () == "SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_type > r (
              SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_)
            {
              this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond
          //
          if (n.name () == "SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_type > r (
              SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_)
            {
              this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed* SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed (*this, f, c);
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      operator= (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX& > (*this) = x;
          this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ = x.SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
          this->SimFlowEnergyTrans_CondAirInletNodeName_ = x.SimFlowEnergyTrans_CondAirInletNodeName_;
          this->SimFlowEnergyTrans_CondType_ = x.SimFlowEnergyTrans_CondType_;
          this->SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_ = x.SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_;
          this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x.SimFlowEnergyTrans_CrankcaseHeatCap_;
          this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
          this->SimFlowEnergyTrans_SupWaterStoTankName_ = x.SimFlowEnergyTrans_SupWaterStoTankName_;
          this->SimFlowEnergyTrans_BasinHeatCap_ = x.SimFlowEnergyTrans_BasinHeatCap_;
          this->SimFlowEnergyTrans_BasinHeatSetpointTemp_ = x.SimFlowEnergyTrans_BasinHeatSetpointTemp_;
          this->SimFlowEnergyTrans_BasinHeatOperatSchedName_ = x.SimFlowEnergyTrans_BasinHeatOperatSchedName_;
          this->SimFlowEnergyTrans_NumSpeeds_ = x.SimFlowEnergyTrans_NumSpeeds_;
          this->SimFlowEnergyTrans_IndoorAirInletNodeName_ = x.SimFlowEnergyTrans_IndoorAirInletNodeName_;
          this->SimFlowEnergyTrans_IndoorAirOutletNodeName_ = x.SimFlowEnergyTrans_IndoorAirOutletNodeName_;
          this->SimFlowEnergyTrans_NominalSpeedLevel_ = x.SimFlowEnergyTrans_NominalSpeedLevel_;
          this->SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_ = x.SimFlowEnergyTrans_RatedTotCoolingCapAtSelectedNominalSpeedLevel_;
          this->SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_ = x.SimFlowEnergyTrans_RatedVolAirFlowRateAtSelectNominalSpeedLevel_;
          this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ = x.SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_;
          this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ = x.SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_;
          this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ = x.SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitTotCoolingCapAtRatedConds_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitSensibleHeatRatioAtRatedConds_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitCopAtRatedConds_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitAirFlowRateAtRatedConds_;
          this->SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_ = x.SimFlowEnergyTrans_Spd_1_10_RefUnitCndnsrFlowRateAtRatedCond_;
          this->SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_ = x.SimFlowEnergyTrans_Spd_1_10_RefUnitPadEffOfEvapPreCoolngatRatedCond_;
          this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed::
      ~SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

