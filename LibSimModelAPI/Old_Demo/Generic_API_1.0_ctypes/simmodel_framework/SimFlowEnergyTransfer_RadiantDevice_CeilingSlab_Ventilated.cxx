// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated
      // 

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingCoilObjType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilObjType () const
      {
        return this->SimFlowEnergyTrans_CoolingCoilObjType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingCoilObjType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilObjType ()
      {
        return this->SimFlowEnergyTrans_CoolingCoilObjType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilObjType (const SimFlowEnergyTrans_CoolingCoilObjType_type& x)
      {
        this->SimFlowEnergyTrans_CoolingCoilObjType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilObjType (const SimFlowEnergyTrans_CoolingCoilObjType_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingCoilObjType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilObjType (::std::auto_ptr< SimFlowEnergyTrans_CoolingCoilObjType_type > x)
      {
        this->SimFlowEnergyTrans_CoolingCoilObjType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingCoilObjType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilObjType () const
      {
        return this->SimFlowEnergyTrans_HeatingCoilObjType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingCoilObjType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilObjType ()
      {
        return this->SimFlowEnergyTrans_HeatingCoilObjType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilObjType (const SimFlowEnergyTrans_HeatingCoilObjType_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilObjType (const SimFlowEnergyTrans_HeatingCoilObjType_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilObjType (::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilObjType_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCoilObjType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_AvailMngrListName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailMngrListName () const
      {
        return this->SimFlowEnergyTrans_AvailMngrListName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_AvailMngrListName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailMngrListName ()
      {
        return this->SimFlowEnergyTrans_AvailMngrListName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailMngrListName (const SimFlowEnergyTrans_AvailMngrListName_type& x)
      {
        this->SimFlowEnergyTrans_AvailMngrListName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailMngrListName (const SimFlowEnergyTrans_AvailMngrListName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailMngrListName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailMngrListName (::std::auto_ptr< SimFlowEnergyTrans_AvailMngrListName_type > x)
      {
        this->SimFlowEnergyTrans_AvailMngrListName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneName () const
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneName ()
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_type& x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneName (::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName () const
      {
        return this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName ()
      {
        return this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (const SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type& x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (const SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (::std::auto_ptr< SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type > x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_TempCntlType () const
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_TempCntlType ()
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_type& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_TempCntlType (::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName (const SimFlowEnergyTrans_HeatingHighCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName (const SimFlowEnergyTrans_HeatingHighCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingHighCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName (const SimFlowEnergyTrans_HeatingLowCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName (const SimFlowEnergyTrans_HeatingLowCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingLowCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName (const SimFlowEnergyTrans_CoolingHighCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName (const SimFlowEnergyTrans_CoolingHighCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingHighCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName (const SimFlowEnergyTrans_CoolingLowCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName (const SimFlowEnergyTrans_CoolingLowCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingLowCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MaxAirFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_MaxAirFlowRate_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MaxAirFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_MaxAirFlowRate_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxAirFlowRate (const SimFlowEnergyTrans_MaxAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_MaxAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxAirFlowRate (const SimFlowEnergyTrans_MaxAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_MaxAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_OutdrAirCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirCntlType () const
      {
        return this->SimFlowEnergyTrans_OutdrAirCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_OutdrAirCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirCntlType ()
      {
        return this->SimFlowEnergyTrans_OutdrAirCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirCntlType (const SimFlowEnergyTrans_OutdrAirCntlType_type& x)
      {
        this->SimFlowEnergyTrans_OutdrAirCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirCntlType (const SimFlowEnergyTrans_OutdrAirCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_OutdrAirCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirCntlType (::std::auto_ptr< SimFlowEnergyTrans_OutdrAirCntlType_type > x)
      {
        this->SimFlowEnergyTrans_OutdrAirCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MinOutdrAirFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_MinOutdrAirFlowRate_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MinOutdrAirFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_MinOutdrAirFlowRate_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirFlowRate (const SimFlowEnergyTrans_MinOutdrAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_MinOutdrAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirFlowRate (const SimFlowEnergyTrans_MinOutdrAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_MinOutdrAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MinOutdrAirSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirSchedName () const
      {
        return this->SimFlowEnergyTrans_MinOutdrAirSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MinOutdrAirSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirSchedName ()
      {
        return this->SimFlowEnergyTrans_MinOutdrAirSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirSchedName (const SimFlowEnergyTrans_MinOutdrAirSchedName_type& x)
      {
        this->SimFlowEnergyTrans_MinOutdrAirSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirSchedName (const SimFlowEnergyTrans_MinOutdrAirSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_MinOutdrAirSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MinOutdrAirSchedName (::std::auto_ptr< SimFlowEnergyTrans_MinOutdrAirSchedName_type > x)
      {
        this->SimFlowEnergyTrans_MinOutdrAirSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MaxOutdrAirFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MaxOutdrAirFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFlowRate (const SimFlowEnergyTrans_MaxOutdrAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFlowRate (const SimFlowEnergyTrans_MaxOutdrAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName (const SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName (const SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_SysConfigurationType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SysConfigurationType () const
      {
        return this->SimFlowEnergyTrans_SysConfigurationType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_SysConfigurationType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SysConfigurationType ()
      {
        return this->SimFlowEnergyTrans_SysConfigurationType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SysConfigurationType (const SimFlowEnergyTrans_SysConfigurationType_type& x)
      {
        this->SimFlowEnergyTrans_SysConfigurationType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SysConfigurationType (const SimFlowEnergyTrans_SysConfigurationType_optional& x)
      {
        this->SimFlowEnergyTrans_SysConfigurationType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SysConfigurationType (::std::auto_ptr< SimFlowEnergyTrans_SysConfigurationType_type > x)
      {
        this->SimFlowEnergyTrans_SysConfigurationType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HollowCoresideDiam_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoresideDiam () const
      {
        return this->SimFlowEnergyTrans_HollowCoresideDiam_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HollowCoresideDiam_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoresideDiam ()
      {
        return this->SimFlowEnergyTrans_HollowCoresideDiam_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoresideDiam (const SimFlowEnergyTrans_HollowCoresideDiam_type& x)
      {
        this->SimFlowEnergyTrans_HollowCoresideDiam_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoresideDiam (const SimFlowEnergyTrans_HollowCoresideDiam_optional& x)
      {
        this->SimFlowEnergyTrans_HollowCoresideDiam_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HollowCoreLength_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoreLength () const
      {
        return this->SimFlowEnergyTrans_HollowCoreLength_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HollowCoreLength_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoreLength ()
      {
        return this->SimFlowEnergyTrans_HollowCoreLength_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoreLength (const SimFlowEnergyTrans_HollowCoreLength_type& x)
      {
        this->SimFlowEnergyTrans_HollowCoreLength_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HollowCoreLength (const SimFlowEnergyTrans_HollowCoreLength_optional& x)
      {
        this->SimFlowEnergyTrans_HollowCoreLength_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_NumCores_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_NumCores () const
      {
        return this->SimFlowEnergyTrans_NumCores_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_NumCores_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_NumCores ()
      {
        return this->SimFlowEnergyTrans_NumCores_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_NumCores (const SimFlowEnergyTrans_NumCores_type& x)
      {
        this->SimFlowEnergyTrans_NumCores_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_NumCores (const SimFlowEnergyTrans_NumCores_optional& x)
      {
        this->SimFlowEnergyTrans_NumCores_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingHighAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighAirTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingHighAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighAirTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighAirTempSchedName (const SimFlowEnergyTrans_HeatingHighAirTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighAirTempSchedName (const SimFlowEnergyTrans_HeatingHighAirTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingHighAirTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingHighAirTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingLowAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowAirTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingLowAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowAirTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowAirTempSchedName (const SimFlowEnergyTrans_HeatingLowAirTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowAirTempSchedName (const SimFlowEnergyTrans_HeatingLowAirTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingLowAirTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingLowAirTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingHighAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighAirTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingHighAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighAirTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighAirTempSchedName (const SimFlowEnergyTrans_CoolingHighAirTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighAirTempSchedName (const SimFlowEnergyTrans_CoolingHighAirTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingHighAirTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingHighAirTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingLowAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowAirTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingLowAirTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowAirTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowAirTempSchedName (const SimFlowEnergyTrans_CoolingLowAirTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowAirTempSchedName (const SimFlowEnergyTrans_CoolingLowAirTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingLowAirTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingLowAirTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_RtnAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_RtnAirNodeName () const
      {
        return this->SimFlowEnergyTrans_RtnAirNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_RtnAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_RtnAirNodeName ()
      {
        return this->SimFlowEnergyTrans_RtnAirNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_RtnAirNodeName (const SimFlowEnergyTrans_RtnAirNodeName_type& x)
      {
        this->SimFlowEnergyTrans_RtnAirNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_RtnAirNodeName (const SimFlowEnergyTrans_RtnAirNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_RtnAirNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_RtnAirNodeName (::std::auto_ptr< SimFlowEnergyTrans_RtnAirNodeName_type > x)
      {
        this->SimFlowEnergyTrans_RtnAirNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_SlabNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SlabNodeName () const
      {
        return this->SimFlowEnergyTrans_SlabNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_SlabNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SlabNodeName ()
      {
        return this->SimFlowEnergyTrans_SlabNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SlabNodeName (const SimFlowEnergyTrans_SlabNodeName_type& x)
      {
        this->SimFlowEnergyTrans_SlabNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SlabNodeName (const SimFlowEnergyTrans_SlabNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_SlabNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_SlabNodeName (::std::auto_ptr< SimFlowEnergyTrans_SlabNodeName_type > x)
      {
        this->SimFlowEnergyTrans_SlabNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ZoneSupAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneSupAirNodeName () const
      {
        return this->SimFlowEnergyTrans_ZoneSupAirNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ZoneSupAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneSupAirNodeName ()
      {
        return this->SimFlowEnergyTrans_ZoneSupAirNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneSupAirNodeName (const SimFlowEnergyTrans_ZoneSupAirNodeName_type& x)
      {
        this->SimFlowEnergyTrans_ZoneSupAirNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneSupAirNodeName (const SimFlowEnergyTrans_ZoneSupAirNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneSupAirNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ZoneSupAirNodeName (::std::auto_ptr< SimFlowEnergyTrans_ZoneSupAirNodeName_type > x)
      {
        this->SimFlowEnergyTrans_ZoneSupAirNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_OutdrAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirNodeName () const
      {
        return this->SimFlowEnergyTrans_OutdrAirNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_OutdrAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirNodeName ()
      {
        return this->SimFlowEnergyTrans_OutdrAirNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirNodeName (const SimFlowEnergyTrans_OutdrAirNodeName_type& x)
      {
        this->SimFlowEnergyTrans_OutdrAirNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirNodeName (const SimFlowEnergyTrans_OutdrAirNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_OutdrAirNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirNodeName (::std::auto_ptr< SimFlowEnergyTrans_OutdrAirNodeName_type > x)
      {
        this->SimFlowEnergyTrans_OutdrAirNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ReliefAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ReliefAirNodeName () const
      {
        return this->SimFlowEnergyTrans_ReliefAirNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ReliefAirNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ReliefAirNodeName ()
      {
        return this->SimFlowEnergyTrans_ReliefAirNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ReliefAirNodeName (const SimFlowEnergyTrans_ReliefAirNodeName_type& x)
      {
        this->SimFlowEnergyTrans_ReliefAirNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ReliefAirNodeName (const SimFlowEnergyTrans_ReliefAirNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_ReliefAirNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ReliefAirNodeName (::std::auto_ptr< SimFlowEnergyTrans_ReliefAirNodeName_type > x)
      {
        this->SimFlowEnergyTrans_ReliefAirNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirMixerOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirMixerOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirMixerOutletNodeName (const SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirMixerOutletNodeName (const SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_OutdrAirMixerOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_FanOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_FanOutletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_FanOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_FanOutletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanOutletNodeName (const SimFlowEnergyTrans_FanOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_FanOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanOutletNodeName (const SimFlowEnergyTrans_FanOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_FanOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_FanOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_FanOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_FanName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanName () const
      {
        return this->SimFlowEnergyTrans_FanName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_FanName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanName ()
      {
        return this->SimFlowEnergyTrans_FanName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanName (const SimFlowEnergyTrans_FanName_type& x)
      {
        this->SimFlowEnergyTrans_FanName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanName (const SimFlowEnergyTrans_FanName_optional& x)
      {
        this->SimFlowEnergyTrans_FanName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_FanName (::std::auto_ptr< SimFlowEnergyTrans_FanName_type > x)
      {
        this->SimFlowEnergyTrans_FanName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoilOptionType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoilOptionType () const
      {
        return this->SimFlowEnergyTrans_CoilOptionType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoilOptionType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoilOptionType ()
      {
        return this->SimFlowEnergyTrans_CoilOptionType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoilOptionType (const SimFlowEnergyTrans_CoilOptionType_type& x)
      {
        this->SimFlowEnergyTrans_CoilOptionType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoilOptionType (const SimFlowEnergyTrans_CoilOptionType_optional& x)
      {
        this->SimFlowEnergyTrans_CoilOptionType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoilOptionType (::std::auto_ptr< SimFlowEnergyTrans_CoilOptionType_type > x)
      {
        this->SimFlowEnergyTrans_CoilOptionType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingCoilName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilName () const
      {
        return this->SimFlowEnergyTrans_HeatingCoilName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HeatingCoilName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilName ()
      {
        return this->SimFlowEnergyTrans_HeatingCoilName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilName (const SimFlowEnergyTrans_HeatingCoilName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilName (const SimFlowEnergyTrans_HeatingCoilName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCoilName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HeatingCoilName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCoilName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HotWaterOrSteamInletNodeName () const
      {
        return this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HotWaterOrSteamInletNodeName ()
      {
        return this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HotWaterOrSteamInletNodeName (const SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HotWaterOrSteamInletNodeName (const SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_HotWaterOrSteamInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingCoilName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilName () const
      {
        return this->SimFlowEnergyTrans_CoolingCoilName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_CoolingCoilName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilName ()
      {
        return this->SimFlowEnergyTrans_CoolingCoilName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilName (const SimFlowEnergyTrans_CoolingCoilName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingCoilName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilName (const SimFlowEnergyTrans_CoolingCoilName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingCoilName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_CoolingCoilName (::std::auto_ptr< SimFlowEnergyTrans_CoolingCoilName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingCoilName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ColdWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ColdWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_ColdWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::SimFlowEnergyTrans_ColdWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ColdWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_ColdWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ColdWaterInletNodeName (const SimFlowEnergyTrans_ColdWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_ColdWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ColdWaterInletNodeName (const SimFlowEnergyTrans_ColdWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_ColdWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTrans_ColdWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_ColdWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_ColdWaterInletNodeName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated
      //

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice (RefId),
        SimFlowEnergyTrans_CoolingCoilObjType_ (this),
        SimFlowEnergyTrans_HeatingCoilObjType_ (this),
        SimFlowEnergyTrans_AvailMngrListName_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ (this),
        SimFlowEnergyTrans_MaxAirFlowRate_ (this),
        SimFlowEnergyTrans_OutdrAirCntlType_ (this),
        SimFlowEnergyTrans_MinOutdrAirFlowRate_ (this),
        SimFlowEnergyTrans_MinOutdrAirSchedName_ (this),
        SimFlowEnergyTrans_MaxOutdrAirFlowRate_ (this),
        SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_ (this),
        SimFlowEnergyTrans_SysConfigurationType_ (this),
        SimFlowEnergyTrans_HollowCoresideDiam_ (this),
        SimFlowEnergyTrans_HollowCoreLength_ (this),
        SimFlowEnergyTrans_NumCores_ (this),
        SimFlowEnergyTrans_HeatingHighAirTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowAirTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighAirTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowAirTempSchedName_ (this),
        SimFlowEnergyTrans_RtnAirNodeName_ (this),
        SimFlowEnergyTrans_SlabNodeName_ (this),
        SimFlowEnergyTrans_ZoneSupAirNodeName_ (this),
        SimFlowEnergyTrans_OutdrAirNodeName_ (this),
        SimFlowEnergyTrans_ReliefAirNodeName_ (this),
        SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_ (this),
        SimFlowEnergyTrans_FanOutletNodeName_ (this),
        SimFlowEnergyTrans_FanName_ (this),
        SimFlowEnergyTrans_CoilOptionType_ (this),
        SimFlowEnergyTrans_HeatingCoilName_ (this),
        SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingCoilName_ (this),
        SimFlowEnergyTrans_ColdWaterInletNodeName_ (this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated (const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated& x,
                                                                  ::xml_schema::flags f,
                                                                  ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice (x, f, c),
        SimFlowEnergyTrans_CoolingCoilObjType_ (x.SimFlowEnergyTrans_CoolingCoilObjType_, f, this),
        SimFlowEnergyTrans_HeatingCoilObjType_ (x.SimFlowEnergyTrans_HeatingCoilObjType_, f, this),
        SimFlowEnergyTrans_AvailMngrListName_ (x.SimFlowEnergyTrans_AvailMngrListName_, f, this),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_ZoneName_ (x.SimFlowEnergyTrans_ZoneName_, f, this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (x.SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_, f, this),
        SimFlowEnergyTrans_TempCntlType_ (x.SimFlowEnergyTrans_TempCntlType_, f, this),
        SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ (x.SimFlowEnergyTrans_HeatingHighCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ (x.SimFlowEnergyTrans_HeatingLowCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ (x.SimFlowEnergyTrans_CoolingHighCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ (x.SimFlowEnergyTrans_CoolingLowCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_MaxAirFlowRate_ (x.SimFlowEnergyTrans_MaxAirFlowRate_, f, this),
        SimFlowEnergyTrans_OutdrAirCntlType_ (x.SimFlowEnergyTrans_OutdrAirCntlType_, f, this),
        SimFlowEnergyTrans_MinOutdrAirFlowRate_ (x.SimFlowEnergyTrans_MinOutdrAirFlowRate_, f, this),
        SimFlowEnergyTrans_MinOutdrAirSchedName_ (x.SimFlowEnergyTrans_MinOutdrAirSchedName_, f, this),
        SimFlowEnergyTrans_MaxOutdrAirFlowRate_ (x.SimFlowEnergyTrans_MaxOutdrAirFlowRate_, f, this),
        SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_ (x.SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_, f, this),
        SimFlowEnergyTrans_SysConfigurationType_ (x.SimFlowEnergyTrans_SysConfigurationType_, f, this),
        SimFlowEnergyTrans_HollowCoresideDiam_ (x.SimFlowEnergyTrans_HollowCoresideDiam_, f, this),
        SimFlowEnergyTrans_HollowCoreLength_ (x.SimFlowEnergyTrans_HollowCoreLength_, f, this),
        SimFlowEnergyTrans_NumCores_ (x.SimFlowEnergyTrans_NumCores_, f, this),
        SimFlowEnergyTrans_HeatingHighAirTempSchedName_ (x.SimFlowEnergyTrans_HeatingHighAirTempSchedName_, f, this),
        SimFlowEnergyTrans_HeatingLowAirTempSchedName_ (x.SimFlowEnergyTrans_HeatingLowAirTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingHighAirTempSchedName_ (x.SimFlowEnergyTrans_CoolingHighAirTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingLowAirTempSchedName_ (x.SimFlowEnergyTrans_CoolingLowAirTempSchedName_, f, this),
        SimFlowEnergyTrans_RtnAirNodeName_ (x.SimFlowEnergyTrans_RtnAirNodeName_, f, this),
        SimFlowEnergyTrans_SlabNodeName_ (x.SimFlowEnergyTrans_SlabNodeName_, f, this),
        SimFlowEnergyTrans_ZoneSupAirNodeName_ (x.SimFlowEnergyTrans_ZoneSupAirNodeName_, f, this),
        SimFlowEnergyTrans_OutdrAirNodeName_ (x.SimFlowEnergyTrans_OutdrAirNodeName_, f, this),
        SimFlowEnergyTrans_ReliefAirNodeName_ (x.SimFlowEnergyTrans_ReliefAirNodeName_, f, this),
        SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_ (x.SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_, f, this),
        SimFlowEnergyTrans_FanOutletNodeName_ (x.SimFlowEnergyTrans_FanOutletNodeName_, f, this),
        SimFlowEnergyTrans_FanName_ (x.SimFlowEnergyTrans_FanName_, f, this),
        SimFlowEnergyTrans_CoilOptionType_ (x.SimFlowEnergyTrans_CoilOptionType_, f, this),
        SimFlowEnergyTrans_HeatingCoilName_ (x.SimFlowEnergyTrans_HeatingCoilName_, f, this),
        SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_ (x.SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_, f, this),
        SimFlowEnergyTrans_CoolingCoilName_ (x.SimFlowEnergyTrans_CoolingCoilName_, f, this),
        SimFlowEnergyTrans_ColdWaterInletNodeName_ (x.SimFlowEnergyTrans_ColdWaterInletNodeName_, f, this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated (const ::xercesc::DOMElement& e,
                                                                  ::xml_schema::flags f,
                                                                  ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_CoolingCoilObjType_ (this),
        SimFlowEnergyTrans_HeatingCoilObjType_ (this),
        SimFlowEnergyTrans_AvailMngrListName_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ (this),
        SimFlowEnergyTrans_MaxAirFlowRate_ (this),
        SimFlowEnergyTrans_OutdrAirCntlType_ (this),
        SimFlowEnergyTrans_MinOutdrAirFlowRate_ (this),
        SimFlowEnergyTrans_MinOutdrAirSchedName_ (this),
        SimFlowEnergyTrans_MaxOutdrAirFlowRate_ (this),
        SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_ (this),
        SimFlowEnergyTrans_SysConfigurationType_ (this),
        SimFlowEnergyTrans_HollowCoresideDiam_ (this),
        SimFlowEnergyTrans_HollowCoreLength_ (this),
        SimFlowEnergyTrans_NumCores_ (this),
        SimFlowEnergyTrans_HeatingHighAirTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowAirTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighAirTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowAirTempSchedName_ (this),
        SimFlowEnergyTrans_RtnAirNodeName_ (this),
        SimFlowEnergyTrans_SlabNodeName_ (this),
        SimFlowEnergyTrans_ZoneSupAirNodeName_ (this),
        SimFlowEnergyTrans_OutdrAirNodeName_ (this),
        SimFlowEnergyTrans_ReliefAirNodeName_ (this),
        SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_ (this),
        SimFlowEnergyTrans_FanOutletNodeName_ (this),
        SimFlowEnergyTrans_FanName_ (this),
        SimFlowEnergyTrans_CoilOptionType_ (this),
        SimFlowEnergyTrans_HeatingCoilName_ (this),
        SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingCoilName_ (this),
        SimFlowEnergyTrans_ColdWaterInletNodeName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_CoolingCoilObjType
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingCoilObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingCoilObjType_type > r (
              SimFlowEnergyTrans_CoolingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingCoilObjType_)
            {
              this->SimFlowEnergyTrans_CoolingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCoilObjType
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCoilObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilObjType_type > r (
              SimFlowEnergyTrans_HeatingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCoilObjType_)
            {
              this->SimFlowEnergyTrans_HeatingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailMngrListName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailMngrListName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailMngrListName_type > r (
              SimFlowEnergyTrans_AvailMngrListName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailMngrListName_)
            {
              this->SimFlowEnergyTrans_AvailMngrListName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneName
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > r (
              SimFlowEnergyTrans_ZoneName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ZoneName_)
            {
              this->SimFlowEnergyTrans_ZoneName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName
          //
          if (n.name () == "SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type > r (
              SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_)
            {
              this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_TempCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_TempCntlType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > r (
              SimFlowEnergyTrans_TempCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TempCntlType_)
            {
              this->SimFlowEnergyTrans_TempCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingHighCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingHighCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingHighCntlTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingHighCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingLowCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingLowCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingLowCntlTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingLowCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingHighCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingHighCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingHighCntlTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingHighCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingLowCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingLowCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingLowCntlTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingLowCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_MaxAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxAirFlowRate_)
            {
              this->SimFlowEnergyTrans_MaxAirFlowRate_.set (SimFlowEnergyTrans_MaxAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdrAirCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_OutdrAirCntlType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutdrAirCntlType_type > r (
              SimFlowEnergyTrans_OutdrAirCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutdrAirCntlType_)
            {
              this->SimFlowEnergyTrans_OutdrAirCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MinOutdrAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_MinOutdrAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MinOutdrAirFlowRate_)
            {
              this->SimFlowEnergyTrans_MinOutdrAirFlowRate_.set (SimFlowEnergyTrans_MinOutdrAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MinOutdrAirSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_MinOutdrAirSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_MinOutdrAirSchedName_type > r (
              SimFlowEnergyTrans_MinOutdrAirSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_MinOutdrAirSchedName_)
            {
              this->SimFlowEnergyTrans_MinOutdrAirSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_)
            {
              this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_.set (SimFlowEnergyTrans_MaxOutdrAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_type > r (
              SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_)
            {
              this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SysConfigurationType
          //
          if (n.name () == "SimFlowEnergyTrans_SysConfigurationType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SysConfigurationType_type > r (
              SimFlowEnergyTrans_SysConfigurationType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SysConfigurationType_)
            {
              this->SimFlowEnergyTrans_SysConfigurationType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HollowCoresideDiam
          //
          if (n.name () == "SimFlowEnergyTrans_HollowCoresideDiam" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HollowCoresideDiam_)
            {
              this->SimFlowEnergyTrans_HollowCoresideDiam_.set (SimFlowEnergyTrans_HollowCoresideDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HollowCoreLength
          //
          if (n.name () == "SimFlowEnergyTrans_HollowCoreLength" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HollowCoreLength_)
            {
              this->SimFlowEnergyTrans_HollowCoreLength_.set (SimFlowEnergyTrans_HollowCoreLength_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumCores
          //
          if (n.name () == "SimFlowEnergyTrans_NumCores" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumCores_)
            {
              this->SimFlowEnergyTrans_NumCores_.set (SimFlowEnergyTrans_NumCores_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingHighAirTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingHighAirTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingHighAirTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingHighAirTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingLowAirTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingLowAirTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingLowAirTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingLowAirTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingHighAirTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingHighAirTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingHighAirTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingHighAirTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingLowAirTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingLowAirTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingLowAirTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingLowAirTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RtnAirNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_RtnAirNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_RtnAirNodeName_type > r (
              SimFlowEnergyTrans_RtnAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_RtnAirNodeName_)
            {
              this->SimFlowEnergyTrans_RtnAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SlabNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_SlabNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SlabNodeName_type > r (
              SimFlowEnergyTrans_SlabNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SlabNodeName_)
            {
              this->SimFlowEnergyTrans_SlabNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneSupAirNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneSupAirNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ZoneSupAirNodeName_type > r (
              SimFlowEnergyTrans_ZoneSupAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ZoneSupAirNodeName_)
            {
              this->SimFlowEnergyTrans_ZoneSupAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdrAirNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_OutdrAirNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutdrAirNodeName_type > r (
              SimFlowEnergyTrans_OutdrAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutdrAirNodeName_)
            {
              this->SimFlowEnergyTrans_OutdrAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ReliefAirNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_ReliefAirNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ReliefAirNodeName_type > r (
              SimFlowEnergyTrans_ReliefAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ReliefAirNodeName_)
            {
              this->SimFlowEnergyTrans_ReliefAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdrAirMixerOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_OutdrAirMixerOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_type > r (
              SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_)
            {
              this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FanOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_FanOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FanOutletNodeName_type > r (
              SimFlowEnergyTrans_FanOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FanOutletNodeName_)
            {
              this->SimFlowEnergyTrans_FanOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FanName
          //
          if (n.name () == "SimFlowEnergyTrans_FanName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FanName_type > r (
              SimFlowEnergyTrans_FanName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FanName_)
            {
              this->SimFlowEnergyTrans_FanName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoilOptionType
          //
          if (n.name () == "SimFlowEnergyTrans_CoilOptionType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoilOptionType_type > r (
              SimFlowEnergyTrans_CoilOptionType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoilOptionType_)
            {
              this->SimFlowEnergyTrans_CoilOptionType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCoilName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCoilName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCoilName_type > r (
              SimFlowEnergyTrans_HeatingCoilName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCoilName_)
            {
              this->SimFlowEnergyTrans_HeatingCoilName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HotWaterOrSteamInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_HotWaterOrSteamInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_type > r (
              SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_)
            {
              this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingCoilName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingCoilName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingCoilName_type > r (
              SimFlowEnergyTrans_CoolingCoilName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingCoilName_)
            {
              this->SimFlowEnergyTrans_CoolingCoilName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ColdWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_ColdWaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ColdWaterInletNodeName_type > r (
              SimFlowEnergyTrans_ColdWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ColdWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_ColdWaterInletNodeName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated* SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated (*this, f, c);
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated& SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      operator= (const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice& > (*this) = x;
          this->SimFlowEnergyTrans_CoolingCoilObjType_ = x.SimFlowEnergyTrans_CoolingCoilObjType_;
          this->SimFlowEnergyTrans_HeatingCoilObjType_ = x.SimFlowEnergyTrans_HeatingCoilObjType_;
          this->SimFlowEnergyTrans_AvailMngrListName_ = x.SimFlowEnergyTrans_AvailMngrListName_;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_ZoneName_ = x.SimFlowEnergyTrans_ZoneName_;
          this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ = x.SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
          this->SimFlowEnergyTrans_TempCntlType_ = x.SimFlowEnergyTrans_TempCntlType_;
          this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ = x.SimFlowEnergyTrans_HeatingHighCntlTempSchedName_;
          this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ = x.SimFlowEnergyTrans_HeatingLowCntlTempSchedName_;
          this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ = x.SimFlowEnergyTrans_CoolingHighCntlTempSchedName_;
          this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ = x.SimFlowEnergyTrans_CoolingLowCntlTempSchedName_;
          this->SimFlowEnergyTrans_MaxAirFlowRate_ = x.SimFlowEnergyTrans_MaxAirFlowRate_;
          this->SimFlowEnergyTrans_OutdrAirCntlType_ = x.SimFlowEnergyTrans_OutdrAirCntlType_;
          this->SimFlowEnergyTrans_MinOutdrAirFlowRate_ = x.SimFlowEnergyTrans_MinOutdrAirFlowRate_;
          this->SimFlowEnergyTrans_MinOutdrAirSchedName_ = x.SimFlowEnergyTrans_MinOutdrAirSchedName_;
          this->SimFlowEnergyTrans_MaxOutdrAirFlowRate_ = x.SimFlowEnergyTrans_MaxOutdrAirFlowRate_;
          this->SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_ = x.SimFlowEnergyTrans_MaxOutdrAirFractOrTempSchedName_;
          this->SimFlowEnergyTrans_SysConfigurationType_ = x.SimFlowEnergyTrans_SysConfigurationType_;
          this->SimFlowEnergyTrans_HollowCoresideDiam_ = x.SimFlowEnergyTrans_HollowCoresideDiam_;
          this->SimFlowEnergyTrans_HollowCoreLength_ = x.SimFlowEnergyTrans_HollowCoreLength_;
          this->SimFlowEnergyTrans_NumCores_ = x.SimFlowEnergyTrans_NumCores_;
          this->SimFlowEnergyTrans_HeatingHighAirTempSchedName_ = x.SimFlowEnergyTrans_HeatingHighAirTempSchedName_;
          this->SimFlowEnergyTrans_HeatingLowAirTempSchedName_ = x.SimFlowEnergyTrans_HeatingLowAirTempSchedName_;
          this->SimFlowEnergyTrans_CoolingHighAirTempSchedName_ = x.SimFlowEnergyTrans_CoolingHighAirTempSchedName_;
          this->SimFlowEnergyTrans_CoolingLowAirTempSchedName_ = x.SimFlowEnergyTrans_CoolingLowAirTempSchedName_;
          this->SimFlowEnergyTrans_RtnAirNodeName_ = x.SimFlowEnergyTrans_RtnAirNodeName_;
          this->SimFlowEnergyTrans_SlabNodeName_ = x.SimFlowEnergyTrans_SlabNodeName_;
          this->SimFlowEnergyTrans_ZoneSupAirNodeName_ = x.SimFlowEnergyTrans_ZoneSupAirNodeName_;
          this->SimFlowEnergyTrans_OutdrAirNodeName_ = x.SimFlowEnergyTrans_OutdrAirNodeName_;
          this->SimFlowEnergyTrans_ReliefAirNodeName_ = x.SimFlowEnergyTrans_ReliefAirNodeName_;
          this->SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_ = x.SimFlowEnergyTrans_OutdrAirMixerOutletNodeName_;
          this->SimFlowEnergyTrans_FanOutletNodeName_ = x.SimFlowEnergyTrans_FanOutletNodeName_;
          this->SimFlowEnergyTrans_FanName_ = x.SimFlowEnergyTrans_FanName_;
          this->SimFlowEnergyTrans_CoilOptionType_ = x.SimFlowEnergyTrans_CoilOptionType_;
          this->SimFlowEnergyTrans_HeatingCoilName_ = x.SimFlowEnergyTrans_HeatingCoilName_;
          this->SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_ = x.SimFlowEnergyTrans_HotWaterOrSteamInletNodeName_;
          this->SimFlowEnergyTrans_CoolingCoilName_ = x.SimFlowEnergyTrans_CoolingCoilName_;
          this->SimFlowEnergyTrans_ColdWaterInletNodeName_ = x.SimFlowEnergyTrans_ColdWaterInletNodeName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated::
      ~SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

