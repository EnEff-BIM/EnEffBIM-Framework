// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction
      // 

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_AvailSchedName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AvailSchedName () const
      {
        return this->SimFlowTerm_AvailSchedName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_AvailSchedName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AvailSchedName ()
      {
        return this->SimFlowTerm_AvailSchedName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AvailSchedName (const SimFlowTerm_AvailSchedName_type& x)
      {
        this->SimFlowTerm_AvailSchedName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AvailSchedName (const SimFlowTerm_AvailSchedName_optional& x)
      {
        this->SimFlowTerm_AvailSchedName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AvailSchedName (::std::auto_ptr< SimFlowTerm_AvailSchedName_type > x)
      {
        this->SimFlowTerm_AvailSchedName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_AirOutNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AirOutNodeName () const
      {
        return this->SimFlowTerm_AirOutNodeName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_AirOutNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AirOutNodeName ()
      {
        return this->SimFlowTerm_AirOutNodeName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AirOutNodeName (const SimFlowTerm_AirOutNodeName_type& x)
      {
        this->SimFlowTerm_AirOutNodeName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AirOutNodeName (const SimFlowTerm_AirOutNodeName_optional& x)
      {
        this->SimFlowTerm_AirOutNodeName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_AirOutNodeName (::std::auto_ptr< SimFlowTerm_AirOutNodeName_type > x)
      {
        this->SimFlowTerm_AirOutNodeName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HeatingCoilObjType_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilObjType () const
      {
        return this->SimFlowTerm_HeatingCoilObjType_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HeatingCoilObjType_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilObjType ()
      {
        return this->SimFlowTerm_HeatingCoilObjType_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilObjType (const SimFlowTerm_HeatingCoilObjType_type& x)
      {
        this->SimFlowTerm_HeatingCoilObjType_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilObjType (const SimFlowTerm_HeatingCoilObjType_optional& x)
      {
        this->SimFlowTerm_HeatingCoilObjType_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilObjType (::std::auto_ptr< SimFlowTerm_HeatingCoilObjType_type > x)
      {
        this->SimFlowTerm_HeatingCoilObjType_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HeatingCoilName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilName () const
      {
        return this->SimFlowTerm_HeatingCoilName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HeatingCoilName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilName ()
      {
        return this->SimFlowTerm_HeatingCoilName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilName (const SimFlowTerm_HeatingCoilName_type& x)
      {
        this->SimFlowTerm_HeatingCoilName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilName (const SimFlowTerm_HeatingCoilName_optional& x)
      {
        this->SimFlowTerm_HeatingCoilName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingCoilName (::std::auto_ptr< SimFlowTerm_HeatingCoilName_type > x)
      {
        this->SimFlowTerm_HeatingCoilName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HeatingConvergTol_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingConvergTol () const
      {
        return this->SimFlowTerm_HeatingConvergTol_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HeatingConvergTol_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingConvergTol ()
      {
        return this->SimFlowTerm_HeatingConvergTol_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingConvergTol (const SimFlowTerm_HeatingConvergTol_type& x)
      {
        this->SimFlowTerm_HeatingConvergTol_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HeatingConvergTol (const SimFlowTerm_HeatingConvergTol_optional& x)
      {
        this->SimFlowTerm_HeatingConvergTol_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_SupplyAirInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_SupplyAirInletNodeName () const
      {
        return this->SimFlowTerm_SupplyAirInletNodeName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_SupplyAirInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_SupplyAirInletNodeName ()
      {
        return this->SimFlowTerm_SupplyAirInletNodeName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_SupplyAirInletNodeName (const SimFlowTerm_SupplyAirInletNodeName_type& x)
      {
        this->SimFlowTerm_SupplyAirInletNodeName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_SupplyAirInletNodeName (const SimFlowTerm_SupplyAirInletNodeName_optional& x)
      {
        this->SimFlowTerm_SupplyAirInletNodeName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_SupplyAirInletNodeName (::std::auto_ptr< SimFlowTerm_SupplyAirInletNodeName_type > x)
      {
        this->SimFlowTerm_SupplyAirInletNodeName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_ZoneMixerName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ZoneMixerName () const
      {
        return this->SimFlowTerm_ZoneMixerName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_ZoneMixerName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ZoneMixerName ()
      {
        return this->SimFlowTerm_ZoneMixerName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ZoneMixerName (const SimFlowTerm_ZoneMixerName_type& x)
      {
        this->SimFlowTerm_ZoneMixerName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ZoneMixerName (const SimFlowTerm_ZoneMixerName_optional& x)
      {
        this->SimFlowTerm_ZoneMixerName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ZoneMixerName (::std::auto_ptr< SimFlowTerm_ZoneMixerName_type > x)
      {
        this->SimFlowTerm_ZoneMixerName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MaxTotalAirFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxTotalAirFlowRate () const
      {
        return this->SimFlowTerm_MaxTotalAirFlowRate_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MaxTotalAirFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxTotalAirFlowRate ()
      {
        return this->SimFlowTerm_MaxTotalAirFlowRate_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxTotalAirFlowRate (const SimFlowTerm_MaxTotalAirFlowRate_type& x)
      {
        this->SimFlowTerm_MaxTotalAirFlowRate_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxTotalAirFlowRate (const SimFlowTerm_MaxTotalAirFlowRate_optional& x)
      {
        this->SimFlowTerm_MaxTotalAirFlowRate_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_InductionRatio_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InductionRatio () const
      {
        return this->SimFlowTerm_InductionRatio_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_InductionRatio_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InductionRatio ()
      {
        return this->SimFlowTerm_InductionRatio_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InductionRatio (const SimFlowTerm_InductionRatio_type& x)
      {
        this->SimFlowTerm_InductionRatio_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InductionRatio (const SimFlowTerm_InductionRatio_optional& x)
      {
        this->SimFlowTerm_InductionRatio_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_InducedAirInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InducedAirInletNodeName () const
      {
        return this->SimFlowTerm_InducedAirInletNodeName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_InducedAirInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InducedAirInletNodeName ()
      {
        return this->SimFlowTerm_InducedAirInletNodeName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InducedAirInletNodeName (const SimFlowTerm_InducedAirInletNodeName_type& x)
      {
        this->SimFlowTerm_InducedAirInletNodeName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InducedAirInletNodeName (const SimFlowTerm_InducedAirInletNodeName_optional& x)
      {
        this->SimFlowTerm_InducedAirInletNodeName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_InducedAirInletNodeName (::std::auto_ptr< SimFlowTerm_InducedAirInletNodeName_type > x)
      {
        this->SimFlowTerm_InducedAirInletNodeName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HotWaterInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HotWaterInletNodeName () const
      {
        return this->SimFlowTerm_HotWaterInletNodeName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_HotWaterInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HotWaterInletNodeName ()
      {
        return this->SimFlowTerm_HotWaterInletNodeName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HotWaterInletNodeName (const SimFlowTerm_HotWaterInletNodeName_type& x)
      {
        this->SimFlowTerm_HotWaterInletNodeName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HotWaterInletNodeName (const SimFlowTerm_HotWaterInletNodeName_optional& x)
      {
        this->SimFlowTerm_HotWaterInletNodeName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_HotWaterInletNodeName (::std::auto_ptr< SimFlowTerm_HotWaterInletNodeName_type > x)
      {
        this->SimFlowTerm_HotWaterInletNodeName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_ColdWaterInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ColdWaterInletNodeName () const
      {
        return this->SimFlowTerm_ColdWaterInletNodeName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_ColdWaterInletNodeName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ColdWaterInletNodeName ()
      {
        return this->SimFlowTerm_ColdWaterInletNodeName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ColdWaterInletNodeName (const SimFlowTerm_ColdWaterInletNodeName_type& x)
      {
        this->SimFlowTerm_ColdWaterInletNodeName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ColdWaterInletNodeName (const SimFlowTerm_ColdWaterInletNodeName_optional& x)
      {
        this->SimFlowTerm_ColdWaterInletNodeName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_ColdWaterInletNodeName (::std::auto_ptr< SimFlowTerm_ColdWaterInletNodeName_type > x)
      {
        this->SimFlowTerm_ColdWaterInletNodeName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MaxHotWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxHotWaterFlowRate () const
      {
        return this->SimFlowTerm_MaxHotWaterFlowRate_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MaxHotWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxHotWaterFlowRate ()
      {
        return this->SimFlowTerm_MaxHotWaterFlowRate_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxHotWaterFlowRate (const SimFlowTerm_MaxHotWaterFlowRate_type& x)
      {
        this->SimFlowTerm_MaxHotWaterFlowRate_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxHotWaterFlowRate (const SimFlowTerm_MaxHotWaterFlowRate_optional& x)
      {
        this->SimFlowTerm_MaxHotWaterFlowRate_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MinHotWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinHotWaterFlowRate () const
      {
        return this->SimFlowTerm_MinHotWaterFlowRate_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MinHotWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinHotWaterFlowRate ()
      {
        return this->SimFlowTerm_MinHotWaterFlowRate_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinHotWaterFlowRate (const SimFlowTerm_MinHotWaterFlowRate_type& x)
      {
        this->SimFlowTerm_MinHotWaterFlowRate_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinHotWaterFlowRate (const SimFlowTerm_MinHotWaterFlowRate_optional& x)
      {
        this->SimFlowTerm_MinHotWaterFlowRate_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_CoolingCoilObjType_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilObjType () const
      {
        return this->SimFlowTerm_CoolingCoilObjType_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_CoolingCoilObjType_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilObjType ()
      {
        return this->SimFlowTerm_CoolingCoilObjType_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilObjType (const SimFlowTerm_CoolingCoilObjType_type& x)
      {
        this->SimFlowTerm_CoolingCoilObjType_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilObjType (const SimFlowTerm_CoolingCoilObjType_optional& x)
      {
        this->SimFlowTerm_CoolingCoilObjType_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilObjType (::std::auto_ptr< SimFlowTerm_CoolingCoilObjType_type > x)
      {
        this->SimFlowTerm_CoolingCoilObjType_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_CoolingCoilName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilName () const
      {
        return this->SimFlowTerm_CoolingCoilName_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_CoolingCoilName_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilName ()
      {
        return this->SimFlowTerm_CoolingCoilName_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilName (const SimFlowTerm_CoolingCoilName_type& x)
      {
        this->SimFlowTerm_CoolingCoilName_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilName (const SimFlowTerm_CoolingCoilName_optional& x)
      {
        this->SimFlowTerm_CoolingCoilName_ = x;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingCoilName (::std::auto_ptr< SimFlowTerm_CoolingCoilName_type > x)
      {
        this->SimFlowTerm_CoolingCoilName_.set (x);
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MaxColdWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxColdWaterFlowRate () const
      {
        return this->SimFlowTerm_MaxColdWaterFlowRate_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MaxColdWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxColdWaterFlowRate ()
      {
        return this->SimFlowTerm_MaxColdWaterFlowRate_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxColdWaterFlowRate (const SimFlowTerm_MaxColdWaterFlowRate_type& x)
      {
        this->SimFlowTerm_MaxColdWaterFlowRate_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MaxColdWaterFlowRate (const SimFlowTerm_MaxColdWaterFlowRate_optional& x)
      {
        this->SimFlowTerm_MaxColdWaterFlowRate_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MinColdWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinColdWaterFlowRate () const
      {
        return this->SimFlowTerm_MinColdWaterFlowRate_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_MinColdWaterFlowRate_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinColdWaterFlowRate ()
      {
        return this->SimFlowTerm_MinColdWaterFlowRate_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinColdWaterFlowRate (const SimFlowTerm_MinColdWaterFlowRate_type& x)
      {
        this->SimFlowTerm_MinColdWaterFlowRate_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_MinColdWaterFlowRate (const SimFlowTerm_MinColdWaterFlowRate_optional& x)
      {
        this->SimFlowTerm_MinColdWaterFlowRate_ = x;
      }

      const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_CoolingConvergTol_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingConvergTol () const
      {
        return this->SimFlowTerm_CoolingConvergTol_;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::SimFlowTerm_CoolingConvergTol_optional& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingConvergTol ()
      {
        return this->SimFlowTerm_CoolingConvergTol_;
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingConvergTol (const SimFlowTerm_CoolingConvergTol_type& x)
      {
        this->SimFlowTerm_CoolingConvergTol_.set (x);
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerm_CoolingConvergTol (const SimFlowTerm_CoolingConvergTol_optional& x)
      {
        this->SimFlowTerm_CoolingConvergTol_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction
      //

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal (RefId),
        SimFlowTerm_AvailSchedName_ (this),
        SimFlowTerm_AirOutNodeName_ (this),
        SimFlowTerm_HeatingCoilObjType_ (this),
        SimFlowTerm_HeatingCoilName_ (this),
        SimFlowTerm_HeatingConvergTol_ (this),
        SimFlowTerm_SupplyAirInletNodeName_ (this),
        SimFlowTerm_ZoneMixerName_ (this),
        SimFlowTerm_MaxTotalAirFlowRate_ (this),
        SimFlowTerm_InductionRatio_ (this),
        SimFlowTerm_InducedAirInletNodeName_ (this),
        SimFlowTerm_HotWaterInletNodeName_ (this),
        SimFlowTerm_ColdWaterInletNodeName_ (this),
        SimFlowTerm_MaxHotWaterFlowRate_ (this),
        SimFlowTerm_MinHotWaterFlowRate_ (this),
        SimFlowTerm_CoolingCoilObjType_ (this),
        SimFlowTerm_CoolingCoilName_ (this),
        SimFlowTerm_MaxColdWaterFlowRate_ (this),
        SimFlowTerm_MinColdWaterFlowRate_ (this),
        SimFlowTerm_CoolingConvergTol_ (this)
      {
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction (const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction& x,
                                                                ::xml_schema::flags f,
                                                                ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal (x, f, c),
        SimFlowTerm_AvailSchedName_ (x.SimFlowTerm_AvailSchedName_, f, this),
        SimFlowTerm_AirOutNodeName_ (x.SimFlowTerm_AirOutNodeName_, f, this),
        SimFlowTerm_HeatingCoilObjType_ (x.SimFlowTerm_HeatingCoilObjType_, f, this),
        SimFlowTerm_HeatingCoilName_ (x.SimFlowTerm_HeatingCoilName_, f, this),
        SimFlowTerm_HeatingConvergTol_ (x.SimFlowTerm_HeatingConvergTol_, f, this),
        SimFlowTerm_SupplyAirInletNodeName_ (x.SimFlowTerm_SupplyAirInletNodeName_, f, this),
        SimFlowTerm_ZoneMixerName_ (x.SimFlowTerm_ZoneMixerName_, f, this),
        SimFlowTerm_MaxTotalAirFlowRate_ (x.SimFlowTerm_MaxTotalAirFlowRate_, f, this),
        SimFlowTerm_InductionRatio_ (x.SimFlowTerm_InductionRatio_, f, this),
        SimFlowTerm_InducedAirInletNodeName_ (x.SimFlowTerm_InducedAirInletNodeName_, f, this),
        SimFlowTerm_HotWaterInletNodeName_ (x.SimFlowTerm_HotWaterInletNodeName_, f, this),
        SimFlowTerm_ColdWaterInletNodeName_ (x.SimFlowTerm_ColdWaterInletNodeName_, f, this),
        SimFlowTerm_MaxHotWaterFlowRate_ (x.SimFlowTerm_MaxHotWaterFlowRate_, f, this),
        SimFlowTerm_MinHotWaterFlowRate_ (x.SimFlowTerm_MinHotWaterFlowRate_, f, this),
        SimFlowTerm_CoolingCoilObjType_ (x.SimFlowTerm_CoolingCoilObjType_, f, this),
        SimFlowTerm_CoolingCoilName_ (x.SimFlowTerm_CoolingCoilName_, f, this),
        SimFlowTerm_MaxColdWaterFlowRate_ (x.SimFlowTerm_MaxColdWaterFlowRate_, f, this),
        SimFlowTerm_MinColdWaterFlowRate_ (x.SimFlowTerm_MinColdWaterFlowRate_, f, this),
        SimFlowTerm_CoolingConvergTol_ (x.SimFlowTerm_CoolingConvergTol_, f, this)
      {
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction (const ::xercesc::DOMElement& e,
                                                                ::xml_schema::flags f,
                                                                ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal (e, f | ::xml_schema::flags::base, c),
        SimFlowTerm_AvailSchedName_ (this),
        SimFlowTerm_AirOutNodeName_ (this),
        SimFlowTerm_HeatingCoilObjType_ (this),
        SimFlowTerm_HeatingCoilName_ (this),
        SimFlowTerm_HeatingConvergTol_ (this),
        SimFlowTerm_SupplyAirInletNodeName_ (this),
        SimFlowTerm_ZoneMixerName_ (this),
        SimFlowTerm_MaxTotalAirFlowRate_ (this),
        SimFlowTerm_InductionRatio_ (this),
        SimFlowTerm_InducedAirInletNodeName_ (this),
        SimFlowTerm_HotWaterInletNodeName_ (this),
        SimFlowTerm_ColdWaterInletNodeName_ (this),
        SimFlowTerm_MaxHotWaterFlowRate_ (this),
        SimFlowTerm_MinHotWaterFlowRate_ (this),
        SimFlowTerm_CoolingCoilObjType_ (this),
        SimFlowTerm_CoolingCoilName_ (this),
        SimFlowTerm_MaxColdWaterFlowRate_ (this),
        SimFlowTerm_MinColdWaterFlowRate_ (this),
        SimFlowTerm_CoolingConvergTol_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowTerm_AvailSchedName
          //
          if (n.name () == "SimFlowTerm_AvailSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_AvailSchedName_type > r (
              SimFlowTerm_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowTerm_AvailSchedName_)
            {
              this->SimFlowTerm_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_AirOutNodeName
          //
          if (n.name () == "SimFlowTerm_AirOutNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_AirOutNodeName_type > r (
              SimFlowTerm_AirOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_AirOutNodeName_)
            {
              this->SimFlowTerm_AirOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_HeatingCoilObjType
          //
          if (n.name () == "SimFlowTerm_HeatingCoilObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_HeatingCoilObjType_type > r (
              SimFlowTerm_HeatingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowTerm_HeatingCoilObjType_)
            {
              this->SimFlowTerm_HeatingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowTerm_HeatingCoilName
          //
          if (n.name () == "SimFlowTerm_HeatingCoilName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_HeatingCoilName_type > r (
              SimFlowTerm_HeatingCoilName_traits::create (i, f, this));

            if (!this->SimFlowTerm_HeatingCoilName_)
            {
              this->SimFlowTerm_HeatingCoilName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_HeatingConvergTol
          //
          if (n.name () == "SimFlowTerm_HeatingConvergTol" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_HeatingConvergTol_)
            {
              this->SimFlowTerm_HeatingConvergTol_.set (SimFlowTerm_HeatingConvergTol_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_SupplyAirInletNodeName
          //
          if (n.name () == "SimFlowTerm_SupplyAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_SupplyAirInletNodeName_type > r (
              SimFlowTerm_SupplyAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_SupplyAirInletNodeName_)
            {
              this->SimFlowTerm_SupplyAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_ZoneMixerName
          //
          if (n.name () == "SimFlowTerm_ZoneMixerName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_ZoneMixerName_type > r (
              SimFlowTerm_ZoneMixerName_traits::create (i, f, this));

            if (!this->SimFlowTerm_ZoneMixerName_)
            {
              this->SimFlowTerm_ZoneMixerName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_MaxTotalAirFlowRate
          //
          if (n.name () == "SimFlowTerm_MaxTotalAirFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_MaxTotalAirFlowRate_)
            {
              this->SimFlowTerm_MaxTotalAirFlowRate_.set (SimFlowTerm_MaxTotalAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_InductionRatio
          //
          if (n.name () == "SimFlowTerm_InductionRatio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_InductionRatio_)
            {
              this->SimFlowTerm_InductionRatio_.set (SimFlowTerm_InductionRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_InducedAirInletNodeName
          //
          if (n.name () == "SimFlowTerm_InducedAirInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_InducedAirInletNodeName_type > r (
              SimFlowTerm_InducedAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_InducedAirInletNodeName_)
            {
              this->SimFlowTerm_InducedAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_HotWaterInletNodeName
          //
          if (n.name () == "SimFlowTerm_HotWaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_HotWaterInletNodeName_type > r (
              SimFlowTerm_HotWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_HotWaterInletNodeName_)
            {
              this->SimFlowTerm_HotWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_ColdWaterInletNodeName
          //
          if (n.name () == "SimFlowTerm_ColdWaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_ColdWaterInletNodeName_type > r (
              SimFlowTerm_ColdWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_ColdWaterInletNodeName_)
            {
              this->SimFlowTerm_ColdWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_MaxHotWaterFlowRate
          //
          if (n.name () == "SimFlowTerm_MaxHotWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_MaxHotWaterFlowRate_)
            {
              this->SimFlowTerm_MaxHotWaterFlowRate_.set (SimFlowTerm_MaxHotWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_MinHotWaterFlowRate
          //
          if (n.name () == "SimFlowTerm_MinHotWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_MinHotWaterFlowRate_)
            {
              this->SimFlowTerm_MinHotWaterFlowRate_.set (SimFlowTerm_MinHotWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_CoolingCoilObjType
          //
          if (n.name () == "SimFlowTerm_CoolingCoilObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_CoolingCoilObjType_type > r (
              SimFlowTerm_CoolingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowTerm_CoolingCoilObjType_)
            {
              this->SimFlowTerm_CoolingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowTerm_CoolingCoilName
          //
          if (n.name () == "SimFlowTerm_CoolingCoilName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_CoolingCoilName_type > r (
              SimFlowTerm_CoolingCoilName_traits::create (i, f, this));

            if (!this->SimFlowTerm_CoolingCoilName_)
            {
              this->SimFlowTerm_CoolingCoilName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_MaxColdWaterFlowRate
          //
          if (n.name () == "SimFlowTerm_MaxColdWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_MaxColdWaterFlowRate_)
            {
              this->SimFlowTerm_MaxColdWaterFlowRate_.set (SimFlowTerm_MaxColdWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_MinColdWaterFlowRate
          //
          if (n.name () == "SimFlowTerm_MinColdWaterFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_MinColdWaterFlowRate_)
            {
              this->SimFlowTerm_MinColdWaterFlowRate_.set (SimFlowTerm_MinColdWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_CoolingConvergTol
          //
          if (n.name () == "SimFlowTerm_CoolingConvergTol" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowTerm_CoolingConvergTol_)
            {
              this->SimFlowTerm_CoolingConvergTol_.set (SimFlowTerm_CoolingConvergTol_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction* SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction (*this, f, c);
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction& SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      operator= (const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal& > (*this) = x;
          this->SimFlowTerm_AvailSchedName_ = x.SimFlowTerm_AvailSchedName_;
          this->SimFlowTerm_AirOutNodeName_ = x.SimFlowTerm_AirOutNodeName_;
          this->SimFlowTerm_HeatingCoilObjType_ = x.SimFlowTerm_HeatingCoilObjType_;
          this->SimFlowTerm_HeatingCoilName_ = x.SimFlowTerm_HeatingCoilName_;
          this->SimFlowTerm_HeatingConvergTol_ = x.SimFlowTerm_HeatingConvergTol_;
          this->SimFlowTerm_SupplyAirInletNodeName_ = x.SimFlowTerm_SupplyAirInletNodeName_;
          this->SimFlowTerm_ZoneMixerName_ = x.SimFlowTerm_ZoneMixerName_;
          this->SimFlowTerm_MaxTotalAirFlowRate_ = x.SimFlowTerm_MaxTotalAirFlowRate_;
          this->SimFlowTerm_InductionRatio_ = x.SimFlowTerm_InductionRatio_;
          this->SimFlowTerm_InducedAirInletNodeName_ = x.SimFlowTerm_InducedAirInletNodeName_;
          this->SimFlowTerm_HotWaterInletNodeName_ = x.SimFlowTerm_HotWaterInletNodeName_;
          this->SimFlowTerm_ColdWaterInletNodeName_ = x.SimFlowTerm_ColdWaterInletNodeName_;
          this->SimFlowTerm_MaxHotWaterFlowRate_ = x.SimFlowTerm_MaxHotWaterFlowRate_;
          this->SimFlowTerm_MinHotWaterFlowRate_ = x.SimFlowTerm_MinHotWaterFlowRate_;
          this->SimFlowTerm_CoolingCoilObjType_ = x.SimFlowTerm_CoolingCoilObjType_;
          this->SimFlowTerm_CoolingCoilName_ = x.SimFlowTerm_CoolingCoilName_;
          this->SimFlowTerm_MaxColdWaterFlowRate_ = x.SimFlowTerm_MaxColdWaterFlowRate_;
          this->SimFlowTerm_MinColdWaterFlowRate_ = x.SimFlowTerm_MinColdWaterFlowRate_;
          this->SimFlowTerm_CoolingConvergTol_ = x.SimFlowTerm_CoolingConvergTol_;
        }

        return *this;
      }

      SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction::
      ~SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

