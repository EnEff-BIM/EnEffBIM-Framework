// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SIM_MODEL1_HXX
#define SIM_MODEL1_HXX

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::no_type_info< char > no_type_info;
  typedef ::xsd::cxx::tree::not_derived< char > not_derived;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace namespaces
{
  namespace Sim
  {
    namespace Model
    {
      class SimModel;
    }
  }
}


#include <memory>    // ::std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimActor_Actor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimActor_Actor_SpaceOccupant;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimActuator_DamperActuator_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimActuator_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimActuator_ElectricalRotor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimActuator_ValveActuator_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimActuator_VirtualActuator_EmsActuator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAddress_Postal_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAddress_Telecom_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAdjacentSiteParams_AdjacentSite_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimAnalyticalRepresentation_AnalyticalRepresentation_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppLibraryDefault_AppLibraryDefault_UserLibrary;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_OtherSystem_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_Space_CeilingPlenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_Space_FloorPlenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_Space_Space;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialContainer_Building;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialContainer_Project;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialContainer_Site;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppPreferences_AppPreferences_AutoSave;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppPreferences_AppPreferences_AutoSaveInterval;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppPreferences_AppPreferences_EPlusInstalPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppPreferences_AppPreferences_EPlusInstalVersion;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppPreferences_AppPreferences_MinMonthlyChargeType;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppPreferences_AppPreferences_MonthlyChargeType;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppUnitDefault_AppUnitDefault_DatabaseDefault;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimAppUnitDefault_AppUnitDefault_UserDisplayPreference;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimArbitraryProfileDef_ArbitraryProfile_Closed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimArbitraryProfileDef_ArbitraryProfile_Open;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_Array_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_BldgElementArray_Beam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_BldgElementArray_Column;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_BldgElementArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_DoorArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_PanelArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_SolarShadeArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimArrayParams_WindowArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBeam_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBeamParams_Beam_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBeamType_Beam_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBldgElementArrayParams_BldgElementArray_Beam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBldgElementArrayParams_BldgElementArray_Column;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBldgElementArrayParams_BldgElementArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_BldgElementProxy_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_ElectricalTerminal_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_HumanTransport_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_PlumbingFixture_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_Railing_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_Ramp_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_RampFlight_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_Stair_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_StairFlight_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgElementType_VirtualElement_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBldgParams_Building_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBldgSiteParams_BuildingSite_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimBldgStoryParams_BuildingStory_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBldgStoryType_BuildingStory_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuilding_AdjacentBuilding_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuilding_Building_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_SiteContextElement_BuildingShading;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_SiteContextElement_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_SiteContextElement_GroundPlane;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_SiteContextElement_SiteShading;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingElementProxy_ThermalMass_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingStory_BuildingStory_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimBuildingType_Building_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCalendarDate_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimCartesianTransformOperator_2D_NonUniform;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimCartesianTransformOperator_2D_Uniform;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimCartesianTransformOperator_3D_NonUniform;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimCartesianTransformOperator_3D_Uniform;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_BuildingElementClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_ConstructionEntityByFunction;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_OrganizationalBillingID;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_OrganizationalID;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpaceByFunction;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpaceCategoryBoma;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpaceCategoryOwner;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpaceTypeOwner;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpatialZoneEnergyType;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpatialZoneSecurityLevel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SpatialZoneType;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationReference_SubOrganizationalID;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_BomaSpaceCategoryClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_MasterFormat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OmniClass;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OwnerOrganizationalClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OwnerSecurityLevelClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OwnerSpaceTypeClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_OwnerZoneTypeClassification;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimClassification_ClassificationSystem_Uniformat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimColumn_Embedded_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimColumn_Freestanding_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimColumnParams_Column_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimColumnType_Column_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimComplexProperty_ComplexProp_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimCompositeProfileDef_CompositeProfile_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnectCurveGeom_Curve_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimConnectedFaceSet_ConnectedFaceSet_ClosedShell;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimConnectedFaceSet_ConnectedFaceSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimConnectedFaceSet_ConnectedFaceSet_OpenShell;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_AirFlow_CrossSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_AirFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_AirFlow_Linkage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_AirFlowNetwork_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_ChilledWaterFlow_CrossSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_ChilledWaterFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_CondenserFlow_CrossSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_CondenserFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_DigitalControl_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_Docking_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_ElectricalPowerFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_HotWaterFlow_CrossSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_HotWaterFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_MixedWaterFlow_CrossSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_MixedWaterFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_RefrigerantFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_SteamFlow_CrossSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_SteamFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_ZoneAirFlow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_ZoneAirFlow_ZoneCrossMixing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnection_ZoneAirFlow_ZoneMixing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnectPointGeom_Point_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnectPortGeom_Port_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimConnectSurfaceGeom_Surface_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_AvailabilityManager_AirLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_AvailabilityManager_PlantLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_Daylighting_DELight;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_Daylighting_Standard;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_DemandManager_AirLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_LightingControl_Continuous;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_LightingControl_ContinuousOff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_LightingControl_MotionSensor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_LightingControl_On_Off;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_LightingControl_Stepped;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_OperationManager_CondenserLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_OperationManager_PlantLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_OutdoorAir_EconomizerControl;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_OutdoorAir_EconomizerWithDemandControlledVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_OutdoorAir_OutdoorAirPreconditioningController;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_Programmable_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ShadingControl_Heating_CoolingLoads;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ShadingControl_On_Off;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ShadingControl_WindowTemp_Solar;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_SupplyAir_Humidity;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_SupplyAir_Temperature;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_SupplyWater_Temperature;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ThermalStorage_ThermalEnergyStorageTank;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_Ventilation_ContaminantControl;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_WaterCoil_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ZoneControlHumidity_Humidistat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ZoneControlHumidity_Humidistat1Zone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ZoneControlTemperature_Thermostat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ZoneControlTemperature_Thermostat1Zone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ZoneControlTemperature_ThermostatThermalComfort;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_HybridVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_NightCycle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_NightVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_Scheduled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_ScheduledOff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_AvailabilityManagerScheme_ScheduledOn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_CoolingLoad;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_HeatingLoad;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ControlAndSequencingScheme_Uncontrolled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_DemandManagerScheme_ElectricEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_DemandManagerScheme_ExteriorLights;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_DemandManagerScheme_Lights;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_DemandManagerScheme_Thermostats;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_GlobalVairable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_InternalVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_OutputVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_Program;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_ProgramCallingManager;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_Subroutine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_EnergyManagementScheme_TrendVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ExternalInterface_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_ExternalInterface_FunctionalMockupUnit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_OperatingScheme_UncontrolledOperationScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_ColdestZoneReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_DuctStaticPressure;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_EnteringReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_EnteringResetIdeal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_FollowGroundTemperature;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_MixedAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_MostHumidZoneReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_OutdoorAirReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_ScheduledSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SingleZone_Cooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SingleZone_Heating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_SingleZone_Reheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_WarmestZoneReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_DualSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_SingleCooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_SingleHeating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_SingleHeatingOrCooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_ComponentCost_Adjustments;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_ComponentCost_LineItem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_ComponentCost_Reference;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_LifeCycleCost_NonrecurringCost;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_LifeCycleCost_Parameters;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_LifeCycleCost_RecurringCosts;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_LifeCycleCost_UseAdjustment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_LifeCycleCost_UsePriceEscalation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_UtilityCost_ChargeBlock;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_UtilityCost_ChargeSimple;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_UtilityCost_CostRatchet;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_UtilityCost_CostVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_UtilityCost_Qualify;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCost_UtilityCost_Tariff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimCurtainWall_CurtainWall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCurtainWallParams_CurtainWall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimCurtainWallType_CurtainWall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCurveStyle_CurveStyle_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCurveStyle_CurveStyle_Font;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCurveStyle_CurveStyle_FontAndScaling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimCurveStyle_CurveStyle_FontPattern;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDaylightingAssembly_DaylightingAssembly_LightShelf;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDaylightingAssembly_DaylightingAssembly_LightTube;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDaylightingAssembly_DaylightingAssembly_LightWell;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDerivedUnitType_DerivedUnit_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_AirFlowPort_Air_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_AirFlowPort_Air_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_AirFlowPort_Air_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_AirFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_AirFlowPort_ExhaustAir_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_AirFlowPort_OutdoorAir_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ChilledWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ChilledWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ChilledWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_CondenserFlowPort_CondenserFlow_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_CondenserFlowPort_CondenserFlow_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_CondenserFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_AirLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CHWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_HWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_MxWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_RFGLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_STMLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControlPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControlPort_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControlPort_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DigitalControlPort_DigitalVirtual;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_DistributionPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ElectricalFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ElectricalFlowPort_Electrical_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ElectricalFlowPort_Electrical_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_HotWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_HotWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_HotWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_HotWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_HotWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_MixedWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_MixedWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_MixedWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_MixedWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_RefrigerationFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_RefrigerationFlowPort_Refrigeration_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_SteamFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_SteamFlowPort_Steam_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_SteamFlowPort_Steam_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_SteamFlowPort_Steam_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ZoneAirFlowPort_Air_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDistributionPort_ZoneAirFlowPort_Air_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_GlazedDoor_Exterior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_GlazedDoor_ExteriorDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_GlazedDoor_FrameAndDivider;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_GlazedDoor_Interior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_OpaqueDoor_Exterior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_OpaqueDoor_ExteriorDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoor_OpaqueDoor_Interior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDoorArrayParams_DoorArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDoorLiningProps_DoorLiningProps_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDoorPanelProps_DoorPanelProps_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDoorParams_Door_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimDoorType_Door_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimDwgXrefParams_DwgXref_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimEdge_Edge_EdgeCurve;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimEdge_Edge_OrientedEdge;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimEdge_Edge_Subedge;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimElementQuantity_ElementQuantity_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimExtendedMaterialProps_ExtendedMatlProps_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimExternalReference_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimExternalReference_DocumentReference_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimExternalReference_ExternalReference_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimExternalReference_LibraryReference_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimExternalReference_PropertyReference_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFace_Face_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFace_Face_FaceSurface;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFaceBound_FaceBound_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFaceBound_FaceBound_FaceOuterBound;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Opening_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Opening_Detailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Opening_Horizontal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Opening_Simple;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Surface_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_SurfaceCrack_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureAirFlowNetwork_Zone_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureElementAddition_ProjectionElement_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureElementSubtraction_EdgeFeature_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureElementSubtraction_EdgeFeature_RoundedEdge;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureElementSubtraction_SlotFeature_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimFeatureElementSubtraction_Void_Opening;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_DistrictSupply_Cooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_DistrictSupply_Heating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_PurchasedSupply_Cooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_PurchasedSupply_Heating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowCompoundEqmt_WaterUse_Connections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_Exhaust;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_FaceBypass;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_MixedAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_OutsideAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_Recirculation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Damper_Relief;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_ElectricalSwitch_On_Off;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_ElectricalSwitch_Variable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Valve_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Valve_EMSValve;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Valve_NonReturnValve;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowController_Valve_TemperingValve;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ConvectiveHeater_Electric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ConvectiveHeater_Water;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Dehumidifier_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Dehumidifier_NoFans;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_AirToAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_CondenserToCondenser;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_HotWaterToCondenser;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_HotWaterToHotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Electrical_Transformer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ElectricalInverter_LookUpTable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_ElectricalInverter_Simple;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExEarthToWater_Surface;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExEarthToWater_Vertical;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExWaterToWater_Pond;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_Humidifier_ElectricSteam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_HighTemp;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_RadiantBeam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_RadiantDevice_Slab;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransferStorage_HotWaterTank_HeatPump;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransferStorage_HotWaterTank_Mixed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowEnergyTransferStorage_HotWaterTank_Stratified;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Difusser_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Electrical_Transformer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_FlowElementProxy_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_AirMixer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_AirMixerOutdoor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_AirMixerZoneReturn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_CondenserMixer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_DemandProxyMixer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_SteamMixer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Mixer_WaterMixer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Splitter_AirSplitter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Splitter_AirSplitterZoneSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Splitter_CondenserSplitter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Splitter_DemandProxySplitter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Splitter_SteamSplitter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowFitting_Splitter_WaterSplitter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Fan_NightVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Fan_ZoneExhaust;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_ConstantSpeedReturn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_ConstantSpeedSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_UserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_VariableSpeedReturn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_VariableSpeedSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_VarSpeedCondensateReturn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_Pump_VarSpeedCondensateSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_PumpSet_ConstantSpeed2;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_PumpSet_ConstantSpeed3;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_PumpSet_VariableSpeed2;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_PumpSet_VariableSpeed3;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_ReturnFan_ComponentModel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_ReturnFan_ConstantVolume;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_ReturnFan_OnOff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_ReturnFan_VariableVolume;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_SupplyFan_ComponentModel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_SupplyFan_ConstantVolume;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_SupplyFan_OnOff;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowMover_SupplyFan_VariableVolume;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Boiler_BoilerHotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Boiler_BoilerSteam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Boiler_UserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_Absorption;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_AbsorptionIndirect;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_ChillerVaporCompressionElectric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_Chiller_UserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ChillerHeater_AbsorptionDirectFired;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_CoolingTower_SingleSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_CoolingTower_TwoSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_CoolingTower_UserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_CoolingTower_VariableSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_CombustionTurbine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_DefaultGenerator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCell;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellAirSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellInverter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellPowerModule;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellStackCooler;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_FuelSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_InternalCombustionEngine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_MicroCHP;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_MicroTurbine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_Photovoltaic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_ElectricalGenerator_WindTurbine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatAndPower_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_AirToAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_AirToAir_MultiSpeed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_GroundSource;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_WaterToAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarPhotoVoltaic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarThermalAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowPlant_SolarDevice_SolarThermalWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Duct_AirFlowNetworkDistribution;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Duct_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Filter_Bag;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Filter_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Filter_Electrostatic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Filter_HEPA;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Filter_Panel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Grill_Return;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Grill_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Louver_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Louver_Exhaust;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Louver_Intake;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Louver_Safety;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Louver_Ventilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Pipe_Adiabatic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Pipe_Adiabatic_Steam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Pipe_Indoor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Pipe_Outdoor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Pipe_Underground;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Pipe_UndergroundPipeSegment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Plenum_DedicatedReturn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Plenum_DedicatedSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Plenum_SharedReturn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Plenum_SharedSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_VirtualComponent_ConstantPressureDrop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_VirtualComponent_Leak;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_VirtualComponent_LeakageRatio;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowSegment_Wire_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_ElectricalStorage_BatteryBank;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_ElectricalStorage_DefaultElectricalStorage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_ThermalStorage_ThermalStorageIceSimple;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_WaterStorage_CleanWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_WaterStorage_GrayWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowStorage_WaterStorage_RainWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_ConstantVolume_Reheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_ParallelPIU_Reheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_SeriesPIU_Reheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_SingleDuctUserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_Uncontrolled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_VAV_NoReheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_VAV_Reheat;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_ElectricalTerminal_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_ElectricalTerminal_ElectricalOutlet;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_ElectricalTerminal_LightingFixture;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_DishWasher;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_HotWaterFixtures;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_Shower;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_Sink;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_Toilet;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimFlowTerminal_PlumbingTerminal_Urinal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_Concentration_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_GlycolConcentration_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_Name_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_Saturated_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_SuperHeated_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimFluid_Temperatures_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimFurnishingElement_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimFurnishingElementType_Furnishing_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimFurnishingElementType_Furniture_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimFurnitureType_Furniture_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomBooleanResult_BooleanClippingResult_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomBooleanResult_BooleanResult_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomBoundingBox_BoundingBox_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCsgPrimative3D_CsgPrimative3D_Block;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCsgPrimative3D_CsgPrimative3D_Sphere;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_2DCompositeCurve_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_BoundedCurve_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_Circle_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_CompositeCurve_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_CompositeCurveSegment_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_Ellipse_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_Line_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_OffsetCurve2D_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_OffsetCurve3D_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_Polyline_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomCurve_TrimmedCurve_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomPoint_Point_CartesianPoint;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomPoint_Point_PointOnCurve;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomPoint_Point_PointOnSurface;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSet_GeometricCurveSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSet_GeometricSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_CSGSolid_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_FacetedBrep_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_FacetedBrepWithVoids_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_ManifoldSolidBrep_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSolidModel_SweptDiskSolid_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_BoundedSurface_CurveBoundedPlane;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_BoundedSurface_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_BoundedSurface_RectangularTrimmedSurface;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_ElementarySurface_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_ElementarySurface_Plane;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_SweptSurface_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurface_SweptSurface_SurfaceOfRevolution;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurfaceModel_FaceBasedSurfaceModel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomSurfaceModel_ShellBasedSurfaceModel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomVector_Vector_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGeomVector_Vector_Direction;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimGlazingPanelParams_Panel_Glazing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimGridAxis_GridAxis_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimGridPlacement_GridPlacement_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimGroundHeatTransferBasement_BasementTransferModel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimGroundHeatTransferSlab_SlabTransferModel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgCompGroup_AirTerminal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgCompGroup_Coil;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgCompGroup_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgCompGroup_Sensor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgCompGroup_ZoneController;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgCompGroup_ZoneEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BldgElementGroup_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_BuildingGroup_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ConnectorList_AirConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ConnectorList_ChilledWaterConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ConnectorList_CondenserConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ConnectorList_ControllerConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ConnectorList_HotWaterConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ConnectorList_SteamConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_ControllerList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_DefaultGroup_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_DefaultList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_CondenserEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_ElectricalLoadCenter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_OutdoorAirSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_OutdoorAirUnit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_PlantEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_RefrigerationCompressor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_RefrigerationEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_RefrigerationLoadTransfer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_EquipmentList_ZoneHvac;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_HvacDemandGroup_AirSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_HvacDemandGroup_RefrigerationSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_HvacDemandGroup_WaterSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_MaterialList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_NodeList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_NodeList_OutdoorAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Daylighting;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Environmental;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Fuel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Geometry;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Meters;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Reports;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_OutputRequestList_Variables;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_Refrigeration_ChillerSet;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_AirLoopAvailabilityMgrScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_AirTempControlScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_CondenserOperatingScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_DemandManagerScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_MultiZoneHumidityScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_PlantOperatingScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_SingleZoneHumidityScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SchemeList_WaterTempControlScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SpatialZoneGroup_Daylighting;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SpatialZoneGroup_NaturalVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SpatialZoneGroup_PlenumZoneGroup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SpatialZoneGroup_ZoneGroup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SpatialZoneGroup_ZoneHvacGroup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SurfaceGroup_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SurfaceGroup_LowTempRadiant;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_SurfaceGroup_VentilatedSlab;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_TemplateOutputRequestList_Daylighting;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_TemplateOutputRequestList_FuelAndEnvironmental;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_TemplateOutputRequestList_Geometry;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_TemplateOutputRequestList_Meters;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_TemplateOutputRequestList_Reports;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_TemplateOutputRequestList_Variables;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimGroup_VrfList_VrfTerminals;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimHeatTransAlgProps_HeatTransferAlgProps_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirSettings_UserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirTempPattern_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_ComfortViewFactorAngles_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Equipment_Electric;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Equipment_Gas;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Equipment_HotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Equipment_Other;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Equipment_Steam;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_Lights_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_People_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimIrregularTimeSeries_Irregular_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimIrregularTimeSeriesValue_TimeSeries_Irregular;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ConnectorList_AirConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ConnectorList_ChilledWaterConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ConnectorList_CondenserConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ConnectorList_ControllerConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ConnectorList_HotWaterConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ConnectorList_SteamConnections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_ControllerList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_DefaultList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_CondenserEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_ElectricalLoadCenter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_OutdoorAirSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_OutdoorAirUnit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_PlantEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_RefrigerationCompressor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_RefrigerationEquipment;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_RefrigerationLoadTransfer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_EquipmentList_ZoneHvac;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_MaterialList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_NodeList_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_NodeList_OutdoorAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Daylighting;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Environmental;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Fuel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Geometry;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Meters;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Reports;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_OutputRequestList_Variables;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_Refrigeration_ChillerSet;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_AirLoopAvailabilityMgrScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_AirTempControlScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_CondenserOperatingScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_DemandManagerScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_MultiZoneHumidityScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_PlantLoopAvailabilityMgrScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_PlantOperatingScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_SingleZoneHumidityScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_SchemeList_WaterTempControlScheme;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_TemplateOutputRequestList_Daylighting;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_TemplateOutputRequestList_FuelAndEnvironmental;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_TemplateOutputRequestList_Geometry;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_TemplateOutputRequestList_Meters;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_TemplateOutputRequestList_Reports;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_TemplateOutputRequestList_Variables;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimList_VrfList_VrfTerminals;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimLocalPlacement_LocalPlacement_AbsolutePlacement;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimLocalPlacement_LocalPlacement_RelativePlacement;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimLocationAndWeather_DesignDay_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimLocationAndWeather_Location_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimLocationAndWeather_WeatherFile_ConditionType;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimLocationAndWeather_WeatherFile_Days;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimLocationAndWeather_WeatherFile_WeatherStation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimLocationAndWeather_WeatherProperty_SkyTemperature;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimLoop_Loop_EdgeLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimLoop_Loop_PolyLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimLoop_Loop_VertexLoop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimMappedRepresentationItem_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Blind;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_ComplexShade;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Gap;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Gas;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_GasMixture;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Glazing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Screen;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Shade;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_SimpleGlazingSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_GlazingMaterial_Thermochromic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_AirGap;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_Composite;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_InfraredTransparent;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_Insulation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_InsulationMovable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_NoMass;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_OpaqueMaterial_Vegetation;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterial_VirtualBoundary_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayer_GlazingMaterialLayer_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayer_OpaqueMaterialLayer_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayer_VirtualBoundaryLayer_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_GlazingLayerSet_CurtainWall;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_GlazingLayerSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_GlazingLayerSet_GlassDoor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_GlazingLayerSet_Window;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_GlazingLayerSet_WindowDataFile;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Ceiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Door;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Floor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_InternalSource;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Landing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Roof;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMaterialLayerSet_OpaqueLayerSet_Wall;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_AreaMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_CountMeasure_AirChangesPerhour;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_CountMeasure_Count;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_EnergyMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_EnergyMeasure_WattsPerAreaMeasure;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_EnergyMeasure_WattsPerPerson;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_LengthMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_MassMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_MonetaryMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_PersonsPerAreaMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_RatioMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_RatioMeasure_PositiveRatioMeasure;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_RotationalAngleMeasure_Degrees;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_ThermodynamicTemperatureMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_VolumeMeasure_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimMember_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMemberParams_Profile_Member;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMemberProfileProperties_Beam_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMemberProfileProperties_Column_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimMemberProfileProperties_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimModelRepresentationContext_GeometricRepresentationContext_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimModelRepresentationContext_GeometricRepresentationSubContext_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimModelRepresentationContext_RepresentationContext_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirflowNetworkNode_AirDistributionNode;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirflowNetworkNode_ExternalNode;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirflowNetworkNode_ZoneNode;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirFlowPort_Air_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirFlowPort_Air_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirFlowPort_Air_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirFlowPort_ExhaustAir_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_AirFlowPort_OutdoorAir_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ChilledWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ChilledWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ChilledWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ChilledWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ChilledWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ChilledWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_CondenserFlowPort_CondenserFlow_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_CondenserFlowPort_CondenserFlow_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_CondenserFlowPort_CondenserFlow_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_CondenserFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DaylightingReferencePoint_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_AirLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_AirLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_AirLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CHWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CHWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CHWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_CWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_HWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_HWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_HWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_MxWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_MxWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_MxWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_RFGLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_RFGLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_RFGLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_STMLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_STMLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControl_STMLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControlPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControlPort_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControlPort_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControlPort_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DigitalControlPort_DigitalVirtual;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_DistributionPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_Docking_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_Docking_Thermalzone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ElectricalFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ElectricalFlowPort_Electrical_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ElectricalFlowPort_Electrical_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ElectricalFlowPort_Electrical_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_HotWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_HotWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_HotWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_HotWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_HotWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_HotWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_MixedWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_MixedWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_MixedWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_MixedWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_MixedWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_MixedWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_Node_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_Node_OutdoorAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_Port_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_RefrigerationFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_RefrigerationFlowPort_Refrigeration_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_RefrigerationFlowPort_Refrigeration_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_RefrigerationFlowPort_Refrigeration_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_SetpointNode_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_SteamFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_SteamFlowPort_Steam_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_SteamFlowPort_Steam_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_SteamFlowPort_Steam_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ZoneAirFlowPort_Air_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ZoneAirFlowPort_Air_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimNode_ZoneAirNode_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimObjectOutputRequestSet_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimOpeningType_Opening_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimOrganization_Organization_Architect;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimOrganization_Organization_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimOrganization_Organization_Engineer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimOrganization_Organization_Owner;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimOwnerHistory_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimPanel_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPanelArrayParams_PanelArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPanelArrayParams_SolarShadeArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPanelParams_Panel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPanelParams_Panel_Glazing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPanelParams_Panel_SolarShading;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_C_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_Circle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_Ellipse;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_I_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_L_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_Rectangle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_T_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_U_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimParameterizedProfileDef_ParameterizedProfile_Z_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Bicubic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Biquadratic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Cubic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_DoubleExponentialDecay;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Exponent;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_ExponentialDecay;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_ExponentialSkewNormal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_FanPressureRise;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Linear;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_QuadLinear;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Quadratic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_QuadraticLinear;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Quartic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_RectangularHyperbola1;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_RectangularHyperbola2;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_Sigmoid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Mathematical_TriQuadratic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceCurve_Relational_PressureDrop;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceTable_Variable_MultiLookup;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceTable_Variable_OneIndependent;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPerformanceTable_Variable_TwoIndependent;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPerson_Person_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPersonAndOrganization_PersonAndOrganization_Architect;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPersonAndOrganization_PersonAndOrganization_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPersonAndOrganization_PersonAndOrganization_Engineer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPersonAndOrganization_PersonAndOrganization_Owner;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPlacement_Axis1Placement_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPlacement_Axis2Placement2D_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimPlacement_Axis2Placement3D_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_AirFlowPort_Air_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_AirFlowPort_Air_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_AirFlowPort_Air_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_AirFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_AirFlowPort_ExhaustAir_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_AirFlowPort_OutdoorAir_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ChilledWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ChilledWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ChilledWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ChilledWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ChilledWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ChilledWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_CondenserFlowPort_CondenserFlow_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_CondenserFlowPort_CondenserFlow_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_CondenserFlowPort_CondenserFlow_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_CondenserFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_AirLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_AirLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_AirLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CHWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CHWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CHWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_CWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_HWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_HWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_HWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_MxWLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_MxWLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_MxWLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_RFGLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_RFGLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_RFGLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_STMLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_STMLoop_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControl_STMLoop_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControlPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControlPort_DigitalSignal_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControlPort_DigitalSignal_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControlPort_DigitalSignal_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DigitalControlPort_DigitalVirtual;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_DistributionPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_Docking_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_Docking_Thermalzone;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ElectricalFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ElectricalFlowPort_Electrical_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ElectricalFlowPort_Electrical_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ElectricalFlowPort_Electrical_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_HotWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_HotWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_HotWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_HotWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_HotWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_HotWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_MixedWaterFlowPort_CondensedWaterOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_MixedWaterFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_MixedWaterFlowPort_EvaporativeWaterIn;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_MixedWaterFlowPort_Water_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_MixedWaterFlowPort_Water_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_MixedWaterFlowPort_Water_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_Port_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_RefrigerationFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_RefrigerationFlowPort_Refrigeration_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_RefrigerationFlowPort_Refrigeration_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_RefrigerationFlowPort_Refrigeration_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_SteamFlowPort_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_SteamFlowPort_Steam_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_SteamFlowPort_Steam_InOrOut;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_SteamFlowPort_Steam_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ZoneAirFlowPort_Air_In;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPort_ZoneAirFlowPort_Air_Out;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPresentationLayerAssignment_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ArbitraryProfile_Closed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ArbitraryProfile_ClosedWithVoids;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ArbitraryProfile_Open;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_CompositeProfile_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_C_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_Circle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_Ellipse;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_HollowRectangle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_I_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_L_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_Rectangle;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_T_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_U_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimProfileDefinition_ParameterizedProfile_Z_Shape;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimProfileParams_Profile_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimProfileParams_Profile_Member;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimProject_Project_DesignAlternative;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPropertyListValue_SimpleProp_ListValue;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPropertySet_PropertySet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimPropertySingleValue_SimpleProp_SingleValue;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimRailing_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimRailing_GuardRailing_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimRailing_HandRailing_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimRailingParams_Railing_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimRamp_Ramp_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimRampFlight_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimRampFlightParams_RampFlight_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimRampParams_Ramp_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimReferenceByName_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Compressor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Condenser_AirCooled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Condenser_Cascade;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Condenser_EvaporativeCooled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Condenser_WaterCooled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_GasCooler_AirCooled;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_PackagedCompressorRack_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_RefrigeratedCase_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_RefrigerationChiller_AirChiller;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_Subcooler_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimRefrigerationSystemElement_WalkInCooler_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimRegularTimeSeries_Regular_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimRepresentationMap_RepresentationMap_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResourceConsumption_ExteriorConsumption_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResourceConsumption_ExteriorConsumption_Electricity;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResourceConsumption_ExteriorConsumption_Fuel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResourceConsumption_ExteriorConsumption_NaturalGas;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResourceConsumption_ExteriorConsumption_Water;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResourceConsumption_InteriorConsumption_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsGuide_ResultsGuide_CustomTemplate;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsGuide_ResultsGuide_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsGuide_ResultsGuide_PackageTemplate;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsTextInfo_ResultsTextInfo_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsVariables_ResultsVariables_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsView_ResultsView_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimResultsViewSet_ResultsViewSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimRoof_Roof_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_AirVelocitySensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_FireSensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_GasSensor_CO2Sensor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_GasSensor_SmokeSensor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_HeatSensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_LuxSensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_Meter_AirFlowRateMeter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_Meter_FluidFlowRateMeter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_Meter_HvacZoneWaterUseMeter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_MovementSensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_PressureSensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_RelativeHumidity_Type1;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_RelativeHumidity_Type2;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_SolarRadiation_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_SoundSensor_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_TemperatureSensor_DryBulb;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_TemperatureSensor_Fluid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_TemperatureSensor_Radiant;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_TemperatureSensor_WetBulb;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      class SimSensor_VirtualSensor_EmsSensor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimShapeRepresentation_ShapeRepresentation_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimpleProperty_SimpleProp_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimpleProperty_SimpleProp_ListValue;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimpleProperty_SimpleProp_SingleValue;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationConfiguration_SimulationConfiguration_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputFormat_ControlReportingTolerances_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputFormat_ControlSizingStyle_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputFormat_ControlSurfaceColorScheme_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputFormat_ControlTableStyle_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputFormat_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Daylighting_DaylightFactors;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqDebuggingData;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqDiagnostics;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqPreprocessorMessage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqSchedules;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqSQLite;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_General_ReportReqVariableDictionary;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Geometry_ReportReqConstructions;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Geometry_ReportReqSurfacesList;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_EnergyEndUseCategory;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_MeterCumulative;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_MeterFileOnly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_VarReqMeter;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_VarReqMeterCustom;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_StandardReports_TableMonthly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_StandardReports_TableSummaryReports;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_StandardReports_TableTimeBins;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Algorithm_HeatBalanceAlgorithm;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_ConvectionCoefficients_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_FluidProperties_Concentration;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_FluidProperties_GlycolConcentrations;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_FluidProperties_Names;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_FluidProperties_Saturated;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_FluidProperties_SuperHeated;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_FluidProperties_Temperatures;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_GroundHeatTransfer_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_HvacDesign_AirLoopSizing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_HvacDesign_Sizing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_HvacDesign_WaterLoopSizing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_HvacDesign_ZoneAIrDistribution;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_HvacDesign_ZoneSizing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Parametric_FileNameSuffix;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Parametric_Logic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Parametric_RunControl;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_Parametric_SetValueForRun;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SimulationControl_DaylightSavingTime;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SimulationControl_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SimulationControl_RunPeriod;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SimulationControl_RunPeriodCustomRange;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SimulationControl_SpecialDays;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SiteWindPressure_WindDirections;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SiteWindPressure_WindPressureValues;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SurfaceProperties_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationParameters_SurfaceProperties_VaporCoefficients;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSimulationRun_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSite_AdjacentSite_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSite_BuildingSite_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_ExteriorLighting;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_ExteriorSignage;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_Fuel;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_FuelCell;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_SolarHotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_SolarPhotovoltaic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_Water;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSiteAssembly_SiteAssembly_WindTurbine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSIUnitType_SiUnit_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Ceiling_InterzoneCeiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Ceiling_InterzoneCeilingAdiabatic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Ceiling_InterzoneCeilingDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_Adiabatic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_FloorOverAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_FloorOverAirDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_FloorOverEarth;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_FloorOverEarthDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_InterzoneFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_InterzoneFloorDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Floor_RaisedFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_Landing_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideCoefficients_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideCoefficients_Detailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideCoefficients_DetailedFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideCoefficients_DetailedRoofCeiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideConditionsModel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideConditionsModel_Detailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideConditionsModel_DetailedFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_OtherSideConditionsModel_DetailedRoofCeiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_RoofSlab_RoofUnderAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_RoofSlab_RoofUnderAirDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_RoofSlab_RoofUnderEarth;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlab_RoofSlab_RoofUnderEarthDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSlabParams_Slab_Ceiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSlabParams_Slab_Floor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSlabParams_Slab_Landing;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSlabParams_Slab_Roof;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSlabType_Slab_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSoftwareApplication_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSolarObsParams_SolarObstruction_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_Fin_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_Fin_Projection;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_Overhang_Continuous;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_Overhang_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_Overhang_Projection;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShade_ZoneDetailed_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSolarShadeArrayParams_SolarShadeArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSolarShadePanelParams_Panel_SolarShading;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSolarShadeType_SolarShade_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Occupied_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_CeilingPlenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_CeilingVoid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_FloorPlenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_FloorVoid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_Plenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_SlabOpeningVoid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpace_Unoccupied_WallOpeningVoid;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceBoundary_FirstLevel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceBoundary_SecondLevel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceBoundary_SecondLevel_SubTypeA;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceBoundary_SecondLevel_SubTypeB;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceBoundary_SecondLevel_SubTypeC;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceOccupant_Actor_SpaceOccupant;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimSpaceParams_Space_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpaceType_Space_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_OutdoorAir_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_Plenum_CeilingPlenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_Plenum_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_Plenum_FloorPlenum;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_SecurityZone_Public;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_SecurityZone_Security;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_SecurityZone_StaffOnly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSpatialZone_ThermalZone_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimStair_Stair_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimStairFlight_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimStairFlightParams_StairFlight_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimStairParams_Stair_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_AirFlowNetwork_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Electrical_SystemsContainer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ElectricalLighting_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ElectricalLighting_LightingCircuit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ElectricalPower_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ElectroMechanical_PV_SolarThermal;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Hvac_SystemsContainer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_AirBranch;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_DemandSideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_DemandSideZoneHvac;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_OutdoorAir;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_OutdoorAirExhaust;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_OutdoorAirSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_SupplySideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacAir_SupplySideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_DemandSideDemandComponents;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_DemandSideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacChilledWater_WaterBranch;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_CondenserBranch;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_DemandSideDemandComponents;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_DemandSideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacCondenser_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_DemandSideDemandComponents;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_DemandSideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacHotWater_WaterBranch;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_DemandSideDemandComponents;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_DemandSideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacMixedWater_WaterBranch;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_DemandSideDemandComponents;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_DemandSideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_SteamBranch;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_HvacSteam_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Mechanical_SystemsContainer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_ColdWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_GrayWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_HotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_PotableWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_SystemsContainer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_UndergroundPipingCircuit;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_WasteWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_WaterUseSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Plumbing_WaterUseWell;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationPrimary_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationPrimary_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationPrimary_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationPrimary_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationSecondary_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationSecondary_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationSecondary_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationSecondary_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationTranscritical_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationTranscritical_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationTranscritical_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_RefrigerationTranscritical_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_SitePowerDemand_ElectricityConsuming;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_SitePowerDemand_FuelConsuming;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_SitePowerDemand_WaterConsuming;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_SitePowerGeneration_Other;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_SitePowerGeneration_Photovoltaic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_SitePowerGeneration_WindTurbine;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Transport_Elevator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Transport_Escalator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Transport_MovingWalkway;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_Transport_SystemsContainer;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_VariableRefrigerantFlow_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_VariableRefrigerantFlow_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_VariableRefrigerantFlow_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_VariableRefrigerantFlow_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_Control;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_ControlDemand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_ControlSupply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_Demand;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_DemandSideSupplyPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_DemandSideZoneHvac;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_FullSystem;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_Supply;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimSystem_ZoneHvacGroup_SupplySideReturnPath;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateConstructions_Constructions_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateDaylighting_Daylighting_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateLocation_Location_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateNaturalVentilation_NaturalVentilation_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateOutputFormatSet_OutputFormatSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateOutputRequestSet_OutputRequestSet_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateSimulationParameters_SimulationParameters_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateZoneConditions_ZoneConditions_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTemplateZoneLoads_ZoneLoads_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Calendar_Configuration;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Calendar_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Calendar_SpecialDays;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Compact_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Constant_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Day_Hourly;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Day_Interval;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Day_List;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_File_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Limits_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_TimeSeries_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Week_Compact;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Week_Daily;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesSchedule_Year_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesValue_TimeSeries_Irregular;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimTimeSeriesValue_TimeSeries_Regular;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimToplogicalRepresentation_TopologicalRepresentation_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimTransportSysAssembly_TransportSysAssembly_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimTransportSysAssembly_TransportSysAssembly_Elevator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimTransportSysAssembly_TransportSysAssembly_Escalator;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimTransportSysAssembly_TransportSysAssembly_MovingWalkway;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimValidationResultsAir_AirLoop_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimValidationResultsWater_WaterLoop_ChilledWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimValidationResultsWater_WaterLoop_Condenser;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimValidationResultsWater_WaterLoop_HotWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimValidationResultsWater_WaterLoop_MixedWater;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVentilationAssembly_VentilationAssembly_CoolTower_Shower;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVentilationAssembly_VentilationAssembly_EarthTube;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVentilationAssembly_VentilationAssembly_RefrigerationDoor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVentilationAssembly_VentilationAssembly_ThermalChimney;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeometry
    {
      class SimVertex_Vertex_Point;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Default_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Slab_Ceiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Slab_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Slab_Floor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Slab_OpeningFiller;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Wall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimVirtualElement_Wall_OpeningFiller;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimVirtualGridIntersection_VirtualGridIntersection_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideCoefficients_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideCoefficients_Detailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideCoefficients_DetailedFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideCoefficients_DetailedRoofCeiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideConditionsModel_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideConditionsModel_Detailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideConditionsModel_DetailedFloor;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_OtherSideConditionsModel_DetailedRoofCeiling;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_Adiabatic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_ExteriorAboveGrade;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_ExteriorAboveGradeDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_ExteriorAboveGradeStandard;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_ExteriorBelowGrade;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_ExteriorBelowGradeDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_ExteriorBelowGradeStandard;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_Interior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_InteriorDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWall_TypicalWall_InteriorStandard;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimWallParams_Wall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWallType_Wall_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindow_ComplexFenestration_ThermoChromic;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindow_TypicalWindow_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindow_TypicalWindow_Exterior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindow_TypicalWindow_ExteriorDetailed;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindow_TypicalWindow_FrameAndDivider;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindow_TypicalWindow_Interior;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimWindowArrayParams_WindowArray_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimWindowLiningProps_WindowLiningProps_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimWindowPanelProps_WindowPanelProps_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace ResourcesGeneral
    {
      class SimWindowParams_Window_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      class SimWindowType_Window_Default;
    }
  }
}

namespace namespaces
{
  namespace Sim
  {
    namespace Model
    {
      class SimModel: public ::xml_schema::type
      {
        public:
        // SimActor_Actor_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimActor_Actor_Default SimActor_Actor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimActor_Actor_Default_type > SimActor_Actor_Default_sequence;
        typedef SimActor_Actor_Default_sequence::iterator SimActor_Actor_Default_iterator;
        typedef SimActor_Actor_Default_sequence::const_iterator SimActor_Actor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActor_Actor_Default_type, char > SimActor_Actor_Default_traits;

        const SimActor_Actor_Default_sequence&
        SimActor_Actor_Default () const;

        SimActor_Actor_Default_sequence&
        SimActor_Actor_Default ();

        void
        SimActor_Actor_Default (const SimActor_Actor_Default_sequence& s);

        // SimActor_Actor_SpaceOccupant
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimActor_Actor_SpaceOccupant SimActor_Actor_SpaceOccupant_type;
        typedef ::xsd::cxx::tree::sequence< SimActor_Actor_SpaceOccupant_type > SimActor_Actor_SpaceOccupant_sequence;
        typedef SimActor_Actor_SpaceOccupant_sequence::iterator SimActor_Actor_SpaceOccupant_iterator;
        typedef SimActor_Actor_SpaceOccupant_sequence::const_iterator SimActor_Actor_SpaceOccupant_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActor_Actor_SpaceOccupant_type, char > SimActor_Actor_SpaceOccupant_traits;

        const SimActor_Actor_SpaceOccupant_sequence&
        SimActor_Actor_SpaceOccupant () const;

        SimActor_Actor_SpaceOccupant_sequence&
        SimActor_Actor_SpaceOccupant ();

        void
        SimActor_Actor_SpaceOccupant (const SimActor_Actor_SpaceOccupant_sequence& s);

        // SimActuator_DamperActuator_Default
        //
        typedef ::namespaces::Sim::MepModel::SimActuator_DamperActuator_Default SimActuator_DamperActuator_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimActuator_DamperActuator_Default_type > SimActuator_DamperActuator_Default_sequence;
        typedef SimActuator_DamperActuator_Default_sequence::iterator SimActuator_DamperActuator_Default_iterator;
        typedef SimActuator_DamperActuator_Default_sequence::const_iterator SimActuator_DamperActuator_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActuator_DamperActuator_Default_type, char > SimActuator_DamperActuator_Default_traits;

        const SimActuator_DamperActuator_Default_sequence&
        SimActuator_DamperActuator_Default () const;

        SimActuator_DamperActuator_Default_sequence&
        SimActuator_DamperActuator_Default ();

        void
        SimActuator_DamperActuator_Default (const SimActuator_DamperActuator_Default_sequence& s);

        // SimActuator_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimActuator_Default_Default SimActuator_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimActuator_Default_Default_type > SimActuator_Default_Default_sequence;
        typedef SimActuator_Default_Default_sequence::iterator SimActuator_Default_Default_iterator;
        typedef SimActuator_Default_Default_sequence::const_iterator SimActuator_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActuator_Default_Default_type, char > SimActuator_Default_Default_traits;

        const SimActuator_Default_Default_sequence&
        SimActuator_Default_Default () const;

        SimActuator_Default_Default_sequence&
        SimActuator_Default_Default ();

        void
        SimActuator_Default_Default (const SimActuator_Default_Default_sequence& s);

        // SimActuator_ElectricalRotor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimActuator_ElectricalRotor_Default SimActuator_ElectricalRotor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimActuator_ElectricalRotor_Default_type > SimActuator_ElectricalRotor_Default_sequence;
        typedef SimActuator_ElectricalRotor_Default_sequence::iterator SimActuator_ElectricalRotor_Default_iterator;
        typedef SimActuator_ElectricalRotor_Default_sequence::const_iterator SimActuator_ElectricalRotor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActuator_ElectricalRotor_Default_type, char > SimActuator_ElectricalRotor_Default_traits;

        const SimActuator_ElectricalRotor_Default_sequence&
        SimActuator_ElectricalRotor_Default () const;

        SimActuator_ElectricalRotor_Default_sequence&
        SimActuator_ElectricalRotor_Default ();

        void
        SimActuator_ElectricalRotor_Default (const SimActuator_ElectricalRotor_Default_sequence& s);

        // SimActuator_ValveActuator_Default
        //
        typedef ::namespaces::Sim::MepModel::SimActuator_ValveActuator_Default SimActuator_ValveActuator_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimActuator_ValveActuator_Default_type > SimActuator_ValveActuator_Default_sequence;
        typedef SimActuator_ValveActuator_Default_sequence::iterator SimActuator_ValveActuator_Default_iterator;
        typedef SimActuator_ValveActuator_Default_sequence::const_iterator SimActuator_ValveActuator_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActuator_ValveActuator_Default_type, char > SimActuator_ValveActuator_Default_traits;

        const SimActuator_ValveActuator_Default_sequence&
        SimActuator_ValveActuator_Default () const;

        SimActuator_ValveActuator_Default_sequence&
        SimActuator_ValveActuator_Default ();

        void
        SimActuator_ValveActuator_Default (const SimActuator_ValveActuator_Default_sequence& s);

        // SimActuator_VirtualActuator_EmsActuator
        //
        typedef ::namespaces::Sim::MepModel::SimActuator_VirtualActuator_EmsActuator SimActuator_VirtualActuator_EmsActuator_type;
        typedef ::xsd::cxx::tree::sequence< SimActuator_VirtualActuator_EmsActuator_type > SimActuator_VirtualActuator_EmsActuator_sequence;
        typedef SimActuator_VirtualActuator_EmsActuator_sequence::iterator SimActuator_VirtualActuator_EmsActuator_iterator;
        typedef SimActuator_VirtualActuator_EmsActuator_sequence::const_iterator SimActuator_VirtualActuator_EmsActuator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimActuator_VirtualActuator_EmsActuator_type, char > SimActuator_VirtualActuator_EmsActuator_traits;

        const SimActuator_VirtualActuator_EmsActuator_sequence&
        SimActuator_VirtualActuator_EmsActuator () const;

        SimActuator_VirtualActuator_EmsActuator_sequence&
        SimActuator_VirtualActuator_EmsActuator ();

        void
        SimActuator_VirtualActuator_EmsActuator (const SimActuator_VirtualActuator_EmsActuator_sequence& s);

        // SimAddress_Postal_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAddress_Postal_Default SimAddress_Postal_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimAddress_Postal_Default_type > SimAddress_Postal_Default_sequence;
        typedef SimAddress_Postal_Default_sequence::iterator SimAddress_Postal_Default_iterator;
        typedef SimAddress_Postal_Default_sequence::const_iterator SimAddress_Postal_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAddress_Postal_Default_type, char > SimAddress_Postal_Default_traits;

        const SimAddress_Postal_Default_sequence&
        SimAddress_Postal_Default () const;

        SimAddress_Postal_Default_sequence&
        SimAddress_Postal_Default ();

        void
        SimAddress_Postal_Default (const SimAddress_Postal_Default_sequence& s);

        // SimAddress_Telecom_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAddress_Telecom_Default SimAddress_Telecom_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimAddress_Telecom_Default_type > SimAddress_Telecom_Default_sequence;
        typedef SimAddress_Telecom_Default_sequence::iterator SimAddress_Telecom_Default_iterator;
        typedef SimAddress_Telecom_Default_sequence::const_iterator SimAddress_Telecom_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAddress_Telecom_Default_type, char > SimAddress_Telecom_Default_traits;

        const SimAddress_Telecom_Default_sequence&
        SimAddress_Telecom_Default () const;

        SimAddress_Telecom_Default_sequence&
        SimAddress_Telecom_Default ();

        void
        SimAddress_Telecom_Default (const SimAddress_Telecom_Default_sequence& s);

        // SimAdjacentSiteParams_AdjacentSite_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAdjacentSiteParams_AdjacentSite_Default SimAdjacentSiteParams_AdjacentSite_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimAdjacentSiteParams_AdjacentSite_Default_type > SimAdjacentSiteParams_AdjacentSite_Default_sequence;
        typedef SimAdjacentSiteParams_AdjacentSite_Default_sequence::iterator SimAdjacentSiteParams_AdjacentSite_Default_iterator;
        typedef SimAdjacentSiteParams_AdjacentSite_Default_sequence::const_iterator SimAdjacentSiteParams_AdjacentSite_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAdjacentSiteParams_AdjacentSite_Default_type, char > SimAdjacentSiteParams_AdjacentSite_Default_traits;

        const SimAdjacentSiteParams_AdjacentSite_Default_sequence&
        SimAdjacentSiteParams_AdjacentSite_Default () const;

        SimAdjacentSiteParams_AdjacentSite_Default_sequence&
        SimAdjacentSiteParams_AdjacentSite_Default ();

        void
        SimAdjacentSiteParams_AdjacentSite_Default (const SimAdjacentSiteParams_AdjacentSite_Default_sequence& s);

        // SimAnalyticalRepresentation_AnalyticalRepresentation_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimAnalyticalRepresentation_AnalyticalRepresentation_Default SimAnalyticalRepresentation_AnalyticalRepresentation_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimAnalyticalRepresentation_AnalyticalRepresentation_Default_type > SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence;
        typedef SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence::iterator SimAnalyticalRepresentation_AnalyticalRepresentation_Default_iterator;
        typedef SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence::const_iterator SimAnalyticalRepresentation_AnalyticalRepresentation_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAnalyticalRepresentation_AnalyticalRepresentation_Default_type, char > SimAnalyticalRepresentation_AnalyticalRepresentation_Default_traits;

        const SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence&
        SimAnalyticalRepresentation_AnalyticalRepresentation_Default () const;

        SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence&
        SimAnalyticalRepresentation_AnalyticalRepresentation_Default ();

        void
        SimAnalyticalRepresentation_AnalyticalRepresentation_Default (const SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence& s);

        // SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_type;
        typedef ::xsd::cxx::tree::sequence< SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_type > SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence;
        typedef SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence::iterator SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_iterator;
        typedef SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence::const_iterator SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_type, char > SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_traits;

        const SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence&
        SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary () const;

        SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence&
        SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary ();

        void
        SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary (const SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence& s);

        // SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type;
        typedef ::xsd::cxx::tree::sequence< SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type > SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence;
        typedef SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence::iterator SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator;
        typedef SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence::const_iterator SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type, char > SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits;

        const SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence&
        SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary () const;

        SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence&
        SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary ();

        void
        SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary (const SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence& s);

        // SimAppLibraryDefault_AppLibraryDefault_UserLibrary
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppLibraryDefault_AppLibraryDefault_UserLibrary SimAppLibraryDefault_AppLibraryDefault_UserLibrary_type;
        typedef ::xsd::cxx::tree::sequence< SimAppLibraryDefault_AppLibraryDefault_UserLibrary_type > SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence;
        typedef SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence::iterator SimAppLibraryDefault_AppLibraryDefault_UserLibrary_iterator;
        typedef SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence::const_iterator SimAppLibraryDefault_AppLibraryDefault_UserLibrary_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppLibraryDefault_AppLibraryDefault_UserLibrary_type, char > SimAppLibraryDefault_AppLibraryDefault_UserLibrary_traits;

        const SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence&
        SimAppLibraryDefault_AppLibraryDefault_UserLibrary () const;

        SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence&
        SimAppLibraryDefault_AppLibraryDefault_UserLibrary ();

        void
        SimAppLibraryDefault_AppLibraryDefault_UserLibrary (const SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_Default SimAppObjNameDefault_ObjName_DistributionSystem_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_Default_type > SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_Default_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_Default_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_Default_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_Default () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_Default ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_Default (const SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_type > SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence::iterator SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_iterator;
        typedef SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence::const_iterator SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_type, char > SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_traits;

        const SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop () const;

        SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence&
        SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop ();

        void
        SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop (const SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence& s);

        // SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_type > SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence;
        typedef SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence::iterator SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_iterator;
        typedef SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence::const_iterator SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_type, char > SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_traits;

        const SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence&
        SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite () const;

        SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence&
        SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite ();

        void
        SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite (const SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence& s);

        // SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_type > SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence;
        typedef SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence::iterator SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_iterator;
        typedef SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence::const_iterator SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_type, char > SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_traits;

        const SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence&
        SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction () const;

        SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence&
        SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction ();

        void
        SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction (const SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence& s);

        // SimAppObjNameDefault_ObjName_OtherSystem_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_OtherSystem_Default SimAppObjNameDefault_ObjName_OtherSystem_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_OtherSystem_Default_type > SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence;
        typedef SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence::iterator SimAppObjNameDefault_ObjName_OtherSystem_Default_iterator;
        typedef SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence::const_iterator SimAppObjNameDefault_ObjName_OtherSystem_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_OtherSystem_Default_type, char > SimAppObjNameDefault_ObjName_OtherSystem_Default_traits;

        const SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence&
        SimAppObjNameDefault_ObjName_OtherSystem_Default () const;

        SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence&
        SimAppObjNameDefault_ObjName_OtherSystem_Default ();

        void
        SimAppObjNameDefault_ObjName_OtherSystem_Default (const SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence& s);

        // SimAppObjNameDefault_ObjName_Space_CeilingPlenum
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_Space_CeilingPlenum SimAppObjNameDefault_ObjName_Space_CeilingPlenum_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_Space_CeilingPlenum_type > SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence;
        typedef SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence::iterator SimAppObjNameDefault_ObjName_Space_CeilingPlenum_iterator;
        typedef SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence::const_iterator SimAppObjNameDefault_ObjName_Space_CeilingPlenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_Space_CeilingPlenum_type, char > SimAppObjNameDefault_ObjName_Space_CeilingPlenum_traits;

        const SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence&
        SimAppObjNameDefault_ObjName_Space_CeilingPlenum () const;

        SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence&
        SimAppObjNameDefault_ObjName_Space_CeilingPlenum ();

        void
        SimAppObjNameDefault_ObjName_Space_CeilingPlenum (const SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence& s);

        // SimAppObjNameDefault_ObjName_Space_FloorPlenum
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_Space_FloorPlenum SimAppObjNameDefault_ObjName_Space_FloorPlenum_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_Space_FloorPlenum_type > SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence;
        typedef SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence::iterator SimAppObjNameDefault_ObjName_Space_FloorPlenum_iterator;
        typedef SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence::const_iterator SimAppObjNameDefault_ObjName_Space_FloorPlenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_Space_FloorPlenum_type, char > SimAppObjNameDefault_ObjName_Space_FloorPlenum_traits;

        const SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence&
        SimAppObjNameDefault_ObjName_Space_FloorPlenum () const;

        SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence&
        SimAppObjNameDefault_ObjName_Space_FloorPlenum ();

        void
        SimAppObjNameDefault_ObjName_Space_FloorPlenum (const SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence& s);

        // SimAppObjNameDefault_ObjName_Space_Space
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_Space_Space SimAppObjNameDefault_ObjName_Space_Space_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_Space_Space_type > SimAppObjNameDefault_ObjName_Space_Space_sequence;
        typedef SimAppObjNameDefault_ObjName_Space_Space_sequence::iterator SimAppObjNameDefault_ObjName_Space_Space_iterator;
        typedef SimAppObjNameDefault_ObjName_Space_Space_sequence::const_iterator SimAppObjNameDefault_ObjName_Space_Space_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_Space_Space_type, char > SimAppObjNameDefault_ObjName_Space_Space_traits;

        const SimAppObjNameDefault_ObjName_Space_Space_sequence&
        SimAppObjNameDefault_ObjName_Space_Space () const;

        SimAppObjNameDefault_ObjName_Space_Space_sequence&
        SimAppObjNameDefault_ObjName_Space_Space ();

        void
        SimAppObjNameDefault_ObjName_Space_Space (const SimAppObjNameDefault_ObjName_Space_Space_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialContainer_Building
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialContainer_Building SimAppObjNameDefault_ObjName_SpatialContainer_Building_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialContainer_Building_type > SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence::iterator SimAppObjNameDefault_ObjName_SpatialContainer_Building_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialContainer_Building_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialContainer_Building_type, char > SimAppObjNameDefault_ObjName_SpatialContainer_Building_traits;

        const SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_Building () const;

        SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_Building ();

        void
        SimAppObjNameDefault_ObjName_SpatialContainer_Building (const SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_type > SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence::iterator SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_type, char > SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_traits;

        const SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory () const;

        SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory ();

        void
        SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory (const SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialContainer_Project
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialContainer_Project SimAppObjNameDefault_ObjName_SpatialContainer_Project_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialContainer_Project_type > SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence::iterator SimAppObjNameDefault_ObjName_SpatialContainer_Project_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialContainer_Project_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialContainer_Project_type, char > SimAppObjNameDefault_ObjName_SpatialContainer_Project_traits;

        const SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_Project () const;

        SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_Project ();

        void
        SimAppObjNameDefault_ObjName_SpatialContainer_Project (const SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialContainer_Site
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialContainer_Site SimAppObjNameDefault_ObjName_SpatialContainer_Site_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialContainer_Site_type > SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence::iterator SimAppObjNameDefault_ObjName_SpatialContainer_Site_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialContainer_Site_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialContainer_Site_type, char > SimAppObjNameDefault_ObjName_SpatialContainer_Site_traits;

        const SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_Site () const;

        SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence&
        SimAppObjNameDefault_ObjName_SpatialContainer_Site ();

        void
        SimAppObjNameDefault_ObjName_SpatialContainer_Site (const SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_type > SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence::iterator SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_type, char > SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_traits;

        const SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone () const;

        SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone ();

        void
        SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone (const SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_type > SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence::iterator SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_type, char > SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_traits;

        const SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone () const;

        SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone ();

        void
        SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone (const SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_type > SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence::iterator SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_type, char > SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_traits;

        const SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone () const;

        SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone ();

        void
        SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone (const SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence& s);

        // SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_type > SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence::iterator SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_iterator;
        typedef SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence::const_iterator SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_type, char > SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_traits;

        const SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone () const;

        SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence&
        SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone ();

        void
        SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone (const SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence& s);

        // SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_type > SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence;
        typedef SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence::iterator SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_iterator;
        typedef SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence::const_iterator SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_type, char > SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_traits;

        const SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence&
        SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup () const;

        SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence&
        SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup ();

        void
        SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup (const SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence& s);

        // SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_type > SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence;
        typedef SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence::iterator SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_iterator;
        typedef SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence::const_iterator SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_type, char > SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_traits;

        const SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence&
        SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup () const;

        SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence&
        SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup ();

        void
        SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup (const SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence& s);

        // SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_type;
        typedef ::xsd::cxx::tree::sequence< SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_type > SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence;
        typedef SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence::iterator SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_iterator;
        typedef SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence::const_iterator SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_type, char > SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_traits;

        const SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence&
        SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup () const;

        SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence&
        SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup ();

        void
        SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup (const SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence& s);

        // SimAppPreferences_AppPreferences_AutoSave
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppPreferences_AppPreferences_AutoSave SimAppPreferences_AppPreferences_AutoSave_type;
        typedef ::xsd::cxx::tree::sequence< SimAppPreferences_AppPreferences_AutoSave_type > SimAppPreferences_AppPreferences_AutoSave_sequence;
        typedef SimAppPreferences_AppPreferences_AutoSave_sequence::iterator SimAppPreferences_AppPreferences_AutoSave_iterator;
        typedef SimAppPreferences_AppPreferences_AutoSave_sequence::const_iterator SimAppPreferences_AppPreferences_AutoSave_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppPreferences_AppPreferences_AutoSave_type, char > SimAppPreferences_AppPreferences_AutoSave_traits;

        const SimAppPreferences_AppPreferences_AutoSave_sequence&
        SimAppPreferences_AppPreferences_AutoSave () const;

        SimAppPreferences_AppPreferences_AutoSave_sequence&
        SimAppPreferences_AppPreferences_AutoSave ();

        void
        SimAppPreferences_AppPreferences_AutoSave (const SimAppPreferences_AppPreferences_AutoSave_sequence& s);

        // SimAppPreferences_AppPreferences_AutoSaveInterval
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppPreferences_AppPreferences_AutoSaveInterval SimAppPreferences_AppPreferences_AutoSaveInterval_type;
        typedef ::xsd::cxx::tree::sequence< SimAppPreferences_AppPreferences_AutoSaveInterval_type > SimAppPreferences_AppPreferences_AutoSaveInterval_sequence;
        typedef SimAppPreferences_AppPreferences_AutoSaveInterval_sequence::iterator SimAppPreferences_AppPreferences_AutoSaveInterval_iterator;
        typedef SimAppPreferences_AppPreferences_AutoSaveInterval_sequence::const_iterator SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppPreferences_AppPreferences_AutoSaveInterval_type, char > SimAppPreferences_AppPreferences_AutoSaveInterval_traits;

        const SimAppPreferences_AppPreferences_AutoSaveInterval_sequence&
        SimAppPreferences_AppPreferences_AutoSaveInterval () const;

        SimAppPreferences_AppPreferences_AutoSaveInterval_sequence&
        SimAppPreferences_AppPreferences_AutoSaveInterval ();

        void
        SimAppPreferences_AppPreferences_AutoSaveInterval (const SimAppPreferences_AppPreferences_AutoSaveInterval_sequence& s);

        // SimAppPreferences_AppPreferences_EPlusInstalPath
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppPreferences_AppPreferences_EPlusInstalPath SimAppPreferences_AppPreferences_EPlusInstalPath_type;
        typedef ::xsd::cxx::tree::sequence< SimAppPreferences_AppPreferences_EPlusInstalPath_type > SimAppPreferences_AppPreferences_EPlusInstalPath_sequence;
        typedef SimAppPreferences_AppPreferences_EPlusInstalPath_sequence::iterator SimAppPreferences_AppPreferences_EPlusInstalPath_iterator;
        typedef SimAppPreferences_AppPreferences_EPlusInstalPath_sequence::const_iterator SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppPreferences_AppPreferences_EPlusInstalPath_type, char > SimAppPreferences_AppPreferences_EPlusInstalPath_traits;

        const SimAppPreferences_AppPreferences_EPlusInstalPath_sequence&
        SimAppPreferences_AppPreferences_EPlusInstalPath () const;

        SimAppPreferences_AppPreferences_EPlusInstalPath_sequence&
        SimAppPreferences_AppPreferences_EPlusInstalPath ();

        void
        SimAppPreferences_AppPreferences_EPlusInstalPath (const SimAppPreferences_AppPreferences_EPlusInstalPath_sequence& s);

        // SimAppPreferences_AppPreferences_EPlusInstalVersion
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppPreferences_AppPreferences_EPlusInstalVersion SimAppPreferences_AppPreferences_EPlusInstalVersion_type;
        typedef ::xsd::cxx::tree::sequence< SimAppPreferences_AppPreferences_EPlusInstalVersion_type > SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence;
        typedef SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence::iterator SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator;
        typedef SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence::const_iterator SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppPreferences_AppPreferences_EPlusInstalVersion_type, char > SimAppPreferences_AppPreferences_EPlusInstalVersion_traits;

        const SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence&
        SimAppPreferences_AppPreferences_EPlusInstalVersion () const;

        SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence&
        SimAppPreferences_AppPreferences_EPlusInstalVersion ();

        void
        SimAppPreferences_AppPreferences_EPlusInstalVersion (const SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence& s);

        // SimAppPreferences_AppPreferences_MinMonthlyChargeType
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppPreferences_AppPreferences_MinMonthlyChargeType SimAppPreferences_AppPreferences_MinMonthlyChargeType_type;
        typedef ::xsd::cxx::tree::sequence< SimAppPreferences_AppPreferences_MinMonthlyChargeType_type > SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence;
        typedef SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence::iterator SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator;
        typedef SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence::const_iterator SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppPreferences_AppPreferences_MinMonthlyChargeType_type, char > SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits;

        const SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence&
        SimAppPreferences_AppPreferences_MinMonthlyChargeType () const;

        SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence&
        SimAppPreferences_AppPreferences_MinMonthlyChargeType ();

        void
        SimAppPreferences_AppPreferences_MinMonthlyChargeType (const SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence& s);

        // SimAppPreferences_AppPreferences_MonthlyChargeType
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppPreferences_AppPreferences_MonthlyChargeType SimAppPreferences_AppPreferences_MonthlyChargeType_type;
        typedef ::xsd::cxx::tree::sequence< SimAppPreferences_AppPreferences_MonthlyChargeType_type > SimAppPreferences_AppPreferences_MonthlyChargeType_sequence;
        typedef SimAppPreferences_AppPreferences_MonthlyChargeType_sequence::iterator SimAppPreferences_AppPreferences_MonthlyChargeType_iterator;
        typedef SimAppPreferences_AppPreferences_MonthlyChargeType_sequence::const_iterator SimAppPreferences_AppPreferences_MonthlyChargeType_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppPreferences_AppPreferences_MonthlyChargeType_type, char > SimAppPreferences_AppPreferences_MonthlyChargeType_traits;

        const SimAppPreferences_AppPreferences_MonthlyChargeType_sequence&
        SimAppPreferences_AppPreferences_MonthlyChargeType () const;

        SimAppPreferences_AppPreferences_MonthlyChargeType_sequence&
        SimAppPreferences_AppPreferences_MonthlyChargeType ();

        void
        SimAppPreferences_AppPreferences_MonthlyChargeType (const SimAppPreferences_AppPreferences_MonthlyChargeType_sequence& s);

        // SimAppUnitDefault_AppUnitDefault_DatabaseDefault
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppUnitDefault_AppUnitDefault_DatabaseDefault SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type;
        typedef ::xsd::cxx::tree::sequence< SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type > SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence;
        typedef SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence::iterator SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator;
        typedef SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence::const_iterator SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type, char > SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits;

        const SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence&
        SimAppUnitDefault_AppUnitDefault_DatabaseDefault () const;

        SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence&
        SimAppUnitDefault_AppUnitDefault_DatabaseDefault ();

        void
        SimAppUnitDefault_AppUnitDefault_DatabaseDefault (const SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence& s);

        // SimAppUnitDefault_AppUnitDefault_UserDisplayPreference
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimAppUnitDefault_AppUnitDefault_UserDisplayPreference SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_type;
        typedef ::xsd::cxx::tree::sequence< SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_type > SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence;
        typedef SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence::iterator SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_iterator;
        typedef SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence::const_iterator SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_type, char > SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_traits;

        const SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence&
        SimAppUnitDefault_AppUnitDefault_UserDisplayPreference () const;

        SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence&
        SimAppUnitDefault_AppUnitDefault_UserDisplayPreference ();

        void
        SimAppUnitDefault_AppUnitDefault_UserDisplayPreference (const SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence& s);

        // SimArbitraryProfileDef_ArbitraryProfile_Closed
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimArbitraryProfileDef_ArbitraryProfile_Closed SimArbitraryProfileDef_ArbitraryProfile_Closed_type;
        typedef ::xsd::cxx::tree::sequence< SimArbitraryProfileDef_ArbitraryProfile_Closed_type > SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence;
        typedef SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence::iterator SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator;
        typedef SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence::const_iterator SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArbitraryProfileDef_ArbitraryProfile_Closed_type, char > SimArbitraryProfileDef_ArbitraryProfile_Closed_traits;

        const SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence&
        SimArbitraryProfileDef_ArbitraryProfile_Closed () const;

        SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence&
        SimArbitraryProfileDef_ArbitraryProfile_Closed ();

        void
        SimArbitraryProfileDef_ArbitraryProfile_Closed (const SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence& s);

        // SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_type;
        typedef ::xsd::cxx::tree::sequence< SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_type > SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence;
        typedef SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence::iterator SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_iterator;
        typedef SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence::const_iterator SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_type, char > SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_traits;

        const SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence&
        SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids () const;

        SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence&
        SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids ();

        void
        SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids (const SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence& s);

        // SimArbitraryProfileDef_ArbitraryProfile_Open
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimArbitraryProfileDef_ArbitraryProfile_Open SimArbitraryProfileDef_ArbitraryProfile_Open_type;
        typedef ::xsd::cxx::tree::sequence< SimArbitraryProfileDef_ArbitraryProfile_Open_type > SimArbitraryProfileDef_ArbitraryProfile_Open_sequence;
        typedef SimArbitraryProfileDef_ArbitraryProfile_Open_sequence::iterator SimArbitraryProfileDef_ArbitraryProfile_Open_iterator;
        typedef SimArbitraryProfileDef_ArbitraryProfile_Open_sequence::const_iterator SimArbitraryProfileDef_ArbitraryProfile_Open_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArbitraryProfileDef_ArbitraryProfile_Open_type, char > SimArbitraryProfileDef_ArbitraryProfile_Open_traits;

        const SimArbitraryProfileDef_ArbitraryProfile_Open_sequence&
        SimArbitraryProfileDef_ArbitraryProfile_Open () const;

        SimArbitraryProfileDef_ArbitraryProfile_Open_sequence&
        SimArbitraryProfileDef_ArbitraryProfile_Open ();

        void
        SimArbitraryProfileDef_ArbitraryProfile_Open (const SimArbitraryProfileDef_ArbitraryProfile_Open_sequence& s);

        // SimArrayParams_Array_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_Array_Default SimArrayParams_Array_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_Array_Default_type > SimArrayParams_Array_Default_sequence;
        typedef SimArrayParams_Array_Default_sequence::iterator SimArrayParams_Array_Default_iterator;
        typedef SimArrayParams_Array_Default_sequence::const_iterator SimArrayParams_Array_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_Array_Default_type, char > SimArrayParams_Array_Default_traits;

        const SimArrayParams_Array_Default_sequence&
        SimArrayParams_Array_Default () const;

        SimArrayParams_Array_Default_sequence&
        SimArrayParams_Array_Default ();

        void
        SimArrayParams_Array_Default (const SimArrayParams_Array_Default_sequence& s);

        // SimArrayParams_BldgElementArray_Beam
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_BldgElementArray_Beam SimArrayParams_BldgElementArray_Beam_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_BldgElementArray_Beam_type > SimArrayParams_BldgElementArray_Beam_sequence;
        typedef SimArrayParams_BldgElementArray_Beam_sequence::iterator SimArrayParams_BldgElementArray_Beam_iterator;
        typedef SimArrayParams_BldgElementArray_Beam_sequence::const_iterator SimArrayParams_BldgElementArray_Beam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_BldgElementArray_Beam_type, char > SimArrayParams_BldgElementArray_Beam_traits;

        const SimArrayParams_BldgElementArray_Beam_sequence&
        SimArrayParams_BldgElementArray_Beam () const;

        SimArrayParams_BldgElementArray_Beam_sequence&
        SimArrayParams_BldgElementArray_Beam ();

        void
        SimArrayParams_BldgElementArray_Beam (const SimArrayParams_BldgElementArray_Beam_sequence& s);

        // SimArrayParams_BldgElementArray_Column
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_BldgElementArray_Column SimArrayParams_BldgElementArray_Column_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_BldgElementArray_Column_type > SimArrayParams_BldgElementArray_Column_sequence;
        typedef SimArrayParams_BldgElementArray_Column_sequence::iterator SimArrayParams_BldgElementArray_Column_iterator;
        typedef SimArrayParams_BldgElementArray_Column_sequence::const_iterator SimArrayParams_BldgElementArray_Column_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_BldgElementArray_Column_type, char > SimArrayParams_BldgElementArray_Column_traits;

        const SimArrayParams_BldgElementArray_Column_sequence&
        SimArrayParams_BldgElementArray_Column () const;

        SimArrayParams_BldgElementArray_Column_sequence&
        SimArrayParams_BldgElementArray_Column ();

        void
        SimArrayParams_BldgElementArray_Column (const SimArrayParams_BldgElementArray_Column_sequence& s);

        // SimArrayParams_BldgElementArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_BldgElementArray_Default SimArrayParams_BldgElementArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_BldgElementArray_Default_type > SimArrayParams_BldgElementArray_Default_sequence;
        typedef SimArrayParams_BldgElementArray_Default_sequence::iterator SimArrayParams_BldgElementArray_Default_iterator;
        typedef SimArrayParams_BldgElementArray_Default_sequence::const_iterator SimArrayParams_BldgElementArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_BldgElementArray_Default_type, char > SimArrayParams_BldgElementArray_Default_traits;

        const SimArrayParams_BldgElementArray_Default_sequence&
        SimArrayParams_BldgElementArray_Default () const;

        SimArrayParams_BldgElementArray_Default_sequence&
        SimArrayParams_BldgElementArray_Default ();

        void
        SimArrayParams_BldgElementArray_Default (const SimArrayParams_BldgElementArray_Default_sequence& s);

        // SimArrayParams_DoorArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_DoorArray_Default SimArrayParams_DoorArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_DoorArray_Default_type > SimArrayParams_DoorArray_Default_sequence;
        typedef SimArrayParams_DoorArray_Default_sequence::iterator SimArrayParams_DoorArray_Default_iterator;
        typedef SimArrayParams_DoorArray_Default_sequence::const_iterator SimArrayParams_DoorArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_DoorArray_Default_type, char > SimArrayParams_DoorArray_Default_traits;

        const SimArrayParams_DoorArray_Default_sequence&
        SimArrayParams_DoorArray_Default () const;

        SimArrayParams_DoorArray_Default_sequence&
        SimArrayParams_DoorArray_Default ();

        void
        SimArrayParams_DoorArray_Default (const SimArrayParams_DoorArray_Default_sequence& s);

        // SimArrayParams_PanelArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_PanelArray_Default SimArrayParams_PanelArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_PanelArray_Default_type > SimArrayParams_PanelArray_Default_sequence;
        typedef SimArrayParams_PanelArray_Default_sequence::iterator SimArrayParams_PanelArray_Default_iterator;
        typedef SimArrayParams_PanelArray_Default_sequence::const_iterator SimArrayParams_PanelArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_PanelArray_Default_type, char > SimArrayParams_PanelArray_Default_traits;

        const SimArrayParams_PanelArray_Default_sequence&
        SimArrayParams_PanelArray_Default () const;

        SimArrayParams_PanelArray_Default_sequence&
        SimArrayParams_PanelArray_Default ();

        void
        SimArrayParams_PanelArray_Default (const SimArrayParams_PanelArray_Default_sequence& s);

        // SimArrayParams_SolarShadeArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_SolarShadeArray_Default SimArrayParams_SolarShadeArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_SolarShadeArray_Default_type > SimArrayParams_SolarShadeArray_Default_sequence;
        typedef SimArrayParams_SolarShadeArray_Default_sequence::iterator SimArrayParams_SolarShadeArray_Default_iterator;
        typedef SimArrayParams_SolarShadeArray_Default_sequence::const_iterator SimArrayParams_SolarShadeArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_SolarShadeArray_Default_type, char > SimArrayParams_SolarShadeArray_Default_traits;

        const SimArrayParams_SolarShadeArray_Default_sequence&
        SimArrayParams_SolarShadeArray_Default () const;

        SimArrayParams_SolarShadeArray_Default_sequence&
        SimArrayParams_SolarShadeArray_Default ();

        void
        SimArrayParams_SolarShadeArray_Default (const SimArrayParams_SolarShadeArray_Default_sequence& s);

        // SimArrayParams_WindowArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimArrayParams_WindowArray_Default SimArrayParams_WindowArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimArrayParams_WindowArray_Default_type > SimArrayParams_WindowArray_Default_sequence;
        typedef SimArrayParams_WindowArray_Default_sequence::iterator SimArrayParams_WindowArray_Default_iterator;
        typedef SimArrayParams_WindowArray_Default_sequence::const_iterator SimArrayParams_WindowArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimArrayParams_WindowArray_Default_type, char > SimArrayParams_WindowArray_Default_traits;

        const SimArrayParams_WindowArray_Default_sequence&
        SimArrayParams_WindowArray_Default () const;

        SimArrayParams_WindowArray_Default_sequence&
        SimArrayParams_WindowArray_Default ();

        void
        SimArrayParams_WindowArray_Default (const SimArrayParams_WindowArray_Default_sequence& s);

        // SimBeam_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBeam_Default_Default SimBeam_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBeam_Default_Default_type > SimBeam_Default_Default_sequence;
        typedef SimBeam_Default_Default_sequence::iterator SimBeam_Default_Default_iterator;
        typedef SimBeam_Default_Default_sequence::const_iterator SimBeam_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBeam_Default_Default_type, char > SimBeam_Default_Default_traits;

        const SimBeam_Default_Default_sequence&
        SimBeam_Default_Default () const;

        SimBeam_Default_Default_sequence&
        SimBeam_Default_Default ();

        void
        SimBeam_Default_Default (const SimBeam_Default_Default_sequence& s);

        // SimBeamParams_Beam_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBeamParams_Beam_Default SimBeamParams_Beam_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBeamParams_Beam_Default_type > SimBeamParams_Beam_Default_sequence;
        typedef SimBeamParams_Beam_Default_sequence::iterator SimBeamParams_Beam_Default_iterator;
        typedef SimBeamParams_Beam_Default_sequence::const_iterator SimBeamParams_Beam_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBeamParams_Beam_Default_type, char > SimBeamParams_Beam_Default_traits;

        const SimBeamParams_Beam_Default_sequence&
        SimBeamParams_Beam_Default () const;

        SimBeamParams_Beam_Default_sequence&
        SimBeamParams_Beam_Default ();

        void
        SimBeamParams_Beam_Default (const SimBeamParams_Beam_Default_sequence& s);

        // SimBeamType_Beam_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBeamType_Beam_Default SimBeamType_Beam_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBeamType_Beam_Default_type > SimBeamType_Beam_Default_sequence;
        typedef SimBeamType_Beam_Default_sequence::iterator SimBeamType_Beam_Default_iterator;
        typedef SimBeamType_Beam_Default_sequence::const_iterator SimBeamType_Beam_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBeamType_Beam_Default_type, char > SimBeamType_Beam_Default_traits;

        const SimBeamType_Beam_Default_sequence&
        SimBeamType_Beam_Default () const;

        SimBeamType_Beam_Default_sequence&
        SimBeamType_Beam_Default ();

        void
        SimBeamType_Beam_Default (const SimBeamType_Beam_Default_sequence& s);

        // SimBldgElementArrayParams_BldgElementArray_Beam
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBldgElementArrayParams_BldgElementArray_Beam SimBldgElementArrayParams_BldgElementArray_Beam_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementArrayParams_BldgElementArray_Beam_type > SimBldgElementArrayParams_BldgElementArray_Beam_sequence;
        typedef SimBldgElementArrayParams_BldgElementArray_Beam_sequence::iterator SimBldgElementArrayParams_BldgElementArray_Beam_iterator;
        typedef SimBldgElementArrayParams_BldgElementArray_Beam_sequence::const_iterator SimBldgElementArrayParams_BldgElementArray_Beam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementArrayParams_BldgElementArray_Beam_type, char > SimBldgElementArrayParams_BldgElementArray_Beam_traits;

        const SimBldgElementArrayParams_BldgElementArray_Beam_sequence&
        SimBldgElementArrayParams_BldgElementArray_Beam () const;

        SimBldgElementArrayParams_BldgElementArray_Beam_sequence&
        SimBldgElementArrayParams_BldgElementArray_Beam ();

        void
        SimBldgElementArrayParams_BldgElementArray_Beam (const SimBldgElementArrayParams_BldgElementArray_Beam_sequence& s);

        // SimBldgElementArrayParams_BldgElementArray_Column
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBldgElementArrayParams_BldgElementArray_Column SimBldgElementArrayParams_BldgElementArray_Column_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementArrayParams_BldgElementArray_Column_type > SimBldgElementArrayParams_BldgElementArray_Column_sequence;
        typedef SimBldgElementArrayParams_BldgElementArray_Column_sequence::iterator SimBldgElementArrayParams_BldgElementArray_Column_iterator;
        typedef SimBldgElementArrayParams_BldgElementArray_Column_sequence::const_iterator SimBldgElementArrayParams_BldgElementArray_Column_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementArrayParams_BldgElementArray_Column_type, char > SimBldgElementArrayParams_BldgElementArray_Column_traits;

        const SimBldgElementArrayParams_BldgElementArray_Column_sequence&
        SimBldgElementArrayParams_BldgElementArray_Column () const;

        SimBldgElementArrayParams_BldgElementArray_Column_sequence&
        SimBldgElementArrayParams_BldgElementArray_Column ();

        void
        SimBldgElementArrayParams_BldgElementArray_Column (const SimBldgElementArrayParams_BldgElementArray_Column_sequence& s);

        // SimBldgElementArrayParams_BldgElementArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBldgElementArrayParams_BldgElementArray_Default SimBldgElementArrayParams_BldgElementArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementArrayParams_BldgElementArray_Default_type > SimBldgElementArrayParams_BldgElementArray_Default_sequence;
        typedef SimBldgElementArrayParams_BldgElementArray_Default_sequence::iterator SimBldgElementArrayParams_BldgElementArray_Default_iterator;
        typedef SimBldgElementArrayParams_BldgElementArray_Default_sequence::const_iterator SimBldgElementArrayParams_BldgElementArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementArrayParams_BldgElementArray_Default_type, char > SimBldgElementArrayParams_BldgElementArray_Default_traits;

        const SimBldgElementArrayParams_BldgElementArray_Default_sequence&
        SimBldgElementArrayParams_BldgElementArray_Default () const;

        SimBldgElementArrayParams_BldgElementArray_Default_sequence&
        SimBldgElementArrayParams_BldgElementArray_Default ();

        void
        SimBldgElementArrayParams_BldgElementArray_Default (const SimBldgElementArrayParams_BldgElementArray_Default_sequence& s);

        // SimBldgElementType_BldgElementProxy_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_BldgElementProxy_Default SimBldgElementType_BldgElementProxy_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_BldgElementProxy_Default_type > SimBldgElementType_BldgElementProxy_Default_sequence;
        typedef SimBldgElementType_BldgElementProxy_Default_sequence::iterator SimBldgElementType_BldgElementProxy_Default_iterator;
        typedef SimBldgElementType_BldgElementProxy_Default_sequence::const_iterator SimBldgElementType_BldgElementProxy_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_BldgElementProxy_Default_type, char > SimBldgElementType_BldgElementProxy_Default_traits;

        const SimBldgElementType_BldgElementProxy_Default_sequence&
        SimBldgElementType_BldgElementProxy_Default () const;

        SimBldgElementType_BldgElementProxy_Default_sequence&
        SimBldgElementType_BldgElementProxy_Default ();

        void
        SimBldgElementType_BldgElementProxy_Default (const SimBldgElementType_BldgElementProxy_Default_sequence& s);

        // SimBldgElementType_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_Default_Default SimBldgElementType_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_Default_Default_type > SimBldgElementType_Default_Default_sequence;
        typedef SimBldgElementType_Default_Default_sequence::iterator SimBldgElementType_Default_Default_iterator;
        typedef SimBldgElementType_Default_Default_sequence::const_iterator SimBldgElementType_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_Default_Default_type, char > SimBldgElementType_Default_Default_traits;

        const SimBldgElementType_Default_Default_sequence&
        SimBldgElementType_Default_Default () const;

        SimBldgElementType_Default_Default_sequence&
        SimBldgElementType_Default_Default ();

        void
        SimBldgElementType_Default_Default (const SimBldgElementType_Default_Default_sequence& s);

        // SimBldgElementType_ElectricalTerminal_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_ElectricalTerminal_Default SimBldgElementType_ElectricalTerminal_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_ElectricalTerminal_Default_type > SimBldgElementType_ElectricalTerminal_Default_sequence;
        typedef SimBldgElementType_ElectricalTerminal_Default_sequence::iterator SimBldgElementType_ElectricalTerminal_Default_iterator;
        typedef SimBldgElementType_ElectricalTerminal_Default_sequence::const_iterator SimBldgElementType_ElectricalTerminal_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_ElectricalTerminal_Default_type, char > SimBldgElementType_ElectricalTerminal_Default_traits;

        const SimBldgElementType_ElectricalTerminal_Default_sequence&
        SimBldgElementType_ElectricalTerminal_Default () const;

        SimBldgElementType_ElectricalTerminal_Default_sequence&
        SimBldgElementType_ElectricalTerminal_Default ();

        void
        SimBldgElementType_ElectricalTerminal_Default (const SimBldgElementType_ElectricalTerminal_Default_sequence& s);

        // SimBldgElementType_HumanTransport_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_HumanTransport_Default SimBldgElementType_HumanTransport_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_HumanTransport_Default_type > SimBldgElementType_HumanTransport_Default_sequence;
        typedef SimBldgElementType_HumanTransport_Default_sequence::iterator SimBldgElementType_HumanTransport_Default_iterator;
        typedef SimBldgElementType_HumanTransport_Default_sequence::const_iterator SimBldgElementType_HumanTransport_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_HumanTransport_Default_type, char > SimBldgElementType_HumanTransport_Default_traits;

        const SimBldgElementType_HumanTransport_Default_sequence&
        SimBldgElementType_HumanTransport_Default () const;

        SimBldgElementType_HumanTransport_Default_sequence&
        SimBldgElementType_HumanTransport_Default ();

        void
        SimBldgElementType_HumanTransport_Default (const SimBldgElementType_HumanTransport_Default_sequence& s);

        // SimBldgElementType_PlumbingFixture_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_PlumbingFixture_Default SimBldgElementType_PlumbingFixture_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_PlumbingFixture_Default_type > SimBldgElementType_PlumbingFixture_Default_sequence;
        typedef SimBldgElementType_PlumbingFixture_Default_sequence::iterator SimBldgElementType_PlumbingFixture_Default_iterator;
        typedef SimBldgElementType_PlumbingFixture_Default_sequence::const_iterator SimBldgElementType_PlumbingFixture_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_PlumbingFixture_Default_type, char > SimBldgElementType_PlumbingFixture_Default_traits;

        const SimBldgElementType_PlumbingFixture_Default_sequence&
        SimBldgElementType_PlumbingFixture_Default () const;

        SimBldgElementType_PlumbingFixture_Default_sequence&
        SimBldgElementType_PlumbingFixture_Default ();

        void
        SimBldgElementType_PlumbingFixture_Default (const SimBldgElementType_PlumbingFixture_Default_sequence& s);

        // SimBldgElementType_Railing_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_Railing_Default SimBldgElementType_Railing_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_Railing_Default_type > SimBldgElementType_Railing_Default_sequence;
        typedef SimBldgElementType_Railing_Default_sequence::iterator SimBldgElementType_Railing_Default_iterator;
        typedef SimBldgElementType_Railing_Default_sequence::const_iterator SimBldgElementType_Railing_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_Railing_Default_type, char > SimBldgElementType_Railing_Default_traits;

        const SimBldgElementType_Railing_Default_sequence&
        SimBldgElementType_Railing_Default () const;

        SimBldgElementType_Railing_Default_sequence&
        SimBldgElementType_Railing_Default ();

        void
        SimBldgElementType_Railing_Default (const SimBldgElementType_Railing_Default_sequence& s);

        // SimBldgElementType_Ramp_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_Ramp_Default SimBldgElementType_Ramp_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_Ramp_Default_type > SimBldgElementType_Ramp_Default_sequence;
        typedef SimBldgElementType_Ramp_Default_sequence::iterator SimBldgElementType_Ramp_Default_iterator;
        typedef SimBldgElementType_Ramp_Default_sequence::const_iterator SimBldgElementType_Ramp_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_Ramp_Default_type, char > SimBldgElementType_Ramp_Default_traits;

        const SimBldgElementType_Ramp_Default_sequence&
        SimBldgElementType_Ramp_Default () const;

        SimBldgElementType_Ramp_Default_sequence&
        SimBldgElementType_Ramp_Default ();

        void
        SimBldgElementType_Ramp_Default (const SimBldgElementType_Ramp_Default_sequence& s);

        // SimBldgElementType_RampFlight_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_RampFlight_Default SimBldgElementType_RampFlight_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_RampFlight_Default_type > SimBldgElementType_RampFlight_Default_sequence;
        typedef SimBldgElementType_RampFlight_Default_sequence::iterator SimBldgElementType_RampFlight_Default_iterator;
        typedef SimBldgElementType_RampFlight_Default_sequence::const_iterator SimBldgElementType_RampFlight_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_RampFlight_Default_type, char > SimBldgElementType_RampFlight_Default_traits;

        const SimBldgElementType_RampFlight_Default_sequence&
        SimBldgElementType_RampFlight_Default () const;

        SimBldgElementType_RampFlight_Default_sequence&
        SimBldgElementType_RampFlight_Default ();

        void
        SimBldgElementType_RampFlight_Default (const SimBldgElementType_RampFlight_Default_sequence& s);

        // SimBldgElementType_Stair_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_Stair_Default SimBldgElementType_Stair_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_Stair_Default_type > SimBldgElementType_Stair_Default_sequence;
        typedef SimBldgElementType_Stair_Default_sequence::iterator SimBldgElementType_Stair_Default_iterator;
        typedef SimBldgElementType_Stair_Default_sequence::const_iterator SimBldgElementType_Stair_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_Stair_Default_type, char > SimBldgElementType_Stair_Default_traits;

        const SimBldgElementType_Stair_Default_sequence&
        SimBldgElementType_Stair_Default () const;

        SimBldgElementType_Stair_Default_sequence&
        SimBldgElementType_Stair_Default ();

        void
        SimBldgElementType_Stair_Default (const SimBldgElementType_Stair_Default_sequence& s);

        // SimBldgElementType_StairFlight_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_StairFlight_Default SimBldgElementType_StairFlight_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_StairFlight_Default_type > SimBldgElementType_StairFlight_Default_sequence;
        typedef SimBldgElementType_StairFlight_Default_sequence::iterator SimBldgElementType_StairFlight_Default_iterator;
        typedef SimBldgElementType_StairFlight_Default_sequence::const_iterator SimBldgElementType_StairFlight_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_StairFlight_Default_type, char > SimBldgElementType_StairFlight_Default_traits;

        const SimBldgElementType_StairFlight_Default_sequence&
        SimBldgElementType_StairFlight_Default () const;

        SimBldgElementType_StairFlight_Default_sequence&
        SimBldgElementType_StairFlight_Default ();

        void
        SimBldgElementType_StairFlight_Default (const SimBldgElementType_StairFlight_Default_sequence& s);

        // SimBldgElementType_VirtualElement_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgElementType_VirtualElement_Default SimBldgElementType_VirtualElement_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgElementType_VirtualElement_Default_type > SimBldgElementType_VirtualElement_Default_sequence;
        typedef SimBldgElementType_VirtualElement_Default_sequence::iterator SimBldgElementType_VirtualElement_Default_iterator;
        typedef SimBldgElementType_VirtualElement_Default_sequence::const_iterator SimBldgElementType_VirtualElement_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgElementType_VirtualElement_Default_type, char > SimBldgElementType_VirtualElement_Default_traits;

        const SimBldgElementType_VirtualElement_Default_sequence&
        SimBldgElementType_VirtualElement_Default () const;

        SimBldgElementType_VirtualElement_Default_sequence&
        SimBldgElementType_VirtualElement_Default ();

        void
        SimBldgElementType_VirtualElement_Default (const SimBldgElementType_VirtualElement_Default_sequence& s);

        // SimBldgParams_Building_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBldgParams_Building_Default SimBldgParams_Building_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgParams_Building_Default_type > SimBldgParams_Building_Default_sequence;
        typedef SimBldgParams_Building_Default_sequence::iterator SimBldgParams_Building_Default_iterator;
        typedef SimBldgParams_Building_Default_sequence::const_iterator SimBldgParams_Building_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgParams_Building_Default_type, char > SimBldgParams_Building_Default_traits;

        const SimBldgParams_Building_Default_sequence&
        SimBldgParams_Building_Default () const;

        SimBldgParams_Building_Default_sequence&
        SimBldgParams_Building_Default ();

        void
        SimBldgParams_Building_Default (const SimBldgParams_Building_Default_sequence& s);

        // SimBldgSiteParams_BuildingSite_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBldgSiteParams_BuildingSite_Default SimBldgSiteParams_BuildingSite_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgSiteParams_BuildingSite_Default_type > SimBldgSiteParams_BuildingSite_Default_sequence;
        typedef SimBldgSiteParams_BuildingSite_Default_sequence::iterator SimBldgSiteParams_BuildingSite_Default_iterator;
        typedef SimBldgSiteParams_BuildingSite_Default_sequence::const_iterator SimBldgSiteParams_BuildingSite_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgSiteParams_BuildingSite_Default_type, char > SimBldgSiteParams_BuildingSite_Default_traits;

        const SimBldgSiteParams_BuildingSite_Default_sequence&
        SimBldgSiteParams_BuildingSite_Default () const;

        SimBldgSiteParams_BuildingSite_Default_sequence&
        SimBldgSiteParams_BuildingSite_Default ();

        void
        SimBldgSiteParams_BuildingSite_Default (const SimBldgSiteParams_BuildingSite_Default_sequence& s);

        // SimBldgStoryParams_BuildingStory_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimBldgStoryParams_BuildingStory_Default SimBldgStoryParams_BuildingStory_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgStoryParams_BuildingStory_Default_type > SimBldgStoryParams_BuildingStory_Default_sequence;
        typedef SimBldgStoryParams_BuildingStory_Default_sequence::iterator SimBldgStoryParams_BuildingStory_Default_iterator;
        typedef SimBldgStoryParams_BuildingStory_Default_sequence::const_iterator SimBldgStoryParams_BuildingStory_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgStoryParams_BuildingStory_Default_type, char > SimBldgStoryParams_BuildingStory_Default_traits;

        const SimBldgStoryParams_BuildingStory_Default_sequence&
        SimBldgStoryParams_BuildingStory_Default () const;

        SimBldgStoryParams_BuildingStory_Default_sequence&
        SimBldgStoryParams_BuildingStory_Default ();

        void
        SimBldgStoryParams_BuildingStory_Default (const SimBldgStoryParams_BuildingStory_Default_sequence& s);

        // SimBldgStoryType_BuildingStory_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBldgStoryType_BuildingStory_Default SimBldgStoryType_BuildingStory_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBldgStoryType_BuildingStory_Default_type > SimBldgStoryType_BuildingStory_Default_sequence;
        typedef SimBldgStoryType_BuildingStory_Default_sequence::iterator SimBldgStoryType_BuildingStory_Default_iterator;
        typedef SimBldgStoryType_BuildingStory_Default_sequence::const_iterator SimBldgStoryType_BuildingStory_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBldgStoryType_BuildingStory_Default_type, char > SimBldgStoryType_BuildingStory_Default_traits;

        const SimBldgStoryType_BuildingStory_Default_sequence&
        SimBldgStoryType_BuildingStory_Default () const;

        SimBldgStoryType_BuildingStory_Default_sequence&
        SimBldgStoryType_BuildingStory_Default ();

        void
        SimBldgStoryType_BuildingStory_Default (const SimBldgStoryType_BuildingStory_Default_sequence& s);

        // SimBuilding_AdjacentBuilding_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuilding_AdjacentBuilding_Default SimBuilding_AdjacentBuilding_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuilding_AdjacentBuilding_Default_type > SimBuilding_AdjacentBuilding_Default_sequence;
        typedef SimBuilding_AdjacentBuilding_Default_sequence::iterator SimBuilding_AdjacentBuilding_Default_iterator;
        typedef SimBuilding_AdjacentBuilding_Default_sequence::const_iterator SimBuilding_AdjacentBuilding_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuilding_AdjacentBuilding_Default_type, char > SimBuilding_AdjacentBuilding_Default_traits;

        const SimBuilding_AdjacentBuilding_Default_sequence&
        SimBuilding_AdjacentBuilding_Default () const;

        SimBuilding_AdjacentBuilding_Default_sequence&
        SimBuilding_AdjacentBuilding_Default ();

        void
        SimBuilding_AdjacentBuilding_Default (const SimBuilding_AdjacentBuilding_Default_sequence& s);

        // SimBuilding_Building_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuilding_Building_Default SimBuilding_Building_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuilding_Building_Default_type > SimBuilding_Building_Default_sequence;
        typedef SimBuilding_Building_Default_sequence::iterator SimBuilding_Building_Default_iterator;
        typedef SimBuilding_Building_Default_sequence::const_iterator SimBuilding_Building_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuilding_Building_Default_type, char > SimBuilding_Building_Default_traits;

        const SimBuilding_Building_Default_sequence&
        SimBuilding_Building_Default () const;

        SimBuilding_Building_Default_sequence&
        SimBuilding_Building_Default ();

        void
        SimBuilding_Building_Default (const SimBuilding_Building_Default_sequence& s);

        // SimBuildingElementProxy_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_Default_Default SimBuildingElementProxy_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_Default_Default_type > SimBuildingElementProxy_Default_Default_sequence;
        typedef SimBuildingElementProxy_Default_Default_sequence::iterator SimBuildingElementProxy_Default_Default_iterator;
        typedef SimBuildingElementProxy_Default_Default_sequence::const_iterator SimBuildingElementProxy_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_Default_Default_type, char > SimBuildingElementProxy_Default_Default_traits;

        const SimBuildingElementProxy_Default_Default_sequence&
        SimBuildingElementProxy_Default_Default () const;

        SimBuildingElementProxy_Default_Default_sequence&
        SimBuildingElementProxy_Default_Default ();

        void
        SimBuildingElementProxy_Default_Default (const SimBuildingElementProxy_Default_Default_sequence& s);

        // SimBuildingElementProxy_SiteContextElement_BuildingShading
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_SiteContextElement_BuildingShading SimBuildingElementProxy_SiteContextElement_BuildingShading_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_SiteContextElement_BuildingShading_type > SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence;
        typedef SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence::iterator SimBuildingElementProxy_SiteContextElement_BuildingShading_iterator;
        typedef SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence::const_iterator SimBuildingElementProxy_SiteContextElement_BuildingShading_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_SiteContextElement_BuildingShading_type, char > SimBuildingElementProxy_SiteContextElement_BuildingShading_traits;

        const SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence&
        SimBuildingElementProxy_SiteContextElement_BuildingShading () const;

        SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence&
        SimBuildingElementProxy_SiteContextElement_BuildingShading ();

        void
        SimBuildingElementProxy_SiteContextElement_BuildingShading (const SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence& s);

        // SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_type > SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence;
        typedef SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence::iterator SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_iterator;
        typedef SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence::const_iterator SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_type, char > SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_traits;

        const SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence&
        SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed () const;

        SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence&
        SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed ();

        void
        SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed (const SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence& s);

        // SimBuildingElementProxy_SiteContextElement_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_SiteContextElement_Default SimBuildingElementProxy_SiteContextElement_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_SiteContextElement_Default_type > SimBuildingElementProxy_SiteContextElement_Default_sequence;
        typedef SimBuildingElementProxy_SiteContextElement_Default_sequence::iterator SimBuildingElementProxy_SiteContextElement_Default_iterator;
        typedef SimBuildingElementProxy_SiteContextElement_Default_sequence::const_iterator SimBuildingElementProxy_SiteContextElement_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_SiteContextElement_Default_type, char > SimBuildingElementProxy_SiteContextElement_Default_traits;

        const SimBuildingElementProxy_SiteContextElement_Default_sequence&
        SimBuildingElementProxy_SiteContextElement_Default () const;

        SimBuildingElementProxy_SiteContextElement_Default_sequence&
        SimBuildingElementProxy_SiteContextElement_Default ();

        void
        SimBuildingElementProxy_SiteContextElement_Default (const SimBuildingElementProxy_SiteContextElement_Default_sequence& s);

        // SimBuildingElementProxy_SiteContextElement_GroundPlane
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_SiteContextElement_GroundPlane SimBuildingElementProxy_SiteContextElement_GroundPlane_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_SiteContextElement_GroundPlane_type > SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence;
        typedef SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence::iterator SimBuildingElementProxy_SiteContextElement_GroundPlane_iterator;
        typedef SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence::const_iterator SimBuildingElementProxy_SiteContextElement_GroundPlane_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_SiteContextElement_GroundPlane_type, char > SimBuildingElementProxy_SiteContextElement_GroundPlane_traits;

        const SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence&
        SimBuildingElementProxy_SiteContextElement_GroundPlane () const;

        SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence&
        SimBuildingElementProxy_SiteContextElement_GroundPlane ();

        void
        SimBuildingElementProxy_SiteContextElement_GroundPlane (const SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence& s);

        // SimBuildingElementProxy_SiteContextElement_SiteShading
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_SiteContextElement_SiteShading SimBuildingElementProxy_SiteContextElement_SiteShading_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_SiteContextElement_SiteShading_type > SimBuildingElementProxy_SiteContextElement_SiteShading_sequence;
        typedef SimBuildingElementProxy_SiteContextElement_SiteShading_sequence::iterator SimBuildingElementProxy_SiteContextElement_SiteShading_iterator;
        typedef SimBuildingElementProxy_SiteContextElement_SiteShading_sequence::const_iterator SimBuildingElementProxy_SiteContextElement_SiteShading_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_SiteContextElement_SiteShading_type, char > SimBuildingElementProxy_SiteContextElement_SiteShading_traits;

        const SimBuildingElementProxy_SiteContextElement_SiteShading_sequence&
        SimBuildingElementProxy_SiteContextElement_SiteShading () const;

        SimBuildingElementProxy_SiteContextElement_SiteShading_sequence&
        SimBuildingElementProxy_SiteContextElement_SiteShading ();

        void
        SimBuildingElementProxy_SiteContextElement_SiteShading (const SimBuildingElementProxy_SiteContextElement_SiteShading_sequence& s);

        // SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_type > SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence;
        typedef SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence::iterator SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_iterator;
        typedef SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence::const_iterator SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_type, char > SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_traits;

        const SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence&
        SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed () const;

        SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence&
        SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed ();

        void
        SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed (const SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence& s);

        // SimBuildingElementProxy_ThermalMass_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingElementProxy_ThermalMass_Default SimBuildingElementProxy_ThermalMass_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingElementProxy_ThermalMass_Default_type > SimBuildingElementProxy_ThermalMass_Default_sequence;
        typedef SimBuildingElementProxy_ThermalMass_Default_sequence::iterator SimBuildingElementProxy_ThermalMass_Default_iterator;
        typedef SimBuildingElementProxy_ThermalMass_Default_sequence::const_iterator SimBuildingElementProxy_ThermalMass_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingElementProxy_ThermalMass_Default_type, char > SimBuildingElementProxy_ThermalMass_Default_traits;

        const SimBuildingElementProxy_ThermalMass_Default_sequence&
        SimBuildingElementProxy_ThermalMass_Default () const;

        SimBuildingElementProxy_ThermalMass_Default_sequence&
        SimBuildingElementProxy_ThermalMass_Default ();

        void
        SimBuildingElementProxy_ThermalMass_Default (const SimBuildingElementProxy_ThermalMass_Default_sequence& s);

        // SimBuildingStory_BuildingStory_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingStory_BuildingStory_Default SimBuildingStory_BuildingStory_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingStory_BuildingStory_Default_type > SimBuildingStory_BuildingStory_Default_sequence;
        typedef SimBuildingStory_BuildingStory_Default_sequence::iterator SimBuildingStory_BuildingStory_Default_iterator;
        typedef SimBuildingStory_BuildingStory_Default_sequence::const_iterator SimBuildingStory_BuildingStory_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingStory_BuildingStory_Default_type, char > SimBuildingStory_BuildingStory_Default_traits;

        const SimBuildingStory_BuildingStory_Default_sequence&
        SimBuildingStory_BuildingStory_Default () const;

        SimBuildingStory_BuildingStory_Default_sequence&
        SimBuildingStory_BuildingStory_Default ();

        void
        SimBuildingStory_BuildingStory_Default (const SimBuildingStory_BuildingStory_Default_sequence& s);

        // SimBuildingType_Building_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimBuildingType_Building_Default SimBuildingType_Building_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimBuildingType_Building_Default_type > SimBuildingType_Building_Default_sequence;
        typedef SimBuildingType_Building_Default_sequence::iterator SimBuildingType_Building_Default_iterator;
        typedef SimBuildingType_Building_Default_sequence::const_iterator SimBuildingType_Building_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimBuildingType_Building_Default_type, char > SimBuildingType_Building_Default_traits;

        const SimBuildingType_Building_Default_sequence&
        SimBuildingType_Building_Default () const;

        SimBuildingType_Building_Default_sequence&
        SimBuildingType_Building_Default ();

        void
        SimBuildingType_Building_Default (const SimBuildingType_Building_Default_sequence& s);

        // SimCalendarDate_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCalendarDate_Default_Default SimCalendarDate_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCalendarDate_Default_Default_type > SimCalendarDate_Default_Default_sequence;
        typedef SimCalendarDate_Default_Default_sequence::iterator SimCalendarDate_Default_Default_iterator;
        typedef SimCalendarDate_Default_Default_sequence::const_iterator SimCalendarDate_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCalendarDate_Default_Default_type, char > SimCalendarDate_Default_Default_traits;

        const SimCalendarDate_Default_Default_sequence&
        SimCalendarDate_Default_Default () const;

        SimCalendarDate_Default_Default_sequence&
        SimCalendarDate_Default_Default ();

        void
        SimCalendarDate_Default_Default (const SimCalendarDate_Default_Default_sequence& s);

        // SimCartesianTransformOperator_2D_NonUniform
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimCartesianTransformOperator_2D_NonUniform SimCartesianTransformOperator_2D_NonUniform_type;
        typedef ::xsd::cxx::tree::sequence< SimCartesianTransformOperator_2D_NonUniform_type > SimCartesianTransformOperator_2D_NonUniform_sequence;
        typedef SimCartesianTransformOperator_2D_NonUniform_sequence::iterator SimCartesianTransformOperator_2D_NonUniform_iterator;
        typedef SimCartesianTransformOperator_2D_NonUniform_sequence::const_iterator SimCartesianTransformOperator_2D_NonUniform_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCartesianTransformOperator_2D_NonUniform_type, char > SimCartesianTransformOperator_2D_NonUniform_traits;

        const SimCartesianTransformOperator_2D_NonUniform_sequence&
        SimCartesianTransformOperator_2D_NonUniform () const;

        SimCartesianTransformOperator_2D_NonUniform_sequence&
        SimCartesianTransformOperator_2D_NonUniform ();

        void
        SimCartesianTransformOperator_2D_NonUniform (const SimCartesianTransformOperator_2D_NonUniform_sequence& s);

        // SimCartesianTransformOperator_2D_Uniform
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimCartesianTransformOperator_2D_Uniform SimCartesianTransformOperator_2D_Uniform_type;
        typedef ::xsd::cxx::tree::sequence< SimCartesianTransformOperator_2D_Uniform_type > SimCartesianTransformOperator_2D_Uniform_sequence;
        typedef SimCartesianTransformOperator_2D_Uniform_sequence::iterator SimCartesianTransformOperator_2D_Uniform_iterator;
        typedef SimCartesianTransformOperator_2D_Uniform_sequence::const_iterator SimCartesianTransformOperator_2D_Uniform_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCartesianTransformOperator_2D_Uniform_type, char > SimCartesianTransformOperator_2D_Uniform_traits;

        const SimCartesianTransformOperator_2D_Uniform_sequence&
        SimCartesianTransformOperator_2D_Uniform () const;

        SimCartesianTransformOperator_2D_Uniform_sequence&
        SimCartesianTransformOperator_2D_Uniform ();

        void
        SimCartesianTransformOperator_2D_Uniform (const SimCartesianTransformOperator_2D_Uniform_sequence& s);

        // SimCartesianTransformOperator_3D_NonUniform
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimCartesianTransformOperator_3D_NonUniform SimCartesianTransformOperator_3D_NonUniform_type;
        typedef ::xsd::cxx::tree::sequence< SimCartesianTransformOperator_3D_NonUniform_type > SimCartesianTransformOperator_3D_NonUniform_sequence;
        typedef SimCartesianTransformOperator_3D_NonUniform_sequence::iterator SimCartesianTransformOperator_3D_NonUniform_iterator;
        typedef SimCartesianTransformOperator_3D_NonUniform_sequence::const_iterator SimCartesianTransformOperator_3D_NonUniform_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCartesianTransformOperator_3D_NonUniform_type, char > SimCartesianTransformOperator_3D_NonUniform_traits;

        const SimCartesianTransformOperator_3D_NonUniform_sequence&
        SimCartesianTransformOperator_3D_NonUniform () const;

        SimCartesianTransformOperator_3D_NonUniform_sequence&
        SimCartesianTransformOperator_3D_NonUniform ();

        void
        SimCartesianTransformOperator_3D_NonUniform (const SimCartesianTransformOperator_3D_NonUniform_sequence& s);

        // SimCartesianTransformOperator_3D_Uniform
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimCartesianTransformOperator_3D_Uniform SimCartesianTransformOperator_3D_Uniform_type;
        typedef ::xsd::cxx::tree::sequence< SimCartesianTransformOperator_3D_Uniform_type > SimCartesianTransformOperator_3D_Uniform_sequence;
        typedef SimCartesianTransformOperator_3D_Uniform_sequence::iterator SimCartesianTransformOperator_3D_Uniform_iterator;
        typedef SimCartesianTransformOperator_3D_Uniform_sequence::const_iterator SimCartesianTransformOperator_3D_Uniform_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCartesianTransformOperator_3D_Uniform_type, char > SimCartesianTransformOperator_3D_Uniform_traits;

        const SimCartesianTransformOperator_3D_Uniform_sequence&
        SimCartesianTransformOperator_3D_Uniform () const;

        SimCartesianTransformOperator_3D_Uniform_sequence&
        SimCartesianTransformOperator_3D_Uniform ();

        void
        SimCartesianTransformOperator_3D_Uniform (const SimCartesianTransformOperator_3D_Uniform_sequence& s);

        // SimClassification_ClassificationReference_BuildingElementClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_BuildingElementClassification SimClassification_ClassificationReference_BuildingElementClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_BuildingElementClassification_type > SimClassification_ClassificationReference_BuildingElementClassification_sequence;
        typedef SimClassification_ClassificationReference_BuildingElementClassification_sequence::iterator SimClassification_ClassificationReference_BuildingElementClassification_iterator;
        typedef SimClassification_ClassificationReference_BuildingElementClassification_sequence::const_iterator SimClassification_ClassificationReference_BuildingElementClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_BuildingElementClassification_type, char > SimClassification_ClassificationReference_BuildingElementClassification_traits;

        const SimClassification_ClassificationReference_BuildingElementClassification_sequence&
        SimClassification_ClassificationReference_BuildingElementClassification () const;

        SimClassification_ClassificationReference_BuildingElementClassification_sequence&
        SimClassification_ClassificationReference_BuildingElementClassification ();

        void
        SimClassification_ClassificationReference_BuildingElementClassification (const SimClassification_ClassificationReference_BuildingElementClassification_sequence& s);

        // SimClassification_ClassificationReference_ConstructionEntityByFunction
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_ConstructionEntityByFunction SimClassification_ClassificationReference_ConstructionEntityByFunction_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_ConstructionEntityByFunction_type > SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence;
        typedef SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence::iterator SimClassification_ClassificationReference_ConstructionEntityByFunction_iterator;
        typedef SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence::const_iterator SimClassification_ClassificationReference_ConstructionEntityByFunction_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_ConstructionEntityByFunction_type, char > SimClassification_ClassificationReference_ConstructionEntityByFunction_traits;

        const SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence&
        SimClassification_ClassificationReference_ConstructionEntityByFunction () const;

        SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence&
        SimClassification_ClassificationReference_ConstructionEntityByFunction ();

        void
        SimClassification_ClassificationReference_ConstructionEntityByFunction (const SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence& s);

        // SimClassification_ClassificationReference_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_Default SimClassification_ClassificationReference_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_Default_type > SimClassification_ClassificationReference_Default_sequence;
        typedef SimClassification_ClassificationReference_Default_sequence::iterator SimClassification_ClassificationReference_Default_iterator;
        typedef SimClassification_ClassificationReference_Default_sequence::const_iterator SimClassification_ClassificationReference_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_Default_type, char > SimClassification_ClassificationReference_Default_traits;

        const SimClassification_ClassificationReference_Default_sequence&
        SimClassification_ClassificationReference_Default () const;

        SimClassification_ClassificationReference_Default_sequence&
        SimClassification_ClassificationReference_Default ();

        void
        SimClassification_ClassificationReference_Default (const SimClassification_ClassificationReference_Default_sequence& s);

        // SimClassification_ClassificationReference_OrganizationalBillingID
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_OrganizationalBillingID SimClassification_ClassificationReference_OrganizationalBillingID_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_OrganizationalBillingID_type > SimClassification_ClassificationReference_OrganizationalBillingID_sequence;
        typedef SimClassification_ClassificationReference_OrganizationalBillingID_sequence::iterator SimClassification_ClassificationReference_OrganizationalBillingID_iterator;
        typedef SimClassification_ClassificationReference_OrganizationalBillingID_sequence::const_iterator SimClassification_ClassificationReference_OrganizationalBillingID_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_OrganizationalBillingID_type, char > SimClassification_ClassificationReference_OrganizationalBillingID_traits;

        const SimClassification_ClassificationReference_OrganizationalBillingID_sequence&
        SimClassification_ClassificationReference_OrganizationalBillingID () const;

        SimClassification_ClassificationReference_OrganizationalBillingID_sequence&
        SimClassification_ClassificationReference_OrganizationalBillingID ();

        void
        SimClassification_ClassificationReference_OrganizationalBillingID (const SimClassification_ClassificationReference_OrganizationalBillingID_sequence& s);

        // SimClassification_ClassificationReference_OrganizationalID
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_OrganizationalID SimClassification_ClassificationReference_OrganizationalID_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_OrganizationalID_type > SimClassification_ClassificationReference_OrganizationalID_sequence;
        typedef SimClassification_ClassificationReference_OrganizationalID_sequence::iterator SimClassification_ClassificationReference_OrganizationalID_iterator;
        typedef SimClassification_ClassificationReference_OrganizationalID_sequence::const_iterator SimClassification_ClassificationReference_OrganizationalID_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_OrganizationalID_type, char > SimClassification_ClassificationReference_OrganizationalID_traits;

        const SimClassification_ClassificationReference_OrganizationalID_sequence&
        SimClassification_ClassificationReference_OrganizationalID () const;

        SimClassification_ClassificationReference_OrganizationalID_sequence&
        SimClassification_ClassificationReference_OrganizationalID ();

        void
        SimClassification_ClassificationReference_OrganizationalID (const SimClassification_ClassificationReference_OrganizationalID_sequence& s);

        // SimClassification_ClassificationReference_SpaceByFunction
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpaceByFunction SimClassification_ClassificationReference_SpaceByFunction_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpaceByFunction_type > SimClassification_ClassificationReference_SpaceByFunction_sequence;
        typedef SimClassification_ClassificationReference_SpaceByFunction_sequence::iterator SimClassification_ClassificationReference_SpaceByFunction_iterator;
        typedef SimClassification_ClassificationReference_SpaceByFunction_sequence::const_iterator SimClassification_ClassificationReference_SpaceByFunction_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpaceByFunction_type, char > SimClassification_ClassificationReference_SpaceByFunction_traits;

        const SimClassification_ClassificationReference_SpaceByFunction_sequence&
        SimClassification_ClassificationReference_SpaceByFunction () const;

        SimClassification_ClassificationReference_SpaceByFunction_sequence&
        SimClassification_ClassificationReference_SpaceByFunction ();

        void
        SimClassification_ClassificationReference_SpaceByFunction (const SimClassification_ClassificationReference_SpaceByFunction_sequence& s);

        // SimClassification_ClassificationReference_SpaceCategoryBoma
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpaceCategoryBoma SimClassification_ClassificationReference_SpaceCategoryBoma_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpaceCategoryBoma_type > SimClassification_ClassificationReference_SpaceCategoryBoma_sequence;
        typedef SimClassification_ClassificationReference_SpaceCategoryBoma_sequence::iterator SimClassification_ClassificationReference_SpaceCategoryBoma_iterator;
        typedef SimClassification_ClassificationReference_SpaceCategoryBoma_sequence::const_iterator SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpaceCategoryBoma_type, char > SimClassification_ClassificationReference_SpaceCategoryBoma_traits;

        const SimClassification_ClassificationReference_SpaceCategoryBoma_sequence&
        SimClassification_ClassificationReference_SpaceCategoryBoma () const;

        SimClassification_ClassificationReference_SpaceCategoryBoma_sequence&
        SimClassification_ClassificationReference_SpaceCategoryBoma ();

        void
        SimClassification_ClassificationReference_SpaceCategoryBoma (const SimClassification_ClassificationReference_SpaceCategoryBoma_sequence& s);

        // SimClassification_ClassificationReference_SpaceCategoryOwner
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpaceCategoryOwner SimClassification_ClassificationReference_SpaceCategoryOwner_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpaceCategoryOwner_type > SimClassification_ClassificationReference_SpaceCategoryOwner_sequence;
        typedef SimClassification_ClassificationReference_SpaceCategoryOwner_sequence::iterator SimClassification_ClassificationReference_SpaceCategoryOwner_iterator;
        typedef SimClassification_ClassificationReference_SpaceCategoryOwner_sequence::const_iterator SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpaceCategoryOwner_type, char > SimClassification_ClassificationReference_SpaceCategoryOwner_traits;

        const SimClassification_ClassificationReference_SpaceCategoryOwner_sequence&
        SimClassification_ClassificationReference_SpaceCategoryOwner () const;

        SimClassification_ClassificationReference_SpaceCategoryOwner_sequence&
        SimClassification_ClassificationReference_SpaceCategoryOwner ();

        void
        SimClassification_ClassificationReference_SpaceCategoryOwner (const SimClassification_ClassificationReference_SpaceCategoryOwner_sequence& s);

        // SimClassification_ClassificationReference_SpaceTypeOwner
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpaceTypeOwner SimClassification_ClassificationReference_SpaceTypeOwner_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpaceTypeOwner_type > SimClassification_ClassificationReference_SpaceTypeOwner_sequence;
        typedef SimClassification_ClassificationReference_SpaceTypeOwner_sequence::iterator SimClassification_ClassificationReference_SpaceTypeOwner_iterator;
        typedef SimClassification_ClassificationReference_SpaceTypeOwner_sequence::const_iterator SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpaceTypeOwner_type, char > SimClassification_ClassificationReference_SpaceTypeOwner_traits;

        const SimClassification_ClassificationReference_SpaceTypeOwner_sequence&
        SimClassification_ClassificationReference_SpaceTypeOwner () const;

        SimClassification_ClassificationReference_SpaceTypeOwner_sequence&
        SimClassification_ClassificationReference_SpaceTypeOwner ();

        void
        SimClassification_ClassificationReference_SpaceTypeOwner (const SimClassification_ClassificationReference_SpaceTypeOwner_sequence& s);

        // SimClassification_ClassificationReference_SpatialZoneEnergyType
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpatialZoneEnergyType SimClassification_ClassificationReference_SpatialZoneEnergyType_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpatialZoneEnergyType_type > SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence;
        typedef SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence::iterator SimClassification_ClassificationReference_SpatialZoneEnergyType_iterator;
        typedef SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence::const_iterator SimClassification_ClassificationReference_SpatialZoneEnergyType_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpatialZoneEnergyType_type, char > SimClassification_ClassificationReference_SpatialZoneEnergyType_traits;

        const SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence&
        SimClassification_ClassificationReference_SpatialZoneEnergyType () const;

        SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence&
        SimClassification_ClassificationReference_SpatialZoneEnergyType ();

        void
        SimClassification_ClassificationReference_SpatialZoneEnergyType (const SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence& s);

        // SimClassification_ClassificationReference_SpatialZoneSecurityLevel
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpatialZoneSecurityLevel SimClassification_ClassificationReference_SpatialZoneSecurityLevel_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpatialZoneSecurityLevel_type > SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence;
        typedef SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence::iterator SimClassification_ClassificationReference_SpatialZoneSecurityLevel_iterator;
        typedef SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence::const_iterator SimClassification_ClassificationReference_SpatialZoneSecurityLevel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpatialZoneSecurityLevel_type, char > SimClassification_ClassificationReference_SpatialZoneSecurityLevel_traits;

        const SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence&
        SimClassification_ClassificationReference_SpatialZoneSecurityLevel () const;

        SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence&
        SimClassification_ClassificationReference_SpatialZoneSecurityLevel ();

        void
        SimClassification_ClassificationReference_SpatialZoneSecurityLevel (const SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence& s);

        // SimClassification_ClassificationReference_SpatialZoneType
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SpatialZoneType SimClassification_ClassificationReference_SpatialZoneType_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SpatialZoneType_type > SimClassification_ClassificationReference_SpatialZoneType_sequence;
        typedef SimClassification_ClassificationReference_SpatialZoneType_sequence::iterator SimClassification_ClassificationReference_SpatialZoneType_iterator;
        typedef SimClassification_ClassificationReference_SpatialZoneType_sequence::const_iterator SimClassification_ClassificationReference_SpatialZoneType_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SpatialZoneType_type, char > SimClassification_ClassificationReference_SpatialZoneType_traits;

        const SimClassification_ClassificationReference_SpatialZoneType_sequence&
        SimClassification_ClassificationReference_SpatialZoneType () const;

        SimClassification_ClassificationReference_SpatialZoneType_sequence&
        SimClassification_ClassificationReference_SpatialZoneType ();

        void
        SimClassification_ClassificationReference_SpatialZoneType (const SimClassification_ClassificationReference_SpatialZoneType_sequence& s);

        // SimClassification_ClassificationReference_SubOrganizationalID
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationReference_SubOrganizationalID SimClassification_ClassificationReference_SubOrganizationalID_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationReference_SubOrganizationalID_type > SimClassification_ClassificationReference_SubOrganizationalID_sequence;
        typedef SimClassification_ClassificationReference_SubOrganizationalID_sequence::iterator SimClassification_ClassificationReference_SubOrganizationalID_iterator;
        typedef SimClassification_ClassificationReference_SubOrganizationalID_sequence::const_iterator SimClassification_ClassificationReference_SubOrganizationalID_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationReference_SubOrganizationalID_type, char > SimClassification_ClassificationReference_SubOrganizationalID_traits;

        const SimClassification_ClassificationReference_SubOrganizationalID_sequence&
        SimClassification_ClassificationReference_SubOrganizationalID () const;

        SimClassification_ClassificationReference_SubOrganizationalID_sequence&
        SimClassification_ClassificationReference_SubOrganizationalID ();

        void
        SimClassification_ClassificationReference_SubOrganizationalID (const SimClassification_ClassificationReference_SubOrganizationalID_sequence& s);

        // SimClassification_ClassificationSystem_BomaSpaceCategoryClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_BomaSpaceCategoryClassification SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_type > SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence;
        typedef SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence::iterator SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_iterator;
        typedef SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence::const_iterator SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_type, char > SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_traits;

        const SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence&
        SimClassification_ClassificationSystem_BomaSpaceCategoryClassification () const;

        SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence&
        SimClassification_ClassificationSystem_BomaSpaceCategoryClassification ();

        void
        SimClassification_ClassificationSystem_BomaSpaceCategoryClassification (const SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence& s);

        // SimClassification_ClassificationSystem_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_Default SimClassification_ClassificationSystem_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_Default_type > SimClassification_ClassificationSystem_Default_sequence;
        typedef SimClassification_ClassificationSystem_Default_sequence::iterator SimClassification_ClassificationSystem_Default_iterator;
        typedef SimClassification_ClassificationSystem_Default_sequence::const_iterator SimClassification_ClassificationSystem_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_Default_type, char > SimClassification_ClassificationSystem_Default_traits;

        const SimClassification_ClassificationSystem_Default_sequence&
        SimClassification_ClassificationSystem_Default () const;

        SimClassification_ClassificationSystem_Default_sequence&
        SimClassification_ClassificationSystem_Default ();

        void
        SimClassification_ClassificationSystem_Default (const SimClassification_ClassificationSystem_Default_sequence& s);

        // SimClassification_ClassificationSystem_MasterFormat
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_MasterFormat SimClassification_ClassificationSystem_MasterFormat_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_MasterFormat_type > SimClassification_ClassificationSystem_MasterFormat_sequence;
        typedef SimClassification_ClassificationSystem_MasterFormat_sequence::iterator SimClassification_ClassificationSystem_MasterFormat_iterator;
        typedef SimClassification_ClassificationSystem_MasterFormat_sequence::const_iterator SimClassification_ClassificationSystem_MasterFormat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_MasterFormat_type, char > SimClassification_ClassificationSystem_MasterFormat_traits;

        const SimClassification_ClassificationSystem_MasterFormat_sequence&
        SimClassification_ClassificationSystem_MasterFormat () const;

        SimClassification_ClassificationSystem_MasterFormat_sequence&
        SimClassification_ClassificationSystem_MasterFormat ();

        void
        SimClassification_ClassificationSystem_MasterFormat (const SimClassification_ClassificationSystem_MasterFormat_sequence& s);

        // SimClassification_ClassificationSystem_OmniClass
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OmniClass SimClassification_ClassificationSystem_OmniClass_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OmniClass_type > SimClassification_ClassificationSystem_OmniClass_sequence;
        typedef SimClassification_ClassificationSystem_OmniClass_sequence::iterator SimClassification_ClassificationSystem_OmniClass_iterator;
        typedef SimClassification_ClassificationSystem_OmniClass_sequence::const_iterator SimClassification_ClassificationSystem_OmniClass_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OmniClass_type, char > SimClassification_ClassificationSystem_OmniClass_traits;

        const SimClassification_ClassificationSystem_OmniClass_sequence&
        SimClassification_ClassificationSystem_OmniClass () const;

        SimClassification_ClassificationSystem_OmniClass_sequence&
        SimClassification_ClassificationSystem_OmniClass ();

        void
        SimClassification_ClassificationSystem_OmniClass (const SimClassification_ClassificationSystem_OmniClass_sequence& s);

        // SimClassification_ClassificationSystem_OwnerOrganizationalClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OwnerOrganizationalClassification SimClassification_ClassificationSystem_OwnerOrganizationalClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OwnerOrganizationalClassification_type > SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence;
        typedef SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence::iterator SimClassification_ClassificationSystem_OwnerOrganizationalClassification_iterator;
        typedef SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence::const_iterator SimClassification_ClassificationSystem_OwnerOrganizationalClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OwnerOrganizationalClassification_type, char > SimClassification_ClassificationSystem_OwnerOrganizationalClassification_traits;

        const SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence&
        SimClassification_ClassificationSystem_OwnerOrganizationalClassification () const;

        SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence&
        SimClassification_ClassificationSystem_OwnerOrganizationalClassification ();

        void
        SimClassification_ClassificationSystem_OwnerOrganizationalClassification (const SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence& s);

        // SimClassification_ClassificationSystem_OwnerSecurityLevelClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OwnerSecurityLevelClassification SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_type > SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence;
        typedef SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence::iterator SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_iterator;
        typedef SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence::const_iterator SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_type, char > SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_traits;

        const SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSecurityLevelClassification () const;

        SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSecurityLevelClassification ();

        void
        SimClassification_ClassificationSystem_OwnerSecurityLevelClassification (const SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence& s);

        // SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_type > SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence;
        typedef SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence::iterator SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_iterator;
        typedef SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence::const_iterator SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_type, char > SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_traits;

        const SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification () const;

        SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification ();

        void
        SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification (const SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence& s);

        // SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_type > SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence;
        typedef SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence::iterator SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_iterator;
        typedef SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence::const_iterator SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_type, char > SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_traits;

        const SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification () const;

        SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification ();

        void
        SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification (const SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence& s);

        // SimClassification_ClassificationSystem_OwnerSpaceTypeClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OwnerSpaceTypeClassification SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_type > SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence;
        typedef SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence::iterator SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_iterator;
        typedef SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence::const_iterator SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_type, char > SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_traits;

        const SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSpaceTypeClassification () const;

        SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence&
        SimClassification_ClassificationSystem_OwnerSpaceTypeClassification ();

        void
        SimClassification_ClassificationSystem_OwnerSpaceTypeClassification (const SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence& s);

        // SimClassification_ClassificationSystem_OwnerZoneTypeClassification
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_OwnerZoneTypeClassification SimClassification_ClassificationSystem_OwnerZoneTypeClassification_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_OwnerZoneTypeClassification_type > SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence;
        typedef SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence::iterator SimClassification_ClassificationSystem_OwnerZoneTypeClassification_iterator;
        typedef SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence::const_iterator SimClassification_ClassificationSystem_OwnerZoneTypeClassification_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_OwnerZoneTypeClassification_type, char > SimClassification_ClassificationSystem_OwnerZoneTypeClassification_traits;

        const SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence&
        SimClassification_ClassificationSystem_OwnerZoneTypeClassification () const;

        SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence&
        SimClassification_ClassificationSystem_OwnerZoneTypeClassification ();

        void
        SimClassification_ClassificationSystem_OwnerZoneTypeClassification (const SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence& s);

        // SimClassification_ClassificationSystem_Uniformat
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimClassification_ClassificationSystem_Uniformat SimClassification_ClassificationSystem_Uniformat_type;
        typedef ::xsd::cxx::tree::sequence< SimClassification_ClassificationSystem_Uniformat_type > SimClassification_ClassificationSystem_Uniformat_sequence;
        typedef SimClassification_ClassificationSystem_Uniformat_sequence::iterator SimClassification_ClassificationSystem_Uniformat_iterator;
        typedef SimClassification_ClassificationSystem_Uniformat_sequence::const_iterator SimClassification_ClassificationSystem_Uniformat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimClassification_ClassificationSystem_Uniformat_type, char > SimClassification_ClassificationSystem_Uniformat_traits;

        const SimClassification_ClassificationSystem_Uniformat_sequence&
        SimClassification_ClassificationSystem_Uniformat () const;

        SimClassification_ClassificationSystem_Uniformat_sequence&
        SimClassification_ClassificationSystem_Uniformat ();

        void
        SimClassification_ClassificationSystem_Uniformat (const SimClassification_ClassificationSystem_Uniformat_sequence& s);

        // SimColumn_Embedded_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimColumn_Embedded_Default SimColumn_Embedded_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimColumn_Embedded_Default_type > SimColumn_Embedded_Default_sequence;
        typedef SimColumn_Embedded_Default_sequence::iterator SimColumn_Embedded_Default_iterator;
        typedef SimColumn_Embedded_Default_sequence::const_iterator SimColumn_Embedded_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimColumn_Embedded_Default_type, char > SimColumn_Embedded_Default_traits;

        const SimColumn_Embedded_Default_sequence&
        SimColumn_Embedded_Default () const;

        SimColumn_Embedded_Default_sequence&
        SimColumn_Embedded_Default ();

        void
        SimColumn_Embedded_Default (const SimColumn_Embedded_Default_sequence& s);

        // SimColumn_Freestanding_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimColumn_Freestanding_Default SimColumn_Freestanding_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimColumn_Freestanding_Default_type > SimColumn_Freestanding_Default_sequence;
        typedef SimColumn_Freestanding_Default_sequence::iterator SimColumn_Freestanding_Default_iterator;
        typedef SimColumn_Freestanding_Default_sequence::const_iterator SimColumn_Freestanding_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimColumn_Freestanding_Default_type, char > SimColumn_Freestanding_Default_traits;

        const SimColumn_Freestanding_Default_sequence&
        SimColumn_Freestanding_Default () const;

        SimColumn_Freestanding_Default_sequence&
        SimColumn_Freestanding_Default ();

        void
        SimColumn_Freestanding_Default (const SimColumn_Freestanding_Default_sequence& s);

        // SimColumnParams_Column_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimColumnParams_Column_Default SimColumnParams_Column_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimColumnParams_Column_Default_type > SimColumnParams_Column_Default_sequence;
        typedef SimColumnParams_Column_Default_sequence::iterator SimColumnParams_Column_Default_iterator;
        typedef SimColumnParams_Column_Default_sequence::const_iterator SimColumnParams_Column_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimColumnParams_Column_Default_type, char > SimColumnParams_Column_Default_traits;

        const SimColumnParams_Column_Default_sequence&
        SimColumnParams_Column_Default () const;

        SimColumnParams_Column_Default_sequence&
        SimColumnParams_Column_Default ();

        void
        SimColumnParams_Column_Default (const SimColumnParams_Column_Default_sequence& s);

        // SimColumnType_Column_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimColumnType_Column_Default SimColumnType_Column_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimColumnType_Column_Default_type > SimColumnType_Column_Default_sequence;
        typedef SimColumnType_Column_Default_sequence::iterator SimColumnType_Column_Default_iterator;
        typedef SimColumnType_Column_Default_sequence::const_iterator SimColumnType_Column_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimColumnType_Column_Default_type, char > SimColumnType_Column_Default_traits;

        const SimColumnType_Column_Default_sequence&
        SimColumnType_Column_Default () const;

        SimColumnType_Column_Default_sequence&
        SimColumnType_Column_Default ();

        void
        SimColumnType_Column_Default (const SimColumnType_Column_Default_sequence& s);

        // SimComplexProperty_ComplexProp_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimComplexProperty_ComplexProp_Default SimComplexProperty_ComplexProp_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimComplexProperty_ComplexProp_Default_type > SimComplexProperty_ComplexProp_Default_sequence;
        typedef SimComplexProperty_ComplexProp_Default_sequence::iterator SimComplexProperty_ComplexProp_Default_iterator;
        typedef SimComplexProperty_ComplexProp_Default_sequence::const_iterator SimComplexProperty_ComplexProp_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimComplexProperty_ComplexProp_Default_type, char > SimComplexProperty_ComplexProp_Default_traits;

        const SimComplexProperty_ComplexProp_Default_sequence&
        SimComplexProperty_ComplexProp_Default () const;

        SimComplexProperty_ComplexProp_Default_sequence&
        SimComplexProperty_ComplexProp_Default ();

        void
        SimComplexProperty_ComplexProp_Default (const SimComplexProperty_ComplexProp_Default_sequence& s);

        // SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_type > SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence;
        typedef SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence::iterator SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_iterator;
        typedef SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence::const_iterator SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_type, char > SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_traits;

        const SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence&
        SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default () const;

        SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence&
        SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default ();

        void
        SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default (const SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence& s);

        // SimCompositeProfileDef_CompositeProfile_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimCompositeProfileDef_CompositeProfile_Default SimCompositeProfileDef_CompositeProfile_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCompositeProfileDef_CompositeProfile_Default_type > SimCompositeProfileDef_CompositeProfile_Default_sequence;
        typedef SimCompositeProfileDef_CompositeProfile_Default_sequence::iterator SimCompositeProfileDef_CompositeProfile_Default_iterator;
        typedef SimCompositeProfileDef_CompositeProfile_Default_sequence::const_iterator SimCompositeProfileDef_CompositeProfile_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCompositeProfileDef_CompositeProfile_Default_type, char > SimCompositeProfileDef_CompositeProfile_Default_traits;

        const SimCompositeProfileDef_CompositeProfile_Default_sequence&
        SimCompositeProfileDef_CompositeProfile_Default () const;

        SimCompositeProfileDef_CompositeProfile_Default_sequence&
        SimCompositeProfileDef_CompositeProfile_Default ();

        void
        SimCompositeProfileDef_CompositeProfile_Default (const SimCompositeProfileDef_CompositeProfile_Default_sequence& s);

        // SimConnectCurveGeom_Curve_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnectCurveGeom_Curve_Default SimConnectCurveGeom_Curve_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectCurveGeom_Curve_Default_type > SimConnectCurveGeom_Curve_Default_sequence;
        typedef SimConnectCurveGeom_Curve_Default_sequence::iterator SimConnectCurveGeom_Curve_Default_iterator;
        typedef SimConnectCurveGeom_Curve_Default_sequence::const_iterator SimConnectCurveGeom_Curve_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectCurveGeom_Curve_Default_type, char > SimConnectCurveGeom_Curve_Default_traits;

        const SimConnectCurveGeom_Curve_Default_sequence&
        SimConnectCurveGeom_Curve_Default () const;

        SimConnectCurveGeom_Curve_Default_sequence&
        SimConnectCurveGeom_Curve_Default ();

        void
        SimConnectCurveGeom_Curve_Default (const SimConnectCurveGeom_Curve_Default_sequence& s);

        // SimConnectedFaceSet_ConnectedFaceSet_ClosedShell
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type > SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence;
        typedef SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence::iterator SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator;
        typedef SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence::const_iterator SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type, char > SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits;

        const SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence&
        SimConnectedFaceSet_ConnectedFaceSet_ClosedShell () const;

        SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence&
        SimConnectedFaceSet_ConnectedFaceSet_ClosedShell ();

        void
        SimConnectedFaceSet_ConnectedFaceSet_ClosedShell (const SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence& s);

        // SimConnectedFaceSet_ConnectedFaceSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimConnectedFaceSet_ConnectedFaceSet_Default SimConnectedFaceSet_ConnectedFaceSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectedFaceSet_ConnectedFaceSet_Default_type > SimConnectedFaceSet_ConnectedFaceSet_Default_sequence;
        typedef SimConnectedFaceSet_ConnectedFaceSet_Default_sequence::iterator SimConnectedFaceSet_ConnectedFaceSet_Default_iterator;
        typedef SimConnectedFaceSet_ConnectedFaceSet_Default_sequence::const_iterator SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectedFaceSet_ConnectedFaceSet_Default_type, char > SimConnectedFaceSet_ConnectedFaceSet_Default_traits;

        const SimConnectedFaceSet_ConnectedFaceSet_Default_sequence&
        SimConnectedFaceSet_ConnectedFaceSet_Default () const;

        SimConnectedFaceSet_ConnectedFaceSet_Default_sequence&
        SimConnectedFaceSet_ConnectedFaceSet_Default ();

        void
        SimConnectedFaceSet_ConnectedFaceSet_Default (const SimConnectedFaceSet_ConnectedFaceSet_Default_sequence& s);

        // SimConnectedFaceSet_ConnectedFaceSet_OpenShell
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimConnectedFaceSet_ConnectedFaceSet_OpenShell SimConnectedFaceSet_ConnectedFaceSet_OpenShell_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectedFaceSet_ConnectedFaceSet_OpenShell_type > SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence;
        typedef SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence::iterator SimConnectedFaceSet_ConnectedFaceSet_OpenShell_iterator;
        typedef SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence::const_iterator SimConnectedFaceSet_ConnectedFaceSet_OpenShell_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectedFaceSet_ConnectedFaceSet_OpenShell_type, char > SimConnectedFaceSet_ConnectedFaceSet_OpenShell_traits;

        const SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence&
        SimConnectedFaceSet_ConnectedFaceSet_OpenShell () const;

        SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence&
        SimConnectedFaceSet_ConnectedFaceSet_OpenShell ();

        void
        SimConnectedFaceSet_ConnectedFaceSet_OpenShell (const SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence& s);

        // SimConnection_AirFlow_CrossSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_AirFlow_CrossSystem SimConnection_AirFlow_CrossSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_AirFlow_CrossSystem_type > SimConnection_AirFlow_CrossSystem_sequence;
        typedef SimConnection_AirFlow_CrossSystem_sequence::iterator SimConnection_AirFlow_CrossSystem_iterator;
        typedef SimConnection_AirFlow_CrossSystem_sequence::const_iterator SimConnection_AirFlow_CrossSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_AirFlow_CrossSystem_type, char > SimConnection_AirFlow_CrossSystem_traits;

        const SimConnection_AirFlow_CrossSystem_sequence&
        SimConnection_AirFlow_CrossSystem () const;

        SimConnection_AirFlow_CrossSystem_sequence&
        SimConnection_AirFlow_CrossSystem ();

        void
        SimConnection_AirFlow_CrossSystem (const SimConnection_AirFlow_CrossSystem_sequence& s);

        // SimConnection_AirFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_AirFlow_Default SimConnection_AirFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_AirFlow_Default_type > SimConnection_AirFlow_Default_sequence;
        typedef SimConnection_AirFlow_Default_sequence::iterator SimConnection_AirFlow_Default_iterator;
        typedef SimConnection_AirFlow_Default_sequence::const_iterator SimConnection_AirFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_AirFlow_Default_type, char > SimConnection_AirFlow_Default_traits;

        const SimConnection_AirFlow_Default_sequence&
        SimConnection_AirFlow_Default () const;

        SimConnection_AirFlow_Default_sequence&
        SimConnection_AirFlow_Default ();

        void
        SimConnection_AirFlow_Default (const SimConnection_AirFlow_Default_sequence& s);

        // SimConnection_AirFlow_Linkage
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_AirFlow_Linkage SimConnection_AirFlow_Linkage_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_AirFlow_Linkage_type > SimConnection_AirFlow_Linkage_sequence;
        typedef SimConnection_AirFlow_Linkage_sequence::iterator SimConnection_AirFlow_Linkage_iterator;
        typedef SimConnection_AirFlow_Linkage_sequence::const_iterator SimConnection_AirFlow_Linkage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_AirFlow_Linkage_type, char > SimConnection_AirFlow_Linkage_traits;

        const SimConnection_AirFlow_Linkage_sequence&
        SimConnection_AirFlow_Linkage () const;

        SimConnection_AirFlow_Linkage_sequence&
        SimConnection_AirFlow_Linkage ();

        void
        SimConnection_AirFlow_Linkage (const SimConnection_AirFlow_Linkage_sequence& s);

        // SimConnection_AirFlowNetwork_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_AirFlowNetwork_Default SimConnection_AirFlowNetwork_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_AirFlowNetwork_Default_type > SimConnection_AirFlowNetwork_Default_sequence;
        typedef SimConnection_AirFlowNetwork_Default_sequence::iterator SimConnection_AirFlowNetwork_Default_iterator;
        typedef SimConnection_AirFlowNetwork_Default_sequence::const_iterator SimConnection_AirFlowNetwork_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_AirFlowNetwork_Default_type, char > SimConnection_AirFlowNetwork_Default_traits;

        const SimConnection_AirFlowNetwork_Default_sequence&
        SimConnection_AirFlowNetwork_Default () const;

        SimConnection_AirFlowNetwork_Default_sequence&
        SimConnection_AirFlowNetwork_Default ();

        void
        SimConnection_AirFlowNetwork_Default (const SimConnection_AirFlowNetwork_Default_sequence& s);

        // SimConnection_ChilledWaterFlow_CrossSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_ChilledWaterFlow_CrossSystem SimConnection_ChilledWaterFlow_CrossSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_ChilledWaterFlow_CrossSystem_type > SimConnection_ChilledWaterFlow_CrossSystem_sequence;
        typedef SimConnection_ChilledWaterFlow_CrossSystem_sequence::iterator SimConnection_ChilledWaterFlow_CrossSystem_iterator;
        typedef SimConnection_ChilledWaterFlow_CrossSystem_sequence::const_iterator SimConnection_ChilledWaterFlow_CrossSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_ChilledWaterFlow_CrossSystem_type, char > SimConnection_ChilledWaterFlow_CrossSystem_traits;

        const SimConnection_ChilledWaterFlow_CrossSystem_sequence&
        SimConnection_ChilledWaterFlow_CrossSystem () const;

        SimConnection_ChilledWaterFlow_CrossSystem_sequence&
        SimConnection_ChilledWaterFlow_CrossSystem ();

        void
        SimConnection_ChilledWaterFlow_CrossSystem (const SimConnection_ChilledWaterFlow_CrossSystem_sequence& s);

        // SimConnection_ChilledWaterFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_ChilledWaterFlow_Default SimConnection_ChilledWaterFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_ChilledWaterFlow_Default_type > SimConnection_ChilledWaterFlow_Default_sequence;
        typedef SimConnection_ChilledWaterFlow_Default_sequence::iterator SimConnection_ChilledWaterFlow_Default_iterator;
        typedef SimConnection_ChilledWaterFlow_Default_sequence::const_iterator SimConnection_ChilledWaterFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_ChilledWaterFlow_Default_type, char > SimConnection_ChilledWaterFlow_Default_traits;

        const SimConnection_ChilledWaterFlow_Default_sequence&
        SimConnection_ChilledWaterFlow_Default () const;

        SimConnection_ChilledWaterFlow_Default_sequence&
        SimConnection_ChilledWaterFlow_Default ();

        void
        SimConnection_ChilledWaterFlow_Default (const SimConnection_ChilledWaterFlow_Default_sequence& s);

        // SimConnection_CondenserFlow_CrossSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_CondenserFlow_CrossSystem SimConnection_CondenserFlow_CrossSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_CondenserFlow_CrossSystem_type > SimConnection_CondenserFlow_CrossSystem_sequence;
        typedef SimConnection_CondenserFlow_CrossSystem_sequence::iterator SimConnection_CondenserFlow_CrossSystem_iterator;
        typedef SimConnection_CondenserFlow_CrossSystem_sequence::const_iterator SimConnection_CondenserFlow_CrossSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_CondenserFlow_CrossSystem_type, char > SimConnection_CondenserFlow_CrossSystem_traits;

        const SimConnection_CondenserFlow_CrossSystem_sequence&
        SimConnection_CondenserFlow_CrossSystem () const;

        SimConnection_CondenserFlow_CrossSystem_sequence&
        SimConnection_CondenserFlow_CrossSystem ();

        void
        SimConnection_CondenserFlow_CrossSystem (const SimConnection_CondenserFlow_CrossSystem_sequence& s);

        // SimConnection_CondenserFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_CondenserFlow_Default SimConnection_CondenserFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_CondenserFlow_Default_type > SimConnection_CondenserFlow_Default_sequence;
        typedef SimConnection_CondenserFlow_Default_sequence::iterator SimConnection_CondenserFlow_Default_iterator;
        typedef SimConnection_CondenserFlow_Default_sequence::const_iterator SimConnection_CondenserFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_CondenserFlow_Default_type, char > SimConnection_CondenserFlow_Default_traits;

        const SimConnection_CondenserFlow_Default_sequence&
        SimConnection_CondenserFlow_Default () const;

        SimConnection_CondenserFlow_Default_sequence&
        SimConnection_CondenserFlow_Default ();

        void
        SimConnection_CondenserFlow_Default (const SimConnection_CondenserFlow_Default_sequence& s);

        // SimConnection_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_Default_Default SimConnection_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_Default_Default_type > SimConnection_Default_Default_sequence;
        typedef SimConnection_Default_Default_sequence::iterator SimConnection_Default_Default_iterator;
        typedef SimConnection_Default_Default_sequence::const_iterator SimConnection_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_Default_Default_type, char > SimConnection_Default_Default_traits;

        const SimConnection_Default_Default_sequence&
        SimConnection_Default_Default () const;

        SimConnection_Default_Default_sequence&
        SimConnection_Default_Default ();

        void
        SimConnection_Default_Default (const SimConnection_Default_Default_sequence& s);

        // SimConnection_DigitalControl_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_DigitalControl_Default SimConnection_DigitalControl_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_DigitalControl_Default_type > SimConnection_DigitalControl_Default_sequence;
        typedef SimConnection_DigitalControl_Default_sequence::iterator SimConnection_DigitalControl_Default_iterator;
        typedef SimConnection_DigitalControl_Default_sequence::const_iterator SimConnection_DigitalControl_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_DigitalControl_Default_type, char > SimConnection_DigitalControl_Default_traits;

        const SimConnection_DigitalControl_Default_sequence&
        SimConnection_DigitalControl_Default () const;

        SimConnection_DigitalControl_Default_sequence&
        SimConnection_DigitalControl_Default ();

        void
        SimConnection_DigitalControl_Default (const SimConnection_DigitalControl_Default_sequence& s);

        // SimConnection_Docking_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_Docking_Default SimConnection_Docking_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_Docking_Default_type > SimConnection_Docking_Default_sequence;
        typedef SimConnection_Docking_Default_sequence::iterator SimConnection_Docking_Default_iterator;
        typedef SimConnection_Docking_Default_sequence::const_iterator SimConnection_Docking_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_Docking_Default_type, char > SimConnection_Docking_Default_traits;

        const SimConnection_Docking_Default_sequence&
        SimConnection_Docking_Default () const;

        SimConnection_Docking_Default_sequence&
        SimConnection_Docking_Default ();

        void
        SimConnection_Docking_Default (const SimConnection_Docking_Default_sequence& s);

        // SimConnection_ElectricalPowerFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_ElectricalPowerFlow_Default SimConnection_ElectricalPowerFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_ElectricalPowerFlow_Default_type > SimConnection_ElectricalPowerFlow_Default_sequence;
        typedef SimConnection_ElectricalPowerFlow_Default_sequence::iterator SimConnection_ElectricalPowerFlow_Default_iterator;
        typedef SimConnection_ElectricalPowerFlow_Default_sequence::const_iterator SimConnection_ElectricalPowerFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_ElectricalPowerFlow_Default_type, char > SimConnection_ElectricalPowerFlow_Default_traits;

        const SimConnection_ElectricalPowerFlow_Default_sequence&
        SimConnection_ElectricalPowerFlow_Default () const;

        SimConnection_ElectricalPowerFlow_Default_sequence&
        SimConnection_ElectricalPowerFlow_Default ();

        void
        SimConnection_ElectricalPowerFlow_Default (const SimConnection_ElectricalPowerFlow_Default_sequence& s);

        // SimConnection_HotWaterFlow_CrossSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_HotWaterFlow_CrossSystem SimConnection_HotWaterFlow_CrossSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_HotWaterFlow_CrossSystem_type > SimConnection_HotWaterFlow_CrossSystem_sequence;
        typedef SimConnection_HotWaterFlow_CrossSystem_sequence::iterator SimConnection_HotWaterFlow_CrossSystem_iterator;
        typedef SimConnection_HotWaterFlow_CrossSystem_sequence::const_iterator SimConnection_HotWaterFlow_CrossSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_HotWaterFlow_CrossSystem_type, char > SimConnection_HotWaterFlow_CrossSystem_traits;

        const SimConnection_HotWaterFlow_CrossSystem_sequence&
        SimConnection_HotWaterFlow_CrossSystem () const;

        SimConnection_HotWaterFlow_CrossSystem_sequence&
        SimConnection_HotWaterFlow_CrossSystem ();

        void
        SimConnection_HotWaterFlow_CrossSystem (const SimConnection_HotWaterFlow_CrossSystem_sequence& s);

        // SimConnection_HotWaterFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_HotWaterFlow_Default SimConnection_HotWaterFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_HotWaterFlow_Default_type > SimConnection_HotWaterFlow_Default_sequence;
        typedef SimConnection_HotWaterFlow_Default_sequence::iterator SimConnection_HotWaterFlow_Default_iterator;
        typedef SimConnection_HotWaterFlow_Default_sequence::const_iterator SimConnection_HotWaterFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_HotWaterFlow_Default_type, char > SimConnection_HotWaterFlow_Default_traits;

        const SimConnection_HotWaterFlow_Default_sequence&
        SimConnection_HotWaterFlow_Default () const;

        SimConnection_HotWaterFlow_Default_sequence&
        SimConnection_HotWaterFlow_Default ();

        void
        SimConnection_HotWaterFlow_Default (const SimConnection_HotWaterFlow_Default_sequence& s);

        // SimConnection_MixedWaterFlow_CrossSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_MixedWaterFlow_CrossSystem SimConnection_MixedWaterFlow_CrossSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_MixedWaterFlow_CrossSystem_type > SimConnection_MixedWaterFlow_CrossSystem_sequence;
        typedef SimConnection_MixedWaterFlow_CrossSystem_sequence::iterator SimConnection_MixedWaterFlow_CrossSystem_iterator;
        typedef SimConnection_MixedWaterFlow_CrossSystem_sequence::const_iterator SimConnection_MixedWaterFlow_CrossSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_MixedWaterFlow_CrossSystem_type, char > SimConnection_MixedWaterFlow_CrossSystem_traits;

        const SimConnection_MixedWaterFlow_CrossSystem_sequence&
        SimConnection_MixedWaterFlow_CrossSystem () const;

        SimConnection_MixedWaterFlow_CrossSystem_sequence&
        SimConnection_MixedWaterFlow_CrossSystem ();

        void
        SimConnection_MixedWaterFlow_CrossSystem (const SimConnection_MixedWaterFlow_CrossSystem_sequence& s);

        // SimConnection_MixedWaterFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_MixedWaterFlow_Default SimConnection_MixedWaterFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_MixedWaterFlow_Default_type > SimConnection_MixedWaterFlow_Default_sequence;
        typedef SimConnection_MixedWaterFlow_Default_sequence::iterator SimConnection_MixedWaterFlow_Default_iterator;
        typedef SimConnection_MixedWaterFlow_Default_sequence::const_iterator SimConnection_MixedWaterFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_MixedWaterFlow_Default_type, char > SimConnection_MixedWaterFlow_Default_traits;

        const SimConnection_MixedWaterFlow_Default_sequence&
        SimConnection_MixedWaterFlow_Default () const;

        SimConnection_MixedWaterFlow_Default_sequence&
        SimConnection_MixedWaterFlow_Default ();

        void
        SimConnection_MixedWaterFlow_Default (const SimConnection_MixedWaterFlow_Default_sequence& s);

        // SimConnection_RefrigerantFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_RefrigerantFlow_Default SimConnection_RefrigerantFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_RefrigerantFlow_Default_type > SimConnection_RefrigerantFlow_Default_sequence;
        typedef SimConnection_RefrigerantFlow_Default_sequence::iterator SimConnection_RefrigerantFlow_Default_iterator;
        typedef SimConnection_RefrigerantFlow_Default_sequence::const_iterator SimConnection_RefrigerantFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_RefrigerantFlow_Default_type, char > SimConnection_RefrigerantFlow_Default_traits;

        const SimConnection_RefrigerantFlow_Default_sequence&
        SimConnection_RefrigerantFlow_Default () const;

        SimConnection_RefrigerantFlow_Default_sequence&
        SimConnection_RefrigerantFlow_Default ();

        void
        SimConnection_RefrigerantFlow_Default (const SimConnection_RefrigerantFlow_Default_sequence& s);

        // SimConnection_SteamFlow_CrossSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_SteamFlow_CrossSystem SimConnection_SteamFlow_CrossSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_SteamFlow_CrossSystem_type > SimConnection_SteamFlow_CrossSystem_sequence;
        typedef SimConnection_SteamFlow_CrossSystem_sequence::iterator SimConnection_SteamFlow_CrossSystem_iterator;
        typedef SimConnection_SteamFlow_CrossSystem_sequence::const_iterator SimConnection_SteamFlow_CrossSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_SteamFlow_CrossSystem_type, char > SimConnection_SteamFlow_CrossSystem_traits;

        const SimConnection_SteamFlow_CrossSystem_sequence&
        SimConnection_SteamFlow_CrossSystem () const;

        SimConnection_SteamFlow_CrossSystem_sequence&
        SimConnection_SteamFlow_CrossSystem ();

        void
        SimConnection_SteamFlow_CrossSystem (const SimConnection_SteamFlow_CrossSystem_sequence& s);

        // SimConnection_SteamFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_SteamFlow_Default SimConnection_SteamFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_SteamFlow_Default_type > SimConnection_SteamFlow_Default_sequence;
        typedef SimConnection_SteamFlow_Default_sequence::iterator SimConnection_SteamFlow_Default_iterator;
        typedef SimConnection_SteamFlow_Default_sequence::const_iterator SimConnection_SteamFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_SteamFlow_Default_type, char > SimConnection_SteamFlow_Default_traits;

        const SimConnection_SteamFlow_Default_sequence&
        SimConnection_SteamFlow_Default () const;

        SimConnection_SteamFlow_Default_sequence&
        SimConnection_SteamFlow_Default ();

        void
        SimConnection_SteamFlow_Default (const SimConnection_SteamFlow_Default_sequence& s);

        // SimConnection_ZoneAirFlow_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_ZoneAirFlow_Default SimConnection_ZoneAirFlow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_ZoneAirFlow_Default_type > SimConnection_ZoneAirFlow_Default_sequence;
        typedef SimConnection_ZoneAirFlow_Default_sequence::iterator SimConnection_ZoneAirFlow_Default_iterator;
        typedef SimConnection_ZoneAirFlow_Default_sequence::const_iterator SimConnection_ZoneAirFlow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_ZoneAirFlow_Default_type, char > SimConnection_ZoneAirFlow_Default_traits;

        const SimConnection_ZoneAirFlow_Default_sequence&
        SimConnection_ZoneAirFlow_Default () const;

        SimConnection_ZoneAirFlow_Default_sequence&
        SimConnection_ZoneAirFlow_Default ();

        void
        SimConnection_ZoneAirFlow_Default (const SimConnection_ZoneAirFlow_Default_sequence& s);

        // SimConnection_ZoneAirFlow_ZoneCrossMixing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_ZoneAirFlow_ZoneCrossMixing SimConnection_ZoneAirFlow_ZoneCrossMixing_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_ZoneAirFlow_ZoneCrossMixing_type > SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence;
        typedef SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence::iterator SimConnection_ZoneAirFlow_ZoneCrossMixing_iterator;
        typedef SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence::const_iterator SimConnection_ZoneAirFlow_ZoneCrossMixing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_ZoneAirFlow_ZoneCrossMixing_type, char > SimConnection_ZoneAirFlow_ZoneCrossMixing_traits;

        const SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence&
        SimConnection_ZoneAirFlow_ZoneCrossMixing () const;

        SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence&
        SimConnection_ZoneAirFlow_ZoneCrossMixing ();

        void
        SimConnection_ZoneAirFlow_ZoneCrossMixing (const SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence& s);

        // SimConnection_ZoneAirFlow_ZoneMixing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnection_ZoneAirFlow_ZoneMixing SimConnection_ZoneAirFlow_ZoneMixing_type;
        typedef ::xsd::cxx::tree::sequence< SimConnection_ZoneAirFlow_ZoneMixing_type > SimConnection_ZoneAirFlow_ZoneMixing_sequence;
        typedef SimConnection_ZoneAirFlow_ZoneMixing_sequence::iterator SimConnection_ZoneAirFlow_ZoneMixing_iterator;
        typedef SimConnection_ZoneAirFlow_ZoneMixing_sequence::const_iterator SimConnection_ZoneAirFlow_ZoneMixing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnection_ZoneAirFlow_ZoneMixing_type, char > SimConnection_ZoneAirFlow_ZoneMixing_traits;

        const SimConnection_ZoneAirFlow_ZoneMixing_sequence&
        SimConnection_ZoneAirFlow_ZoneMixing () const;

        SimConnection_ZoneAirFlow_ZoneMixing_sequence&
        SimConnection_ZoneAirFlow_ZoneMixing ();

        void
        SimConnection_ZoneAirFlow_ZoneMixing (const SimConnection_ZoneAirFlow_ZoneMixing_sequence& s);

        // SimConnectPointGeom_Point_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnectPointGeom_Point_Default SimConnectPointGeom_Point_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectPointGeom_Point_Default_type > SimConnectPointGeom_Point_Default_sequence;
        typedef SimConnectPointGeom_Point_Default_sequence::iterator SimConnectPointGeom_Point_Default_iterator;
        typedef SimConnectPointGeom_Point_Default_sequence::const_iterator SimConnectPointGeom_Point_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectPointGeom_Point_Default_type, char > SimConnectPointGeom_Point_Default_traits;

        const SimConnectPointGeom_Point_Default_sequence&
        SimConnectPointGeom_Point_Default () const;

        SimConnectPointGeom_Point_Default_sequence&
        SimConnectPointGeom_Point_Default ();

        void
        SimConnectPointGeom_Point_Default (const SimConnectPointGeom_Point_Default_sequence& s);

        // SimConnectPortGeom_Port_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnectPortGeom_Port_Default SimConnectPortGeom_Port_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectPortGeom_Port_Default_type > SimConnectPortGeom_Port_Default_sequence;
        typedef SimConnectPortGeom_Port_Default_sequence::iterator SimConnectPortGeom_Port_Default_iterator;
        typedef SimConnectPortGeom_Port_Default_sequence::const_iterator SimConnectPortGeom_Port_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectPortGeom_Port_Default_type, char > SimConnectPortGeom_Port_Default_traits;

        const SimConnectPortGeom_Port_Default_sequence&
        SimConnectPortGeom_Port_Default () const;

        SimConnectPortGeom_Port_Default_sequence&
        SimConnectPortGeom_Port_Default ();

        void
        SimConnectPortGeom_Port_Default (const SimConnectPortGeom_Port_Default_sequence& s);

        // SimConnectSurfaceGeom_Surface_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimConnectSurfaceGeom_Surface_Default SimConnectSurfaceGeom_Surface_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimConnectSurfaceGeom_Surface_Default_type > SimConnectSurfaceGeom_Surface_Default_sequence;
        typedef SimConnectSurfaceGeom_Surface_Default_sequence::iterator SimConnectSurfaceGeom_Surface_Default_iterator;
        typedef SimConnectSurfaceGeom_Surface_Default_sequence::const_iterator SimConnectSurfaceGeom_Surface_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimConnectSurfaceGeom_Surface_Default_type, char > SimConnectSurfaceGeom_Surface_Default_traits;

        const SimConnectSurfaceGeom_Surface_Default_sequence&
        SimConnectSurfaceGeom_Surface_Default () const;

        SimConnectSurfaceGeom_Surface_Default_sequence&
        SimConnectSurfaceGeom_Surface_Default ();

        void
        SimConnectSurfaceGeom_Surface_Default (const SimConnectSurfaceGeom_Surface_Default_sequence& s);

        // SimController_AvailabilityManager_AirLoop
        //
        typedef ::namespaces::Sim::MepModel::SimController_AvailabilityManager_AirLoop SimController_AvailabilityManager_AirLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimController_AvailabilityManager_AirLoop_type > SimController_AvailabilityManager_AirLoop_sequence;
        typedef SimController_AvailabilityManager_AirLoop_sequence::iterator SimController_AvailabilityManager_AirLoop_iterator;
        typedef SimController_AvailabilityManager_AirLoop_sequence::const_iterator SimController_AvailabilityManager_AirLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_AvailabilityManager_AirLoop_type, char > SimController_AvailabilityManager_AirLoop_traits;

        const SimController_AvailabilityManager_AirLoop_sequence&
        SimController_AvailabilityManager_AirLoop () const;

        SimController_AvailabilityManager_AirLoop_sequence&
        SimController_AvailabilityManager_AirLoop ();

        void
        SimController_AvailabilityManager_AirLoop (const SimController_AvailabilityManager_AirLoop_sequence& s);

        // SimController_AvailabilityManager_PlantLoop
        //
        typedef ::namespaces::Sim::MepModel::SimController_AvailabilityManager_PlantLoop SimController_AvailabilityManager_PlantLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimController_AvailabilityManager_PlantLoop_type > SimController_AvailabilityManager_PlantLoop_sequence;
        typedef SimController_AvailabilityManager_PlantLoop_sequence::iterator SimController_AvailabilityManager_PlantLoop_iterator;
        typedef SimController_AvailabilityManager_PlantLoop_sequence::const_iterator SimController_AvailabilityManager_PlantLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_AvailabilityManager_PlantLoop_type, char > SimController_AvailabilityManager_PlantLoop_traits;

        const SimController_AvailabilityManager_PlantLoop_sequence&
        SimController_AvailabilityManager_PlantLoop () const;

        SimController_AvailabilityManager_PlantLoop_sequence&
        SimController_AvailabilityManager_PlantLoop ();

        void
        SimController_AvailabilityManager_PlantLoop (const SimController_AvailabilityManager_PlantLoop_sequence& s);

        // SimController_Daylighting_DELight
        //
        typedef ::namespaces::Sim::MepModel::SimController_Daylighting_DELight SimController_Daylighting_DELight_type;
        typedef ::xsd::cxx::tree::sequence< SimController_Daylighting_DELight_type > SimController_Daylighting_DELight_sequence;
        typedef SimController_Daylighting_DELight_sequence::iterator SimController_Daylighting_DELight_iterator;
        typedef SimController_Daylighting_DELight_sequence::const_iterator SimController_Daylighting_DELight_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_Daylighting_DELight_type, char > SimController_Daylighting_DELight_traits;

        const SimController_Daylighting_DELight_sequence&
        SimController_Daylighting_DELight () const;

        SimController_Daylighting_DELight_sequence&
        SimController_Daylighting_DELight ();

        void
        SimController_Daylighting_DELight (const SimController_Daylighting_DELight_sequence& s);

        // SimController_Daylighting_Standard
        //
        typedef ::namespaces::Sim::MepModel::SimController_Daylighting_Standard SimController_Daylighting_Standard_type;
        typedef ::xsd::cxx::tree::sequence< SimController_Daylighting_Standard_type > SimController_Daylighting_Standard_sequence;
        typedef SimController_Daylighting_Standard_sequence::iterator SimController_Daylighting_Standard_iterator;
        typedef SimController_Daylighting_Standard_sequence::const_iterator SimController_Daylighting_Standard_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_Daylighting_Standard_type, char > SimController_Daylighting_Standard_traits;

        const SimController_Daylighting_Standard_sequence&
        SimController_Daylighting_Standard () const;

        SimController_Daylighting_Standard_sequence&
        SimController_Daylighting_Standard ();

        void
        SimController_Daylighting_Standard (const SimController_Daylighting_Standard_sequence& s);

        // SimController_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimController_Default_Default SimController_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimController_Default_Default_type > SimController_Default_Default_sequence;
        typedef SimController_Default_Default_sequence::iterator SimController_Default_Default_iterator;
        typedef SimController_Default_Default_sequence::const_iterator SimController_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_Default_Default_type, char > SimController_Default_Default_traits;

        const SimController_Default_Default_sequence&
        SimController_Default_Default () const;

        SimController_Default_Default_sequence&
        SimController_Default_Default ();

        void
        SimController_Default_Default (const SimController_Default_Default_sequence& s);

        // SimController_DemandManager_AirLoop
        //
        typedef ::namespaces::Sim::MepModel::SimController_DemandManager_AirLoop SimController_DemandManager_AirLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimController_DemandManager_AirLoop_type > SimController_DemandManager_AirLoop_sequence;
        typedef SimController_DemandManager_AirLoop_sequence::iterator SimController_DemandManager_AirLoop_iterator;
        typedef SimController_DemandManager_AirLoop_sequence::const_iterator SimController_DemandManager_AirLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_DemandManager_AirLoop_type, char > SimController_DemandManager_AirLoop_traits;

        const SimController_DemandManager_AirLoop_sequence&
        SimController_DemandManager_AirLoop () const;

        SimController_DemandManager_AirLoop_sequence&
        SimController_DemandManager_AirLoop ();

        void
        SimController_DemandManager_AirLoop (const SimController_DemandManager_AirLoop_sequence& s);

        // SimController_LightingControl_Continuous
        //
        typedef ::namespaces::Sim::MepModel::SimController_LightingControl_Continuous SimController_LightingControl_Continuous_type;
        typedef ::xsd::cxx::tree::sequence< SimController_LightingControl_Continuous_type > SimController_LightingControl_Continuous_sequence;
        typedef SimController_LightingControl_Continuous_sequence::iterator SimController_LightingControl_Continuous_iterator;
        typedef SimController_LightingControl_Continuous_sequence::const_iterator SimController_LightingControl_Continuous_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_LightingControl_Continuous_type, char > SimController_LightingControl_Continuous_traits;

        const SimController_LightingControl_Continuous_sequence&
        SimController_LightingControl_Continuous () const;

        SimController_LightingControl_Continuous_sequence&
        SimController_LightingControl_Continuous ();

        void
        SimController_LightingControl_Continuous (const SimController_LightingControl_Continuous_sequence& s);

        // SimController_LightingControl_ContinuousOff
        //
        typedef ::namespaces::Sim::MepModel::SimController_LightingControl_ContinuousOff SimController_LightingControl_ContinuousOff_type;
        typedef ::xsd::cxx::tree::sequence< SimController_LightingControl_ContinuousOff_type > SimController_LightingControl_ContinuousOff_sequence;
        typedef SimController_LightingControl_ContinuousOff_sequence::iterator SimController_LightingControl_ContinuousOff_iterator;
        typedef SimController_LightingControl_ContinuousOff_sequence::const_iterator SimController_LightingControl_ContinuousOff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_LightingControl_ContinuousOff_type, char > SimController_LightingControl_ContinuousOff_traits;

        const SimController_LightingControl_ContinuousOff_sequence&
        SimController_LightingControl_ContinuousOff () const;

        SimController_LightingControl_ContinuousOff_sequence&
        SimController_LightingControl_ContinuousOff ();

        void
        SimController_LightingControl_ContinuousOff (const SimController_LightingControl_ContinuousOff_sequence& s);

        // SimController_LightingControl_MotionSensor
        //
        typedef ::namespaces::Sim::MepModel::SimController_LightingControl_MotionSensor SimController_LightingControl_MotionSensor_type;
        typedef ::xsd::cxx::tree::sequence< SimController_LightingControl_MotionSensor_type > SimController_LightingControl_MotionSensor_sequence;
        typedef SimController_LightingControl_MotionSensor_sequence::iterator SimController_LightingControl_MotionSensor_iterator;
        typedef SimController_LightingControl_MotionSensor_sequence::const_iterator SimController_LightingControl_MotionSensor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_LightingControl_MotionSensor_type, char > SimController_LightingControl_MotionSensor_traits;

        const SimController_LightingControl_MotionSensor_sequence&
        SimController_LightingControl_MotionSensor () const;

        SimController_LightingControl_MotionSensor_sequence&
        SimController_LightingControl_MotionSensor ();

        void
        SimController_LightingControl_MotionSensor (const SimController_LightingControl_MotionSensor_sequence& s);

        // SimController_LightingControl_On_Off
        //
        typedef ::namespaces::Sim::MepModel::SimController_LightingControl_On_Off SimController_LightingControl_On_Off_type;
        typedef ::xsd::cxx::tree::sequence< SimController_LightingControl_On_Off_type > SimController_LightingControl_On_Off_sequence;
        typedef SimController_LightingControl_On_Off_sequence::iterator SimController_LightingControl_On_Off_iterator;
        typedef SimController_LightingControl_On_Off_sequence::const_iterator SimController_LightingControl_On_Off_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_LightingControl_On_Off_type, char > SimController_LightingControl_On_Off_traits;

        const SimController_LightingControl_On_Off_sequence&
        SimController_LightingControl_On_Off () const;

        SimController_LightingControl_On_Off_sequence&
        SimController_LightingControl_On_Off ();

        void
        SimController_LightingControl_On_Off (const SimController_LightingControl_On_Off_sequence& s);

        // SimController_LightingControl_Stepped
        //
        typedef ::namespaces::Sim::MepModel::SimController_LightingControl_Stepped SimController_LightingControl_Stepped_type;
        typedef ::xsd::cxx::tree::sequence< SimController_LightingControl_Stepped_type > SimController_LightingControl_Stepped_sequence;
        typedef SimController_LightingControl_Stepped_sequence::iterator SimController_LightingControl_Stepped_iterator;
        typedef SimController_LightingControl_Stepped_sequence::const_iterator SimController_LightingControl_Stepped_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_LightingControl_Stepped_type, char > SimController_LightingControl_Stepped_traits;

        const SimController_LightingControl_Stepped_sequence&
        SimController_LightingControl_Stepped () const;

        SimController_LightingControl_Stepped_sequence&
        SimController_LightingControl_Stepped ();

        void
        SimController_LightingControl_Stepped (const SimController_LightingControl_Stepped_sequence& s);

        // SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation
        //
        typedef ::namespaces::Sim::MepModel::SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_type > SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence;
        typedef SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence::iterator SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_iterator;
        typedef SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence::const_iterator SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_type, char > SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_traits;

        const SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence&
        SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation () const;

        SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence&
        SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation ();

        void
        SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation (const SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence& s);

        // SimController_OperationManager_CondenserLoop
        //
        typedef ::namespaces::Sim::MepModel::SimController_OperationManager_CondenserLoop SimController_OperationManager_CondenserLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimController_OperationManager_CondenserLoop_type > SimController_OperationManager_CondenserLoop_sequence;
        typedef SimController_OperationManager_CondenserLoop_sequence::iterator SimController_OperationManager_CondenserLoop_iterator;
        typedef SimController_OperationManager_CondenserLoop_sequence::const_iterator SimController_OperationManager_CondenserLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_OperationManager_CondenserLoop_type, char > SimController_OperationManager_CondenserLoop_traits;

        const SimController_OperationManager_CondenserLoop_sequence&
        SimController_OperationManager_CondenserLoop () const;

        SimController_OperationManager_CondenserLoop_sequence&
        SimController_OperationManager_CondenserLoop ();

        void
        SimController_OperationManager_CondenserLoop (const SimController_OperationManager_CondenserLoop_sequence& s);

        // SimController_OperationManager_PlantLoop
        //
        typedef ::namespaces::Sim::MepModel::SimController_OperationManager_PlantLoop SimController_OperationManager_PlantLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimController_OperationManager_PlantLoop_type > SimController_OperationManager_PlantLoop_sequence;
        typedef SimController_OperationManager_PlantLoop_sequence::iterator SimController_OperationManager_PlantLoop_iterator;
        typedef SimController_OperationManager_PlantLoop_sequence::const_iterator SimController_OperationManager_PlantLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_OperationManager_PlantLoop_type, char > SimController_OperationManager_PlantLoop_traits;

        const SimController_OperationManager_PlantLoop_sequence&
        SimController_OperationManager_PlantLoop () const;

        SimController_OperationManager_PlantLoop_sequence&
        SimController_OperationManager_PlantLoop ();

        void
        SimController_OperationManager_PlantLoop (const SimController_OperationManager_PlantLoop_sequence& s);

        // SimController_OutdoorAir_EconomizerControl
        //
        typedef ::namespaces::Sim::MepModel::SimController_OutdoorAir_EconomizerControl SimController_OutdoorAir_EconomizerControl_type;
        typedef ::xsd::cxx::tree::sequence< SimController_OutdoorAir_EconomizerControl_type > SimController_OutdoorAir_EconomizerControl_sequence;
        typedef SimController_OutdoorAir_EconomizerControl_sequence::iterator SimController_OutdoorAir_EconomizerControl_iterator;
        typedef SimController_OutdoorAir_EconomizerControl_sequence::const_iterator SimController_OutdoorAir_EconomizerControl_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_OutdoorAir_EconomizerControl_type, char > SimController_OutdoorAir_EconomizerControl_traits;

        const SimController_OutdoorAir_EconomizerControl_sequence&
        SimController_OutdoorAir_EconomizerControl () const;

        SimController_OutdoorAir_EconomizerControl_sequence&
        SimController_OutdoorAir_EconomizerControl ();

        void
        SimController_OutdoorAir_EconomizerControl (const SimController_OutdoorAir_EconomizerControl_sequence& s);

        // SimController_OutdoorAir_EconomizerWithDemandControlledVentilation
        //
        typedef ::namespaces::Sim::MepModel::SimController_OutdoorAir_EconomizerWithDemandControlledVentilation SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_type > SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence;
        typedef SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence::iterator SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_iterator;
        typedef SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence::const_iterator SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_type, char > SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_traits;

        const SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence&
        SimController_OutdoorAir_EconomizerWithDemandControlledVentilation () const;

        SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence&
        SimController_OutdoorAir_EconomizerWithDemandControlledVentilation ();

        void
        SimController_OutdoorAir_EconomizerWithDemandControlledVentilation (const SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence& s);

        // SimController_OutdoorAir_OutdoorAirPreconditioningController
        //
        typedef ::namespaces::Sim::MepModel::SimController_OutdoorAir_OutdoorAirPreconditioningController SimController_OutdoorAir_OutdoorAirPreconditioningController_type;
        typedef ::xsd::cxx::tree::sequence< SimController_OutdoorAir_OutdoorAirPreconditioningController_type > SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence;
        typedef SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence::iterator SimController_OutdoorAir_OutdoorAirPreconditioningController_iterator;
        typedef SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence::const_iterator SimController_OutdoorAir_OutdoorAirPreconditioningController_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_OutdoorAir_OutdoorAirPreconditioningController_type, char > SimController_OutdoorAir_OutdoorAirPreconditioningController_traits;

        const SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence&
        SimController_OutdoorAir_OutdoorAirPreconditioningController () const;

        SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence&
        SimController_OutdoorAir_OutdoorAirPreconditioningController ();

        void
        SimController_OutdoorAir_OutdoorAirPreconditioningController (const SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence& s);

        // SimController_Programmable_Default
        //
        typedef ::namespaces::Sim::MepModel::SimController_Programmable_Default SimController_Programmable_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimController_Programmable_Default_type > SimController_Programmable_Default_sequence;
        typedef SimController_Programmable_Default_sequence::iterator SimController_Programmable_Default_iterator;
        typedef SimController_Programmable_Default_sequence::const_iterator SimController_Programmable_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_Programmable_Default_type, char > SimController_Programmable_Default_traits;

        const SimController_Programmable_Default_sequence&
        SimController_Programmable_Default () const;

        SimController_Programmable_Default_sequence&
        SimController_Programmable_Default ();

        void
        SimController_Programmable_Default (const SimController_Programmable_Default_sequence& s);

        // SimController_ShadingControl_Heating_CoolingLoads
        //
        typedef ::namespaces::Sim::MepModel::SimController_ShadingControl_Heating_CoolingLoads SimController_ShadingControl_Heating_CoolingLoads_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ShadingControl_Heating_CoolingLoads_type > SimController_ShadingControl_Heating_CoolingLoads_sequence;
        typedef SimController_ShadingControl_Heating_CoolingLoads_sequence::iterator SimController_ShadingControl_Heating_CoolingLoads_iterator;
        typedef SimController_ShadingControl_Heating_CoolingLoads_sequence::const_iterator SimController_ShadingControl_Heating_CoolingLoads_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ShadingControl_Heating_CoolingLoads_type, char > SimController_ShadingControl_Heating_CoolingLoads_traits;

        const SimController_ShadingControl_Heating_CoolingLoads_sequence&
        SimController_ShadingControl_Heating_CoolingLoads () const;

        SimController_ShadingControl_Heating_CoolingLoads_sequence&
        SimController_ShadingControl_Heating_CoolingLoads ();

        void
        SimController_ShadingControl_Heating_CoolingLoads (const SimController_ShadingControl_Heating_CoolingLoads_sequence& s);

        // SimController_ShadingControl_On_Off
        //
        typedef ::namespaces::Sim::MepModel::SimController_ShadingControl_On_Off SimController_ShadingControl_On_Off_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ShadingControl_On_Off_type > SimController_ShadingControl_On_Off_sequence;
        typedef SimController_ShadingControl_On_Off_sequence::iterator SimController_ShadingControl_On_Off_iterator;
        typedef SimController_ShadingControl_On_Off_sequence::const_iterator SimController_ShadingControl_On_Off_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ShadingControl_On_Off_type, char > SimController_ShadingControl_On_Off_traits;

        const SimController_ShadingControl_On_Off_sequence&
        SimController_ShadingControl_On_Off () const;

        SimController_ShadingControl_On_Off_sequence&
        SimController_ShadingControl_On_Off ();

        void
        SimController_ShadingControl_On_Off (const SimController_ShadingControl_On_Off_sequence& s);

        // SimController_ShadingControl_WindowTemp_Solar
        //
        typedef ::namespaces::Sim::MepModel::SimController_ShadingControl_WindowTemp_Solar SimController_ShadingControl_WindowTemp_Solar_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ShadingControl_WindowTemp_Solar_type > SimController_ShadingControl_WindowTemp_Solar_sequence;
        typedef SimController_ShadingControl_WindowTemp_Solar_sequence::iterator SimController_ShadingControl_WindowTemp_Solar_iterator;
        typedef SimController_ShadingControl_WindowTemp_Solar_sequence::const_iterator SimController_ShadingControl_WindowTemp_Solar_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ShadingControl_WindowTemp_Solar_type, char > SimController_ShadingControl_WindowTemp_Solar_traits;

        const SimController_ShadingControl_WindowTemp_Solar_sequence&
        SimController_ShadingControl_WindowTemp_Solar () const;

        SimController_ShadingControl_WindowTemp_Solar_sequence&
        SimController_ShadingControl_WindowTemp_Solar ();

        void
        SimController_ShadingControl_WindowTemp_Solar (const SimController_ShadingControl_WindowTemp_Solar_sequence& s);

        // SimController_SupplyAir_Humidity
        //
        typedef ::namespaces::Sim::MepModel::SimController_SupplyAir_Humidity SimController_SupplyAir_Humidity_type;
        typedef ::xsd::cxx::tree::sequence< SimController_SupplyAir_Humidity_type > SimController_SupplyAir_Humidity_sequence;
        typedef SimController_SupplyAir_Humidity_sequence::iterator SimController_SupplyAir_Humidity_iterator;
        typedef SimController_SupplyAir_Humidity_sequence::const_iterator SimController_SupplyAir_Humidity_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_SupplyAir_Humidity_type, char > SimController_SupplyAir_Humidity_traits;

        const SimController_SupplyAir_Humidity_sequence&
        SimController_SupplyAir_Humidity () const;

        SimController_SupplyAir_Humidity_sequence&
        SimController_SupplyAir_Humidity ();

        void
        SimController_SupplyAir_Humidity (const SimController_SupplyAir_Humidity_sequence& s);

        // SimController_SupplyAir_Temperature
        //
        typedef ::namespaces::Sim::MepModel::SimController_SupplyAir_Temperature SimController_SupplyAir_Temperature_type;
        typedef ::xsd::cxx::tree::sequence< SimController_SupplyAir_Temperature_type > SimController_SupplyAir_Temperature_sequence;
        typedef SimController_SupplyAir_Temperature_sequence::iterator SimController_SupplyAir_Temperature_iterator;
        typedef SimController_SupplyAir_Temperature_sequence::const_iterator SimController_SupplyAir_Temperature_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_SupplyAir_Temperature_type, char > SimController_SupplyAir_Temperature_traits;

        const SimController_SupplyAir_Temperature_sequence&
        SimController_SupplyAir_Temperature () const;

        SimController_SupplyAir_Temperature_sequence&
        SimController_SupplyAir_Temperature ();

        void
        SimController_SupplyAir_Temperature (const SimController_SupplyAir_Temperature_sequence& s);

        // SimController_SupplyWater_Temperature
        //
        typedef ::namespaces::Sim::MepModel::SimController_SupplyWater_Temperature SimController_SupplyWater_Temperature_type;
        typedef ::xsd::cxx::tree::sequence< SimController_SupplyWater_Temperature_type > SimController_SupplyWater_Temperature_sequence;
        typedef SimController_SupplyWater_Temperature_sequence::iterator SimController_SupplyWater_Temperature_iterator;
        typedef SimController_SupplyWater_Temperature_sequence::const_iterator SimController_SupplyWater_Temperature_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_SupplyWater_Temperature_type, char > SimController_SupplyWater_Temperature_traits;

        const SimController_SupplyWater_Temperature_sequence&
        SimController_SupplyWater_Temperature () const;

        SimController_SupplyWater_Temperature_sequence&
        SimController_SupplyWater_Temperature ();

        void
        SimController_SupplyWater_Temperature (const SimController_SupplyWater_Temperature_sequence& s);

        // SimController_ThermalStorage_ThermalEnergyStorageTank
        //
        typedef ::namespaces::Sim::MepModel::SimController_ThermalStorage_ThermalEnergyStorageTank SimController_ThermalStorage_ThermalEnergyStorageTank_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ThermalStorage_ThermalEnergyStorageTank_type > SimController_ThermalStorage_ThermalEnergyStorageTank_sequence;
        typedef SimController_ThermalStorage_ThermalEnergyStorageTank_sequence::iterator SimController_ThermalStorage_ThermalEnergyStorageTank_iterator;
        typedef SimController_ThermalStorage_ThermalEnergyStorageTank_sequence::const_iterator SimController_ThermalStorage_ThermalEnergyStorageTank_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ThermalStorage_ThermalEnergyStorageTank_type, char > SimController_ThermalStorage_ThermalEnergyStorageTank_traits;

        const SimController_ThermalStorage_ThermalEnergyStorageTank_sequence&
        SimController_ThermalStorage_ThermalEnergyStorageTank () const;

        SimController_ThermalStorage_ThermalEnergyStorageTank_sequence&
        SimController_ThermalStorage_ThermalEnergyStorageTank ();

        void
        SimController_ThermalStorage_ThermalEnergyStorageTank (const SimController_ThermalStorage_ThermalEnergyStorageTank_sequence& s);

        // SimController_Ventilation_ContaminantControl
        //
        typedef ::namespaces::Sim::MepModel::SimController_Ventilation_ContaminantControl SimController_Ventilation_ContaminantControl_type;
        typedef ::xsd::cxx::tree::sequence< SimController_Ventilation_ContaminantControl_type > SimController_Ventilation_ContaminantControl_sequence;
        typedef SimController_Ventilation_ContaminantControl_sequence::iterator SimController_Ventilation_ContaminantControl_iterator;
        typedef SimController_Ventilation_ContaminantControl_sequence::const_iterator SimController_Ventilation_ContaminantControl_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_Ventilation_ContaminantControl_type, char > SimController_Ventilation_ContaminantControl_traits;

        const SimController_Ventilation_ContaminantControl_sequence&
        SimController_Ventilation_ContaminantControl () const;

        SimController_Ventilation_ContaminantControl_sequence&
        SimController_Ventilation_ContaminantControl ();

        void
        SimController_Ventilation_ContaminantControl (const SimController_Ventilation_ContaminantControl_sequence& s);

        // SimController_WaterCoil_Default
        //
        typedef ::namespaces::Sim::MepModel::SimController_WaterCoil_Default SimController_WaterCoil_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimController_WaterCoil_Default_type > SimController_WaterCoil_Default_sequence;
        typedef SimController_WaterCoil_Default_sequence::iterator SimController_WaterCoil_Default_iterator;
        typedef SimController_WaterCoil_Default_sequence::const_iterator SimController_WaterCoil_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_WaterCoil_Default_type, char > SimController_WaterCoil_Default_traits;

        const SimController_WaterCoil_Default_sequence&
        SimController_WaterCoil_Default () const;

        SimController_WaterCoil_Default_sequence&
        SimController_WaterCoil_Default ();

        void
        SimController_WaterCoil_Default (const SimController_WaterCoil_Default_sequence& s);

        // SimController_ZoneControlHumidity_Humidistat
        //
        typedef ::namespaces::Sim::MepModel::SimController_ZoneControlHumidity_Humidistat SimController_ZoneControlHumidity_Humidistat_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ZoneControlHumidity_Humidistat_type > SimController_ZoneControlHumidity_Humidistat_sequence;
        typedef SimController_ZoneControlHumidity_Humidistat_sequence::iterator SimController_ZoneControlHumidity_Humidistat_iterator;
        typedef SimController_ZoneControlHumidity_Humidistat_sequence::const_iterator SimController_ZoneControlHumidity_Humidistat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ZoneControlHumidity_Humidistat_type, char > SimController_ZoneControlHumidity_Humidistat_traits;

        const SimController_ZoneControlHumidity_Humidistat_sequence&
        SimController_ZoneControlHumidity_Humidistat () const;

        SimController_ZoneControlHumidity_Humidistat_sequence&
        SimController_ZoneControlHumidity_Humidistat ();

        void
        SimController_ZoneControlHumidity_Humidistat (const SimController_ZoneControlHumidity_Humidistat_sequence& s);

        // SimController_ZoneControlHumidity_Humidistat1Zone
        //
        typedef ::namespaces::Sim::MepModel::SimController_ZoneControlHumidity_Humidistat1Zone SimController_ZoneControlHumidity_Humidistat1Zone_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ZoneControlHumidity_Humidistat1Zone_type > SimController_ZoneControlHumidity_Humidistat1Zone_sequence;
        typedef SimController_ZoneControlHumidity_Humidistat1Zone_sequence::iterator SimController_ZoneControlHumidity_Humidistat1Zone_iterator;
        typedef SimController_ZoneControlHumidity_Humidistat1Zone_sequence::const_iterator SimController_ZoneControlHumidity_Humidistat1Zone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ZoneControlHumidity_Humidistat1Zone_type, char > SimController_ZoneControlHumidity_Humidistat1Zone_traits;

        const SimController_ZoneControlHumidity_Humidistat1Zone_sequence&
        SimController_ZoneControlHumidity_Humidistat1Zone () const;

        SimController_ZoneControlHumidity_Humidistat1Zone_sequence&
        SimController_ZoneControlHumidity_Humidistat1Zone ();

        void
        SimController_ZoneControlHumidity_Humidistat1Zone (const SimController_ZoneControlHumidity_Humidistat1Zone_sequence& s);

        // SimController_ZoneControlTemperature_Thermostat
        //
        typedef ::namespaces::Sim::MepModel::SimController_ZoneControlTemperature_Thermostat SimController_ZoneControlTemperature_Thermostat_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ZoneControlTemperature_Thermostat_type > SimController_ZoneControlTemperature_Thermostat_sequence;
        typedef SimController_ZoneControlTemperature_Thermostat_sequence::iterator SimController_ZoneControlTemperature_Thermostat_iterator;
        typedef SimController_ZoneControlTemperature_Thermostat_sequence::const_iterator SimController_ZoneControlTemperature_Thermostat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ZoneControlTemperature_Thermostat_type, char > SimController_ZoneControlTemperature_Thermostat_traits;

        const SimController_ZoneControlTemperature_Thermostat_sequence&
        SimController_ZoneControlTemperature_Thermostat () const;

        SimController_ZoneControlTemperature_Thermostat_sequence&
        SimController_ZoneControlTemperature_Thermostat ();

        void
        SimController_ZoneControlTemperature_Thermostat (const SimController_ZoneControlTemperature_Thermostat_sequence& s);

        // SimController_ZoneControlTemperature_Thermostat1Zone
        //
        typedef ::namespaces::Sim::MepModel::SimController_ZoneControlTemperature_Thermostat1Zone SimController_ZoneControlTemperature_Thermostat1Zone_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ZoneControlTemperature_Thermostat1Zone_type > SimController_ZoneControlTemperature_Thermostat1Zone_sequence;
        typedef SimController_ZoneControlTemperature_Thermostat1Zone_sequence::iterator SimController_ZoneControlTemperature_Thermostat1Zone_iterator;
        typedef SimController_ZoneControlTemperature_Thermostat1Zone_sequence::const_iterator SimController_ZoneControlTemperature_Thermostat1Zone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ZoneControlTemperature_Thermostat1Zone_type, char > SimController_ZoneControlTemperature_Thermostat1Zone_traits;

        const SimController_ZoneControlTemperature_Thermostat1Zone_sequence&
        SimController_ZoneControlTemperature_Thermostat1Zone () const;

        SimController_ZoneControlTemperature_Thermostat1Zone_sequence&
        SimController_ZoneControlTemperature_Thermostat1Zone ();

        void
        SimController_ZoneControlTemperature_Thermostat1Zone (const SimController_ZoneControlTemperature_Thermostat1Zone_sequence& s);

        // SimController_ZoneControlTemperature_ThermostatThermalComfort
        //
        typedef ::namespaces::Sim::MepModel::SimController_ZoneControlTemperature_ThermostatThermalComfort SimController_ZoneControlTemperature_ThermostatThermalComfort_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ZoneControlTemperature_ThermostatThermalComfort_type > SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence;
        typedef SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence::iterator SimController_ZoneControlTemperature_ThermostatThermalComfort_iterator;
        typedef SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence::const_iterator SimController_ZoneControlTemperature_ThermostatThermalComfort_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ZoneControlTemperature_ThermostatThermalComfort_type, char > SimController_ZoneControlTemperature_ThermostatThermalComfort_traits;

        const SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence&
        SimController_ZoneControlTemperature_ThermostatThermalComfort () const;

        SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence&
        SimController_ZoneControlTemperature_ThermostatThermalComfort ();

        void
        SimController_ZoneControlTemperature_ThermostatThermalComfort (const SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence& s);

        // SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone
        //
        typedef ::namespaces::Sim::MepModel::SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_type;
        typedef ::xsd::cxx::tree::sequence< SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_type > SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence;
        typedef SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence::iterator SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_iterator;
        typedef SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence::const_iterator SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_type, char > SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_traits;

        const SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence&
        SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone () const;

        SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence&
        SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone ();

        void
        SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone (const SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_type > SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence::iterator SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_type, char > SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_traits;

        const SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence&
        SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat () const;

        SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence&
        SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat ();

        void
        SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat (const SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_type > SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence::iterator SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_type, char > SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_traits;

        const SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence&
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff () const;

        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence&
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff ();

        void
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff (const SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_type > SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence::iterator SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_type, char > SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_traits;

        const SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence&
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn () const;

        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence&
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn ();

        void
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn (const SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_HybridVentilation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_HybridVentilation SimControlScheme_AvailabilityManagerScheme_HybridVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_HybridVentilation_type > SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence::iterator SimControlScheme_AvailabilityManagerScheme_HybridVentilation_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_HybridVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_HybridVentilation_type, char > SimControlScheme_AvailabilityManagerScheme_HybridVentilation_traits;

        const SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence&
        SimControlScheme_AvailabilityManagerScheme_HybridVentilation () const;

        SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence&
        SimControlScheme_AvailabilityManagerScheme_HybridVentilation ();

        void
        SimControlScheme_AvailabilityManagerScheme_HybridVentilation (const SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_type > SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence::iterator SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_type, char > SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_traits;

        const SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence&
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff () const;

        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence&
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff ();

        void
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff (const SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_type > SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence::iterator SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_type, char > SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_traits;

        const SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence&
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn () const;

        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence&
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn ();

        void
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn (const SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_NightCycle
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_NightCycle SimControlScheme_AvailabilityManagerScheme_NightCycle_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_NightCycle_type > SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence::iterator SimControlScheme_AvailabilityManagerScheme_NightCycle_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_NightCycle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_NightCycle_type, char > SimControlScheme_AvailabilityManagerScheme_NightCycle_traits;

        const SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence&
        SimControlScheme_AvailabilityManagerScheme_NightCycle () const;

        SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence&
        SimControlScheme_AvailabilityManagerScheme_NightCycle ();

        void
        SimControlScheme_AvailabilityManagerScheme_NightCycle (const SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_NightVentilation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_NightVentilation SimControlScheme_AvailabilityManagerScheme_NightVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_NightVentilation_type > SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence::iterator SimControlScheme_AvailabilityManagerScheme_NightVentilation_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_NightVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_NightVentilation_type, char > SimControlScheme_AvailabilityManagerScheme_NightVentilation_traits;

        const SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence&
        SimControlScheme_AvailabilityManagerScheme_NightVentilation () const;

        SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence&
        SimControlScheme_AvailabilityManagerScheme_NightVentilation ();

        void
        SimControlScheme_AvailabilityManagerScheme_NightVentilation (const SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_Scheduled
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_Scheduled SimControlScheme_AvailabilityManagerScheme_Scheduled_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_Scheduled_type > SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence::iterator SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_Scheduled_type, char > SimControlScheme_AvailabilityManagerScheme_Scheduled_traits;

        const SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence&
        SimControlScheme_AvailabilityManagerScheme_Scheduled () const;

        SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence&
        SimControlScheme_AvailabilityManagerScheme_Scheduled ();

        void
        SimControlScheme_AvailabilityManagerScheme_Scheduled (const SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_ScheduledOff
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_ScheduledOff SimControlScheme_AvailabilityManagerScheme_ScheduledOff_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_ScheduledOff_type > SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence::iterator SimControlScheme_AvailabilityManagerScheme_ScheduledOff_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_ScheduledOff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_ScheduledOff_type, char > SimControlScheme_AvailabilityManagerScheme_ScheduledOff_traits;

        const SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence&
        SimControlScheme_AvailabilityManagerScheme_ScheduledOff () const;

        SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence&
        SimControlScheme_AvailabilityManagerScheme_ScheduledOff ();

        void
        SimControlScheme_AvailabilityManagerScheme_ScheduledOff (const SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence& s);

        // SimControlScheme_AvailabilityManagerScheme_ScheduledOn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_ScheduledOn SimControlScheme_AvailabilityManagerScheme_ScheduledOn_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_AvailabilityManagerScheme_ScheduledOn_type > SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence;
        typedef SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence::iterator SimControlScheme_AvailabilityManagerScheme_ScheduledOn_iterator;
        typedef SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence::const_iterator SimControlScheme_AvailabilityManagerScheme_ScheduledOn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_AvailabilityManagerScheme_ScheduledOn_type, char > SimControlScheme_AvailabilityManagerScheme_ScheduledOn_traits;

        const SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence&
        SimControlScheme_AvailabilityManagerScheme_ScheduledOn () const;

        SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence&
        SimControlScheme_AvailabilityManagerScheme_ScheduledOn ();

        void
        SimControlScheme_AvailabilityManagerScheme_ScheduledOn (const SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_type > SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence::iterator SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_type, char > SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_traits;

        const SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence&
        SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint () const;

        SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence&
        SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint ();

        void
        SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint (const SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_CoolingLoad
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_CoolingLoad SimControlScheme_ControlAndSequencingScheme_CoolingLoad_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_CoolingLoad_type > SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence::iterator SimControlScheme_ControlAndSequencingScheme_CoolingLoad_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_CoolingLoad_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_CoolingLoad_type, char > SimControlScheme_ControlAndSequencingScheme_CoolingLoad_traits;

        const SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence&
        SimControlScheme_ControlAndSequencingScheme_CoolingLoad () const;

        SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence&
        SimControlScheme_ControlAndSequencingScheme_CoolingLoad ();

        void
        SimControlScheme_ControlAndSequencingScheme_CoolingLoad (const SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_type > SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence::iterator SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_type, char > SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_traits;

        const SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence&
        SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter () const;

        SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence&
        SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter ();

        void
        SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter (const SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_HeatingLoad
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_HeatingLoad SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type > SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence::iterator SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type, char > SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits;

        const SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence&
        SimControlScheme_ControlAndSequencingScheme_HeatingLoad () const;

        SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence&
        SimControlScheme_ControlAndSequencingScheme_HeatingLoad ();

        void
        SimControlScheme_ControlAndSequencingScheme_HeatingLoad (const SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_type > SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_type, char > SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_traits;

        const SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence&
        SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity () const;

        SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence&
        SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity ();

        void
        SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity (const SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_type > SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_type, char > SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_traits;

        const SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint () const;

        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint ();

        void
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint (const SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_type > SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_type, char > SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_traits;

        const SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference () const;

        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference ();

        void
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference (const SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_type > SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_type, char > SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_traits;

        const SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb () const;

        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb ();

        void
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb (const SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_type > SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_type, char > SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_traits;

        const SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference () const;

        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference ();

        void
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference (const SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_type > SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_type, char > SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_traits;

        const SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb () const;

        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb ();

        void
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb (const SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_type > SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence::iterator SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_type, char > SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_traits;

        const SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference () const;

        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence&
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference ();

        void
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference (const SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence& s);

        // SimControlScheme_ControlAndSequencingScheme_Uncontrolled
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_Uncontrolled SimControlScheme_ControlAndSequencingScheme_Uncontrolled_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ControlAndSequencingScheme_Uncontrolled_type > SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence;
        typedef SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence::iterator SimControlScheme_ControlAndSequencingScheme_Uncontrolled_iterator;
        typedef SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence::const_iterator SimControlScheme_ControlAndSequencingScheme_Uncontrolled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ControlAndSequencingScheme_Uncontrolled_type, char > SimControlScheme_ControlAndSequencingScheme_Uncontrolled_traits;

        const SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence&
        SimControlScheme_ControlAndSequencingScheme_Uncontrolled () const;

        SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence&
        SimControlScheme_ControlAndSequencingScheme_Uncontrolled ();

        void
        SimControlScheme_ControlAndSequencingScheme_Uncontrolled (const SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence& s);

        // SimControlScheme_DemandManagerScheme_ElectricEquipment
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_DemandManagerScheme_ElectricEquipment SimControlScheme_DemandManagerScheme_ElectricEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_DemandManagerScheme_ElectricEquipment_type > SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence;
        typedef SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence::iterator SimControlScheme_DemandManagerScheme_ElectricEquipment_iterator;
        typedef SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence::const_iterator SimControlScheme_DemandManagerScheme_ElectricEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_DemandManagerScheme_ElectricEquipment_type, char > SimControlScheme_DemandManagerScheme_ElectricEquipment_traits;

        const SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence&
        SimControlScheme_DemandManagerScheme_ElectricEquipment () const;

        SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence&
        SimControlScheme_DemandManagerScheme_ElectricEquipment ();

        void
        SimControlScheme_DemandManagerScheme_ElectricEquipment (const SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence& s);

        // SimControlScheme_DemandManagerScheme_ExteriorLights
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_DemandManagerScheme_ExteriorLights SimControlScheme_DemandManagerScheme_ExteriorLights_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_DemandManagerScheme_ExteriorLights_type > SimControlScheme_DemandManagerScheme_ExteriorLights_sequence;
        typedef SimControlScheme_DemandManagerScheme_ExteriorLights_sequence::iterator SimControlScheme_DemandManagerScheme_ExteriorLights_iterator;
        typedef SimControlScheme_DemandManagerScheme_ExteriorLights_sequence::const_iterator SimControlScheme_DemandManagerScheme_ExteriorLights_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_DemandManagerScheme_ExteriorLights_type, char > SimControlScheme_DemandManagerScheme_ExteriorLights_traits;

        const SimControlScheme_DemandManagerScheme_ExteriorLights_sequence&
        SimControlScheme_DemandManagerScheme_ExteriorLights () const;

        SimControlScheme_DemandManagerScheme_ExteriorLights_sequence&
        SimControlScheme_DemandManagerScheme_ExteriorLights ();

        void
        SimControlScheme_DemandManagerScheme_ExteriorLights (const SimControlScheme_DemandManagerScheme_ExteriorLights_sequence& s);

        // SimControlScheme_DemandManagerScheme_Lights
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_DemandManagerScheme_Lights SimControlScheme_DemandManagerScheme_Lights_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_DemandManagerScheme_Lights_type > SimControlScheme_DemandManagerScheme_Lights_sequence;
        typedef SimControlScheme_DemandManagerScheme_Lights_sequence::iterator SimControlScheme_DemandManagerScheme_Lights_iterator;
        typedef SimControlScheme_DemandManagerScheme_Lights_sequence::const_iterator SimControlScheme_DemandManagerScheme_Lights_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_DemandManagerScheme_Lights_type, char > SimControlScheme_DemandManagerScheme_Lights_traits;

        const SimControlScheme_DemandManagerScheme_Lights_sequence&
        SimControlScheme_DemandManagerScheme_Lights () const;

        SimControlScheme_DemandManagerScheme_Lights_sequence&
        SimControlScheme_DemandManagerScheme_Lights ();

        void
        SimControlScheme_DemandManagerScheme_Lights (const SimControlScheme_DemandManagerScheme_Lights_sequence& s);

        // SimControlScheme_DemandManagerScheme_Thermostats
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_DemandManagerScheme_Thermostats SimControlScheme_DemandManagerScheme_Thermostats_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_DemandManagerScheme_Thermostats_type > SimControlScheme_DemandManagerScheme_Thermostats_sequence;
        typedef SimControlScheme_DemandManagerScheme_Thermostats_sequence::iterator SimControlScheme_DemandManagerScheme_Thermostats_iterator;
        typedef SimControlScheme_DemandManagerScheme_Thermostats_sequence::const_iterator SimControlScheme_DemandManagerScheme_Thermostats_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_DemandManagerScheme_Thermostats_type, char > SimControlScheme_DemandManagerScheme_Thermostats_traits;

        const SimControlScheme_DemandManagerScheme_Thermostats_sequence&
        SimControlScheme_DemandManagerScheme_Thermostats () const;

        SimControlScheme_DemandManagerScheme_Thermostats_sequence&
        SimControlScheme_DemandManagerScheme_Thermostats ();

        void
        SimControlScheme_DemandManagerScheme_Thermostats (const SimControlScheme_DemandManagerScheme_Thermostats_sequence& s);

        // SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_type > SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence;
        typedef SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence::iterator SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_iterator;
        typedef SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence::const_iterator SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_type, char > SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_traits;

        const SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence&
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable () const;

        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence&
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable ();

        void
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable (const SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence& s);

        // SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_type > SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence;
        typedef SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence::iterator SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_iterator;
        typedef SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence::const_iterator SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_type, char > SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_traits;

        const SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence&
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable () const;

        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence&
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable ();

        void
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable (const SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence& s);

        // SimControlScheme_EnergyManagementScheme_GlobalVairable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_GlobalVairable SimControlScheme_EnergyManagementScheme_GlobalVairable_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_GlobalVairable_type > SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence;
        typedef SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence::iterator SimControlScheme_EnergyManagementScheme_GlobalVairable_iterator;
        typedef SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence::const_iterator SimControlScheme_EnergyManagementScheme_GlobalVairable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_GlobalVairable_type, char > SimControlScheme_EnergyManagementScheme_GlobalVairable_traits;

        const SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence&
        SimControlScheme_EnergyManagementScheme_GlobalVairable () const;

        SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence&
        SimControlScheme_EnergyManagementScheme_GlobalVairable ();

        void
        SimControlScheme_EnergyManagementScheme_GlobalVairable (const SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence& s);

        // SimControlScheme_EnergyManagementScheme_InternalVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_InternalVariable SimControlScheme_EnergyManagementScheme_InternalVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_InternalVariable_type > SimControlScheme_EnergyManagementScheme_InternalVariable_sequence;
        typedef SimControlScheme_EnergyManagementScheme_InternalVariable_sequence::iterator SimControlScheme_EnergyManagementScheme_InternalVariable_iterator;
        typedef SimControlScheme_EnergyManagementScheme_InternalVariable_sequence::const_iterator SimControlScheme_EnergyManagementScheme_InternalVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_InternalVariable_type, char > SimControlScheme_EnergyManagementScheme_InternalVariable_traits;

        const SimControlScheme_EnergyManagementScheme_InternalVariable_sequence&
        SimControlScheme_EnergyManagementScheme_InternalVariable () const;

        SimControlScheme_EnergyManagementScheme_InternalVariable_sequence&
        SimControlScheme_EnergyManagementScheme_InternalVariable ();

        void
        SimControlScheme_EnergyManagementScheme_InternalVariable (const SimControlScheme_EnergyManagementScheme_InternalVariable_sequence& s);

        // SimControlScheme_EnergyManagementScheme_OutputVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_OutputVariable SimControlScheme_EnergyManagementScheme_OutputVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_OutputVariable_type > SimControlScheme_EnergyManagementScheme_OutputVariable_sequence;
        typedef SimControlScheme_EnergyManagementScheme_OutputVariable_sequence::iterator SimControlScheme_EnergyManagementScheme_OutputVariable_iterator;
        typedef SimControlScheme_EnergyManagementScheme_OutputVariable_sequence::const_iterator SimControlScheme_EnergyManagementScheme_OutputVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_OutputVariable_type, char > SimControlScheme_EnergyManagementScheme_OutputVariable_traits;

        const SimControlScheme_EnergyManagementScheme_OutputVariable_sequence&
        SimControlScheme_EnergyManagementScheme_OutputVariable () const;

        SimControlScheme_EnergyManagementScheme_OutputVariable_sequence&
        SimControlScheme_EnergyManagementScheme_OutputVariable ();

        void
        SimControlScheme_EnergyManagementScheme_OutputVariable (const SimControlScheme_EnergyManagementScheme_OutputVariable_sequence& s);

        // SimControlScheme_EnergyManagementScheme_Program
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_Program SimControlScheme_EnergyManagementScheme_Program_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_Program_type > SimControlScheme_EnergyManagementScheme_Program_sequence;
        typedef SimControlScheme_EnergyManagementScheme_Program_sequence::iterator SimControlScheme_EnergyManagementScheme_Program_iterator;
        typedef SimControlScheme_EnergyManagementScheme_Program_sequence::const_iterator SimControlScheme_EnergyManagementScheme_Program_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_Program_type, char > SimControlScheme_EnergyManagementScheme_Program_traits;

        const SimControlScheme_EnergyManagementScheme_Program_sequence&
        SimControlScheme_EnergyManagementScheme_Program () const;

        SimControlScheme_EnergyManagementScheme_Program_sequence&
        SimControlScheme_EnergyManagementScheme_Program ();

        void
        SimControlScheme_EnergyManagementScheme_Program (const SimControlScheme_EnergyManagementScheme_Program_sequence& s);

        // SimControlScheme_EnergyManagementScheme_ProgramCallingManager
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_ProgramCallingManager SimControlScheme_EnergyManagementScheme_ProgramCallingManager_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_ProgramCallingManager_type > SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence;
        typedef SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence::iterator SimControlScheme_EnergyManagementScheme_ProgramCallingManager_iterator;
        typedef SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence::const_iterator SimControlScheme_EnergyManagementScheme_ProgramCallingManager_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_ProgramCallingManager_type, char > SimControlScheme_EnergyManagementScheme_ProgramCallingManager_traits;

        const SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence&
        SimControlScheme_EnergyManagementScheme_ProgramCallingManager () const;

        SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence&
        SimControlScheme_EnergyManagementScheme_ProgramCallingManager ();

        void
        SimControlScheme_EnergyManagementScheme_ProgramCallingManager (const SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence& s);

        // SimControlScheme_EnergyManagementScheme_Subroutine
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_Subroutine SimControlScheme_EnergyManagementScheme_Subroutine_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_Subroutine_type > SimControlScheme_EnergyManagementScheme_Subroutine_sequence;
        typedef SimControlScheme_EnergyManagementScheme_Subroutine_sequence::iterator SimControlScheme_EnergyManagementScheme_Subroutine_iterator;
        typedef SimControlScheme_EnergyManagementScheme_Subroutine_sequence::const_iterator SimControlScheme_EnergyManagementScheme_Subroutine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_Subroutine_type, char > SimControlScheme_EnergyManagementScheme_Subroutine_traits;

        const SimControlScheme_EnergyManagementScheme_Subroutine_sequence&
        SimControlScheme_EnergyManagementScheme_Subroutine () const;

        SimControlScheme_EnergyManagementScheme_Subroutine_sequence&
        SimControlScheme_EnergyManagementScheme_Subroutine ();

        void
        SimControlScheme_EnergyManagementScheme_Subroutine (const SimControlScheme_EnergyManagementScheme_Subroutine_sequence& s);

        // SimControlScheme_EnergyManagementScheme_TrendVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_EnergyManagementScheme_TrendVariable SimControlScheme_EnergyManagementScheme_TrendVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_EnergyManagementScheme_TrendVariable_type > SimControlScheme_EnergyManagementScheme_TrendVariable_sequence;
        typedef SimControlScheme_EnergyManagementScheme_TrendVariable_sequence::iterator SimControlScheme_EnergyManagementScheme_TrendVariable_iterator;
        typedef SimControlScheme_EnergyManagementScheme_TrendVariable_sequence::const_iterator SimControlScheme_EnergyManagementScheme_TrendVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_EnergyManagementScheme_TrendVariable_type, char > SimControlScheme_EnergyManagementScheme_TrendVariable_traits;

        const SimControlScheme_EnergyManagementScheme_TrendVariable_sequence&
        SimControlScheme_EnergyManagementScheme_TrendVariable () const;

        SimControlScheme_EnergyManagementScheme_TrendVariable_sequence&
        SimControlScheme_EnergyManagementScheme_TrendVariable ();

        void
        SimControlScheme_EnergyManagementScheme_TrendVariable (const SimControlScheme_EnergyManagementScheme_TrendVariable_sequence& s);

        // SimControlScheme_ExternalInterface_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ExternalInterface_Default SimControlScheme_ExternalInterface_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ExternalInterface_Default_type > SimControlScheme_ExternalInterface_Default_sequence;
        typedef SimControlScheme_ExternalInterface_Default_sequence::iterator SimControlScheme_ExternalInterface_Default_iterator;
        typedef SimControlScheme_ExternalInterface_Default_sequence::const_iterator SimControlScheme_ExternalInterface_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ExternalInterface_Default_type, char > SimControlScheme_ExternalInterface_Default_traits;

        const SimControlScheme_ExternalInterface_Default_sequence&
        SimControlScheme_ExternalInterface_Default () const;

        SimControlScheme_ExternalInterface_Default_sequence&
        SimControlScheme_ExternalInterface_Default ();

        void
        SimControlScheme_ExternalInterface_Default (const SimControlScheme_ExternalInterface_Default_sequence& s);

        // SimControlScheme_ExternalInterface_FunctionalMockupUnit
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_ExternalInterface_FunctionalMockupUnit SimControlScheme_ExternalInterface_FunctionalMockupUnit_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_ExternalInterface_FunctionalMockupUnit_type > SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence;
        typedef SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence::iterator SimControlScheme_ExternalInterface_FunctionalMockupUnit_iterator;
        typedef SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence::const_iterator SimControlScheme_ExternalInterface_FunctionalMockupUnit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_ExternalInterface_FunctionalMockupUnit_type, char > SimControlScheme_ExternalInterface_FunctionalMockupUnit_traits;

        const SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence&
        SimControlScheme_ExternalInterface_FunctionalMockupUnit () const;

        SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence&
        SimControlScheme_ExternalInterface_FunctionalMockupUnit ();

        void
        SimControlScheme_ExternalInterface_FunctionalMockupUnit (const SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence& s);

        // SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_type > SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_type, char > SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_traits;

        const SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme () const;

        SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme ();

        void
        SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme (const SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_type > SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence;
        typedef SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence::iterator SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_iterator;
        typedef SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence::const_iterator SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_type, char > SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_traits;

        const SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence&
        SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme () const;

        SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence&
        SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme ();

        void
        SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme (const SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme (const SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme (const SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme (const SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme (const SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme (const SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme (const SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_type > SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_type, char > SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_traits;

        const SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme () const;

        SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence&
        SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme ();

        void
        SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme (const SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence& s);

        // SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_type > SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence;
        typedef SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence::iterator SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_iterator;
        typedef SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence::const_iterator SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_type, char > SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_traits;

        const SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence&
        SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint () const;

        SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence&
        SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint ();

        void
        SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint (const SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence& s);

        // SimControlScheme_OperatingScheme_UncontrolledOperationScheme
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_OperatingScheme_UncontrolledOperationScheme SimControlScheme_OperatingScheme_UncontrolledOperationScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_OperatingScheme_UncontrolledOperationScheme_type > SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence;
        typedef SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence::iterator SimControlScheme_OperatingScheme_UncontrolledOperationScheme_iterator;
        typedef SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence::const_iterator SimControlScheme_OperatingScheme_UncontrolledOperationScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_OperatingScheme_UncontrolledOperationScheme_type, char > SimControlScheme_OperatingScheme_UncontrolledOperationScheme_traits;

        const SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence&
        SimControlScheme_OperatingScheme_UncontrolledOperationScheme () const;

        SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence&
        SimControlScheme_OperatingScheme_UncontrolledOperationScheme ();

        void
        SimControlScheme_OperatingScheme_UncontrolledOperationScheme (const SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence& s);

        // SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_type > SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence;
        typedef SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence::iterator SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_iterator;
        typedef SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence::const_iterator SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_type, char > SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_traits;

        const SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence&
        SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity () const;

        SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence&
        SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity ();

        void
        SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity (const SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence& s);

        // SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_type > SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence;
        typedef SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence::iterator SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_iterator;
        typedef SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence::const_iterator SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_type, char > SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_traits;

        const SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence&
        SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity () const;

        SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence&
        SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity ();

        void
        SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity (const SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence& s);

        // SimControlScheme_SetpointManagerScheme_ColdestZoneReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ColdestZoneReset SimControlScheme_SetpointManagerScheme_ColdestZoneReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_ColdestZoneReset_type > SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence::iterator SimControlScheme_SetpointManagerScheme_ColdestZoneReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_ColdestZoneReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_ColdestZoneReset_type, char > SimControlScheme_SetpointManagerScheme_ColdestZoneReset_traits;

        const SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_ColdestZoneReset () const;

        SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_ColdestZoneReset ();

        void
        SimControlScheme_SetpointManagerScheme_ColdestZoneReset (const SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_DuctStaticPressure
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_DuctStaticPressure SimControlScheme_SetpointManagerScheme_DuctStaticPressure_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_DuctStaticPressure_type > SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence;
        typedef SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence::iterator SimControlScheme_SetpointManagerScheme_DuctStaticPressure_iterator;
        typedef SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence::const_iterator SimControlScheme_SetpointManagerScheme_DuctStaticPressure_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_DuctStaticPressure_type, char > SimControlScheme_SetpointManagerScheme_DuctStaticPressure_traits;

        const SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence&
        SimControlScheme_SetpointManagerScheme_DuctStaticPressure () const;

        SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence&
        SimControlScheme_SetpointManagerScheme_DuctStaticPressure ();

        void
        SimControlScheme_SetpointManagerScheme_DuctStaticPressure (const SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence& s);

        // SimControlScheme_SetpointManagerScheme_EnteringReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_EnteringReset SimControlScheme_SetpointManagerScheme_EnteringReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_EnteringReset_type > SimControlScheme_SetpointManagerScheme_EnteringReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_EnteringReset_sequence::iterator SimControlScheme_SetpointManagerScheme_EnteringReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_EnteringReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_EnteringReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_EnteringReset_type, char > SimControlScheme_SetpointManagerScheme_EnteringReset_traits;

        const SimControlScheme_SetpointManagerScheme_EnteringReset_sequence&
        SimControlScheme_SetpointManagerScheme_EnteringReset () const;

        SimControlScheme_SetpointManagerScheme_EnteringReset_sequence&
        SimControlScheme_SetpointManagerScheme_EnteringReset ();

        void
        SimControlScheme_SetpointManagerScheme_EnteringReset (const SimControlScheme_SetpointManagerScheme_EnteringReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_EnteringResetIdeal
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_EnteringResetIdeal SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_type > SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence;
        typedef SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence::iterator SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_iterator;
        typedef SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence::const_iterator SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_type, char > SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_traits;

        const SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence&
        SimControlScheme_SetpointManagerScheme_EnteringResetIdeal () const;

        SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence&
        SimControlScheme_SetpointManagerScheme_EnteringResetIdeal ();

        void
        SimControlScheme_SetpointManagerScheme_EnteringResetIdeal (const SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence& s);

        // SimControlScheme_SetpointManagerScheme_FollowGroundTemperature
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_FollowGroundTemperature SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_type > SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence;
        typedef SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence::iterator SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_iterator;
        typedef SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence::const_iterator SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_type, char > SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_traits;

        const SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence&
        SimControlScheme_SetpointManagerScheme_FollowGroundTemperature () const;

        SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence&
        SimControlScheme_SetpointManagerScheme_FollowGroundTemperature ();

        void
        SimControlScheme_SetpointManagerScheme_FollowGroundTemperature (const SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence& s);

        // SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_type > SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence;
        typedef SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence::iterator SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_iterator;
        typedef SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence::const_iterator SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_type, char > SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_traits;

        const SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence&
        SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature () const;

        SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence&
        SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature ();

        void
        SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature (const SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence& s);

        // SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_type > SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence;
        typedef SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence::iterator SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_iterator;
        typedef SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence::const_iterator SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_type, char > SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_traits;

        const SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence&
        SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature () const;

        SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence&
        SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature ();

        void
        SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature (const SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence& s);

        // SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_type > SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence::iterator SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_type, char > SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_traits;

        const SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset () const;

        SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset ();

        void
        SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset (const SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_MixedAir
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_MixedAir SimControlScheme_SetpointManagerScheme_MixedAir_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_MixedAir_type > SimControlScheme_SetpointManagerScheme_MixedAir_sequence;
        typedef SimControlScheme_SetpointManagerScheme_MixedAir_sequence::iterator SimControlScheme_SetpointManagerScheme_MixedAir_iterator;
        typedef SimControlScheme_SetpointManagerScheme_MixedAir_sequence::const_iterator SimControlScheme_SetpointManagerScheme_MixedAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_MixedAir_type, char > SimControlScheme_SetpointManagerScheme_MixedAir_traits;

        const SimControlScheme_SetpointManagerScheme_MixedAir_sequence&
        SimControlScheme_SetpointManagerScheme_MixedAir () const;

        SimControlScheme_SetpointManagerScheme_MixedAir_sequence&
        SimControlScheme_SetpointManagerScheme_MixedAir ();

        void
        SimControlScheme_SetpointManagerScheme_MixedAir (const SimControlScheme_SetpointManagerScheme_MixedAir_sequence& s);

        // SimControlScheme_SetpointManagerScheme_MostHumidZoneReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_MostHumidZoneReset SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_type > SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence::iterator SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_type, char > SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_traits;

        const SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_MostHumidZoneReset () const;

        SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_MostHumidZoneReset ();

        void
        SimControlScheme_SetpointManagerScheme_MostHumidZoneReset (const SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_type > SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence;
        typedef SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence::iterator SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_iterator;
        typedef SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence::const_iterator SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_type, char > SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_traits;

        const SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence&
        SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat () const;

        SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence&
        SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat ();

        void
        SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat (const SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence& s);

        // SimControlScheme_SetpointManagerScheme_OutdoorAirReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_OutdoorAirReset SimControlScheme_SetpointManagerScheme_OutdoorAirReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_OutdoorAirReset_type > SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence::iterator SimControlScheme_SetpointManagerScheme_OutdoorAirReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_OutdoorAirReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_OutdoorAirReset_type, char > SimControlScheme_SetpointManagerScheme_OutdoorAirReset_traits;

        const SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence&
        SimControlScheme_SetpointManagerScheme_OutdoorAirReset () const;

        SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence&
        SimControlScheme_SetpointManagerScheme_OutdoorAirReset ();

        void
        SimControlScheme_SetpointManagerScheme_OutdoorAirReset (const SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_type > SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence;
        typedef SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence::iterator SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_iterator;
        typedef SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence::const_iterator SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_type, char > SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_traits;

        const SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence&
        SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow () const;

        SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence&
        SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow ();

        void
        SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow (const SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence& s);

        // SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_type > SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence;
        typedef SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence::iterator SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_iterator;
        typedef SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence::const_iterator SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_type, char > SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_traits;

        const SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence&
        SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint () const;

        SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence&
        SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint ();

        void
        SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint (const SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence& s);

        // SimControlScheme_SetpointManagerScheme_ScheduledSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type > SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence;
        typedef SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence::iterator SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator;
        typedef SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence::const_iterator SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type, char > SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits;

        const SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence&
        SimControlScheme_SetpointManagerScheme_ScheduledSetpoint () const;

        SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence&
        SimControlScheme_SetpointManagerScheme_ScheduledSetpoint ();

        void
        SimControlScheme_SetpointManagerScheme_ScheduledSetpoint (const SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_type > SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence::iterator SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_type, char > SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_traits;

        const SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence&
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled () const;

        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence&
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled ();

        void
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled (const SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_type > SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence::iterator SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_type, char > SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_traits;

        const SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence&
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint () const;

        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence&
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint ();

        void
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint (const SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SingleZone_Cooling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SingleZone_Cooling SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_type > SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence::iterator SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_type, char > SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_traits;

        const SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Cooling () const;

        SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Cooling ();

        void
        SimControlScheme_SetpointManagerScheme_SingleZone_Cooling (const SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SingleZone_Heating
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SingleZone_Heating SimControlScheme_SetpointManagerScheme_SingleZone_Heating_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SingleZone_Heating_type > SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence::iterator SimControlScheme_SetpointManagerScheme_SingleZone_Heating_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SingleZone_Heating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SingleZone_Heating_type, char > SimControlScheme_SetpointManagerScheme_SingleZone_Heating_traits;

        const SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Heating () const;

        SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Heating ();

        void
        SimControlScheme_SetpointManagerScheme_SingleZone_Heating (const SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_type > SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence::iterator SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_type, char > SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_traits;

        const SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum () const;

        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum ();

        void
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum (const SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_type > SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence::iterator SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_type, char > SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_traits;

        const SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum () const;

        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum ();

        void
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum (const SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence& s);

        // SimControlScheme_SetpointManagerScheme_SingleZone_Reheat
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_SingleZone_Reheat SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_type > SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence::iterator SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_iterator;
        typedef SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence::const_iterator SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_type, char > SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_traits;

        const SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Reheat () const;

        SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence&
        SimControlScheme_SetpointManagerScheme_SingleZone_Reheat ();

        void
        SimControlScheme_SetpointManagerScheme_SingleZone_Reheat (const SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence& s);

        // SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_type > SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence;
        typedef SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence::iterator SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_iterator;
        typedef SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence::const_iterator SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_type, char > SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_traits;

        const SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence&
        SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow () const;

        SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence&
        SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow ();

        void
        SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow (const SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence& s);

        // SimControlScheme_SetpointManagerScheme_WarmestZoneReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_WarmestZoneReset SimControlScheme_SetpointManagerScheme_WarmestZoneReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_WarmestZoneReset_type > SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence::iterator SimControlScheme_SetpointManagerScheme_WarmestZoneReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_WarmestZoneReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_WarmestZoneReset_type, char > SimControlScheme_SetpointManagerScheme_WarmestZoneReset_traits;

        const SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_WarmestZoneReset () const;

        SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence&
        SimControlScheme_SetpointManagerScheme_WarmestZoneReset ();

        void
        SimControlScheme_SetpointManagerScheme_WarmestZoneReset (const SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_type > SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence::iterator SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_type, char > SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_traits;

        const SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence&
        SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset () const;

        SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence&
        SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset ();

        void
        SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset (const SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence& s);

        // SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_type > SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence;
        typedef SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence::iterator SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_iterator;
        typedef SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence::const_iterator SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_type, char > SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_traits;

        const SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence&
        SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset () const;

        SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence&
        SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset ();

        void
        SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset (const SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence& s);

        // SimControlScheme_SetpointScheme_DualSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_DualSetpoint SimControlScheme_SetpointScheme_DualSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_DualSetpoint_type > SimControlScheme_SetpointScheme_DualSetpoint_sequence;
        typedef SimControlScheme_SetpointScheme_DualSetpoint_sequence::iterator SimControlScheme_SetpointScheme_DualSetpoint_iterator;
        typedef SimControlScheme_SetpointScheme_DualSetpoint_sequence::const_iterator SimControlScheme_SetpointScheme_DualSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_DualSetpoint_type, char > SimControlScheme_SetpointScheme_DualSetpoint_traits;

        const SimControlScheme_SetpointScheme_DualSetpoint_sequence&
        SimControlScheme_SetpointScheme_DualSetpoint () const;

        SimControlScheme_SetpointScheme_DualSetpoint_sequence&
        SimControlScheme_SetpointScheme_DualSetpoint ();

        void
        SimControlScheme_SetpointScheme_DualSetpoint (const SimControlScheme_SetpointScheme_DualSetpoint_sequence& s);

        // SimControlScheme_SetpointScheme_SingleCooling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_SingleCooling SimControlScheme_SetpointScheme_SingleCooling_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_SingleCooling_type > SimControlScheme_SetpointScheme_SingleCooling_sequence;
        typedef SimControlScheme_SetpointScheme_SingleCooling_sequence::iterator SimControlScheme_SetpointScheme_SingleCooling_iterator;
        typedef SimControlScheme_SetpointScheme_SingleCooling_sequence::const_iterator SimControlScheme_SetpointScheme_SingleCooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_SingleCooling_type, char > SimControlScheme_SetpointScheme_SingleCooling_traits;

        const SimControlScheme_SetpointScheme_SingleCooling_sequence&
        SimControlScheme_SetpointScheme_SingleCooling () const;

        SimControlScheme_SetpointScheme_SingleCooling_sequence&
        SimControlScheme_SetpointScheme_SingleCooling ();

        void
        SimControlScheme_SetpointScheme_SingleCooling (const SimControlScheme_SetpointScheme_SingleCooling_sequence& s);

        // SimControlScheme_SetpointScheme_SingleHeating
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_SingleHeating SimControlScheme_SetpointScheme_SingleHeating_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_SingleHeating_type > SimControlScheme_SetpointScheme_SingleHeating_sequence;
        typedef SimControlScheme_SetpointScheme_SingleHeating_sequence::iterator SimControlScheme_SetpointScheme_SingleHeating_iterator;
        typedef SimControlScheme_SetpointScheme_SingleHeating_sequence::const_iterator SimControlScheme_SetpointScheme_SingleHeating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_SingleHeating_type, char > SimControlScheme_SetpointScheme_SingleHeating_traits;

        const SimControlScheme_SetpointScheme_SingleHeating_sequence&
        SimControlScheme_SetpointScheme_SingleHeating () const;

        SimControlScheme_SetpointScheme_SingleHeating_sequence&
        SimControlScheme_SetpointScheme_SingleHeating ();

        void
        SimControlScheme_SetpointScheme_SingleHeating (const SimControlScheme_SetpointScheme_SingleHeating_sequence& s);

        // SimControlScheme_SetpointScheme_SingleHeatingOrCooling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_SingleHeatingOrCooling SimControlScheme_SetpointScheme_SingleHeatingOrCooling_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_SingleHeatingOrCooling_type > SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence;
        typedef SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence::iterator SimControlScheme_SetpointScheme_SingleHeatingOrCooling_iterator;
        typedef SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence::const_iterator SimControlScheme_SetpointScheme_SingleHeatingOrCooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_SingleHeatingOrCooling_type, char > SimControlScheme_SetpointScheme_SingleHeatingOrCooling_traits;

        const SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence&
        SimControlScheme_SetpointScheme_SingleHeatingOrCooling () const;

        SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence&
        SimControlScheme_SetpointScheme_SingleHeatingOrCooling ();

        void
        SimControlScheme_SetpointScheme_SingleHeatingOrCooling (const SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence& s);

        // SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_type > SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence::iterator SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_iterator;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence::const_iterator SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_type, char > SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_traits;

        const SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint () const;

        SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint ();

        void
        SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint (const SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence& s);

        // SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_type > SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence::iterator SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_iterator;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence::const_iterator SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_type, char > SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_traits;

        const SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling () const;

        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling ();

        void
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling (const SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence& s);

        // SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_type > SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence::iterator SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_iterator;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence::const_iterator SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_type, char > SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_traits;

        const SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating () const;

        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating ();

        void
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating (const SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence& s);

        // SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_type;
        typedef ::xsd::cxx::tree::sequence< SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_type > SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence::iterator SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_iterator;
        typedef SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence::const_iterator SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_type, char > SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_traits;

        const SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling () const;

        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence&
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling ();

        void
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling (const SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence& s);

        // SimCost_ComponentCost_Adjustments
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost_Adjustments SimCost_ComponentCost_Adjustments_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_ComponentCost_Adjustments_type > SimCost_ComponentCost_Adjustments_sequence;
        typedef SimCost_ComponentCost_Adjustments_sequence::iterator SimCost_ComponentCost_Adjustments_iterator;
        typedef SimCost_ComponentCost_Adjustments_sequence::const_iterator SimCost_ComponentCost_Adjustments_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_ComponentCost_Adjustments_type, char > SimCost_ComponentCost_Adjustments_traits;

        const SimCost_ComponentCost_Adjustments_sequence&
        SimCost_ComponentCost_Adjustments () const;

        SimCost_ComponentCost_Adjustments_sequence&
        SimCost_ComponentCost_Adjustments ();

        void
        SimCost_ComponentCost_Adjustments (const SimCost_ComponentCost_Adjustments_sequence& s);

        // SimCost_ComponentCost_LineItem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost_LineItem SimCost_ComponentCost_LineItem_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_ComponentCost_LineItem_type > SimCost_ComponentCost_LineItem_sequence;
        typedef SimCost_ComponentCost_LineItem_sequence::iterator SimCost_ComponentCost_LineItem_iterator;
        typedef SimCost_ComponentCost_LineItem_sequence::const_iterator SimCost_ComponentCost_LineItem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_ComponentCost_LineItem_type, char > SimCost_ComponentCost_LineItem_traits;

        const SimCost_ComponentCost_LineItem_sequence&
        SimCost_ComponentCost_LineItem () const;

        SimCost_ComponentCost_LineItem_sequence&
        SimCost_ComponentCost_LineItem ();

        void
        SimCost_ComponentCost_LineItem (const SimCost_ComponentCost_LineItem_sequence& s);

        // SimCost_ComponentCost_Reference
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_ComponentCost_Reference SimCost_ComponentCost_Reference_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_ComponentCost_Reference_type > SimCost_ComponentCost_Reference_sequence;
        typedef SimCost_ComponentCost_Reference_sequence::iterator SimCost_ComponentCost_Reference_iterator;
        typedef SimCost_ComponentCost_Reference_sequence::const_iterator SimCost_ComponentCost_Reference_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_ComponentCost_Reference_type, char > SimCost_ComponentCost_Reference_traits;

        const SimCost_ComponentCost_Reference_sequence&
        SimCost_ComponentCost_Reference () const;

        SimCost_ComponentCost_Reference_sequence&
        SimCost_ComponentCost_Reference ();

        void
        SimCost_ComponentCost_Reference (const SimCost_ComponentCost_Reference_sequence& s);

        // SimCost_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_Default_Default SimCost_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_Default_Default_type > SimCost_Default_Default_sequence;
        typedef SimCost_Default_Default_sequence::iterator SimCost_Default_Default_iterator;
        typedef SimCost_Default_Default_sequence::const_iterator SimCost_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_Default_Default_type, char > SimCost_Default_Default_traits;

        const SimCost_Default_Default_sequence&
        SimCost_Default_Default () const;

        SimCost_Default_Default_sequence&
        SimCost_Default_Default ();

        void
        SimCost_Default_Default (const SimCost_Default_Default_sequence& s);

        // SimCost_LifeCycleCost_NonrecurringCost
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_LifeCycleCost_NonrecurringCost SimCost_LifeCycleCost_NonrecurringCost_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_LifeCycleCost_NonrecurringCost_type > SimCost_LifeCycleCost_NonrecurringCost_sequence;
        typedef SimCost_LifeCycleCost_NonrecurringCost_sequence::iterator SimCost_LifeCycleCost_NonrecurringCost_iterator;
        typedef SimCost_LifeCycleCost_NonrecurringCost_sequence::const_iterator SimCost_LifeCycleCost_NonrecurringCost_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_LifeCycleCost_NonrecurringCost_type, char > SimCost_LifeCycleCost_NonrecurringCost_traits;

        const SimCost_LifeCycleCost_NonrecurringCost_sequence&
        SimCost_LifeCycleCost_NonrecurringCost () const;

        SimCost_LifeCycleCost_NonrecurringCost_sequence&
        SimCost_LifeCycleCost_NonrecurringCost ();

        void
        SimCost_LifeCycleCost_NonrecurringCost (const SimCost_LifeCycleCost_NonrecurringCost_sequence& s);

        // SimCost_LifeCycleCost_Parameters
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_LifeCycleCost_Parameters SimCost_LifeCycleCost_Parameters_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_LifeCycleCost_Parameters_type > SimCost_LifeCycleCost_Parameters_sequence;
        typedef SimCost_LifeCycleCost_Parameters_sequence::iterator SimCost_LifeCycleCost_Parameters_iterator;
        typedef SimCost_LifeCycleCost_Parameters_sequence::const_iterator SimCost_LifeCycleCost_Parameters_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_LifeCycleCost_Parameters_type, char > SimCost_LifeCycleCost_Parameters_traits;

        const SimCost_LifeCycleCost_Parameters_sequence&
        SimCost_LifeCycleCost_Parameters () const;

        SimCost_LifeCycleCost_Parameters_sequence&
        SimCost_LifeCycleCost_Parameters ();

        void
        SimCost_LifeCycleCost_Parameters (const SimCost_LifeCycleCost_Parameters_sequence& s);

        // SimCost_LifeCycleCost_RecurringCosts
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_LifeCycleCost_RecurringCosts SimCost_LifeCycleCost_RecurringCosts_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_LifeCycleCost_RecurringCosts_type > SimCost_LifeCycleCost_RecurringCosts_sequence;
        typedef SimCost_LifeCycleCost_RecurringCosts_sequence::iterator SimCost_LifeCycleCost_RecurringCosts_iterator;
        typedef SimCost_LifeCycleCost_RecurringCosts_sequence::const_iterator SimCost_LifeCycleCost_RecurringCosts_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_LifeCycleCost_RecurringCosts_type, char > SimCost_LifeCycleCost_RecurringCosts_traits;

        const SimCost_LifeCycleCost_RecurringCosts_sequence&
        SimCost_LifeCycleCost_RecurringCosts () const;

        SimCost_LifeCycleCost_RecurringCosts_sequence&
        SimCost_LifeCycleCost_RecurringCosts ();

        void
        SimCost_LifeCycleCost_RecurringCosts (const SimCost_LifeCycleCost_RecurringCosts_sequence& s);

        // SimCost_LifeCycleCost_UseAdjustment
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_LifeCycleCost_UseAdjustment SimCost_LifeCycleCost_UseAdjustment_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_LifeCycleCost_UseAdjustment_type > SimCost_LifeCycleCost_UseAdjustment_sequence;
        typedef SimCost_LifeCycleCost_UseAdjustment_sequence::iterator SimCost_LifeCycleCost_UseAdjustment_iterator;
        typedef SimCost_LifeCycleCost_UseAdjustment_sequence::const_iterator SimCost_LifeCycleCost_UseAdjustment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_LifeCycleCost_UseAdjustment_type, char > SimCost_LifeCycleCost_UseAdjustment_traits;

        const SimCost_LifeCycleCost_UseAdjustment_sequence&
        SimCost_LifeCycleCost_UseAdjustment () const;

        SimCost_LifeCycleCost_UseAdjustment_sequence&
        SimCost_LifeCycleCost_UseAdjustment ();

        void
        SimCost_LifeCycleCost_UseAdjustment (const SimCost_LifeCycleCost_UseAdjustment_sequence& s);

        // SimCost_LifeCycleCost_UsePriceEscalation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_LifeCycleCost_UsePriceEscalation SimCost_LifeCycleCost_UsePriceEscalation_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_LifeCycleCost_UsePriceEscalation_type > SimCost_LifeCycleCost_UsePriceEscalation_sequence;
        typedef SimCost_LifeCycleCost_UsePriceEscalation_sequence::iterator SimCost_LifeCycleCost_UsePriceEscalation_iterator;
        typedef SimCost_LifeCycleCost_UsePriceEscalation_sequence::const_iterator SimCost_LifeCycleCost_UsePriceEscalation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_LifeCycleCost_UsePriceEscalation_type, char > SimCost_LifeCycleCost_UsePriceEscalation_traits;

        const SimCost_LifeCycleCost_UsePriceEscalation_sequence&
        SimCost_LifeCycleCost_UsePriceEscalation () const;

        SimCost_LifeCycleCost_UsePriceEscalation_sequence&
        SimCost_LifeCycleCost_UsePriceEscalation ();

        void
        SimCost_LifeCycleCost_UsePriceEscalation (const SimCost_LifeCycleCost_UsePriceEscalation_sequence& s);

        // SimCost_UtilityCost_ChargeBlock
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_UtilityCost_ChargeBlock SimCost_UtilityCost_ChargeBlock_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_UtilityCost_ChargeBlock_type > SimCost_UtilityCost_ChargeBlock_sequence;
        typedef SimCost_UtilityCost_ChargeBlock_sequence::iterator SimCost_UtilityCost_ChargeBlock_iterator;
        typedef SimCost_UtilityCost_ChargeBlock_sequence::const_iterator SimCost_UtilityCost_ChargeBlock_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_UtilityCost_ChargeBlock_type, char > SimCost_UtilityCost_ChargeBlock_traits;

        const SimCost_UtilityCost_ChargeBlock_sequence&
        SimCost_UtilityCost_ChargeBlock () const;

        SimCost_UtilityCost_ChargeBlock_sequence&
        SimCost_UtilityCost_ChargeBlock ();

        void
        SimCost_UtilityCost_ChargeBlock (const SimCost_UtilityCost_ChargeBlock_sequence& s);

        // SimCost_UtilityCost_ChargeSimple
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_UtilityCost_ChargeSimple SimCost_UtilityCost_ChargeSimple_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_UtilityCost_ChargeSimple_type > SimCost_UtilityCost_ChargeSimple_sequence;
        typedef SimCost_UtilityCost_ChargeSimple_sequence::iterator SimCost_UtilityCost_ChargeSimple_iterator;
        typedef SimCost_UtilityCost_ChargeSimple_sequence::const_iterator SimCost_UtilityCost_ChargeSimple_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_UtilityCost_ChargeSimple_type, char > SimCost_UtilityCost_ChargeSimple_traits;

        const SimCost_UtilityCost_ChargeSimple_sequence&
        SimCost_UtilityCost_ChargeSimple () const;

        SimCost_UtilityCost_ChargeSimple_sequence&
        SimCost_UtilityCost_ChargeSimple ();

        void
        SimCost_UtilityCost_ChargeSimple (const SimCost_UtilityCost_ChargeSimple_sequence& s);

        // SimCost_UtilityCost_CostRatchet
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_UtilityCost_CostRatchet SimCost_UtilityCost_CostRatchet_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_UtilityCost_CostRatchet_type > SimCost_UtilityCost_CostRatchet_sequence;
        typedef SimCost_UtilityCost_CostRatchet_sequence::iterator SimCost_UtilityCost_CostRatchet_iterator;
        typedef SimCost_UtilityCost_CostRatchet_sequence::const_iterator SimCost_UtilityCost_CostRatchet_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_UtilityCost_CostRatchet_type, char > SimCost_UtilityCost_CostRatchet_traits;

        const SimCost_UtilityCost_CostRatchet_sequence&
        SimCost_UtilityCost_CostRatchet () const;

        SimCost_UtilityCost_CostRatchet_sequence&
        SimCost_UtilityCost_CostRatchet ();

        void
        SimCost_UtilityCost_CostRatchet (const SimCost_UtilityCost_CostRatchet_sequence& s);

        // SimCost_UtilityCost_CostVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_UtilityCost_CostVariable SimCost_UtilityCost_CostVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_UtilityCost_CostVariable_type > SimCost_UtilityCost_CostVariable_sequence;
        typedef SimCost_UtilityCost_CostVariable_sequence::iterator SimCost_UtilityCost_CostVariable_iterator;
        typedef SimCost_UtilityCost_CostVariable_sequence::const_iterator SimCost_UtilityCost_CostVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_UtilityCost_CostVariable_type, char > SimCost_UtilityCost_CostVariable_traits;

        const SimCost_UtilityCost_CostVariable_sequence&
        SimCost_UtilityCost_CostVariable () const;

        SimCost_UtilityCost_CostVariable_sequence&
        SimCost_UtilityCost_CostVariable ();

        void
        SimCost_UtilityCost_CostVariable (const SimCost_UtilityCost_CostVariable_sequence& s);

        // SimCost_UtilityCost_Qualify
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_UtilityCost_Qualify SimCost_UtilityCost_Qualify_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_UtilityCost_Qualify_type > SimCost_UtilityCost_Qualify_sequence;
        typedef SimCost_UtilityCost_Qualify_sequence::iterator SimCost_UtilityCost_Qualify_iterator;
        typedef SimCost_UtilityCost_Qualify_sequence::const_iterator SimCost_UtilityCost_Qualify_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_UtilityCost_Qualify_type, char > SimCost_UtilityCost_Qualify_traits;

        const SimCost_UtilityCost_Qualify_sequence&
        SimCost_UtilityCost_Qualify () const;

        SimCost_UtilityCost_Qualify_sequence&
        SimCost_UtilityCost_Qualify ();

        void
        SimCost_UtilityCost_Qualify (const SimCost_UtilityCost_Qualify_sequence& s);

        // SimCost_UtilityCost_Tariff
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCost_UtilityCost_Tariff SimCost_UtilityCost_Tariff_type;
        typedef ::xsd::cxx::tree::sequence< SimCost_UtilityCost_Tariff_type > SimCost_UtilityCost_Tariff_sequence;
        typedef SimCost_UtilityCost_Tariff_sequence::iterator SimCost_UtilityCost_Tariff_iterator;
        typedef SimCost_UtilityCost_Tariff_sequence::const_iterator SimCost_UtilityCost_Tariff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCost_UtilityCost_Tariff_type, char > SimCost_UtilityCost_Tariff_traits;

        const SimCost_UtilityCost_Tariff_sequence&
        SimCost_UtilityCost_Tariff () const;

        SimCost_UtilityCost_Tariff_sequence&
        SimCost_UtilityCost_Tariff ();

        void
        SimCost_UtilityCost_Tariff (const SimCost_UtilityCost_Tariff_sequence& s);

        // SimCurtainWall_CurtainWall_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimCurtainWall_CurtainWall_Default SimCurtainWall_CurtainWall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCurtainWall_CurtainWall_Default_type > SimCurtainWall_CurtainWall_Default_sequence;
        typedef SimCurtainWall_CurtainWall_Default_sequence::iterator SimCurtainWall_CurtainWall_Default_iterator;
        typedef SimCurtainWall_CurtainWall_Default_sequence::const_iterator SimCurtainWall_CurtainWall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurtainWall_CurtainWall_Default_type, char > SimCurtainWall_CurtainWall_Default_traits;

        const SimCurtainWall_CurtainWall_Default_sequence&
        SimCurtainWall_CurtainWall_Default () const;

        SimCurtainWall_CurtainWall_Default_sequence&
        SimCurtainWall_CurtainWall_Default ();

        void
        SimCurtainWall_CurtainWall_Default (const SimCurtainWall_CurtainWall_Default_sequence& s);

        // SimCurtainWallParams_CurtainWall_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCurtainWallParams_CurtainWall_Default SimCurtainWallParams_CurtainWall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCurtainWallParams_CurtainWall_Default_type > SimCurtainWallParams_CurtainWall_Default_sequence;
        typedef SimCurtainWallParams_CurtainWall_Default_sequence::iterator SimCurtainWallParams_CurtainWall_Default_iterator;
        typedef SimCurtainWallParams_CurtainWall_Default_sequence::const_iterator SimCurtainWallParams_CurtainWall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurtainWallParams_CurtainWall_Default_type, char > SimCurtainWallParams_CurtainWall_Default_traits;

        const SimCurtainWallParams_CurtainWall_Default_sequence&
        SimCurtainWallParams_CurtainWall_Default () const;

        SimCurtainWallParams_CurtainWall_Default_sequence&
        SimCurtainWallParams_CurtainWall_Default ();

        void
        SimCurtainWallParams_CurtainWall_Default (const SimCurtainWallParams_CurtainWall_Default_sequence& s);

        // SimCurtainWallType_CurtainWall_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimCurtainWallType_CurtainWall_Default SimCurtainWallType_CurtainWall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCurtainWallType_CurtainWall_Default_type > SimCurtainWallType_CurtainWall_Default_sequence;
        typedef SimCurtainWallType_CurtainWall_Default_sequence::iterator SimCurtainWallType_CurtainWall_Default_iterator;
        typedef SimCurtainWallType_CurtainWall_Default_sequence::const_iterator SimCurtainWallType_CurtainWall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurtainWallType_CurtainWall_Default_type, char > SimCurtainWallType_CurtainWall_Default_traits;

        const SimCurtainWallType_CurtainWall_Default_sequence&
        SimCurtainWallType_CurtainWall_Default () const;

        SimCurtainWallType_CurtainWall_Default_sequence&
        SimCurtainWallType_CurtainWall_Default ();

        void
        SimCurtainWallType_CurtainWall_Default (const SimCurtainWallType_CurtainWall_Default_sequence& s);

        // SimCurveStyle_CurveStyle_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCurveStyle_CurveStyle_Default SimCurveStyle_CurveStyle_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimCurveStyle_CurveStyle_Default_type > SimCurveStyle_CurveStyle_Default_sequence;
        typedef SimCurveStyle_CurveStyle_Default_sequence::iterator SimCurveStyle_CurveStyle_Default_iterator;
        typedef SimCurveStyle_CurveStyle_Default_sequence::const_iterator SimCurveStyle_CurveStyle_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurveStyle_CurveStyle_Default_type, char > SimCurveStyle_CurveStyle_Default_traits;

        const SimCurveStyle_CurveStyle_Default_sequence&
        SimCurveStyle_CurveStyle_Default () const;

        SimCurveStyle_CurveStyle_Default_sequence&
        SimCurveStyle_CurveStyle_Default ();

        void
        SimCurveStyle_CurveStyle_Default (const SimCurveStyle_CurveStyle_Default_sequence& s);

        // SimCurveStyle_CurveStyle_Font
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCurveStyle_CurveStyle_Font SimCurveStyle_CurveStyle_Font_type;
        typedef ::xsd::cxx::tree::sequence< SimCurveStyle_CurveStyle_Font_type > SimCurveStyle_CurveStyle_Font_sequence;
        typedef SimCurveStyle_CurveStyle_Font_sequence::iterator SimCurveStyle_CurveStyle_Font_iterator;
        typedef SimCurveStyle_CurveStyle_Font_sequence::const_iterator SimCurveStyle_CurveStyle_Font_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurveStyle_CurveStyle_Font_type, char > SimCurveStyle_CurveStyle_Font_traits;

        const SimCurveStyle_CurveStyle_Font_sequence&
        SimCurveStyle_CurveStyle_Font () const;

        SimCurveStyle_CurveStyle_Font_sequence&
        SimCurveStyle_CurveStyle_Font ();

        void
        SimCurveStyle_CurveStyle_Font (const SimCurveStyle_CurveStyle_Font_sequence& s);

        // SimCurveStyle_CurveStyle_FontAndScaling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCurveStyle_CurveStyle_FontAndScaling SimCurveStyle_CurveStyle_FontAndScaling_type;
        typedef ::xsd::cxx::tree::sequence< SimCurveStyle_CurveStyle_FontAndScaling_type > SimCurveStyle_CurveStyle_FontAndScaling_sequence;
        typedef SimCurveStyle_CurveStyle_FontAndScaling_sequence::iterator SimCurveStyle_CurveStyle_FontAndScaling_iterator;
        typedef SimCurveStyle_CurveStyle_FontAndScaling_sequence::const_iterator SimCurveStyle_CurveStyle_FontAndScaling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurveStyle_CurveStyle_FontAndScaling_type, char > SimCurveStyle_CurveStyle_FontAndScaling_traits;

        const SimCurveStyle_CurveStyle_FontAndScaling_sequence&
        SimCurveStyle_CurveStyle_FontAndScaling () const;

        SimCurveStyle_CurveStyle_FontAndScaling_sequence&
        SimCurveStyle_CurveStyle_FontAndScaling ();

        void
        SimCurveStyle_CurveStyle_FontAndScaling (const SimCurveStyle_CurveStyle_FontAndScaling_sequence& s);

        // SimCurveStyle_CurveStyle_FontPattern
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimCurveStyle_CurveStyle_FontPattern SimCurveStyle_CurveStyle_FontPattern_type;
        typedef ::xsd::cxx::tree::sequence< SimCurveStyle_CurveStyle_FontPattern_type > SimCurveStyle_CurveStyle_FontPattern_sequence;
        typedef SimCurveStyle_CurveStyle_FontPattern_sequence::iterator SimCurveStyle_CurveStyle_FontPattern_iterator;
        typedef SimCurveStyle_CurveStyle_FontPattern_sequence::const_iterator SimCurveStyle_CurveStyle_FontPattern_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimCurveStyle_CurveStyle_FontPattern_type, char > SimCurveStyle_CurveStyle_FontPattern_traits;

        const SimCurveStyle_CurveStyle_FontPattern_sequence&
        SimCurveStyle_CurveStyle_FontPattern () const;

        SimCurveStyle_CurveStyle_FontPattern_sequence&
        SimCurveStyle_CurveStyle_FontPattern ();

        void
        SimCurveStyle_CurveStyle_FontPattern (const SimCurveStyle_CurveStyle_FontPattern_sequence& s);

        // SimDaylightingAssembly_DaylightingAssembly_LightShelf
        //
        typedef ::namespaces::Sim::BuildingModel::SimDaylightingAssembly_DaylightingAssembly_LightShelf SimDaylightingAssembly_DaylightingAssembly_LightShelf_type;
        typedef ::xsd::cxx::tree::sequence< SimDaylightingAssembly_DaylightingAssembly_LightShelf_type > SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence::iterator SimDaylightingAssembly_DaylightingAssembly_LightShelf_iterator;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence::const_iterator SimDaylightingAssembly_DaylightingAssembly_LightShelf_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDaylightingAssembly_DaylightingAssembly_LightShelf_type, char > SimDaylightingAssembly_DaylightingAssembly_LightShelf_traits;

        const SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightShelf () const;

        SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightShelf ();

        void
        SimDaylightingAssembly_DaylightingAssembly_LightShelf (const SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence& s);

        // SimDaylightingAssembly_DaylightingAssembly_LightTube
        //
        typedef ::namespaces::Sim::BuildingModel::SimDaylightingAssembly_DaylightingAssembly_LightTube SimDaylightingAssembly_DaylightingAssembly_LightTube_type;
        typedef ::xsd::cxx::tree::sequence< SimDaylightingAssembly_DaylightingAssembly_LightTube_type > SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence::iterator SimDaylightingAssembly_DaylightingAssembly_LightTube_iterator;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence::const_iterator SimDaylightingAssembly_DaylightingAssembly_LightTube_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDaylightingAssembly_DaylightingAssembly_LightTube_type, char > SimDaylightingAssembly_DaylightingAssembly_LightTube_traits;

        const SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightTube () const;

        SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightTube ();

        void
        SimDaylightingAssembly_DaylightingAssembly_LightTube (const SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence& s);

        // SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface
        //
        typedef ::namespaces::Sim::BuildingModel::SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_type;
        typedef ::xsd::cxx::tree::sequence< SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_type > SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence::iterator SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_iterator;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence::const_iterator SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_type, char > SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_traits;

        const SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface () const;

        SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface ();

        void
        SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface (const SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence& s);

        // SimDaylightingAssembly_DaylightingAssembly_LightWell
        //
        typedef ::namespaces::Sim::BuildingModel::SimDaylightingAssembly_DaylightingAssembly_LightWell SimDaylightingAssembly_DaylightingAssembly_LightWell_type;
        typedef ::xsd::cxx::tree::sequence< SimDaylightingAssembly_DaylightingAssembly_LightWell_type > SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence::iterator SimDaylightingAssembly_DaylightingAssembly_LightWell_iterator;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence::const_iterator SimDaylightingAssembly_DaylightingAssembly_LightWell_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDaylightingAssembly_DaylightingAssembly_LightWell_type, char > SimDaylightingAssembly_DaylightingAssembly_LightWell_traits;

        const SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightWell () const;

        SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightWell ();

        void
        SimDaylightingAssembly_DaylightingAssembly_LightWell (const SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence& s);

        // SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface
        //
        typedef ::namespaces::Sim::BuildingModel::SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_type;
        typedef ::xsd::cxx::tree::sequence< SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_type > SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence::iterator SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_iterator;
        typedef SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence::const_iterator SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_type, char > SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_traits;

        const SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface () const;

        SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence&
        SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface ();

        void
        SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface (const SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence& s);

        // SimDerivedUnitType_DerivedUnit_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDerivedUnitType_DerivedUnit_Default SimDerivedUnitType_DerivedUnit_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDerivedUnitType_DerivedUnit_Default_type > SimDerivedUnitType_DerivedUnit_Default_sequence;
        typedef SimDerivedUnitType_DerivedUnit_Default_sequence::iterator SimDerivedUnitType_DerivedUnit_Default_iterator;
        typedef SimDerivedUnitType_DerivedUnit_Default_sequence::const_iterator SimDerivedUnitType_DerivedUnit_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDerivedUnitType_DerivedUnit_Default_type, char > SimDerivedUnitType_DerivedUnit_Default_traits;

        const SimDerivedUnitType_DerivedUnit_Default_sequence&
        SimDerivedUnitType_DerivedUnit_Default () const;

        SimDerivedUnitType_DerivedUnit_Default_sequence&
        SimDerivedUnitType_DerivedUnit_Default ();

        void
        SimDerivedUnitType_DerivedUnit_Default (const SimDerivedUnitType_DerivedUnit_Default_sequence& s);

        // SimDistributionPort_AirFlowPort_Air_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_AirFlowPort_Air_In SimDistributionPort_AirFlowPort_Air_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_AirFlowPort_Air_In_type > SimDistributionPort_AirFlowPort_Air_In_sequence;
        typedef SimDistributionPort_AirFlowPort_Air_In_sequence::iterator SimDistributionPort_AirFlowPort_Air_In_iterator;
        typedef SimDistributionPort_AirFlowPort_Air_In_sequence::const_iterator SimDistributionPort_AirFlowPort_Air_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_AirFlowPort_Air_In_type, char > SimDistributionPort_AirFlowPort_Air_In_traits;

        const SimDistributionPort_AirFlowPort_Air_In_sequence&
        SimDistributionPort_AirFlowPort_Air_In () const;

        SimDistributionPort_AirFlowPort_Air_In_sequence&
        SimDistributionPort_AirFlowPort_Air_In ();

        void
        SimDistributionPort_AirFlowPort_Air_In (const SimDistributionPort_AirFlowPort_Air_In_sequence& s);

        // SimDistributionPort_AirFlowPort_Air_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_AirFlowPort_Air_InOrOut SimDistributionPort_AirFlowPort_Air_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_AirFlowPort_Air_InOrOut_type > SimDistributionPort_AirFlowPort_Air_InOrOut_sequence;
        typedef SimDistributionPort_AirFlowPort_Air_InOrOut_sequence::iterator SimDistributionPort_AirFlowPort_Air_InOrOut_iterator;
        typedef SimDistributionPort_AirFlowPort_Air_InOrOut_sequence::const_iterator SimDistributionPort_AirFlowPort_Air_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_AirFlowPort_Air_InOrOut_type, char > SimDistributionPort_AirFlowPort_Air_InOrOut_traits;

        const SimDistributionPort_AirFlowPort_Air_InOrOut_sequence&
        SimDistributionPort_AirFlowPort_Air_InOrOut () const;

        SimDistributionPort_AirFlowPort_Air_InOrOut_sequence&
        SimDistributionPort_AirFlowPort_Air_InOrOut ();

        void
        SimDistributionPort_AirFlowPort_Air_InOrOut (const SimDistributionPort_AirFlowPort_Air_InOrOut_sequence& s);

        // SimDistributionPort_AirFlowPort_Air_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_AirFlowPort_Air_Out SimDistributionPort_AirFlowPort_Air_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_AirFlowPort_Air_Out_type > SimDistributionPort_AirFlowPort_Air_Out_sequence;
        typedef SimDistributionPort_AirFlowPort_Air_Out_sequence::iterator SimDistributionPort_AirFlowPort_Air_Out_iterator;
        typedef SimDistributionPort_AirFlowPort_Air_Out_sequence::const_iterator SimDistributionPort_AirFlowPort_Air_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_AirFlowPort_Air_Out_type, char > SimDistributionPort_AirFlowPort_Air_Out_traits;

        const SimDistributionPort_AirFlowPort_Air_Out_sequence&
        SimDistributionPort_AirFlowPort_Air_Out () const;

        SimDistributionPort_AirFlowPort_Air_Out_sequence&
        SimDistributionPort_AirFlowPort_Air_Out ();

        void
        SimDistributionPort_AirFlowPort_Air_Out (const SimDistributionPort_AirFlowPort_Air_Out_sequence& s);

        // SimDistributionPort_AirFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_AirFlowPort_Default SimDistributionPort_AirFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_AirFlowPort_Default_type > SimDistributionPort_AirFlowPort_Default_sequence;
        typedef SimDistributionPort_AirFlowPort_Default_sequence::iterator SimDistributionPort_AirFlowPort_Default_iterator;
        typedef SimDistributionPort_AirFlowPort_Default_sequence::const_iterator SimDistributionPort_AirFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_AirFlowPort_Default_type, char > SimDistributionPort_AirFlowPort_Default_traits;

        const SimDistributionPort_AirFlowPort_Default_sequence&
        SimDistributionPort_AirFlowPort_Default () const;

        SimDistributionPort_AirFlowPort_Default_sequence&
        SimDistributionPort_AirFlowPort_Default ();

        void
        SimDistributionPort_AirFlowPort_Default (const SimDistributionPort_AirFlowPort_Default_sequence& s);

        // SimDistributionPort_AirFlowPort_ExhaustAir_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_AirFlowPort_ExhaustAir_Out SimDistributionPort_AirFlowPort_ExhaustAir_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_AirFlowPort_ExhaustAir_Out_type > SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence;
        typedef SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence::iterator SimDistributionPort_AirFlowPort_ExhaustAir_Out_iterator;
        typedef SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence::const_iterator SimDistributionPort_AirFlowPort_ExhaustAir_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_AirFlowPort_ExhaustAir_Out_type, char > SimDistributionPort_AirFlowPort_ExhaustAir_Out_traits;

        const SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence&
        SimDistributionPort_AirFlowPort_ExhaustAir_Out () const;

        SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence&
        SimDistributionPort_AirFlowPort_ExhaustAir_Out ();

        void
        SimDistributionPort_AirFlowPort_ExhaustAir_Out (const SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence& s);

        // SimDistributionPort_AirFlowPort_OutdoorAir_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_AirFlowPort_OutdoorAir_In SimDistributionPort_AirFlowPort_OutdoorAir_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_AirFlowPort_OutdoorAir_In_type > SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence;
        typedef SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence::iterator SimDistributionPort_AirFlowPort_OutdoorAir_In_iterator;
        typedef SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence::const_iterator SimDistributionPort_AirFlowPort_OutdoorAir_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_AirFlowPort_OutdoorAir_In_type, char > SimDistributionPort_AirFlowPort_OutdoorAir_In_traits;

        const SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence&
        SimDistributionPort_AirFlowPort_OutdoorAir_In () const;

        SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence&
        SimDistributionPort_AirFlowPort_OutdoorAir_In ();

        void
        SimDistributionPort_AirFlowPort_OutdoorAir_In (const SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence& s);

        // SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_type > SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence::iterator SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_type, char > SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_traits;

        const SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence&
        SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut () const;

        SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence&
        SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut ();

        void
        SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut (const SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimDistributionPort_ChilledWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ChilledWaterFlowPort_Default SimDistributionPort_ChilledWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ChilledWaterFlowPort_Default_type > SimDistributionPort_ChilledWaterFlowPort_Default_sequence;
        typedef SimDistributionPort_ChilledWaterFlowPort_Default_sequence::iterator SimDistributionPort_ChilledWaterFlowPort_Default_iterator;
        typedef SimDistributionPort_ChilledWaterFlowPort_Default_sequence::const_iterator SimDistributionPort_ChilledWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ChilledWaterFlowPort_Default_type, char > SimDistributionPort_ChilledWaterFlowPort_Default_traits;

        const SimDistributionPort_ChilledWaterFlowPort_Default_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Default () const;

        SimDistributionPort_ChilledWaterFlowPort_Default_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Default ();

        void
        SimDistributionPort_ChilledWaterFlowPort_Default (const SimDistributionPort_ChilledWaterFlowPort_Default_sequence& s);

        // SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_type > SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_type, char > SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_traits;

        const SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence&
        SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn () const;

        SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence&
        SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn ();

        void
        SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn (const SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimDistributionPort_ChilledWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ChilledWaterFlowPort_Water_In SimDistributionPort_ChilledWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ChilledWaterFlowPort_Water_In_type > SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence;
        typedef SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence::iterator SimDistributionPort_ChilledWaterFlowPort_Water_In_iterator;
        typedef SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence::const_iterator SimDistributionPort_ChilledWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ChilledWaterFlowPort_Water_In_type, char > SimDistributionPort_ChilledWaterFlowPort_Water_In_traits;

        const SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Water_In () const;

        SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Water_In ();

        void
        SimDistributionPort_ChilledWaterFlowPort_Water_In (const SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence& s);

        // SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_type > SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence;
        typedef SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence::iterator SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_iterator;
        typedef SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence::const_iterator SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_type, char > SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_traits;

        const SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut () const;

        SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut ();

        void
        SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut (const SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence& s);

        // SimDistributionPort_ChilledWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ChilledWaterFlowPort_Water_Out SimDistributionPort_ChilledWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ChilledWaterFlowPort_Water_Out_type > SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence;
        typedef SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence::iterator SimDistributionPort_ChilledWaterFlowPort_Water_Out_iterator;
        typedef SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence::const_iterator SimDistributionPort_ChilledWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ChilledWaterFlowPort_Water_Out_type, char > SimDistributionPort_ChilledWaterFlowPort_Water_Out_traits;

        const SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Water_Out () const;

        SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence&
        SimDistributionPort_ChilledWaterFlowPort_Water_Out ();

        void
        SimDistributionPort_ChilledWaterFlowPort_Water_Out (const SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence& s);

        // SimDistributionPort_CondenserFlowPort_CondenserFlow_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_CondenserFlowPort_CondenserFlow_In SimDistributionPort_CondenserFlowPort_CondenserFlow_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_CondenserFlowPort_CondenserFlow_In_type > SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence;
        typedef SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence::iterator SimDistributionPort_CondenserFlowPort_CondenserFlow_In_iterator;
        typedef SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence::const_iterator SimDistributionPort_CondenserFlowPort_CondenserFlow_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_CondenserFlowPort_CondenserFlow_In_type, char > SimDistributionPort_CondenserFlowPort_CondenserFlow_In_traits;

        const SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence&
        SimDistributionPort_CondenserFlowPort_CondenserFlow_In () const;

        SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence&
        SimDistributionPort_CondenserFlowPort_CondenserFlow_In ();

        void
        SimDistributionPort_CondenserFlowPort_CondenserFlow_In (const SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence& s);

        // SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_type > SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence;
        typedef SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence::iterator SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_iterator;
        typedef SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence::const_iterator SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_type, char > SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_traits;

        const SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence&
        SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut () const;

        SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence&
        SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut ();

        void
        SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut (const SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence& s);

        // SimDistributionPort_CondenserFlowPort_CondenserFlow_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_CondenserFlowPort_CondenserFlow_Out SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_type > SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence;
        typedef SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence::iterator SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_iterator;
        typedef SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence::const_iterator SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_type, char > SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_traits;

        const SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence&
        SimDistributionPort_CondenserFlowPort_CondenserFlow_Out () const;

        SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence&
        SimDistributionPort_CondenserFlowPort_CondenserFlow_Out ();

        void
        SimDistributionPort_CondenserFlowPort_CondenserFlow_Out (const SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence& s);

        // SimDistributionPort_CondenserFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_CondenserFlowPort_Default SimDistributionPort_CondenserFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_CondenserFlowPort_Default_type > SimDistributionPort_CondenserFlowPort_Default_sequence;
        typedef SimDistributionPort_CondenserFlowPort_Default_sequence::iterator SimDistributionPort_CondenserFlowPort_Default_iterator;
        typedef SimDistributionPort_CondenserFlowPort_Default_sequence::const_iterator SimDistributionPort_CondenserFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_CondenserFlowPort_Default_type, char > SimDistributionPort_CondenserFlowPort_Default_traits;

        const SimDistributionPort_CondenserFlowPort_Default_sequence&
        SimDistributionPort_CondenserFlowPort_Default () const;

        SimDistributionPort_CondenserFlowPort_Default_sequence&
        SimDistributionPort_CondenserFlowPort_Default ();

        void
        SimDistributionPort_CondenserFlowPort_Default (const SimDistributionPort_CondenserFlowPort_Default_sequence& s);

        // SimDistributionPort_DigitalControl_AirLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_AirLoop_Default SimDistributionPort_DigitalControl_AirLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_AirLoop_Default_type > SimDistributionPort_DigitalControl_AirLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_AirLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_AirLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_AirLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_AirLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_AirLoop_Default_type, char > SimDistributionPort_DigitalControl_AirLoop_Default_traits;

        const SimDistributionPort_DigitalControl_AirLoop_Default_sequence&
        SimDistributionPort_DigitalControl_AirLoop_Default () const;

        SimDistributionPort_DigitalControl_AirLoop_Default_sequence&
        SimDistributionPort_DigitalControl_AirLoop_Default ();

        void
        SimDistributionPort_DigitalControl_AirLoop_Default (const SimDistributionPort_DigitalControl_AirLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControl_CHWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CHWLoop_Default SimDistributionPort_DigitalControl_CHWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CHWLoop_Default_type > SimDistributionPort_DigitalControl_CHWLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_CHWLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_CHWLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_CHWLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_CHWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CHWLoop_Default_type, char > SimDistributionPort_DigitalControl_CHWLoop_Default_traits;

        const SimDistributionPort_DigitalControl_CHWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_Default () const;

        SimDistributionPort_DigitalControl_CHWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_Default ();

        void
        SimDistributionPort_DigitalControl_CHWLoop_Default (const SimDistributionPort_DigitalControl_CHWLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControl_CWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CWLoop_Default SimDistributionPort_DigitalControl_CWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CWLoop_Default_type > SimDistributionPort_DigitalControl_CWLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_CWLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_CWLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_CWLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_CWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CWLoop_Default_type, char > SimDistributionPort_DigitalControl_CWLoop_Default_traits;

        const SimDistributionPort_DigitalControl_CWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_CWLoop_Default () const;

        SimDistributionPort_DigitalControl_CWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_CWLoop_Default ();

        void
        SimDistributionPort_DigitalControl_CWLoop_Default (const SimDistributionPort_DigitalControl_CWLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControl_HWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_HWLoop_Default SimDistributionPort_DigitalControl_HWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_HWLoop_Default_type > SimDistributionPort_DigitalControl_HWLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_HWLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_HWLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_HWLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_HWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_HWLoop_Default_type, char > SimDistributionPort_DigitalControl_HWLoop_Default_traits;

        const SimDistributionPort_DigitalControl_HWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_HWLoop_Default () const;

        SimDistributionPort_DigitalControl_HWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_HWLoop_Default ();

        void
        SimDistributionPort_DigitalControl_HWLoop_Default (const SimDistributionPort_DigitalControl_HWLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControl_MxWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_MxWLoop_Default SimDistributionPort_DigitalControl_MxWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_MxWLoop_Default_type > SimDistributionPort_DigitalControl_MxWLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_MxWLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_MxWLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_MxWLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_MxWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_MxWLoop_Default_type, char > SimDistributionPort_DigitalControl_MxWLoop_Default_traits;

        const SimDistributionPort_DigitalControl_MxWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_Default () const;

        SimDistributionPort_DigitalControl_MxWLoop_Default_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_Default ();

        void
        SimDistributionPort_DigitalControl_MxWLoop_Default (const SimDistributionPort_DigitalControl_MxWLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControl_RFGLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_RFGLoop_Default SimDistributionPort_DigitalControl_RFGLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_RFGLoop_Default_type > SimDistributionPort_DigitalControl_RFGLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_RFGLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_RFGLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_RFGLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_RFGLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_RFGLoop_Default_type, char > SimDistributionPort_DigitalControl_RFGLoop_Default_traits;

        const SimDistributionPort_DigitalControl_RFGLoop_Default_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_Default () const;

        SimDistributionPort_DigitalControl_RFGLoop_Default_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_Default ();

        void
        SimDistributionPort_DigitalControl_RFGLoop_Default (const SimDistributionPort_DigitalControl_RFGLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControl_STMLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_STMLoop_Default SimDistributionPort_DigitalControl_STMLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_STMLoop_Default_type > SimDistributionPort_DigitalControl_STMLoop_Default_sequence;
        typedef SimDistributionPort_DigitalControl_STMLoop_Default_sequence::iterator SimDistributionPort_DigitalControl_STMLoop_Default_iterator;
        typedef SimDistributionPort_DigitalControl_STMLoop_Default_sequence::const_iterator SimDistributionPort_DigitalControl_STMLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_STMLoop_Default_type, char > SimDistributionPort_DigitalControl_STMLoop_Default_traits;

        const SimDistributionPort_DigitalControl_STMLoop_Default_sequence&
        SimDistributionPort_DigitalControl_STMLoop_Default () const;

        SimDistributionPort_DigitalControl_STMLoop_Default_sequence&
        SimDistributionPort_DigitalControl_STMLoop_Default ();

        void
        SimDistributionPort_DigitalControl_STMLoop_Default (const SimDistributionPort_DigitalControl_STMLoop_Default_sequence& s);

        // SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_type > SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_type, char > SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In () const;

        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In (const SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_type > SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out (const SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControlPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControlPort_Default SimDistributionPort_DigitalControlPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControlPort_Default_type > SimDistributionPort_DigitalControlPort_Default_sequence;
        typedef SimDistributionPort_DigitalControlPort_Default_sequence::iterator SimDistributionPort_DigitalControlPort_Default_iterator;
        typedef SimDistributionPort_DigitalControlPort_Default_sequence::const_iterator SimDistributionPort_DigitalControlPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControlPort_Default_type, char > SimDistributionPort_DigitalControlPort_Default_traits;

        const SimDistributionPort_DigitalControlPort_Default_sequence&
        SimDistributionPort_DigitalControlPort_Default () const;

        SimDistributionPort_DigitalControlPort_Default_sequence&
        SimDistributionPort_DigitalControlPort_Default ();

        void
        SimDistributionPort_DigitalControlPort_Default (const SimDistributionPort_DigitalControlPort_Default_sequence& s);

        // SimDistributionPort_DigitalControlPort_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControlPort_DigitalSignal_In SimDistributionPort_DigitalControlPort_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControlPort_DigitalSignal_In_type > SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence;
        typedef SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence::iterator SimDistributionPort_DigitalControlPort_DigitalSignal_In_iterator;
        typedef SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence::const_iterator SimDistributionPort_DigitalControlPort_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControlPort_DigitalSignal_In_type, char > SimDistributionPort_DigitalControlPort_DigitalSignal_In_traits;

        const SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControlPort_DigitalSignal_In () const;

        SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence&
        SimDistributionPort_DigitalControlPort_DigitalSignal_In ();

        void
        SimDistributionPort_DigitalControlPort_DigitalSignal_In (const SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence& s);

        // SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_type > SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence;
        typedef SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence::iterator SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_iterator;
        typedef SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence::const_iterator SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_type, char > SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_traits;

        const SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut () const;

        SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence&
        SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut ();

        void
        SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut (const SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence& s);

        // SimDistributionPort_DigitalControlPort_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControlPort_DigitalSignal_Out SimDistributionPort_DigitalControlPort_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControlPort_DigitalSignal_Out_type > SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence;
        typedef SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence::iterator SimDistributionPort_DigitalControlPort_DigitalSignal_Out_iterator;
        typedef SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence::const_iterator SimDistributionPort_DigitalControlPort_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControlPort_DigitalSignal_Out_type, char > SimDistributionPort_DigitalControlPort_DigitalSignal_Out_traits;

        const SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControlPort_DigitalSignal_Out () const;

        SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence&
        SimDistributionPort_DigitalControlPort_DigitalSignal_Out ();

        void
        SimDistributionPort_DigitalControlPort_DigitalSignal_Out (const SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence& s);

        // SimDistributionPort_DigitalControlPort_DigitalVirtual
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DigitalControlPort_DigitalVirtual SimDistributionPort_DigitalControlPort_DigitalVirtual_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DigitalControlPort_DigitalVirtual_type > SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence;
        typedef SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence::iterator SimDistributionPort_DigitalControlPort_DigitalVirtual_iterator;
        typedef SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence::const_iterator SimDistributionPort_DigitalControlPort_DigitalVirtual_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DigitalControlPort_DigitalVirtual_type, char > SimDistributionPort_DigitalControlPort_DigitalVirtual_traits;

        const SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence&
        SimDistributionPort_DigitalControlPort_DigitalVirtual () const;

        SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence&
        SimDistributionPort_DigitalControlPort_DigitalVirtual ();

        void
        SimDistributionPort_DigitalControlPort_DigitalVirtual (const SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence& s);

        // SimDistributionPort_DistributionPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_DistributionPort_Default SimDistributionPort_DistributionPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_DistributionPort_Default_type > SimDistributionPort_DistributionPort_Default_sequence;
        typedef SimDistributionPort_DistributionPort_Default_sequence::iterator SimDistributionPort_DistributionPort_Default_iterator;
        typedef SimDistributionPort_DistributionPort_Default_sequence::const_iterator SimDistributionPort_DistributionPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_DistributionPort_Default_type, char > SimDistributionPort_DistributionPort_Default_traits;

        const SimDistributionPort_DistributionPort_Default_sequence&
        SimDistributionPort_DistributionPort_Default () const;

        SimDistributionPort_DistributionPort_Default_sequence&
        SimDistributionPort_DistributionPort_Default ();

        void
        SimDistributionPort_DistributionPort_Default (const SimDistributionPort_DistributionPort_Default_sequence& s);

        // SimDistributionPort_ElectricalFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ElectricalFlowPort_Default SimDistributionPort_ElectricalFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ElectricalFlowPort_Default_type > SimDistributionPort_ElectricalFlowPort_Default_sequence;
        typedef SimDistributionPort_ElectricalFlowPort_Default_sequence::iterator SimDistributionPort_ElectricalFlowPort_Default_iterator;
        typedef SimDistributionPort_ElectricalFlowPort_Default_sequence::const_iterator SimDistributionPort_ElectricalFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ElectricalFlowPort_Default_type, char > SimDistributionPort_ElectricalFlowPort_Default_traits;

        const SimDistributionPort_ElectricalFlowPort_Default_sequence&
        SimDistributionPort_ElectricalFlowPort_Default () const;

        SimDistributionPort_ElectricalFlowPort_Default_sequence&
        SimDistributionPort_ElectricalFlowPort_Default ();

        void
        SimDistributionPort_ElectricalFlowPort_Default (const SimDistributionPort_ElectricalFlowPort_Default_sequence& s);

        // SimDistributionPort_ElectricalFlowPort_Electrical_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ElectricalFlowPort_Electrical_In SimDistributionPort_ElectricalFlowPort_Electrical_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ElectricalFlowPort_Electrical_In_type > SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence;
        typedef SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence::iterator SimDistributionPort_ElectricalFlowPort_Electrical_In_iterator;
        typedef SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence::const_iterator SimDistributionPort_ElectricalFlowPort_Electrical_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ElectricalFlowPort_Electrical_In_type, char > SimDistributionPort_ElectricalFlowPort_Electrical_In_traits;

        const SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence&
        SimDistributionPort_ElectricalFlowPort_Electrical_In () const;

        SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence&
        SimDistributionPort_ElectricalFlowPort_Electrical_In ();

        void
        SimDistributionPort_ElectricalFlowPort_Electrical_In (const SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence& s);

        // SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_type > SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence;
        typedef SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence::iterator SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_iterator;
        typedef SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence::const_iterator SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_type, char > SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_traits;

        const SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence&
        SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut () const;

        SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence&
        SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut ();

        void
        SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut (const SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence& s);

        // SimDistributionPort_ElectricalFlowPort_Electrical_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ElectricalFlowPort_Electrical_Out SimDistributionPort_ElectricalFlowPort_Electrical_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ElectricalFlowPort_Electrical_Out_type > SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence;
        typedef SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence::iterator SimDistributionPort_ElectricalFlowPort_Electrical_Out_iterator;
        typedef SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence::const_iterator SimDistributionPort_ElectricalFlowPort_Electrical_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ElectricalFlowPort_Electrical_Out_type, char > SimDistributionPort_ElectricalFlowPort_Electrical_Out_traits;

        const SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence&
        SimDistributionPort_ElectricalFlowPort_Electrical_Out () const;

        SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence&
        SimDistributionPort_ElectricalFlowPort_Electrical_Out ();

        void
        SimDistributionPort_ElectricalFlowPort_Electrical_Out (const SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence& s);

        // SimDistributionPort_HotWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_CondensedWaterOut SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_type > SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence::iterator SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_type, char > SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_traits;

        const SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence&
        SimDistributionPort_HotWaterFlowPort_CondensedWaterOut () const;

        SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence&
        SimDistributionPort_HotWaterFlowPort_CondensedWaterOut ();

        void
        SimDistributionPort_HotWaterFlowPort_CondensedWaterOut (const SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimDistributionPort_HotWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_Default SimDistributionPort_HotWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_HotWaterFlowPort_Default_type > SimDistributionPort_HotWaterFlowPort_Default_sequence;
        typedef SimDistributionPort_HotWaterFlowPort_Default_sequence::iterator SimDistributionPort_HotWaterFlowPort_Default_iterator;
        typedef SimDistributionPort_HotWaterFlowPort_Default_sequence::const_iterator SimDistributionPort_HotWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_HotWaterFlowPort_Default_type, char > SimDistributionPort_HotWaterFlowPort_Default_traits;

        const SimDistributionPort_HotWaterFlowPort_Default_sequence&
        SimDistributionPort_HotWaterFlowPort_Default () const;

        SimDistributionPort_HotWaterFlowPort_Default_sequence&
        SimDistributionPort_HotWaterFlowPort_Default ();

        void
        SimDistributionPort_HotWaterFlowPort_Default (const SimDistributionPort_HotWaterFlowPort_Default_sequence& s);

        // SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_type > SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_type, char > SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_traits;

        const SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence&
        SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn () const;

        SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence&
        SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn ();

        void
        SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn (const SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimDistributionPort_HotWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_Water_In SimDistributionPort_HotWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_HotWaterFlowPort_Water_In_type > SimDistributionPort_HotWaterFlowPort_Water_In_sequence;
        typedef SimDistributionPort_HotWaterFlowPort_Water_In_sequence::iterator SimDistributionPort_HotWaterFlowPort_Water_In_iterator;
        typedef SimDistributionPort_HotWaterFlowPort_Water_In_sequence::const_iterator SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_HotWaterFlowPort_Water_In_type, char > SimDistributionPort_HotWaterFlowPort_Water_In_traits;

        const SimDistributionPort_HotWaterFlowPort_Water_In_sequence&
        SimDistributionPort_HotWaterFlowPort_Water_In () const;

        SimDistributionPort_HotWaterFlowPort_Water_In_sequence&
        SimDistributionPort_HotWaterFlowPort_Water_In ();

        void
        SimDistributionPort_HotWaterFlowPort_Water_In (const SimDistributionPort_HotWaterFlowPort_Water_In_sequence& s);

        // SimDistributionPort_HotWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_Water_InOrOut SimDistributionPort_HotWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_HotWaterFlowPort_Water_InOrOut_type > SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence;
        typedef SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence::iterator SimDistributionPort_HotWaterFlowPort_Water_InOrOut_iterator;
        typedef SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence::const_iterator SimDistributionPort_HotWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_HotWaterFlowPort_Water_InOrOut_type, char > SimDistributionPort_HotWaterFlowPort_Water_InOrOut_traits;

        const SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence&
        SimDistributionPort_HotWaterFlowPort_Water_InOrOut () const;

        SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence&
        SimDistributionPort_HotWaterFlowPort_Water_InOrOut ();

        void
        SimDistributionPort_HotWaterFlowPort_Water_InOrOut (const SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence& s);

        // SimDistributionPort_HotWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_Water_Out SimDistributionPort_HotWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_HotWaterFlowPort_Water_Out_type > SimDistributionPort_HotWaterFlowPort_Water_Out_sequence;
        typedef SimDistributionPort_HotWaterFlowPort_Water_Out_sequence::iterator SimDistributionPort_HotWaterFlowPort_Water_Out_iterator;
        typedef SimDistributionPort_HotWaterFlowPort_Water_Out_sequence::const_iterator SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_HotWaterFlowPort_Water_Out_type, char > SimDistributionPort_HotWaterFlowPort_Water_Out_traits;

        const SimDistributionPort_HotWaterFlowPort_Water_Out_sequence&
        SimDistributionPort_HotWaterFlowPort_Water_Out () const;

        SimDistributionPort_HotWaterFlowPort_Water_Out_sequence&
        SimDistributionPort_HotWaterFlowPort_Water_Out ();

        void
        SimDistributionPort_HotWaterFlowPort_Water_Out (const SimDistributionPort_HotWaterFlowPort_Water_Out_sequence& s);

        // SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_type > SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence::iterator SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_type, char > SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_traits;

        const SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence&
        SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut () const;

        SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence&
        SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut ();

        void
        SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut (const SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimDistributionPort_MixedWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_MixedWaterFlowPort_Default SimDistributionPort_MixedWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_MixedWaterFlowPort_Default_type > SimDistributionPort_MixedWaterFlowPort_Default_sequence;
        typedef SimDistributionPort_MixedWaterFlowPort_Default_sequence::iterator SimDistributionPort_MixedWaterFlowPort_Default_iterator;
        typedef SimDistributionPort_MixedWaterFlowPort_Default_sequence::const_iterator SimDistributionPort_MixedWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_MixedWaterFlowPort_Default_type, char > SimDistributionPort_MixedWaterFlowPort_Default_traits;

        const SimDistributionPort_MixedWaterFlowPort_Default_sequence&
        SimDistributionPort_MixedWaterFlowPort_Default () const;

        SimDistributionPort_MixedWaterFlowPort_Default_sequence&
        SimDistributionPort_MixedWaterFlowPort_Default ();

        void
        SimDistributionPort_MixedWaterFlowPort_Default (const SimDistributionPort_MixedWaterFlowPort_Default_sequence& s);

        // SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_type > SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_type, char > SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_traits;

        const SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence&
        SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn () const;

        SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence&
        SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn ();

        void
        SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn (const SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimDistributionPort_MixedWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_MixedWaterFlowPort_Water_In SimDistributionPort_MixedWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_MixedWaterFlowPort_Water_In_type > SimDistributionPort_MixedWaterFlowPort_Water_In_sequence;
        typedef SimDistributionPort_MixedWaterFlowPort_Water_In_sequence::iterator SimDistributionPort_MixedWaterFlowPort_Water_In_iterator;
        typedef SimDistributionPort_MixedWaterFlowPort_Water_In_sequence::const_iterator SimDistributionPort_MixedWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_MixedWaterFlowPort_Water_In_type, char > SimDistributionPort_MixedWaterFlowPort_Water_In_traits;

        const SimDistributionPort_MixedWaterFlowPort_Water_In_sequence&
        SimDistributionPort_MixedWaterFlowPort_Water_In () const;

        SimDistributionPort_MixedWaterFlowPort_Water_In_sequence&
        SimDistributionPort_MixedWaterFlowPort_Water_In ();

        void
        SimDistributionPort_MixedWaterFlowPort_Water_In (const SimDistributionPort_MixedWaterFlowPort_Water_In_sequence& s);

        // SimDistributionPort_MixedWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_MixedWaterFlowPort_Water_InOrOut SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_type > SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence;
        typedef SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence::iterator SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_iterator;
        typedef SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence::const_iterator SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_type, char > SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_traits;

        const SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence&
        SimDistributionPort_MixedWaterFlowPort_Water_InOrOut () const;

        SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence&
        SimDistributionPort_MixedWaterFlowPort_Water_InOrOut ();

        void
        SimDistributionPort_MixedWaterFlowPort_Water_InOrOut (const SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence& s);

        // SimDistributionPort_MixedWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_MixedWaterFlowPort_Water_Out SimDistributionPort_MixedWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_MixedWaterFlowPort_Water_Out_type > SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence;
        typedef SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence::iterator SimDistributionPort_MixedWaterFlowPort_Water_Out_iterator;
        typedef SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence::const_iterator SimDistributionPort_MixedWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_MixedWaterFlowPort_Water_Out_type, char > SimDistributionPort_MixedWaterFlowPort_Water_Out_traits;

        const SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence&
        SimDistributionPort_MixedWaterFlowPort_Water_Out () const;

        SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence&
        SimDistributionPort_MixedWaterFlowPort_Water_Out ();

        void
        SimDistributionPort_MixedWaterFlowPort_Water_Out (const SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence& s);

        // SimDistributionPort_RefrigerationFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_RefrigerationFlowPort_Default SimDistributionPort_RefrigerationFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_RefrigerationFlowPort_Default_type > SimDistributionPort_RefrigerationFlowPort_Default_sequence;
        typedef SimDistributionPort_RefrigerationFlowPort_Default_sequence::iterator SimDistributionPort_RefrigerationFlowPort_Default_iterator;
        typedef SimDistributionPort_RefrigerationFlowPort_Default_sequence::const_iterator SimDistributionPort_RefrigerationFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_RefrigerationFlowPort_Default_type, char > SimDistributionPort_RefrigerationFlowPort_Default_traits;

        const SimDistributionPort_RefrigerationFlowPort_Default_sequence&
        SimDistributionPort_RefrigerationFlowPort_Default () const;

        SimDistributionPort_RefrigerationFlowPort_Default_sequence&
        SimDistributionPort_RefrigerationFlowPort_Default ();

        void
        SimDistributionPort_RefrigerationFlowPort_Default (const SimDistributionPort_RefrigerationFlowPort_Default_sequence& s);

        // SimDistributionPort_RefrigerationFlowPort_Refrigeration_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_RefrigerationFlowPort_Refrigeration_In SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_type > SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence;
        typedef SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence::iterator SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_iterator;
        typedef SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence::const_iterator SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_type, char > SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_traits;

        const SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence&
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_In () const;

        SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence&
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_In ();

        void
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_In (const SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence& s);

        // SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_type > SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence;
        typedef SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence::iterator SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_iterator;
        typedef SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence::const_iterator SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_type, char > SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_traits;

        const SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence&
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut () const;

        SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence&
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut ();

        void
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut (const SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence& s);

        // SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_type > SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence;
        typedef SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence::iterator SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_iterator;
        typedef SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence::const_iterator SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_type, char > SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_traits;

        const SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence&
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out () const;

        SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence&
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out ();

        void
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out (const SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence& s);

        // SimDistributionPort_SteamFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_SteamFlowPort_Default SimDistributionPort_SteamFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_SteamFlowPort_Default_type > SimDistributionPort_SteamFlowPort_Default_sequence;
        typedef SimDistributionPort_SteamFlowPort_Default_sequence::iterator SimDistributionPort_SteamFlowPort_Default_iterator;
        typedef SimDistributionPort_SteamFlowPort_Default_sequence::const_iterator SimDistributionPort_SteamFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_SteamFlowPort_Default_type, char > SimDistributionPort_SteamFlowPort_Default_traits;

        const SimDistributionPort_SteamFlowPort_Default_sequence&
        SimDistributionPort_SteamFlowPort_Default () const;

        SimDistributionPort_SteamFlowPort_Default_sequence&
        SimDistributionPort_SteamFlowPort_Default ();

        void
        SimDistributionPort_SteamFlowPort_Default (const SimDistributionPort_SteamFlowPort_Default_sequence& s);

        // SimDistributionPort_SteamFlowPort_Steam_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_SteamFlowPort_Steam_In SimDistributionPort_SteamFlowPort_Steam_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_SteamFlowPort_Steam_In_type > SimDistributionPort_SteamFlowPort_Steam_In_sequence;
        typedef SimDistributionPort_SteamFlowPort_Steam_In_sequence::iterator SimDistributionPort_SteamFlowPort_Steam_In_iterator;
        typedef SimDistributionPort_SteamFlowPort_Steam_In_sequence::const_iterator SimDistributionPort_SteamFlowPort_Steam_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_SteamFlowPort_Steam_In_type, char > SimDistributionPort_SteamFlowPort_Steam_In_traits;

        const SimDistributionPort_SteamFlowPort_Steam_In_sequence&
        SimDistributionPort_SteamFlowPort_Steam_In () const;

        SimDistributionPort_SteamFlowPort_Steam_In_sequence&
        SimDistributionPort_SteamFlowPort_Steam_In ();

        void
        SimDistributionPort_SteamFlowPort_Steam_In (const SimDistributionPort_SteamFlowPort_Steam_In_sequence& s);

        // SimDistributionPort_SteamFlowPort_Steam_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_SteamFlowPort_Steam_InOrOut SimDistributionPort_SteamFlowPort_Steam_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_SteamFlowPort_Steam_InOrOut_type > SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence;
        typedef SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence::iterator SimDistributionPort_SteamFlowPort_Steam_InOrOut_iterator;
        typedef SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence::const_iterator SimDistributionPort_SteamFlowPort_Steam_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_SteamFlowPort_Steam_InOrOut_type, char > SimDistributionPort_SteamFlowPort_Steam_InOrOut_traits;

        const SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence&
        SimDistributionPort_SteamFlowPort_Steam_InOrOut () const;

        SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence&
        SimDistributionPort_SteamFlowPort_Steam_InOrOut ();

        void
        SimDistributionPort_SteamFlowPort_Steam_InOrOut (const SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence& s);

        // SimDistributionPort_SteamFlowPort_Steam_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_SteamFlowPort_Steam_Out SimDistributionPort_SteamFlowPort_Steam_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_SteamFlowPort_Steam_Out_type > SimDistributionPort_SteamFlowPort_Steam_Out_sequence;
        typedef SimDistributionPort_SteamFlowPort_Steam_Out_sequence::iterator SimDistributionPort_SteamFlowPort_Steam_Out_iterator;
        typedef SimDistributionPort_SteamFlowPort_Steam_Out_sequence::const_iterator SimDistributionPort_SteamFlowPort_Steam_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_SteamFlowPort_Steam_Out_type, char > SimDistributionPort_SteamFlowPort_Steam_Out_traits;

        const SimDistributionPort_SteamFlowPort_Steam_Out_sequence&
        SimDistributionPort_SteamFlowPort_Steam_Out () const;

        SimDistributionPort_SteamFlowPort_Steam_Out_sequence&
        SimDistributionPort_SteamFlowPort_Steam_Out ();

        void
        SimDistributionPort_SteamFlowPort_Steam_Out (const SimDistributionPort_SteamFlowPort_Steam_Out_sequence& s);

        // SimDistributionPort_ZoneAirFlowPort_Air_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ZoneAirFlowPort_Air_In SimDistributionPort_ZoneAirFlowPort_Air_In_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ZoneAirFlowPort_Air_In_type > SimDistributionPort_ZoneAirFlowPort_Air_In_sequence;
        typedef SimDistributionPort_ZoneAirFlowPort_Air_In_sequence::iterator SimDistributionPort_ZoneAirFlowPort_Air_In_iterator;
        typedef SimDistributionPort_ZoneAirFlowPort_Air_In_sequence::const_iterator SimDistributionPort_ZoneAirFlowPort_Air_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ZoneAirFlowPort_Air_In_type, char > SimDistributionPort_ZoneAirFlowPort_Air_In_traits;

        const SimDistributionPort_ZoneAirFlowPort_Air_In_sequence&
        SimDistributionPort_ZoneAirFlowPort_Air_In () const;

        SimDistributionPort_ZoneAirFlowPort_Air_In_sequence&
        SimDistributionPort_ZoneAirFlowPort_Air_In ();

        void
        SimDistributionPort_ZoneAirFlowPort_Air_In (const SimDistributionPort_ZoneAirFlowPort_Air_In_sequence& s);

        // SimDistributionPort_ZoneAirFlowPort_Air_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDistributionPort_ZoneAirFlowPort_Air_Out SimDistributionPort_ZoneAirFlowPort_Air_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimDistributionPort_ZoneAirFlowPort_Air_Out_type > SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence;
        typedef SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence::iterator SimDistributionPort_ZoneAirFlowPort_Air_Out_iterator;
        typedef SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence::const_iterator SimDistributionPort_ZoneAirFlowPort_Air_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDistributionPort_ZoneAirFlowPort_Air_Out_type, char > SimDistributionPort_ZoneAirFlowPort_Air_Out_traits;

        const SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence&
        SimDistributionPort_ZoneAirFlowPort_Air_Out () const;

        SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence&
        SimDistributionPort_ZoneAirFlowPort_Air_Out ();

        void
        SimDistributionPort_ZoneAirFlowPort_Air_Out (const SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence& s);

        // SimDoor_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_Default_Default SimDoor_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_Default_Default_type > SimDoor_Default_Default_sequence;
        typedef SimDoor_Default_Default_sequence::iterator SimDoor_Default_Default_iterator;
        typedef SimDoor_Default_Default_sequence::const_iterator SimDoor_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_Default_Default_type, char > SimDoor_Default_Default_traits;

        const SimDoor_Default_Default_sequence&
        SimDoor_Default_Default () const;

        SimDoor_Default_Default_sequence&
        SimDoor_Default_Default ();

        void
        SimDoor_Default_Default (const SimDoor_Default_Default_sequence& s);

        // SimDoor_GlazedDoor_Exterior
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_GlazedDoor_Exterior SimDoor_GlazedDoor_Exterior_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_GlazedDoor_Exterior_type > SimDoor_GlazedDoor_Exterior_sequence;
        typedef SimDoor_GlazedDoor_Exterior_sequence::iterator SimDoor_GlazedDoor_Exterior_iterator;
        typedef SimDoor_GlazedDoor_Exterior_sequence::const_iterator SimDoor_GlazedDoor_Exterior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_GlazedDoor_Exterior_type, char > SimDoor_GlazedDoor_Exterior_traits;

        const SimDoor_GlazedDoor_Exterior_sequence&
        SimDoor_GlazedDoor_Exterior () const;

        SimDoor_GlazedDoor_Exterior_sequence&
        SimDoor_GlazedDoor_Exterior ();

        void
        SimDoor_GlazedDoor_Exterior (const SimDoor_GlazedDoor_Exterior_sequence& s);

        // SimDoor_GlazedDoor_ExteriorDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_GlazedDoor_ExteriorDetailed SimDoor_GlazedDoor_ExteriorDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_GlazedDoor_ExteriorDetailed_type > SimDoor_GlazedDoor_ExteriorDetailed_sequence;
        typedef SimDoor_GlazedDoor_ExteriorDetailed_sequence::iterator SimDoor_GlazedDoor_ExteriorDetailed_iterator;
        typedef SimDoor_GlazedDoor_ExteriorDetailed_sequence::const_iterator SimDoor_GlazedDoor_ExteriorDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_GlazedDoor_ExteriorDetailed_type, char > SimDoor_GlazedDoor_ExteriorDetailed_traits;

        const SimDoor_GlazedDoor_ExteriorDetailed_sequence&
        SimDoor_GlazedDoor_ExteriorDetailed () const;

        SimDoor_GlazedDoor_ExteriorDetailed_sequence&
        SimDoor_GlazedDoor_ExteriorDetailed ();

        void
        SimDoor_GlazedDoor_ExteriorDetailed (const SimDoor_GlazedDoor_ExteriorDetailed_sequence& s);

        // SimDoor_GlazedDoor_FrameAndDivider
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_GlazedDoor_FrameAndDivider SimDoor_GlazedDoor_FrameAndDivider_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_GlazedDoor_FrameAndDivider_type > SimDoor_GlazedDoor_FrameAndDivider_sequence;
        typedef SimDoor_GlazedDoor_FrameAndDivider_sequence::iterator SimDoor_GlazedDoor_FrameAndDivider_iterator;
        typedef SimDoor_GlazedDoor_FrameAndDivider_sequence::const_iterator SimDoor_GlazedDoor_FrameAndDivider_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_GlazedDoor_FrameAndDivider_type, char > SimDoor_GlazedDoor_FrameAndDivider_traits;

        const SimDoor_GlazedDoor_FrameAndDivider_sequence&
        SimDoor_GlazedDoor_FrameAndDivider () const;

        SimDoor_GlazedDoor_FrameAndDivider_sequence&
        SimDoor_GlazedDoor_FrameAndDivider ();

        void
        SimDoor_GlazedDoor_FrameAndDivider (const SimDoor_GlazedDoor_FrameAndDivider_sequence& s);

        // SimDoor_GlazedDoor_Interior
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_GlazedDoor_Interior SimDoor_GlazedDoor_Interior_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_GlazedDoor_Interior_type > SimDoor_GlazedDoor_Interior_sequence;
        typedef SimDoor_GlazedDoor_Interior_sequence::iterator SimDoor_GlazedDoor_Interior_iterator;
        typedef SimDoor_GlazedDoor_Interior_sequence::const_iterator SimDoor_GlazedDoor_Interior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_GlazedDoor_Interior_type, char > SimDoor_GlazedDoor_Interior_traits;

        const SimDoor_GlazedDoor_Interior_sequence&
        SimDoor_GlazedDoor_Interior () const;

        SimDoor_GlazedDoor_Interior_sequence&
        SimDoor_GlazedDoor_Interior ();

        void
        SimDoor_GlazedDoor_Interior (const SimDoor_GlazedDoor_Interior_sequence& s);

        // SimDoor_OpaqueDoor_Exterior
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_OpaqueDoor_Exterior SimDoor_OpaqueDoor_Exterior_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_OpaqueDoor_Exterior_type > SimDoor_OpaqueDoor_Exterior_sequence;
        typedef SimDoor_OpaqueDoor_Exterior_sequence::iterator SimDoor_OpaqueDoor_Exterior_iterator;
        typedef SimDoor_OpaqueDoor_Exterior_sequence::const_iterator SimDoor_OpaqueDoor_Exterior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_OpaqueDoor_Exterior_type, char > SimDoor_OpaqueDoor_Exterior_traits;

        const SimDoor_OpaqueDoor_Exterior_sequence&
        SimDoor_OpaqueDoor_Exterior () const;

        SimDoor_OpaqueDoor_Exterior_sequence&
        SimDoor_OpaqueDoor_Exterior ();

        void
        SimDoor_OpaqueDoor_Exterior (const SimDoor_OpaqueDoor_Exterior_sequence& s);

        // SimDoor_OpaqueDoor_ExteriorDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_OpaqueDoor_ExteriorDetailed SimDoor_OpaqueDoor_ExteriorDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_OpaqueDoor_ExteriorDetailed_type > SimDoor_OpaqueDoor_ExteriorDetailed_sequence;
        typedef SimDoor_OpaqueDoor_ExteriorDetailed_sequence::iterator SimDoor_OpaqueDoor_ExteriorDetailed_iterator;
        typedef SimDoor_OpaqueDoor_ExteriorDetailed_sequence::const_iterator SimDoor_OpaqueDoor_ExteriorDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_OpaqueDoor_ExteriorDetailed_type, char > SimDoor_OpaqueDoor_ExteriorDetailed_traits;

        const SimDoor_OpaqueDoor_ExteriorDetailed_sequence&
        SimDoor_OpaqueDoor_ExteriorDetailed () const;

        SimDoor_OpaqueDoor_ExteriorDetailed_sequence&
        SimDoor_OpaqueDoor_ExteriorDetailed ();

        void
        SimDoor_OpaqueDoor_ExteriorDetailed (const SimDoor_OpaqueDoor_ExteriorDetailed_sequence& s);

        // SimDoor_OpaqueDoor_Interior
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoor_OpaqueDoor_Interior SimDoor_OpaqueDoor_Interior_type;
        typedef ::xsd::cxx::tree::sequence< SimDoor_OpaqueDoor_Interior_type > SimDoor_OpaqueDoor_Interior_sequence;
        typedef SimDoor_OpaqueDoor_Interior_sequence::iterator SimDoor_OpaqueDoor_Interior_iterator;
        typedef SimDoor_OpaqueDoor_Interior_sequence::const_iterator SimDoor_OpaqueDoor_Interior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoor_OpaqueDoor_Interior_type, char > SimDoor_OpaqueDoor_Interior_traits;

        const SimDoor_OpaqueDoor_Interior_sequence&
        SimDoor_OpaqueDoor_Interior () const;

        SimDoor_OpaqueDoor_Interior_sequence&
        SimDoor_OpaqueDoor_Interior ();

        void
        SimDoor_OpaqueDoor_Interior (const SimDoor_OpaqueDoor_Interior_sequence& s);

        // SimDoorArrayParams_DoorArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDoorArrayParams_DoorArray_Default SimDoorArrayParams_DoorArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDoorArrayParams_DoorArray_Default_type > SimDoorArrayParams_DoorArray_Default_sequence;
        typedef SimDoorArrayParams_DoorArray_Default_sequence::iterator SimDoorArrayParams_DoorArray_Default_iterator;
        typedef SimDoorArrayParams_DoorArray_Default_sequence::const_iterator SimDoorArrayParams_DoorArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoorArrayParams_DoorArray_Default_type, char > SimDoorArrayParams_DoorArray_Default_traits;

        const SimDoorArrayParams_DoorArray_Default_sequence&
        SimDoorArrayParams_DoorArray_Default () const;

        SimDoorArrayParams_DoorArray_Default_sequence&
        SimDoorArrayParams_DoorArray_Default ();

        void
        SimDoorArrayParams_DoorArray_Default (const SimDoorArrayParams_DoorArray_Default_sequence& s);

        // SimDoorLiningProps_DoorLiningProps_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDoorLiningProps_DoorLiningProps_Default SimDoorLiningProps_DoorLiningProps_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDoorLiningProps_DoorLiningProps_Default_type > SimDoorLiningProps_DoorLiningProps_Default_sequence;
        typedef SimDoorLiningProps_DoorLiningProps_Default_sequence::iterator SimDoorLiningProps_DoorLiningProps_Default_iterator;
        typedef SimDoorLiningProps_DoorLiningProps_Default_sequence::const_iterator SimDoorLiningProps_DoorLiningProps_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoorLiningProps_DoorLiningProps_Default_type, char > SimDoorLiningProps_DoorLiningProps_Default_traits;

        const SimDoorLiningProps_DoorLiningProps_Default_sequence&
        SimDoorLiningProps_DoorLiningProps_Default () const;

        SimDoorLiningProps_DoorLiningProps_Default_sequence&
        SimDoorLiningProps_DoorLiningProps_Default ();

        void
        SimDoorLiningProps_DoorLiningProps_Default (const SimDoorLiningProps_DoorLiningProps_Default_sequence& s);

        // SimDoorPanelProps_DoorPanelProps_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDoorPanelProps_DoorPanelProps_Default SimDoorPanelProps_DoorPanelProps_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDoorPanelProps_DoorPanelProps_Default_type > SimDoorPanelProps_DoorPanelProps_Default_sequence;
        typedef SimDoorPanelProps_DoorPanelProps_Default_sequence::iterator SimDoorPanelProps_DoorPanelProps_Default_iterator;
        typedef SimDoorPanelProps_DoorPanelProps_Default_sequence::const_iterator SimDoorPanelProps_DoorPanelProps_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoorPanelProps_DoorPanelProps_Default_type, char > SimDoorPanelProps_DoorPanelProps_Default_traits;

        const SimDoorPanelProps_DoorPanelProps_Default_sequence&
        SimDoorPanelProps_DoorPanelProps_Default () const;

        SimDoorPanelProps_DoorPanelProps_Default_sequence&
        SimDoorPanelProps_DoorPanelProps_Default ();

        void
        SimDoorPanelProps_DoorPanelProps_Default (const SimDoorPanelProps_DoorPanelProps_Default_sequence& s);

        // SimDoorParams_Door_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDoorParams_Door_Default SimDoorParams_Door_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDoorParams_Door_Default_type > SimDoorParams_Door_Default_sequence;
        typedef SimDoorParams_Door_Default_sequence::iterator SimDoorParams_Door_Default_iterator;
        typedef SimDoorParams_Door_Default_sequence::const_iterator SimDoorParams_Door_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoorParams_Door_Default_type, char > SimDoorParams_Door_Default_traits;

        const SimDoorParams_Door_Default_sequence&
        SimDoorParams_Door_Default () const;

        SimDoorParams_Door_Default_sequence&
        SimDoorParams_Door_Default ();

        void
        SimDoorParams_Door_Default (const SimDoorParams_Door_Default_sequence& s);

        // SimDoorType_Door_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimDoorType_Door_Default SimDoorType_Door_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDoorType_Door_Default_type > SimDoorType_Door_Default_sequence;
        typedef SimDoorType_Door_Default_sequence::iterator SimDoorType_Door_Default_iterator;
        typedef SimDoorType_Door_Default_sequence::const_iterator SimDoorType_Door_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDoorType_Door_Default_type, char > SimDoorType_Door_Default_traits;

        const SimDoorType_Door_Default_sequence&
        SimDoorType_Door_Default () const;

        SimDoorType_Door_Default_sequence&
        SimDoorType_Door_Default ();

        void
        SimDoorType_Door_Default (const SimDoorType_Door_Default_sequence& s);

        // SimDwgXrefParams_DwgXref_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimDwgXrefParams_DwgXref_Default SimDwgXrefParams_DwgXref_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimDwgXrefParams_DwgXref_Default_type > SimDwgXrefParams_DwgXref_Default_sequence;
        typedef SimDwgXrefParams_DwgXref_Default_sequence::iterator SimDwgXrefParams_DwgXref_Default_iterator;
        typedef SimDwgXrefParams_DwgXref_Default_sequence::const_iterator SimDwgXrefParams_DwgXref_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimDwgXrefParams_DwgXref_Default_type, char > SimDwgXrefParams_DwgXref_Default_traits;

        const SimDwgXrefParams_DwgXref_Default_sequence&
        SimDwgXrefParams_DwgXref_Default () const;

        SimDwgXrefParams_DwgXref_Default_sequence&
        SimDwgXrefParams_DwgXref_Default ();

        void
        SimDwgXrefParams_DwgXref_Default (const SimDwgXrefParams_DwgXref_Default_sequence& s);

        // SimEdge_Edge_EdgeCurve
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimEdge_Edge_EdgeCurve SimEdge_Edge_EdgeCurve_type;
        typedef ::xsd::cxx::tree::sequence< SimEdge_Edge_EdgeCurve_type > SimEdge_Edge_EdgeCurve_sequence;
        typedef SimEdge_Edge_EdgeCurve_sequence::iterator SimEdge_Edge_EdgeCurve_iterator;
        typedef SimEdge_Edge_EdgeCurve_sequence::const_iterator SimEdge_Edge_EdgeCurve_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimEdge_Edge_EdgeCurve_type, char > SimEdge_Edge_EdgeCurve_traits;

        const SimEdge_Edge_EdgeCurve_sequence&
        SimEdge_Edge_EdgeCurve () const;

        SimEdge_Edge_EdgeCurve_sequence&
        SimEdge_Edge_EdgeCurve ();

        void
        SimEdge_Edge_EdgeCurve (const SimEdge_Edge_EdgeCurve_sequence& s);

        // SimEdge_Edge_OrientedEdge
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimEdge_Edge_OrientedEdge SimEdge_Edge_OrientedEdge_type;
        typedef ::xsd::cxx::tree::sequence< SimEdge_Edge_OrientedEdge_type > SimEdge_Edge_OrientedEdge_sequence;
        typedef SimEdge_Edge_OrientedEdge_sequence::iterator SimEdge_Edge_OrientedEdge_iterator;
        typedef SimEdge_Edge_OrientedEdge_sequence::const_iterator SimEdge_Edge_OrientedEdge_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimEdge_Edge_OrientedEdge_type, char > SimEdge_Edge_OrientedEdge_traits;

        const SimEdge_Edge_OrientedEdge_sequence&
        SimEdge_Edge_OrientedEdge () const;

        SimEdge_Edge_OrientedEdge_sequence&
        SimEdge_Edge_OrientedEdge ();

        void
        SimEdge_Edge_OrientedEdge (const SimEdge_Edge_OrientedEdge_sequence& s);

        // SimEdge_Edge_Subedge
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimEdge_Edge_Subedge SimEdge_Edge_Subedge_type;
        typedef ::xsd::cxx::tree::sequence< SimEdge_Edge_Subedge_type > SimEdge_Edge_Subedge_sequence;
        typedef SimEdge_Edge_Subedge_sequence::iterator SimEdge_Edge_Subedge_iterator;
        typedef SimEdge_Edge_Subedge_sequence::const_iterator SimEdge_Edge_Subedge_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimEdge_Edge_Subedge_type, char > SimEdge_Edge_Subedge_traits;

        const SimEdge_Edge_Subedge_sequence&
        SimEdge_Edge_Subedge () const;

        SimEdge_Edge_Subedge_sequence&
        SimEdge_Edge_Subedge ();

        void
        SimEdge_Edge_Subedge (const SimEdge_Edge_Subedge_sequence& s);

        // SimElementQuantity_ElementQuantity_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimElementQuantity_ElementQuantity_Default SimElementQuantity_ElementQuantity_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimElementQuantity_ElementQuantity_Default_type > SimElementQuantity_ElementQuantity_Default_sequence;
        typedef SimElementQuantity_ElementQuantity_Default_sequence::iterator SimElementQuantity_ElementQuantity_Default_iterator;
        typedef SimElementQuantity_ElementQuantity_Default_sequence::const_iterator SimElementQuantity_ElementQuantity_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimElementQuantity_ElementQuantity_Default_type, char > SimElementQuantity_ElementQuantity_Default_traits;

        const SimElementQuantity_ElementQuantity_Default_sequence&
        SimElementQuantity_ElementQuantity_Default () const;

        SimElementQuantity_ElementQuantity_Default_sequence&
        SimElementQuantity_ElementQuantity_Default ();

        void
        SimElementQuantity_ElementQuantity_Default (const SimElementQuantity_ElementQuantity_Default_sequence& s);

        // SimExtendedMaterialProps_ExtendedMatlProps_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimExtendedMaterialProps_ExtendedMatlProps_Default SimExtendedMaterialProps_ExtendedMatlProps_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimExtendedMaterialProps_ExtendedMatlProps_Default_type > SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence;
        typedef SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence::iterator SimExtendedMaterialProps_ExtendedMatlProps_Default_iterator;
        typedef SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence::const_iterator SimExtendedMaterialProps_ExtendedMatlProps_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimExtendedMaterialProps_ExtendedMatlProps_Default_type, char > SimExtendedMaterialProps_ExtendedMatlProps_Default_traits;

        const SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence&
        SimExtendedMaterialProps_ExtendedMatlProps_Default () const;

        SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence&
        SimExtendedMaterialProps_ExtendedMatlProps_Default ();

        void
        SimExtendedMaterialProps_ExtendedMatlProps_Default (const SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence& s);

        // SimExternalReference_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimExternalReference_Default_Default SimExternalReference_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimExternalReference_Default_Default_type > SimExternalReference_Default_Default_sequence;
        typedef SimExternalReference_Default_Default_sequence::iterator SimExternalReference_Default_Default_iterator;
        typedef SimExternalReference_Default_Default_sequence::const_iterator SimExternalReference_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimExternalReference_Default_Default_type, char > SimExternalReference_Default_Default_traits;

        const SimExternalReference_Default_Default_sequence&
        SimExternalReference_Default_Default () const;

        SimExternalReference_Default_Default_sequence&
        SimExternalReference_Default_Default ();

        void
        SimExternalReference_Default_Default (const SimExternalReference_Default_Default_sequence& s);

        // SimExternalReference_DocumentReference_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimExternalReference_DocumentReference_Default SimExternalReference_DocumentReference_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimExternalReference_DocumentReference_Default_type > SimExternalReference_DocumentReference_Default_sequence;
        typedef SimExternalReference_DocumentReference_Default_sequence::iterator SimExternalReference_DocumentReference_Default_iterator;
        typedef SimExternalReference_DocumentReference_Default_sequence::const_iterator SimExternalReference_DocumentReference_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimExternalReference_DocumentReference_Default_type, char > SimExternalReference_DocumentReference_Default_traits;

        const SimExternalReference_DocumentReference_Default_sequence&
        SimExternalReference_DocumentReference_Default () const;

        SimExternalReference_DocumentReference_Default_sequence&
        SimExternalReference_DocumentReference_Default ();

        void
        SimExternalReference_DocumentReference_Default (const SimExternalReference_DocumentReference_Default_sequence& s);

        // SimExternalReference_ExternalReference_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimExternalReference_ExternalReference_Default SimExternalReference_ExternalReference_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimExternalReference_ExternalReference_Default_type > SimExternalReference_ExternalReference_Default_sequence;
        typedef SimExternalReference_ExternalReference_Default_sequence::iterator SimExternalReference_ExternalReference_Default_iterator;
        typedef SimExternalReference_ExternalReference_Default_sequence::const_iterator SimExternalReference_ExternalReference_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimExternalReference_ExternalReference_Default_type, char > SimExternalReference_ExternalReference_Default_traits;

        const SimExternalReference_ExternalReference_Default_sequence&
        SimExternalReference_ExternalReference_Default () const;

        SimExternalReference_ExternalReference_Default_sequence&
        SimExternalReference_ExternalReference_Default ();

        void
        SimExternalReference_ExternalReference_Default (const SimExternalReference_ExternalReference_Default_sequence& s);

        // SimExternalReference_LibraryReference_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimExternalReference_LibraryReference_Default SimExternalReference_LibraryReference_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimExternalReference_LibraryReference_Default_type > SimExternalReference_LibraryReference_Default_sequence;
        typedef SimExternalReference_LibraryReference_Default_sequence::iterator SimExternalReference_LibraryReference_Default_iterator;
        typedef SimExternalReference_LibraryReference_Default_sequence::const_iterator SimExternalReference_LibraryReference_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimExternalReference_LibraryReference_Default_type, char > SimExternalReference_LibraryReference_Default_traits;

        const SimExternalReference_LibraryReference_Default_sequence&
        SimExternalReference_LibraryReference_Default () const;

        SimExternalReference_LibraryReference_Default_sequence&
        SimExternalReference_LibraryReference_Default ();

        void
        SimExternalReference_LibraryReference_Default (const SimExternalReference_LibraryReference_Default_sequence& s);

        // SimExternalReference_PropertyReference_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimExternalReference_PropertyReference_Default SimExternalReference_PropertyReference_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimExternalReference_PropertyReference_Default_type > SimExternalReference_PropertyReference_Default_sequence;
        typedef SimExternalReference_PropertyReference_Default_sequence::iterator SimExternalReference_PropertyReference_Default_iterator;
        typedef SimExternalReference_PropertyReference_Default_sequence::const_iterator SimExternalReference_PropertyReference_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimExternalReference_PropertyReference_Default_type, char > SimExternalReference_PropertyReference_Default_traits;

        const SimExternalReference_PropertyReference_Default_sequence&
        SimExternalReference_PropertyReference_Default () const;

        SimExternalReference_PropertyReference_Default_sequence&
        SimExternalReference_PropertyReference_Default ();

        void
        SimExternalReference_PropertyReference_Default (const SimExternalReference_PropertyReference_Default_sequence& s);

        // SimFace_Face_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFace_Face_Default SimFace_Face_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFace_Face_Default_type > SimFace_Face_Default_sequence;
        typedef SimFace_Face_Default_sequence::iterator SimFace_Face_Default_iterator;
        typedef SimFace_Face_Default_sequence::const_iterator SimFace_Face_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFace_Face_Default_type, char > SimFace_Face_Default_traits;

        const SimFace_Face_Default_sequence&
        SimFace_Face_Default () const;

        SimFace_Face_Default_sequence&
        SimFace_Face_Default ();

        void
        SimFace_Face_Default (const SimFace_Face_Default_sequence& s);

        // SimFace_Face_FaceSurface
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFace_Face_FaceSurface SimFace_Face_FaceSurface_type;
        typedef ::xsd::cxx::tree::sequence< SimFace_Face_FaceSurface_type > SimFace_Face_FaceSurface_sequence;
        typedef SimFace_Face_FaceSurface_sequence::iterator SimFace_Face_FaceSurface_iterator;
        typedef SimFace_Face_FaceSurface_sequence::const_iterator SimFace_Face_FaceSurface_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFace_Face_FaceSurface_type, char > SimFace_Face_FaceSurface_traits;

        const SimFace_Face_FaceSurface_sequence&
        SimFace_Face_FaceSurface () const;

        SimFace_Face_FaceSurface_sequence&
        SimFace_Face_FaceSurface ();

        void
        SimFace_Face_FaceSurface (const SimFace_Face_FaceSurface_sequence& s);

        // SimFaceBound_FaceBound_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFaceBound_FaceBound_Default SimFaceBound_FaceBound_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFaceBound_FaceBound_Default_type > SimFaceBound_FaceBound_Default_sequence;
        typedef SimFaceBound_FaceBound_Default_sequence::iterator SimFaceBound_FaceBound_Default_iterator;
        typedef SimFaceBound_FaceBound_Default_sequence::const_iterator SimFaceBound_FaceBound_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFaceBound_FaceBound_Default_type, char > SimFaceBound_FaceBound_Default_traits;

        const SimFaceBound_FaceBound_Default_sequence&
        SimFaceBound_FaceBound_Default () const;

        SimFaceBound_FaceBound_Default_sequence&
        SimFaceBound_FaceBound_Default ();

        void
        SimFaceBound_FaceBound_Default (const SimFaceBound_FaceBound_Default_sequence& s);

        // SimFaceBound_FaceBound_FaceOuterBound
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFaceBound_FaceBound_FaceOuterBound SimFaceBound_FaceBound_FaceOuterBound_type;
        typedef ::xsd::cxx::tree::sequence< SimFaceBound_FaceBound_FaceOuterBound_type > SimFaceBound_FaceBound_FaceOuterBound_sequence;
        typedef SimFaceBound_FaceBound_FaceOuterBound_sequence::iterator SimFaceBound_FaceBound_FaceOuterBound_iterator;
        typedef SimFaceBound_FaceBound_FaceOuterBound_sequence::const_iterator SimFaceBound_FaceBound_FaceOuterBound_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFaceBound_FaceBound_FaceOuterBound_type, char > SimFaceBound_FaceBound_FaceOuterBound_traits;

        const SimFaceBound_FaceBound_FaceOuterBound_sequence&
        SimFaceBound_FaceBound_FaceOuterBound () const;

        SimFaceBound_FaceBound_FaceOuterBound_sequence&
        SimFaceBound_FaceBound_FaceOuterBound ();

        void
        SimFaceBound_FaceBound_FaceOuterBound (const SimFaceBound_FaceBound_FaceOuterBound_sequence& s);

        // SimFeatureAirFlowNetwork_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Default_Default SimFeatureAirFlowNetwork_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Default_Default_type > SimFeatureAirFlowNetwork_Default_Default_sequence;
        typedef SimFeatureAirFlowNetwork_Default_Default_sequence::iterator SimFeatureAirFlowNetwork_Default_Default_iterator;
        typedef SimFeatureAirFlowNetwork_Default_Default_sequence::const_iterator SimFeatureAirFlowNetwork_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Default_Default_type, char > SimFeatureAirFlowNetwork_Default_Default_traits;

        const SimFeatureAirFlowNetwork_Default_Default_sequence&
        SimFeatureAirFlowNetwork_Default_Default () const;

        SimFeatureAirFlowNetwork_Default_Default_sequence&
        SimFeatureAirFlowNetwork_Default_Default ();

        void
        SimFeatureAirFlowNetwork_Default_Default (const SimFeatureAirFlowNetwork_Default_Default_sequence& s);

        // SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_type > SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence;
        typedef SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence::iterator SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_iterator;
        typedef SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence::const_iterator SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_type, char > SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_traits;

        const SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence&
        SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default () const;

        SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence&
        SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default ();

        void
        SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default (const SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence& s);

        // SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_type > SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence;
        typedef SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence::iterator SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_iterator;
        typedef SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence::const_iterator SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_type, char > SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_traits;

        const SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence&
        SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan () const;

        SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence&
        SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan ();

        void
        SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan (const SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence& s);

        // SimFeatureAirFlowNetwork_Opening_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Opening_Default SimFeatureAirFlowNetwork_Opening_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Opening_Default_type > SimFeatureAirFlowNetwork_Opening_Default_sequence;
        typedef SimFeatureAirFlowNetwork_Opening_Default_sequence::iterator SimFeatureAirFlowNetwork_Opening_Default_iterator;
        typedef SimFeatureAirFlowNetwork_Opening_Default_sequence::const_iterator SimFeatureAirFlowNetwork_Opening_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Opening_Default_type, char > SimFeatureAirFlowNetwork_Opening_Default_traits;

        const SimFeatureAirFlowNetwork_Opening_Default_sequence&
        SimFeatureAirFlowNetwork_Opening_Default () const;

        SimFeatureAirFlowNetwork_Opening_Default_sequence&
        SimFeatureAirFlowNetwork_Opening_Default ();

        void
        SimFeatureAirFlowNetwork_Opening_Default (const SimFeatureAirFlowNetwork_Opening_Default_sequence& s);

        // SimFeatureAirFlowNetwork_Opening_Detailed
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Opening_Detailed SimFeatureAirFlowNetwork_Opening_Detailed_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Opening_Detailed_type > SimFeatureAirFlowNetwork_Opening_Detailed_sequence;
        typedef SimFeatureAirFlowNetwork_Opening_Detailed_sequence::iterator SimFeatureAirFlowNetwork_Opening_Detailed_iterator;
        typedef SimFeatureAirFlowNetwork_Opening_Detailed_sequence::const_iterator SimFeatureAirFlowNetwork_Opening_Detailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Opening_Detailed_type, char > SimFeatureAirFlowNetwork_Opening_Detailed_traits;

        const SimFeatureAirFlowNetwork_Opening_Detailed_sequence&
        SimFeatureAirFlowNetwork_Opening_Detailed () const;

        SimFeatureAirFlowNetwork_Opening_Detailed_sequence&
        SimFeatureAirFlowNetwork_Opening_Detailed ();

        void
        SimFeatureAirFlowNetwork_Opening_Detailed (const SimFeatureAirFlowNetwork_Opening_Detailed_sequence& s);

        // SimFeatureAirFlowNetwork_Opening_Horizontal
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Opening_Horizontal SimFeatureAirFlowNetwork_Opening_Horizontal_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Opening_Horizontal_type > SimFeatureAirFlowNetwork_Opening_Horizontal_sequence;
        typedef SimFeatureAirFlowNetwork_Opening_Horizontal_sequence::iterator SimFeatureAirFlowNetwork_Opening_Horizontal_iterator;
        typedef SimFeatureAirFlowNetwork_Opening_Horizontal_sequence::const_iterator SimFeatureAirFlowNetwork_Opening_Horizontal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Opening_Horizontal_type, char > SimFeatureAirFlowNetwork_Opening_Horizontal_traits;

        const SimFeatureAirFlowNetwork_Opening_Horizontal_sequence&
        SimFeatureAirFlowNetwork_Opening_Horizontal () const;

        SimFeatureAirFlowNetwork_Opening_Horizontal_sequence&
        SimFeatureAirFlowNetwork_Opening_Horizontal ();

        void
        SimFeatureAirFlowNetwork_Opening_Horizontal (const SimFeatureAirFlowNetwork_Opening_Horizontal_sequence& s);

        // SimFeatureAirFlowNetwork_Opening_Simple
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Opening_Simple SimFeatureAirFlowNetwork_Opening_Simple_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Opening_Simple_type > SimFeatureAirFlowNetwork_Opening_Simple_sequence;
        typedef SimFeatureAirFlowNetwork_Opening_Simple_sequence::iterator SimFeatureAirFlowNetwork_Opening_Simple_iterator;
        typedef SimFeatureAirFlowNetwork_Opening_Simple_sequence::const_iterator SimFeatureAirFlowNetwork_Opening_Simple_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Opening_Simple_type, char > SimFeatureAirFlowNetwork_Opening_Simple_traits;

        const SimFeatureAirFlowNetwork_Opening_Simple_sequence&
        SimFeatureAirFlowNetwork_Opening_Simple () const;

        SimFeatureAirFlowNetwork_Opening_Simple_sequence&
        SimFeatureAirFlowNetwork_Opening_Simple ();

        void
        SimFeatureAirFlowNetwork_Opening_Simple (const SimFeatureAirFlowNetwork_Opening_Simple_sequence& s);

        // SimFeatureAirFlowNetwork_Surface_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Surface_Default SimFeatureAirFlowNetwork_Surface_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Surface_Default_type > SimFeatureAirFlowNetwork_Surface_Default_sequence;
        typedef SimFeatureAirFlowNetwork_Surface_Default_sequence::iterator SimFeatureAirFlowNetwork_Surface_Default_iterator;
        typedef SimFeatureAirFlowNetwork_Surface_Default_sequence::const_iterator SimFeatureAirFlowNetwork_Surface_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Surface_Default_type, char > SimFeatureAirFlowNetwork_Surface_Default_traits;

        const SimFeatureAirFlowNetwork_Surface_Default_sequence&
        SimFeatureAirFlowNetwork_Surface_Default () const;

        SimFeatureAirFlowNetwork_Surface_Default_sequence&
        SimFeatureAirFlowNetwork_Surface_Default ();

        void
        SimFeatureAirFlowNetwork_Surface_Default (const SimFeatureAirFlowNetwork_Surface_Default_sequence& s);

        // SimFeatureAirFlowNetwork_SurfaceCrack_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_SurfaceCrack_Default SimFeatureAirFlowNetwork_SurfaceCrack_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_SurfaceCrack_Default_type > SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence;
        typedef SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence::iterator SimFeatureAirFlowNetwork_SurfaceCrack_Default_iterator;
        typedef SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence::const_iterator SimFeatureAirFlowNetwork_SurfaceCrack_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_SurfaceCrack_Default_type, char > SimFeatureAirFlowNetwork_SurfaceCrack_Default_traits;

        const SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence&
        SimFeatureAirFlowNetwork_SurfaceCrack_Default () const;

        SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence&
        SimFeatureAirFlowNetwork_SurfaceCrack_Default ();

        void
        SimFeatureAirFlowNetwork_SurfaceCrack_Default (const SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence& s);

        // SimFeatureAirFlowNetwork_Zone_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureAirFlowNetwork_Zone_Default SimFeatureAirFlowNetwork_Zone_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureAirFlowNetwork_Zone_Default_type > SimFeatureAirFlowNetwork_Zone_Default_sequence;
        typedef SimFeatureAirFlowNetwork_Zone_Default_sequence::iterator SimFeatureAirFlowNetwork_Zone_Default_iterator;
        typedef SimFeatureAirFlowNetwork_Zone_Default_sequence::const_iterator SimFeatureAirFlowNetwork_Zone_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureAirFlowNetwork_Zone_Default_type, char > SimFeatureAirFlowNetwork_Zone_Default_traits;

        const SimFeatureAirFlowNetwork_Zone_Default_sequence&
        SimFeatureAirFlowNetwork_Zone_Default () const;

        SimFeatureAirFlowNetwork_Zone_Default_sequence&
        SimFeatureAirFlowNetwork_Zone_Default ();

        void
        SimFeatureAirFlowNetwork_Zone_Default (const SimFeatureAirFlowNetwork_Zone_Default_sequence& s);

        // SimFeatureElementAddition_ProjectionElement_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureElementAddition_ProjectionElement_Default SimFeatureElementAddition_ProjectionElement_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureElementAddition_ProjectionElement_Default_type > SimFeatureElementAddition_ProjectionElement_Default_sequence;
        typedef SimFeatureElementAddition_ProjectionElement_Default_sequence::iterator SimFeatureElementAddition_ProjectionElement_Default_iterator;
        typedef SimFeatureElementAddition_ProjectionElement_Default_sequence::const_iterator SimFeatureElementAddition_ProjectionElement_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureElementAddition_ProjectionElement_Default_type, char > SimFeatureElementAddition_ProjectionElement_Default_traits;

        const SimFeatureElementAddition_ProjectionElement_Default_sequence&
        SimFeatureElementAddition_ProjectionElement_Default () const;

        SimFeatureElementAddition_ProjectionElement_Default_sequence&
        SimFeatureElementAddition_ProjectionElement_Default ();

        void
        SimFeatureElementAddition_ProjectionElement_Default (const SimFeatureElementAddition_ProjectionElement_Default_sequence& s);

        // SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_type > SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence;
        typedef SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence::iterator SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_iterator;
        typedef SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence::const_iterator SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_type, char > SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_traits;

        const SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence&
        SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge () const;

        SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence&
        SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge ();

        void
        SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge (const SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence& s);

        // SimFeatureElementSubtraction_EdgeFeature_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureElementSubtraction_EdgeFeature_Default SimFeatureElementSubtraction_EdgeFeature_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureElementSubtraction_EdgeFeature_Default_type > SimFeatureElementSubtraction_EdgeFeature_Default_sequence;
        typedef SimFeatureElementSubtraction_EdgeFeature_Default_sequence::iterator SimFeatureElementSubtraction_EdgeFeature_Default_iterator;
        typedef SimFeatureElementSubtraction_EdgeFeature_Default_sequence::const_iterator SimFeatureElementSubtraction_EdgeFeature_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureElementSubtraction_EdgeFeature_Default_type, char > SimFeatureElementSubtraction_EdgeFeature_Default_traits;

        const SimFeatureElementSubtraction_EdgeFeature_Default_sequence&
        SimFeatureElementSubtraction_EdgeFeature_Default () const;

        SimFeatureElementSubtraction_EdgeFeature_Default_sequence&
        SimFeatureElementSubtraction_EdgeFeature_Default ();

        void
        SimFeatureElementSubtraction_EdgeFeature_Default (const SimFeatureElementSubtraction_EdgeFeature_Default_sequence& s);

        // SimFeatureElementSubtraction_EdgeFeature_RoundedEdge
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureElementSubtraction_EdgeFeature_RoundedEdge SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_type > SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence;
        typedef SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence::iterator SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_iterator;
        typedef SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence::const_iterator SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_type, char > SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_traits;

        const SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence&
        SimFeatureElementSubtraction_EdgeFeature_RoundedEdge () const;

        SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence&
        SimFeatureElementSubtraction_EdgeFeature_RoundedEdge ();

        void
        SimFeatureElementSubtraction_EdgeFeature_RoundedEdge (const SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence& s);

        // SimFeatureElementSubtraction_SlotFeature_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureElementSubtraction_SlotFeature_Default SimFeatureElementSubtraction_SlotFeature_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureElementSubtraction_SlotFeature_Default_type > SimFeatureElementSubtraction_SlotFeature_Default_sequence;
        typedef SimFeatureElementSubtraction_SlotFeature_Default_sequence::iterator SimFeatureElementSubtraction_SlotFeature_Default_iterator;
        typedef SimFeatureElementSubtraction_SlotFeature_Default_sequence::const_iterator SimFeatureElementSubtraction_SlotFeature_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureElementSubtraction_SlotFeature_Default_type, char > SimFeatureElementSubtraction_SlotFeature_Default_traits;

        const SimFeatureElementSubtraction_SlotFeature_Default_sequence&
        SimFeatureElementSubtraction_SlotFeature_Default () const;

        SimFeatureElementSubtraction_SlotFeature_Default_sequence&
        SimFeatureElementSubtraction_SlotFeature_Default ();

        void
        SimFeatureElementSubtraction_SlotFeature_Default (const SimFeatureElementSubtraction_SlotFeature_Default_sequence& s);

        // SimFeatureElementSubtraction_Void_Opening
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimFeatureElementSubtraction_Void_Opening SimFeatureElementSubtraction_Void_Opening_type;
        typedef ::xsd::cxx::tree::sequence< SimFeatureElementSubtraction_Void_Opening_type > SimFeatureElementSubtraction_Void_Opening_sequence;
        typedef SimFeatureElementSubtraction_Void_Opening_sequence::iterator SimFeatureElementSubtraction_Void_Opening_iterator;
        typedef SimFeatureElementSubtraction_Void_Opening_sequence::const_iterator SimFeatureElementSubtraction_Void_Opening_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFeatureElementSubtraction_Void_Opening_type, char > SimFeatureElementSubtraction_Void_Opening_traits;

        const SimFeatureElementSubtraction_Void_Opening_sequence&
        SimFeatureElementSubtraction_Void_Opening () const;

        SimFeatureElementSubtraction_Void_Opening_sequence&
        SimFeatureElementSubtraction_Void_Opening ();

        void
        SimFeatureElementSubtraction_Void_Opening (const SimFeatureElementSubtraction_Void_Opening_sequence& s);

        // SimFlowCompoundEqmt_DistrictSupply_Cooling
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_DistrictSupply_Cooling SimFlowCompoundEqmt_DistrictSupply_Cooling_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_DistrictSupply_Cooling_type > SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence;
        typedef SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence::iterator SimFlowCompoundEqmt_DistrictSupply_Cooling_iterator;
        typedef SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence::const_iterator SimFlowCompoundEqmt_DistrictSupply_Cooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_DistrictSupply_Cooling_type, char > SimFlowCompoundEqmt_DistrictSupply_Cooling_traits;

        const SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence&
        SimFlowCompoundEqmt_DistrictSupply_Cooling () const;

        SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence&
        SimFlowCompoundEqmt_DistrictSupply_Cooling ();

        void
        SimFlowCompoundEqmt_DistrictSupply_Cooling (const SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence& s);

        // SimFlowCompoundEqmt_DistrictSupply_Heating
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_DistrictSupply_Heating SimFlowCompoundEqmt_DistrictSupply_Heating_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_DistrictSupply_Heating_type > SimFlowCompoundEqmt_DistrictSupply_Heating_sequence;
        typedef SimFlowCompoundEqmt_DistrictSupply_Heating_sequence::iterator SimFlowCompoundEqmt_DistrictSupply_Heating_iterator;
        typedef SimFlowCompoundEqmt_DistrictSupply_Heating_sequence::const_iterator SimFlowCompoundEqmt_DistrictSupply_Heating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_DistrictSupply_Heating_type, char > SimFlowCompoundEqmt_DistrictSupply_Heating_traits;

        const SimFlowCompoundEqmt_DistrictSupply_Heating_sequence&
        SimFlowCompoundEqmt_DistrictSupply_Heating () const;

        SimFlowCompoundEqmt_DistrictSupply_Heating_sequence&
        SimFlowCompoundEqmt_DistrictSupply_Heating ();

        void
        SimFlowCompoundEqmt_DistrictSupply_Heating (const SimFlowCompoundEqmt_DistrictSupply_Heating_sequence& s);

        // SimFlowCompoundEqmt_PurchasedSupply_Cooling
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_PurchasedSupply_Cooling SimFlowCompoundEqmt_PurchasedSupply_Cooling_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_PurchasedSupply_Cooling_type > SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence;
        typedef SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence::iterator SimFlowCompoundEqmt_PurchasedSupply_Cooling_iterator;
        typedef SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence::const_iterator SimFlowCompoundEqmt_PurchasedSupply_Cooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_PurchasedSupply_Cooling_type, char > SimFlowCompoundEqmt_PurchasedSupply_Cooling_traits;

        const SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence&
        SimFlowCompoundEqmt_PurchasedSupply_Cooling () const;

        SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence&
        SimFlowCompoundEqmt_PurchasedSupply_Cooling ();

        void
        SimFlowCompoundEqmt_PurchasedSupply_Cooling (const SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence& s);

        // SimFlowCompoundEqmt_PurchasedSupply_Heating
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_PurchasedSupply_Heating SimFlowCompoundEqmt_PurchasedSupply_Heating_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_PurchasedSupply_Heating_type > SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence;
        typedef SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence::iterator SimFlowCompoundEqmt_PurchasedSupply_Heating_iterator;
        typedef SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence::const_iterator SimFlowCompoundEqmt_PurchasedSupply_Heating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_PurchasedSupply_Heating_type, char > SimFlowCompoundEqmt_PurchasedSupply_Heating_traits;

        const SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence&
        SimFlowCompoundEqmt_PurchasedSupply_Heating () const;

        SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence&
        SimFlowCompoundEqmt_PurchasedSupply_Heating ();

        void
        SimFlowCompoundEqmt_PurchasedSupply_Heating (const SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly (const SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool (const SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly (const SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool (const SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly (const SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir (const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed (const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW (const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence& s);

        // SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_type > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence::iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_iterator;
        typedef SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence::const_iterator SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_type, char > SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_traits;

        const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW () const;

        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence&
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW ();

        void
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW (const SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow (const SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX (const SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator (const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined (const SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil (const SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW (const SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW (const SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem (const SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit (const SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC (const SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP (const SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater (const SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor (const SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile (const SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence& s);

        // SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_type > SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence::iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_iterator;
        typedef SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence::const_iterator SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_type, char > SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_traits;

        const SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate () const;

        SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence&
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate ();

        void
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate (const SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence& s);

        // SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_type > SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence;
        typedef SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence::iterator SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_iterator;
        typedef SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence::const_iterator SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_type, char > SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_traits;

        const SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence&
        SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass () const;

        SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence&
        SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass ();

        void
        SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass (const SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop (const SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted (const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted (const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX (const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX (const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop (const SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence& s);

        // SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_type > SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence::iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_iterator;
        typedef SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence::const_iterator SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_type, char > SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_traits;

        const SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop () const;

        SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence&
        SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop ();

        void
        SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop (const SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence& s);

        // SimFlowCompoundEqmt_WaterUse_Connections
        //
        typedef ::namespaces::Sim::MepModel::SimFlowCompoundEqmt_WaterUse_Connections SimFlowCompoundEqmt_WaterUse_Connections_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowCompoundEqmt_WaterUse_Connections_type > SimFlowCompoundEqmt_WaterUse_Connections_sequence;
        typedef SimFlowCompoundEqmt_WaterUse_Connections_sequence::iterator SimFlowCompoundEqmt_WaterUse_Connections_iterator;
        typedef SimFlowCompoundEqmt_WaterUse_Connections_sequence::const_iterator SimFlowCompoundEqmt_WaterUse_Connections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowCompoundEqmt_WaterUse_Connections_type, char > SimFlowCompoundEqmt_WaterUse_Connections_traits;

        const SimFlowCompoundEqmt_WaterUse_Connections_sequence&
        SimFlowCompoundEqmt_WaterUse_Connections () const;

        SimFlowCompoundEqmt_WaterUse_Connections_sequence&
        SimFlowCompoundEqmt_WaterUse_Connections ();

        void
        SimFlowCompoundEqmt_WaterUse_Connections (const SimFlowCompoundEqmt_WaterUse_Connections_sequence& s);

        // SimFlowController_Damper_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_Default SimFlowController_Damper_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_Default_type > SimFlowController_Damper_Default_sequence;
        typedef SimFlowController_Damper_Default_sequence::iterator SimFlowController_Damper_Default_iterator;
        typedef SimFlowController_Damper_Default_sequence::const_iterator SimFlowController_Damper_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_Default_type, char > SimFlowController_Damper_Default_traits;

        const SimFlowController_Damper_Default_sequence&
        SimFlowController_Damper_Default () const;

        SimFlowController_Damper_Default_sequence&
        SimFlowController_Damper_Default ();

        void
        SimFlowController_Damper_Default (const SimFlowController_Damper_Default_sequence& s);

        // SimFlowController_Damper_Exhaust
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_Exhaust SimFlowController_Damper_Exhaust_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_Exhaust_type > SimFlowController_Damper_Exhaust_sequence;
        typedef SimFlowController_Damper_Exhaust_sequence::iterator SimFlowController_Damper_Exhaust_iterator;
        typedef SimFlowController_Damper_Exhaust_sequence::const_iterator SimFlowController_Damper_Exhaust_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_Exhaust_type, char > SimFlowController_Damper_Exhaust_traits;

        const SimFlowController_Damper_Exhaust_sequence&
        SimFlowController_Damper_Exhaust () const;

        SimFlowController_Damper_Exhaust_sequence&
        SimFlowController_Damper_Exhaust ();

        void
        SimFlowController_Damper_Exhaust (const SimFlowController_Damper_Exhaust_sequence& s);

        // SimFlowController_Damper_FaceBypass
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_FaceBypass SimFlowController_Damper_FaceBypass_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_FaceBypass_type > SimFlowController_Damper_FaceBypass_sequence;
        typedef SimFlowController_Damper_FaceBypass_sequence::iterator SimFlowController_Damper_FaceBypass_iterator;
        typedef SimFlowController_Damper_FaceBypass_sequence::const_iterator SimFlowController_Damper_FaceBypass_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_FaceBypass_type, char > SimFlowController_Damper_FaceBypass_traits;

        const SimFlowController_Damper_FaceBypass_sequence&
        SimFlowController_Damper_FaceBypass () const;

        SimFlowController_Damper_FaceBypass_sequence&
        SimFlowController_Damper_FaceBypass ();

        void
        SimFlowController_Damper_FaceBypass (const SimFlowController_Damper_FaceBypass_sequence& s);

        // SimFlowController_Damper_MixedAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_MixedAir SimFlowController_Damper_MixedAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_MixedAir_type > SimFlowController_Damper_MixedAir_sequence;
        typedef SimFlowController_Damper_MixedAir_sequence::iterator SimFlowController_Damper_MixedAir_iterator;
        typedef SimFlowController_Damper_MixedAir_sequence::const_iterator SimFlowController_Damper_MixedAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_MixedAir_type, char > SimFlowController_Damper_MixedAir_traits;

        const SimFlowController_Damper_MixedAir_sequence&
        SimFlowController_Damper_MixedAir () const;

        SimFlowController_Damper_MixedAir_sequence&
        SimFlowController_Damper_MixedAir ();

        void
        SimFlowController_Damper_MixedAir (const SimFlowController_Damper_MixedAir_sequence& s);

        // SimFlowController_Damper_OutsideAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_OutsideAir SimFlowController_Damper_OutsideAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_OutsideAir_type > SimFlowController_Damper_OutsideAir_sequence;
        typedef SimFlowController_Damper_OutsideAir_sequence::iterator SimFlowController_Damper_OutsideAir_iterator;
        typedef SimFlowController_Damper_OutsideAir_sequence::const_iterator SimFlowController_Damper_OutsideAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_OutsideAir_type, char > SimFlowController_Damper_OutsideAir_traits;

        const SimFlowController_Damper_OutsideAir_sequence&
        SimFlowController_Damper_OutsideAir () const;

        SimFlowController_Damper_OutsideAir_sequence&
        SimFlowController_Damper_OutsideAir ();

        void
        SimFlowController_Damper_OutsideAir (const SimFlowController_Damper_OutsideAir_sequence& s);

        // SimFlowController_Damper_Recirculation
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_Recirculation SimFlowController_Damper_Recirculation_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_Recirculation_type > SimFlowController_Damper_Recirculation_sequence;
        typedef SimFlowController_Damper_Recirculation_sequence::iterator SimFlowController_Damper_Recirculation_iterator;
        typedef SimFlowController_Damper_Recirculation_sequence::const_iterator SimFlowController_Damper_Recirculation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_Recirculation_type, char > SimFlowController_Damper_Recirculation_traits;

        const SimFlowController_Damper_Recirculation_sequence&
        SimFlowController_Damper_Recirculation () const;

        SimFlowController_Damper_Recirculation_sequence&
        SimFlowController_Damper_Recirculation ();

        void
        SimFlowController_Damper_Recirculation (const SimFlowController_Damper_Recirculation_sequence& s);

        // SimFlowController_Damper_Relief
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Damper_Relief SimFlowController_Damper_Relief_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Damper_Relief_type > SimFlowController_Damper_Relief_sequence;
        typedef SimFlowController_Damper_Relief_sequence::iterator SimFlowController_Damper_Relief_iterator;
        typedef SimFlowController_Damper_Relief_sequence::const_iterator SimFlowController_Damper_Relief_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Damper_Relief_type, char > SimFlowController_Damper_Relief_traits;

        const SimFlowController_Damper_Relief_sequence&
        SimFlowController_Damper_Relief () const;

        SimFlowController_Damper_Relief_sequence&
        SimFlowController_Damper_Relief ();

        void
        SimFlowController_Damper_Relief (const SimFlowController_Damper_Relief_sequence& s);

        // SimFlowController_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Default_Default SimFlowController_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Default_Default_type > SimFlowController_Default_Default_sequence;
        typedef SimFlowController_Default_Default_sequence::iterator SimFlowController_Default_Default_iterator;
        typedef SimFlowController_Default_Default_sequence::const_iterator SimFlowController_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Default_Default_type, char > SimFlowController_Default_Default_traits;

        const SimFlowController_Default_Default_sequence&
        SimFlowController_Default_Default () const;

        SimFlowController_Default_Default_sequence&
        SimFlowController_Default_Default ();

        void
        SimFlowController_Default_Default (const SimFlowController_Default_Default_sequence& s);

        // SimFlowController_ElectricalSwitch_On_Off
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_ElectricalSwitch_On_Off SimFlowController_ElectricalSwitch_On_Off_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_ElectricalSwitch_On_Off_type > SimFlowController_ElectricalSwitch_On_Off_sequence;
        typedef SimFlowController_ElectricalSwitch_On_Off_sequence::iterator SimFlowController_ElectricalSwitch_On_Off_iterator;
        typedef SimFlowController_ElectricalSwitch_On_Off_sequence::const_iterator SimFlowController_ElectricalSwitch_On_Off_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_ElectricalSwitch_On_Off_type, char > SimFlowController_ElectricalSwitch_On_Off_traits;

        const SimFlowController_ElectricalSwitch_On_Off_sequence&
        SimFlowController_ElectricalSwitch_On_Off () const;

        SimFlowController_ElectricalSwitch_On_Off_sequence&
        SimFlowController_ElectricalSwitch_On_Off ();

        void
        SimFlowController_ElectricalSwitch_On_Off (const SimFlowController_ElectricalSwitch_On_Off_sequence& s);

        // SimFlowController_ElectricalSwitch_Variable
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_ElectricalSwitch_Variable SimFlowController_ElectricalSwitch_Variable_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_ElectricalSwitch_Variable_type > SimFlowController_ElectricalSwitch_Variable_sequence;
        typedef SimFlowController_ElectricalSwitch_Variable_sequence::iterator SimFlowController_ElectricalSwitch_Variable_iterator;
        typedef SimFlowController_ElectricalSwitch_Variable_sequence::const_iterator SimFlowController_ElectricalSwitch_Variable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_ElectricalSwitch_Variable_type, char > SimFlowController_ElectricalSwitch_Variable_traits;

        const SimFlowController_ElectricalSwitch_Variable_sequence&
        SimFlowController_ElectricalSwitch_Variable () const;

        SimFlowController_ElectricalSwitch_Variable_sequence&
        SimFlowController_ElectricalSwitch_Variable ();

        void
        SimFlowController_ElectricalSwitch_Variable (const SimFlowController_ElectricalSwitch_Variable_sequence& s);

        // SimFlowController_Valve_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Valve_Default SimFlowController_Valve_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Valve_Default_type > SimFlowController_Valve_Default_sequence;
        typedef SimFlowController_Valve_Default_sequence::iterator SimFlowController_Valve_Default_iterator;
        typedef SimFlowController_Valve_Default_sequence::const_iterator SimFlowController_Valve_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Valve_Default_type, char > SimFlowController_Valve_Default_traits;

        const SimFlowController_Valve_Default_sequence&
        SimFlowController_Valve_Default () const;

        SimFlowController_Valve_Default_sequence&
        SimFlowController_Valve_Default ();

        void
        SimFlowController_Valve_Default (const SimFlowController_Valve_Default_sequence& s);

        // SimFlowController_Valve_EMSValve
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Valve_EMSValve SimFlowController_Valve_EMSValve_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Valve_EMSValve_type > SimFlowController_Valve_EMSValve_sequence;
        typedef SimFlowController_Valve_EMSValve_sequence::iterator SimFlowController_Valve_EMSValve_iterator;
        typedef SimFlowController_Valve_EMSValve_sequence::const_iterator SimFlowController_Valve_EMSValve_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Valve_EMSValve_type, char > SimFlowController_Valve_EMSValve_traits;

        const SimFlowController_Valve_EMSValve_sequence&
        SimFlowController_Valve_EMSValve () const;

        SimFlowController_Valve_EMSValve_sequence&
        SimFlowController_Valve_EMSValve ();

        void
        SimFlowController_Valve_EMSValve (const SimFlowController_Valve_EMSValve_sequence& s);

        // SimFlowController_Valve_NonReturnValve
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Valve_NonReturnValve SimFlowController_Valve_NonReturnValve_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Valve_NonReturnValve_type > SimFlowController_Valve_NonReturnValve_sequence;
        typedef SimFlowController_Valve_NonReturnValve_sequence::iterator SimFlowController_Valve_NonReturnValve_iterator;
        typedef SimFlowController_Valve_NonReturnValve_sequence::const_iterator SimFlowController_Valve_NonReturnValve_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Valve_NonReturnValve_type, char > SimFlowController_Valve_NonReturnValve_traits;

        const SimFlowController_Valve_NonReturnValve_sequence&
        SimFlowController_Valve_NonReturnValve () const;

        SimFlowController_Valve_NonReturnValve_sequence&
        SimFlowController_Valve_NonReturnValve ();

        void
        SimFlowController_Valve_NonReturnValve (const SimFlowController_Valve_NonReturnValve_sequence& s);

        // SimFlowController_Valve_TemperingValve
        //
        typedef ::namespaces::Sim::MepModel::SimFlowController_Valve_TemperingValve SimFlowController_Valve_TemperingValve_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowController_Valve_TemperingValve_type > SimFlowController_Valve_TemperingValve_sequence;
        typedef SimFlowController_Valve_TemperingValve_sequence::iterator SimFlowController_Valve_TemperingValve_iterator;
        typedef SimFlowController_Valve_TemperingValve_sequence::const_iterator SimFlowController_Valve_TemperingValve_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowController_Valve_TemperingValve_type, char > SimFlowController_Valve_TemperingValve_traits;

        const SimFlowController_Valve_TemperingValve_sequence&
        SimFlowController_Valve_TemperingValve () const;

        SimFlowController_Valve_TemperingValve_sequence&
        SimFlowController_Valve_TemperingValve ();

        void
        SimFlowController_Valve_TemperingValve (const SimFlowController_Valve_TemperingValve_sequence& s);

        // SimFlowEnergyTransfer_ConvectiveHeater_Electric
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Electric SimFlowEnergyTransfer_ConvectiveHeater_Electric_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ConvectiveHeater_Electric_type > SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence::iterator SimFlowEnergyTransfer_ConvectiveHeater_Electric_iterator;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence::const_iterator SimFlowEnergyTransfer_ConvectiveHeater_Electric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ConvectiveHeater_Electric_type, char > SimFlowEnergyTransfer_ConvectiveHeater_Electric_traits;

        const SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Electric () const;

        SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Electric ();

        void
        SimFlowEnergyTransfer_ConvectiveHeater_Electric (const SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence& s);

        // SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_type > SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence::iterator SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_iterator;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence::const_iterator SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_type, char > SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_traits;

        const SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric () const;

        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric ();

        void
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric (const SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence& s);

        // SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_type > SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence::iterator SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_iterator;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence::const_iterator SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_type, char > SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_traits;

        const SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam () const;

        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam ();

        void
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam (const SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence& s);

        // SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type > SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence::iterator SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence::const_iterator SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type, char > SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits;

        const SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water () const;

        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water ();

        void
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water (const SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence& s);

        // SimFlowEnergyTransfer_ConvectiveHeater_Water
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Water SimFlowEnergyTransfer_ConvectiveHeater_Water_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ConvectiveHeater_Water_type > SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence::iterator SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator;
        typedef SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence::const_iterator SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ConvectiveHeater_Water_type, char > SimFlowEnergyTransfer_ConvectiveHeater_Water_traits;

        const SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Water () const;

        SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence&
        SimFlowEnergyTransfer_ConvectiveHeater_Water ();

        void
        SimFlowEnergyTransfer_ConvectiveHeater_Water (const SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_type > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence::iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_type, char > SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_traits;

        const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed () const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence&
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed ();

        void
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_type > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence::iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_type, char > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_traits;

        const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry () const;

        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry ();

        void
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_type > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence::iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_type, char > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_traits;

        const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple () const;

        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple ();

        void
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_type > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence::iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_type, char > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_traits;

        const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit () const;

        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit ();

        void
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_type > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence::iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_type, char > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_traits;

        const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation () const;

        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation ();

        void
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_type > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence::iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_type, char > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_traits;

        const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit () const;

        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit ();

        void
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence& s);

        // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_type > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence::iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_iterator;
        typedef SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence::const_iterator SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_type, char > SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_traits;

        const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined () const;

        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence&
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined ();

        void
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence& s);

        // SimFlowEnergyTransfer_Dehumidifier_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Dehumidifier_Default SimFlowEnergyTransfer_Dehumidifier_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Dehumidifier_Default_type > SimFlowEnergyTransfer_Dehumidifier_Default_sequence;
        typedef SimFlowEnergyTransfer_Dehumidifier_Default_sequence::iterator SimFlowEnergyTransfer_Dehumidifier_Default_iterator;
        typedef SimFlowEnergyTransfer_Dehumidifier_Default_sequence::const_iterator SimFlowEnergyTransfer_Dehumidifier_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Dehumidifier_Default_type, char > SimFlowEnergyTransfer_Dehumidifier_Default_traits;

        const SimFlowEnergyTransfer_Dehumidifier_Default_sequence&
        SimFlowEnergyTransfer_Dehumidifier_Default () const;

        SimFlowEnergyTransfer_Dehumidifier_Default_sequence&
        SimFlowEnergyTransfer_Dehumidifier_Default ();

        void
        SimFlowEnergyTransfer_Dehumidifier_Default (const SimFlowEnergyTransfer_Dehumidifier_Default_sequence& s);

        // SimFlowEnergyTransfer_Dehumidifier_NoFans
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Dehumidifier_NoFans SimFlowEnergyTransfer_Dehumidifier_NoFans_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Dehumidifier_NoFans_type > SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence;
        typedef SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence::iterator SimFlowEnergyTransfer_Dehumidifier_NoFans_iterator;
        typedef SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence::const_iterator SimFlowEnergyTransfer_Dehumidifier_NoFans_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Dehumidifier_NoFans_type, char > SimFlowEnergyTransfer_Dehumidifier_NoFans_traits;

        const SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence&
        SimFlowEnergyTransfer_Dehumidifier_NoFans () const;

        SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence&
        SimFlowEnergyTransfer_Dehumidifier_NoFans ();

        void
        SimFlowEnergyTransfer_Dehumidifier_NoFans (const SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence& s);

        // SimFlowEnergyTransfer_Economizer_AirToAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_AirToAir SimFlowEnergyTransfer_Economizer_AirToAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_AirToAir_type > SimFlowEnergyTransfer_Economizer_AirToAir_sequence;
        typedef SimFlowEnergyTransfer_Economizer_AirToAir_sequence::iterator SimFlowEnergyTransfer_Economizer_AirToAir_iterator;
        typedef SimFlowEnergyTransfer_Economizer_AirToAir_sequence::const_iterator SimFlowEnergyTransfer_Economizer_AirToAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_AirToAir_type, char > SimFlowEnergyTransfer_Economizer_AirToAir_traits;

        const SimFlowEnergyTransfer_Economizer_AirToAir_sequence&
        SimFlowEnergyTransfer_Economizer_AirToAir () const;

        SimFlowEnergyTransfer_Economizer_AirToAir_sequence&
        SimFlowEnergyTransfer_Economizer_AirToAir ();

        void
        SimFlowEnergyTransfer_Economizer_AirToAir (const SimFlowEnergyTransfer_Economizer_AirToAir_sequence& s);

        // SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_type > SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence;
        typedef SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence::iterator SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_iterator;
        typedef SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence::const_iterator SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_type, char > SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_traits;

        const SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence&
        SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater () const;

        SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence&
        SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater ();

        void
        SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater (const SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence& s);

        // SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_type > SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence;
        typedef SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence::iterator SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_iterator;
        typedef SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence::const_iterator SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_type, char > SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_traits;

        const SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser () const;

        SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser ();

        void
        SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser (const SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence& s);

        // SimFlowEnergyTransfer_Economizer_CondenserToCondenser
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_CondenserToCondenser SimFlowEnergyTransfer_Economizer_CondenserToCondenser_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_CondenserToCondenser_type > SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence;
        typedef SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence::iterator SimFlowEnergyTransfer_Economizer_CondenserToCondenser_iterator;
        typedef SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence::const_iterator SimFlowEnergyTransfer_Economizer_CondenserToCondenser_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_CondenserToCondenser_type, char > SimFlowEnergyTransfer_Economizer_CondenserToCondenser_traits;

        const SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_CondenserToCondenser () const;

        SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_CondenserToCondenser ();

        void
        SimFlowEnergyTransfer_Economizer_CondenserToCondenser (const SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence& s);

        // SimFlowEnergyTransfer_Economizer_HotWaterToCondenser
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_HotWaterToCondenser SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_type > SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence;
        typedef SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence::iterator SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_iterator;
        typedef SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence::const_iterator SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_type, char > SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_traits;

        const SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_HotWaterToCondenser () const;

        SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_HotWaterToCondenser ();

        void
        SimFlowEnergyTransfer_Economizer_HotWaterToCondenser (const SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence& s);

        // SimFlowEnergyTransfer_Economizer_HotWaterToHotWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_HotWaterToHotWater SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_type > SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence;
        typedef SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence::iterator SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_iterator;
        typedef SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence::const_iterator SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_type, char > SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_traits;

        const SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence&
        SimFlowEnergyTransfer_Economizer_HotWaterToHotWater () const;

        SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence&
        SimFlowEnergyTransfer_Economizer_HotWaterToHotWater ();

        void
        SimFlowEnergyTransfer_Economizer_HotWaterToHotWater (const SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence& s);

        // SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_type > SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence;
        typedef SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence::iterator SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_iterator;
        typedef SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence::const_iterator SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_type, char > SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_traits;

        const SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser () const;

        SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence&
        SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser ();

        void
        SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser (const SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence& s);

        // SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_type > SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence;
        typedef SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence::iterator SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_iterator;
        typedef SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence::const_iterator SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_type, char > SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_traits;

        const SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence&
        SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater () const;

        SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence&
        SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater ();

        void
        SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater (const SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence& s);

        // SimFlowEnergyTransfer_Electrical_Transformer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Electrical_Transformer SimFlowEnergyTransfer_Electrical_Transformer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Electrical_Transformer_type > SimFlowEnergyTransfer_Electrical_Transformer_sequence;
        typedef SimFlowEnergyTransfer_Electrical_Transformer_sequence::iterator SimFlowEnergyTransfer_Electrical_Transformer_iterator;
        typedef SimFlowEnergyTransfer_Electrical_Transformer_sequence::const_iterator SimFlowEnergyTransfer_Electrical_Transformer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Electrical_Transformer_type, char > SimFlowEnergyTransfer_Electrical_Transformer_traits;

        const SimFlowEnergyTransfer_Electrical_Transformer_sequence&
        SimFlowEnergyTransfer_Electrical_Transformer () const;

        SimFlowEnergyTransfer_Electrical_Transformer_sequence&
        SimFlowEnergyTransfer_Electrical_Transformer ();

        void
        SimFlowEnergyTransfer_Electrical_Transformer (const SimFlowEnergyTransfer_Electrical_Transformer_sequence& s);

        // SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_type > SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence;
        typedef SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence::iterator SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_iterator;
        typedef SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence::const_iterator SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_type, char > SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_traits;

        const SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence&
        SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower () const;

        SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence&
        SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower ();

        void
        SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower (const SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence& s);

        // SimFlowEnergyTransfer_ElectricalInverter_LookUpTable
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ElectricalInverter_LookUpTable SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_type > SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence;
        typedef SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence::iterator SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_iterator;
        typedef SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence::const_iterator SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_type, char > SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_traits;

        const SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence&
        SimFlowEnergyTransfer_ElectricalInverter_LookUpTable () const;

        SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence&
        SimFlowEnergyTransfer_ElectricalInverter_LookUpTable ();

        void
        SimFlowEnergyTransfer_ElectricalInverter_LookUpTable (const SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence& s);

        // SimFlowEnergyTransfer_ElectricalInverter_Simple
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_ElectricalInverter_Simple SimFlowEnergyTransfer_ElectricalInverter_Simple_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_ElectricalInverter_Simple_type > SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence;
        typedef SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence::iterator SimFlowEnergyTransfer_ElectricalInverter_Simple_iterator;
        typedef SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence::const_iterator SimFlowEnergyTransfer_ElectricalInverter_Simple_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_ElectricalInverter_Simple_type, char > SimFlowEnergyTransfer_ElectricalInverter_Simple_traits;

        const SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence&
        SimFlowEnergyTransfer_ElectricalInverter_Simple () const;

        SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence&
        SimFlowEnergyTransfer_ElectricalInverter_Simple ();

        void
        SimFlowEnergyTransfer_ElectricalInverter_Simple (const SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence& s);

        // SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_type > SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence::iterator SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_iterator;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence::const_iterator SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_type, char > SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_traits;

        const SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad () const;

        SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad ();

        void
        SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad (const SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence& s);

        // SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_type > SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence::iterator SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_iterator;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence::const_iterator SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_type, char > SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_traits;

        const SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial () const;

        SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial ();

        void
        SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial (const SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence& s);

        // SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_type > SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence::iterator SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_iterator;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence::const_iterator SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_type, char > SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_traits;

        const SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad () const;

        SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad ();

        void
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad (const SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence& s);

        // SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_type > SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence::iterator SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_iterator;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence::const_iterator SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_type, char > SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_traits;

        const SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial () const;

        SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial ();

        void
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial (const SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence& s);

        // SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_type > SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence::iterator SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_iterator;
        typedef SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence::const_iterator SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_type, char > SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_traits;

        const SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil () const;

        SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence&
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil ();

        void
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil (const SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_type > SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_type, char > SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_traits;

        const SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW () const;

        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW ();

        void
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW (const SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_type > SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_type, char > SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_traits;

        const SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW () const;

        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW ();

        void
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW (const SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_type > SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_type, char > SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_traits;

        const SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW () const;

        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW ();

        void
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW (const SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_type > SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_type, char > SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_traits;

        const SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW () const;

        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW ();

        void
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW (const SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_type > SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_type, char > SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_traits;

        const SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW () const;

        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW ();

        void
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW (const SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_type > SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_type, char > SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_traits;

        const SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW () const;

        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW ();

        void
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW (const SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_type > SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_type, char > SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_traits;

        const SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW () const;

        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence&
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW ();

        void
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW (const SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence& s);

        // SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_type > SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence;
        typedef SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence::iterator SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_iterator;
        typedef SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence::const_iterator SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_type, char > SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_traits;

        const SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW () const;

        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence&
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW ();

        void
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW (const SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence& s);

        // SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_type > SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence;
        typedef SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence::iterator SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_iterator;
        typedef SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence::const_iterator SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_type, char > SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_traits;

        const SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence&
        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow () const;

        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence&
        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow ();

        void
        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow (const SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence& s);

        // SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_type > SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence;
        typedef SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence::iterator SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_iterator;
        typedef SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence::const_iterator SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_type, char > SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_traits;

        const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence&
        SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate () const;

        SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence&
        SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate ();

        void
        SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate (const SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence& s);

        // SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_type > SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence;
        typedef SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence::iterator SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_iterator;
        typedef SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence::const_iterator SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_type, char > SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_traits;

        const SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence&
        SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent () const;

        SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence&
        SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent ();

        void
        SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent (const SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence& s);

        // SimFlowEnergyTransfer_HeatExEarthToWater_Surface
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater_Surface SimFlowEnergyTransfer_HeatExEarthToWater_Surface_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExEarthToWater_Surface_type > SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence;
        typedef SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence::iterator SimFlowEnergyTransfer_HeatExEarthToWater_Surface_iterator;
        typedef SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence::const_iterator SimFlowEnergyTransfer_HeatExEarthToWater_Surface_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExEarthToWater_Surface_type, char > SimFlowEnergyTransfer_HeatExEarthToWater_Surface_traits;

        const SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence&
        SimFlowEnergyTransfer_HeatExEarthToWater_Surface () const;

        SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence&
        SimFlowEnergyTransfer_HeatExEarthToWater_Surface ();

        void
        SimFlowEnergyTransfer_HeatExEarthToWater_Surface (const SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence& s);

        // SimFlowEnergyTransfer_HeatExEarthToWater_Vertical
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater_Vertical SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_type > SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence;
        typedef SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence::iterator SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_iterator;
        typedef SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence::const_iterator SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_type, char > SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_traits;

        const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence&
        SimFlowEnergyTransfer_HeatExEarthToWater_Vertical () const;

        SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence&
        SimFlowEnergyTransfer_HeatExEarthToWater_Vertical ();

        void
        SimFlowEnergyTransfer_HeatExEarthToWater_Vertical (const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence& s);

        // SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_type > SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence;
        typedef SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence::iterator SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_iterator;
        typedef SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence::const_iterator SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_type, char > SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_traits;

        const SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence&
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW () const;

        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence&
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW ();

        void
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW (const SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence& s);

        // SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_type > SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence;
        typedef SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence::iterator SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_iterator;
        typedef SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence::const_iterator SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_type, char > SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_traits;

        const SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence&
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW () const;

        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence&
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW ();

        void
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW (const SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence& s);

        // SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_type > SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence;
        typedef SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence::iterator SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_iterator;
        typedef SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence::const_iterator SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_type, char > SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_traits;

        const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence&
        SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic () const;

        SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence&
        SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic ();

        void
        SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic (const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence& s);

        // SimFlowEnergyTransfer_HeatExWaterToWater_Pond
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater_Pond SimFlowEnergyTransfer_HeatExWaterToWater_Pond_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatExWaterToWater_Pond_type > SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence;
        typedef SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence::iterator SimFlowEnergyTransfer_HeatExWaterToWater_Pond_iterator;
        typedef SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence::const_iterator SimFlowEnergyTransfer_HeatExWaterToWater_Pond_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatExWaterToWater_Pond_type, char > SimFlowEnergyTransfer_HeatExWaterToWater_Pond_traits;

        const SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence&
        SimFlowEnergyTransfer_HeatExWaterToWater_Pond () const;

        SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence&
        SimFlowEnergyTransfer_HeatExWaterToWater_Pond ();

        void
        SimFlowEnergyTransfer_HeatExWaterToWater_Pond (const SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_type > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence::iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_type, char > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_traits;

        const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater () const;

        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater ();

        void
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_type > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence::iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_type, char > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_traits;

        const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed () const;

        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed ();

        void
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_type > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence::iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_type, char > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_traits;

        const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed () const;

        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed ();

        void
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_type > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence::iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_type, char > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_traits;

        const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow () const;

        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow ();

        void
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_type > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence::iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_type, char > SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_traits;

        const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed () const;

        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence&
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed ();

        void
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_type > SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence::iterator SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_type, char > SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_traits;

        const SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence&
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric () const;

        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence&
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric ();

        void
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric (const SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_type > SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence::iterator SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_type, char > SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_traits;

        const SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence&
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric () const;

        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence&
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric ();

        void
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric (const SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_type > SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence::iterator SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_type, char > SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_traits;

        const SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence&
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas () const;

        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence&
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas ();

        void
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas (const SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_type > SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence::iterator SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_type, char > SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_traits;

        const SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence&
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas () const;

        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence&
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas ();

        void
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas (const SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_type > SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence::iterator SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_type, char > SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_traits;

        const SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence&
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam () const;

        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence&
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam ();

        void
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam (const SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_type > SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence::iterator SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_type, char > SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_traits;

        const SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence&
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam () const;

        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence&
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam ();

        void
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam (const SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump (const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence& s);

        // SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_type > SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence::iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_iterator;
        typedef SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence::const_iterator SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_type, char > SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_traits;

        const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater () const;

        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence&
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater ();

        void
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater (const SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence& s);

        // SimFlowEnergyTransfer_Humidifier_ElectricSteam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_Humidifier_ElectricSteam SimFlowEnergyTransfer_Humidifier_ElectricSteam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_Humidifier_ElectricSteam_type > SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence;
        typedef SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence::iterator SimFlowEnergyTransfer_Humidifier_ElectricSteam_iterator;
        typedef SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence::const_iterator SimFlowEnergyTransfer_Humidifier_ElectricSteam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_Humidifier_ElectricSteam_type, char > SimFlowEnergyTransfer_Humidifier_ElectricSteam_traits;

        const SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence&
        SimFlowEnergyTransfer_Humidifier_ElectricSteam () const;

        SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence&
        SimFlowEnergyTransfer_Humidifier_ElectricSteam ();

        void
        SimFlowEnergyTransfer_Humidifier_ElectricSteam (const SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence& s);

        // SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_type > SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence;
        typedef SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence::iterator SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_iterator;
        typedef SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence::const_iterator SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_type, char > SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_traits;

        const SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence&
        SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground () const;

        SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence&
        SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground ();

        void
        SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground (const SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_type > SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_type, char > SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_traits;

        const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow () const;

        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow ();

        void
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow (const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_type > SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_type, char > SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_traits;

        const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow () const;

        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow ();

        void
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow (const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_type > SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_type, char > SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_traits;

        const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence&
        SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated () const;

        SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence&
        SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated ();

        void
        SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated (const SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_type > SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_type, char > SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_traits;

        const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow () const;

        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow ();

        void
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow (const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_type > SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_type, char > SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_traits;

        const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow () const;

        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence&
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow ();

        void
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow (const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_type > SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_type, char > SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_traits;

        const SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence&
        SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated () const;

        SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence&
        SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated ();

        void
        SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated (const SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_HighTemp
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_HighTemp SimFlowEnergyTransfer_RadiantDevice_HighTemp_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_HighTemp_type > SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_HighTemp_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_HighTemp_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_HighTemp_type, char > SimFlowEnergyTransfer_RadiantDevice_HighTemp_traits;

        const SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence&
        SimFlowEnergyTransfer_RadiantDevice_HighTemp () const;

        SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence&
        SimFlowEnergyTransfer_RadiantDevice_HighTemp ();

        void
        SimFlowEnergyTransfer_RadiantDevice_HighTemp (const SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_type > SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_type, char > SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_traits;

        const SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence&
        SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric () const;

        SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence&
        SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric ();

        void
        SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric (const SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_RadiantBeam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_RadiantBeam SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_type > SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_type, char > SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_traits;

        const SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence&
        SimFlowEnergyTransfer_RadiantDevice_RadiantBeam () const;

        SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence&
        SimFlowEnergyTransfer_RadiantDevice_RadiantBeam ();

        void
        SimFlowEnergyTransfer_RadiantDevice_RadiantBeam (const SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence& s);

        // SimFlowEnergyTransfer_RadiantDevice_Slab
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice_Slab SimFlowEnergyTransfer_RadiantDevice_Slab_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_RadiantDevice_Slab_type > SimFlowEnergyTransfer_RadiantDevice_Slab_sequence;
        typedef SimFlowEnergyTransfer_RadiantDevice_Slab_sequence::iterator SimFlowEnergyTransfer_RadiantDevice_Slab_iterator;
        typedef SimFlowEnergyTransfer_RadiantDevice_Slab_sequence::const_iterator SimFlowEnergyTransfer_RadiantDevice_Slab_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_RadiantDevice_Slab_type, char > SimFlowEnergyTransfer_RadiantDevice_Slab_traits;

        const SimFlowEnergyTransfer_RadiantDevice_Slab_sequence&
        SimFlowEnergyTransfer_RadiantDevice_Slab () const;

        SimFlowEnergyTransfer_RadiantDevice_Slab_sequence&
        SimFlowEnergyTransfer_RadiantDevice_Slab ();

        void
        SimFlowEnergyTransfer_RadiantDevice_Slab (const SimFlowEnergyTransfer_RadiantDevice_Slab_sequence& s);

        // SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_type > SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence;
        typedef SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence::iterator SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_iterator;
        typedef SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence::const_iterator SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_type, char > SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_traits;

        const SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence&
        SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow () const;

        SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence&
        SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow ();

        void
        SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow (const SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence& s);

        // SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_type > SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence::iterator SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_iterator;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence::const_iterator SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_type, char > SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_traits;

        const SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater () const;

        SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater ();

        void
        SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater (const SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence& s);

        // SimFlowEnergyTransferStorage_HotWaterTank_HeatPump
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_HeatPump SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_type > SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence::iterator SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_iterator;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence::const_iterator SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_type, char > SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_traits;

        const SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_HeatPump () const;

        SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_HeatPump ();

        void
        SimFlowEnergyTransferStorage_HotWaterTank_HeatPump (const SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence& s);

        // SimFlowEnergyTransferStorage_HotWaterTank_Mixed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type > SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence::iterator SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence::const_iterator SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type, char > SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits;

        const SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_Mixed () const;

        SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_Mixed ();

        void
        SimFlowEnergyTransferStorage_HotWaterTank_Mixed (const SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence& s);

        // SimFlowEnergyTransferStorage_HotWaterTank_Stratified
        //
        typedef ::namespaces::Sim::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_Stratified SimFlowEnergyTransferStorage_HotWaterTank_Stratified_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowEnergyTransferStorage_HotWaterTank_Stratified_type > SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence::iterator SimFlowEnergyTransferStorage_HotWaterTank_Stratified_iterator;
        typedef SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence::const_iterator SimFlowEnergyTransferStorage_HotWaterTank_Stratified_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTransferStorage_HotWaterTank_Stratified_type, char > SimFlowEnergyTransferStorage_HotWaterTank_Stratified_traits;

        const SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_Stratified () const;

        SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence&
        SimFlowEnergyTransferStorage_HotWaterTank_Stratified ();

        void
        SimFlowEnergyTransferStorage_HotWaterTank_Stratified (const SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence& s);

        // SimFlowFitting_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Default_Default SimFlowFitting_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Default_Default_type > SimFlowFitting_Default_Default_sequence;
        typedef SimFlowFitting_Default_Default_sequence::iterator SimFlowFitting_Default_Default_iterator;
        typedef SimFlowFitting_Default_Default_sequence::const_iterator SimFlowFitting_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Default_Default_type, char > SimFlowFitting_Default_Default_traits;

        const SimFlowFitting_Default_Default_sequence&
        SimFlowFitting_Default_Default () const;

        SimFlowFitting_Default_Default_sequence&
        SimFlowFitting_Default_Default ();

        void
        SimFlowFitting_Default_Default (const SimFlowFitting_Default_Default_sequence& s);

        // SimFlowFitting_Difusser_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Difusser_Default SimFlowFitting_Difusser_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Difusser_Default_type > SimFlowFitting_Difusser_Default_sequence;
        typedef SimFlowFitting_Difusser_Default_sequence::iterator SimFlowFitting_Difusser_Default_iterator;
        typedef SimFlowFitting_Difusser_Default_sequence::const_iterator SimFlowFitting_Difusser_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Difusser_Default_type, char > SimFlowFitting_Difusser_Default_traits;

        const SimFlowFitting_Difusser_Default_sequence&
        SimFlowFitting_Difusser_Default () const;

        SimFlowFitting_Difusser_Default_sequence&
        SimFlowFitting_Difusser_Default ();

        void
        SimFlowFitting_Difusser_Default (const SimFlowFitting_Difusser_Default_sequence& s);

        // SimFlowFitting_Electrical_Transformer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Electrical_Transformer SimFlowFitting_Electrical_Transformer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Electrical_Transformer_type > SimFlowFitting_Electrical_Transformer_sequence;
        typedef SimFlowFitting_Electrical_Transformer_sequence::iterator SimFlowFitting_Electrical_Transformer_iterator;
        typedef SimFlowFitting_Electrical_Transformer_sequence::const_iterator SimFlowFitting_Electrical_Transformer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Electrical_Transformer_type, char > SimFlowFitting_Electrical_Transformer_traits;

        const SimFlowFitting_Electrical_Transformer_sequence&
        SimFlowFitting_Electrical_Transformer () const;

        SimFlowFitting_Electrical_Transformer_sequence&
        SimFlowFitting_Electrical_Transformer ();

        void
        SimFlowFitting_Electrical_Transformer (const SimFlowFitting_Electrical_Transformer_sequence& s);

        // SimFlowFitting_FlowElementProxy_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_FlowElementProxy_Default SimFlowFitting_FlowElementProxy_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_FlowElementProxy_Default_type > SimFlowFitting_FlowElementProxy_Default_sequence;
        typedef SimFlowFitting_FlowElementProxy_Default_sequence::iterator SimFlowFitting_FlowElementProxy_Default_iterator;
        typedef SimFlowFitting_FlowElementProxy_Default_sequence::const_iterator SimFlowFitting_FlowElementProxy_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_FlowElementProxy_Default_type, char > SimFlowFitting_FlowElementProxy_Default_traits;

        const SimFlowFitting_FlowElementProxy_Default_sequence&
        SimFlowFitting_FlowElementProxy_Default () const;

        SimFlowFitting_FlowElementProxy_Default_sequence&
        SimFlowFitting_FlowElementProxy_Default ();

        void
        SimFlowFitting_FlowElementProxy_Default (const SimFlowFitting_FlowElementProxy_Default_sequence& s);

        // SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_type > SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence;
        typedef SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence::iterator SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_iterator;
        typedef SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence::const_iterator SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_type, char > SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_traits;

        const SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence&
        SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop () const;

        SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence&
        SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop ();

        void
        SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop (const SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence& s);

        // SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_type > SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence;
        typedef SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence::iterator SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_iterator;
        typedef SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence::const_iterator SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_type, char > SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_traits;

        const SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence&
        SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop () const;

        SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence&
        SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop ();

        void
        SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop (const SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence& s);

        // SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_type > SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence;
        typedef SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence::iterator SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_iterator;
        typedef SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence::const_iterator SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_type, char > SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_traits;

        const SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence&
        SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop () const;

        SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence&
        SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop ();

        void
        SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop (const SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence& s);

        // SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_type > SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence;
        typedef SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence::iterator SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_iterator;
        typedef SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence::const_iterator SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_type, char > SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_traits;

        const SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence&
        SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop () const;

        SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence&
        SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop ();

        void
        SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop (const SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence& s);

        // SimFlowFitting_Mixer_AirMixer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_AirMixer SimFlowFitting_Mixer_AirMixer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_AirMixer_type > SimFlowFitting_Mixer_AirMixer_sequence;
        typedef SimFlowFitting_Mixer_AirMixer_sequence::iterator SimFlowFitting_Mixer_AirMixer_iterator;
        typedef SimFlowFitting_Mixer_AirMixer_sequence::const_iterator SimFlowFitting_Mixer_AirMixer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_AirMixer_type, char > SimFlowFitting_Mixer_AirMixer_traits;

        const SimFlowFitting_Mixer_AirMixer_sequence&
        SimFlowFitting_Mixer_AirMixer () const;

        SimFlowFitting_Mixer_AirMixer_sequence&
        SimFlowFitting_Mixer_AirMixer ();

        void
        SimFlowFitting_Mixer_AirMixer (const SimFlowFitting_Mixer_AirMixer_sequence& s);

        // SimFlowFitting_Mixer_AirMixerOutdoor
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_AirMixerOutdoor SimFlowFitting_Mixer_AirMixerOutdoor_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_AirMixerOutdoor_type > SimFlowFitting_Mixer_AirMixerOutdoor_sequence;
        typedef SimFlowFitting_Mixer_AirMixerOutdoor_sequence::iterator SimFlowFitting_Mixer_AirMixerOutdoor_iterator;
        typedef SimFlowFitting_Mixer_AirMixerOutdoor_sequence::const_iterator SimFlowFitting_Mixer_AirMixerOutdoor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_AirMixerOutdoor_type, char > SimFlowFitting_Mixer_AirMixerOutdoor_traits;

        const SimFlowFitting_Mixer_AirMixerOutdoor_sequence&
        SimFlowFitting_Mixer_AirMixerOutdoor () const;

        SimFlowFitting_Mixer_AirMixerOutdoor_sequence&
        SimFlowFitting_Mixer_AirMixerOutdoor ();

        void
        SimFlowFitting_Mixer_AirMixerOutdoor (const SimFlowFitting_Mixer_AirMixerOutdoor_sequence& s);

        // SimFlowFitting_Mixer_AirMixerZoneReturn
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_AirMixerZoneReturn SimFlowFitting_Mixer_AirMixerZoneReturn_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_AirMixerZoneReturn_type > SimFlowFitting_Mixer_AirMixerZoneReturn_sequence;
        typedef SimFlowFitting_Mixer_AirMixerZoneReturn_sequence::iterator SimFlowFitting_Mixer_AirMixerZoneReturn_iterator;
        typedef SimFlowFitting_Mixer_AirMixerZoneReturn_sequence::const_iterator SimFlowFitting_Mixer_AirMixerZoneReturn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_AirMixerZoneReturn_type, char > SimFlowFitting_Mixer_AirMixerZoneReturn_traits;

        const SimFlowFitting_Mixer_AirMixerZoneReturn_sequence&
        SimFlowFitting_Mixer_AirMixerZoneReturn () const;

        SimFlowFitting_Mixer_AirMixerZoneReturn_sequence&
        SimFlowFitting_Mixer_AirMixerZoneReturn ();

        void
        SimFlowFitting_Mixer_AirMixerZoneReturn (const SimFlowFitting_Mixer_AirMixerZoneReturn_sequence& s);

        // SimFlowFitting_Mixer_CondenserMixer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_CondenserMixer SimFlowFitting_Mixer_CondenserMixer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_CondenserMixer_type > SimFlowFitting_Mixer_CondenserMixer_sequence;
        typedef SimFlowFitting_Mixer_CondenserMixer_sequence::iterator SimFlowFitting_Mixer_CondenserMixer_iterator;
        typedef SimFlowFitting_Mixer_CondenserMixer_sequence::const_iterator SimFlowFitting_Mixer_CondenserMixer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_CondenserMixer_type, char > SimFlowFitting_Mixer_CondenserMixer_traits;

        const SimFlowFitting_Mixer_CondenserMixer_sequence&
        SimFlowFitting_Mixer_CondenserMixer () const;

        SimFlowFitting_Mixer_CondenserMixer_sequence&
        SimFlowFitting_Mixer_CondenserMixer ();

        void
        SimFlowFitting_Mixer_CondenserMixer (const SimFlowFitting_Mixer_CondenserMixer_sequence& s);

        // SimFlowFitting_Mixer_DemandProxyMixer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_DemandProxyMixer SimFlowFitting_Mixer_DemandProxyMixer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_DemandProxyMixer_type > SimFlowFitting_Mixer_DemandProxyMixer_sequence;
        typedef SimFlowFitting_Mixer_DemandProxyMixer_sequence::iterator SimFlowFitting_Mixer_DemandProxyMixer_iterator;
        typedef SimFlowFitting_Mixer_DemandProxyMixer_sequence::const_iterator SimFlowFitting_Mixer_DemandProxyMixer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_DemandProxyMixer_type, char > SimFlowFitting_Mixer_DemandProxyMixer_traits;

        const SimFlowFitting_Mixer_DemandProxyMixer_sequence&
        SimFlowFitting_Mixer_DemandProxyMixer () const;

        SimFlowFitting_Mixer_DemandProxyMixer_sequence&
        SimFlowFitting_Mixer_DemandProxyMixer ();

        void
        SimFlowFitting_Mixer_DemandProxyMixer (const SimFlowFitting_Mixer_DemandProxyMixer_sequence& s);

        // SimFlowFitting_Mixer_SteamMixer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_SteamMixer SimFlowFitting_Mixer_SteamMixer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_SteamMixer_type > SimFlowFitting_Mixer_SteamMixer_sequence;
        typedef SimFlowFitting_Mixer_SteamMixer_sequence::iterator SimFlowFitting_Mixer_SteamMixer_iterator;
        typedef SimFlowFitting_Mixer_SteamMixer_sequence::const_iterator SimFlowFitting_Mixer_SteamMixer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_SteamMixer_type, char > SimFlowFitting_Mixer_SteamMixer_traits;

        const SimFlowFitting_Mixer_SteamMixer_sequence&
        SimFlowFitting_Mixer_SteamMixer () const;

        SimFlowFitting_Mixer_SteamMixer_sequence&
        SimFlowFitting_Mixer_SteamMixer ();

        void
        SimFlowFitting_Mixer_SteamMixer (const SimFlowFitting_Mixer_SteamMixer_sequence& s);

        // SimFlowFitting_Mixer_WaterMixer
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Mixer_WaterMixer SimFlowFitting_Mixer_WaterMixer_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Mixer_WaterMixer_type > SimFlowFitting_Mixer_WaterMixer_sequence;
        typedef SimFlowFitting_Mixer_WaterMixer_sequence::iterator SimFlowFitting_Mixer_WaterMixer_iterator;
        typedef SimFlowFitting_Mixer_WaterMixer_sequence::const_iterator SimFlowFitting_Mixer_WaterMixer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Mixer_WaterMixer_type, char > SimFlowFitting_Mixer_WaterMixer_traits;

        const SimFlowFitting_Mixer_WaterMixer_sequence&
        SimFlowFitting_Mixer_WaterMixer () const;

        SimFlowFitting_Mixer_WaterMixer_sequence&
        SimFlowFitting_Mixer_WaterMixer ();

        void
        SimFlowFitting_Mixer_WaterMixer (const SimFlowFitting_Mixer_WaterMixer_sequence& s);

        // SimFlowFitting_Splitter_AirSplitter
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Splitter_AirSplitter SimFlowFitting_Splitter_AirSplitter_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Splitter_AirSplitter_type > SimFlowFitting_Splitter_AirSplitter_sequence;
        typedef SimFlowFitting_Splitter_AirSplitter_sequence::iterator SimFlowFitting_Splitter_AirSplitter_iterator;
        typedef SimFlowFitting_Splitter_AirSplitter_sequence::const_iterator SimFlowFitting_Splitter_AirSplitter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Splitter_AirSplitter_type, char > SimFlowFitting_Splitter_AirSplitter_traits;

        const SimFlowFitting_Splitter_AirSplitter_sequence&
        SimFlowFitting_Splitter_AirSplitter () const;

        SimFlowFitting_Splitter_AirSplitter_sequence&
        SimFlowFitting_Splitter_AirSplitter ();

        void
        SimFlowFitting_Splitter_AirSplitter (const SimFlowFitting_Splitter_AirSplitter_sequence& s);

        // SimFlowFitting_Splitter_AirSplitterZoneSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Splitter_AirSplitterZoneSupply SimFlowFitting_Splitter_AirSplitterZoneSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Splitter_AirSplitterZoneSupply_type > SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence;
        typedef SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence::iterator SimFlowFitting_Splitter_AirSplitterZoneSupply_iterator;
        typedef SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence::const_iterator SimFlowFitting_Splitter_AirSplitterZoneSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Splitter_AirSplitterZoneSupply_type, char > SimFlowFitting_Splitter_AirSplitterZoneSupply_traits;

        const SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence&
        SimFlowFitting_Splitter_AirSplitterZoneSupply () const;

        SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence&
        SimFlowFitting_Splitter_AirSplitterZoneSupply ();

        void
        SimFlowFitting_Splitter_AirSplitterZoneSupply (const SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence& s);

        // SimFlowFitting_Splitter_CondenserSplitter
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Splitter_CondenserSplitter SimFlowFitting_Splitter_CondenserSplitter_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Splitter_CondenserSplitter_type > SimFlowFitting_Splitter_CondenserSplitter_sequence;
        typedef SimFlowFitting_Splitter_CondenserSplitter_sequence::iterator SimFlowFitting_Splitter_CondenserSplitter_iterator;
        typedef SimFlowFitting_Splitter_CondenserSplitter_sequence::const_iterator SimFlowFitting_Splitter_CondenserSplitter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Splitter_CondenserSplitter_type, char > SimFlowFitting_Splitter_CondenserSplitter_traits;

        const SimFlowFitting_Splitter_CondenserSplitter_sequence&
        SimFlowFitting_Splitter_CondenserSplitter () const;

        SimFlowFitting_Splitter_CondenserSplitter_sequence&
        SimFlowFitting_Splitter_CondenserSplitter ();

        void
        SimFlowFitting_Splitter_CondenserSplitter (const SimFlowFitting_Splitter_CondenserSplitter_sequence& s);

        // SimFlowFitting_Splitter_DemandProxySplitter
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Splitter_DemandProxySplitter SimFlowFitting_Splitter_DemandProxySplitter_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Splitter_DemandProxySplitter_type > SimFlowFitting_Splitter_DemandProxySplitter_sequence;
        typedef SimFlowFitting_Splitter_DemandProxySplitter_sequence::iterator SimFlowFitting_Splitter_DemandProxySplitter_iterator;
        typedef SimFlowFitting_Splitter_DemandProxySplitter_sequence::const_iterator SimFlowFitting_Splitter_DemandProxySplitter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Splitter_DemandProxySplitter_type, char > SimFlowFitting_Splitter_DemandProxySplitter_traits;

        const SimFlowFitting_Splitter_DemandProxySplitter_sequence&
        SimFlowFitting_Splitter_DemandProxySplitter () const;

        SimFlowFitting_Splitter_DemandProxySplitter_sequence&
        SimFlowFitting_Splitter_DemandProxySplitter ();

        void
        SimFlowFitting_Splitter_DemandProxySplitter (const SimFlowFitting_Splitter_DemandProxySplitter_sequence& s);

        // SimFlowFitting_Splitter_SteamSplitter
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Splitter_SteamSplitter SimFlowFitting_Splitter_SteamSplitter_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Splitter_SteamSplitter_type > SimFlowFitting_Splitter_SteamSplitter_sequence;
        typedef SimFlowFitting_Splitter_SteamSplitter_sequence::iterator SimFlowFitting_Splitter_SteamSplitter_iterator;
        typedef SimFlowFitting_Splitter_SteamSplitter_sequence::const_iterator SimFlowFitting_Splitter_SteamSplitter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Splitter_SteamSplitter_type, char > SimFlowFitting_Splitter_SteamSplitter_traits;

        const SimFlowFitting_Splitter_SteamSplitter_sequence&
        SimFlowFitting_Splitter_SteamSplitter () const;

        SimFlowFitting_Splitter_SteamSplitter_sequence&
        SimFlowFitting_Splitter_SteamSplitter ();

        void
        SimFlowFitting_Splitter_SteamSplitter (const SimFlowFitting_Splitter_SteamSplitter_sequence& s);

        // SimFlowFitting_Splitter_WaterSplitter
        //
        typedef ::namespaces::Sim::MepModel::SimFlowFitting_Splitter_WaterSplitter SimFlowFitting_Splitter_WaterSplitter_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowFitting_Splitter_WaterSplitter_type > SimFlowFitting_Splitter_WaterSplitter_sequence;
        typedef SimFlowFitting_Splitter_WaterSplitter_sequence::iterator SimFlowFitting_Splitter_WaterSplitter_iterator;
        typedef SimFlowFitting_Splitter_WaterSplitter_sequence::const_iterator SimFlowFitting_Splitter_WaterSplitter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowFitting_Splitter_WaterSplitter_type, char > SimFlowFitting_Splitter_WaterSplitter_traits;

        const SimFlowFitting_Splitter_WaterSplitter_sequence&
        SimFlowFitting_Splitter_WaterSplitter () const;

        SimFlowFitting_Splitter_WaterSplitter_sequence&
        SimFlowFitting_Splitter_WaterSplitter ();

        void
        SimFlowFitting_Splitter_WaterSplitter (const SimFlowFitting_Splitter_WaterSplitter_sequence& s);

        // SimFlowMover_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Default_Default SimFlowMover_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Default_Default_type > SimFlowMover_Default_Default_sequence;
        typedef SimFlowMover_Default_Default_sequence::iterator SimFlowMover_Default_Default_iterator;
        typedef SimFlowMover_Default_Default_sequence::const_iterator SimFlowMover_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Default_Default_type, char > SimFlowMover_Default_Default_traits;

        const SimFlowMover_Default_Default_sequence&
        SimFlowMover_Default_Default () const;

        SimFlowMover_Default_Default_sequence&
        SimFlowMover_Default_Default ();

        void
        SimFlowMover_Default_Default (const SimFlowMover_Default_Default_sequence& s);

        // SimFlowMover_Fan_NightVentilation
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Fan_NightVentilation SimFlowMover_Fan_NightVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Fan_NightVentilation_type > SimFlowMover_Fan_NightVentilation_sequence;
        typedef SimFlowMover_Fan_NightVentilation_sequence::iterator SimFlowMover_Fan_NightVentilation_iterator;
        typedef SimFlowMover_Fan_NightVentilation_sequence::const_iterator SimFlowMover_Fan_NightVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Fan_NightVentilation_type, char > SimFlowMover_Fan_NightVentilation_traits;

        const SimFlowMover_Fan_NightVentilation_sequence&
        SimFlowMover_Fan_NightVentilation () const;

        SimFlowMover_Fan_NightVentilation_sequence&
        SimFlowMover_Fan_NightVentilation ();

        void
        SimFlowMover_Fan_NightVentilation (const SimFlowMover_Fan_NightVentilation_sequence& s);

        // SimFlowMover_Fan_ZoneExhaust
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Fan_ZoneExhaust SimFlowMover_Fan_ZoneExhaust_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Fan_ZoneExhaust_type > SimFlowMover_Fan_ZoneExhaust_sequence;
        typedef SimFlowMover_Fan_ZoneExhaust_sequence::iterator SimFlowMover_Fan_ZoneExhaust_iterator;
        typedef SimFlowMover_Fan_ZoneExhaust_sequence::const_iterator SimFlowMover_Fan_ZoneExhaust_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Fan_ZoneExhaust_type, char > SimFlowMover_Fan_ZoneExhaust_traits;

        const SimFlowMover_Fan_ZoneExhaust_sequence&
        SimFlowMover_Fan_ZoneExhaust () const;

        SimFlowMover_Fan_ZoneExhaust_sequence&
        SimFlowMover_Fan_ZoneExhaust ();

        void
        SimFlowMover_Fan_ZoneExhaust (const SimFlowMover_Fan_ZoneExhaust_sequence& s);

        // SimFlowMover_Pump_ConstantSpeedReturn
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_ConstantSpeedReturn SimFlowMover_Pump_ConstantSpeedReturn_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_ConstantSpeedReturn_type > SimFlowMover_Pump_ConstantSpeedReturn_sequence;
        typedef SimFlowMover_Pump_ConstantSpeedReturn_sequence::iterator SimFlowMover_Pump_ConstantSpeedReturn_iterator;
        typedef SimFlowMover_Pump_ConstantSpeedReturn_sequence::const_iterator SimFlowMover_Pump_ConstantSpeedReturn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_ConstantSpeedReturn_type, char > SimFlowMover_Pump_ConstantSpeedReturn_traits;

        const SimFlowMover_Pump_ConstantSpeedReturn_sequence&
        SimFlowMover_Pump_ConstantSpeedReturn () const;

        SimFlowMover_Pump_ConstantSpeedReturn_sequence&
        SimFlowMover_Pump_ConstantSpeedReturn ();

        void
        SimFlowMover_Pump_ConstantSpeedReturn (const SimFlowMover_Pump_ConstantSpeedReturn_sequence& s);

        // SimFlowMover_Pump_ConstantSpeedSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_ConstantSpeedSupply SimFlowMover_Pump_ConstantSpeedSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_ConstantSpeedSupply_type > SimFlowMover_Pump_ConstantSpeedSupply_sequence;
        typedef SimFlowMover_Pump_ConstantSpeedSupply_sequence::iterator SimFlowMover_Pump_ConstantSpeedSupply_iterator;
        typedef SimFlowMover_Pump_ConstantSpeedSupply_sequence::const_iterator SimFlowMover_Pump_ConstantSpeedSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_ConstantSpeedSupply_type, char > SimFlowMover_Pump_ConstantSpeedSupply_traits;

        const SimFlowMover_Pump_ConstantSpeedSupply_sequence&
        SimFlowMover_Pump_ConstantSpeedSupply () const;

        SimFlowMover_Pump_ConstantSpeedSupply_sequence&
        SimFlowMover_Pump_ConstantSpeedSupply ();

        void
        SimFlowMover_Pump_ConstantSpeedSupply (const SimFlowMover_Pump_ConstantSpeedSupply_sequence& s);

        // SimFlowMover_Pump_UserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_UserDefined SimFlowMover_Pump_UserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_UserDefined_type > SimFlowMover_Pump_UserDefined_sequence;
        typedef SimFlowMover_Pump_UserDefined_sequence::iterator SimFlowMover_Pump_UserDefined_iterator;
        typedef SimFlowMover_Pump_UserDefined_sequence::const_iterator SimFlowMover_Pump_UserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_UserDefined_type, char > SimFlowMover_Pump_UserDefined_traits;

        const SimFlowMover_Pump_UserDefined_sequence&
        SimFlowMover_Pump_UserDefined () const;

        SimFlowMover_Pump_UserDefined_sequence&
        SimFlowMover_Pump_UserDefined ();

        void
        SimFlowMover_Pump_UserDefined (const SimFlowMover_Pump_UserDefined_sequence& s);

        // SimFlowMover_Pump_VariableSpeedReturn
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_VariableSpeedReturn SimFlowMover_Pump_VariableSpeedReturn_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_VariableSpeedReturn_type > SimFlowMover_Pump_VariableSpeedReturn_sequence;
        typedef SimFlowMover_Pump_VariableSpeedReturn_sequence::iterator SimFlowMover_Pump_VariableSpeedReturn_iterator;
        typedef SimFlowMover_Pump_VariableSpeedReturn_sequence::const_iterator SimFlowMover_Pump_VariableSpeedReturn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_VariableSpeedReturn_type, char > SimFlowMover_Pump_VariableSpeedReturn_traits;

        const SimFlowMover_Pump_VariableSpeedReturn_sequence&
        SimFlowMover_Pump_VariableSpeedReturn () const;

        SimFlowMover_Pump_VariableSpeedReturn_sequence&
        SimFlowMover_Pump_VariableSpeedReturn ();

        void
        SimFlowMover_Pump_VariableSpeedReturn (const SimFlowMover_Pump_VariableSpeedReturn_sequence& s);

        // SimFlowMover_Pump_VariableSpeedSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_VariableSpeedSupply SimFlowMover_Pump_VariableSpeedSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_VariableSpeedSupply_type > SimFlowMover_Pump_VariableSpeedSupply_sequence;
        typedef SimFlowMover_Pump_VariableSpeedSupply_sequence::iterator SimFlowMover_Pump_VariableSpeedSupply_iterator;
        typedef SimFlowMover_Pump_VariableSpeedSupply_sequence::const_iterator SimFlowMover_Pump_VariableSpeedSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_VariableSpeedSupply_type, char > SimFlowMover_Pump_VariableSpeedSupply_traits;

        const SimFlowMover_Pump_VariableSpeedSupply_sequence&
        SimFlowMover_Pump_VariableSpeedSupply () const;

        SimFlowMover_Pump_VariableSpeedSupply_sequence&
        SimFlowMover_Pump_VariableSpeedSupply ();

        void
        SimFlowMover_Pump_VariableSpeedSupply (const SimFlowMover_Pump_VariableSpeedSupply_sequence& s);

        // SimFlowMover_Pump_VarSpeedCondensateReturn
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_VarSpeedCondensateReturn SimFlowMover_Pump_VarSpeedCondensateReturn_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_VarSpeedCondensateReturn_type > SimFlowMover_Pump_VarSpeedCondensateReturn_sequence;
        typedef SimFlowMover_Pump_VarSpeedCondensateReturn_sequence::iterator SimFlowMover_Pump_VarSpeedCondensateReturn_iterator;
        typedef SimFlowMover_Pump_VarSpeedCondensateReturn_sequence::const_iterator SimFlowMover_Pump_VarSpeedCondensateReturn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_VarSpeedCondensateReturn_type, char > SimFlowMover_Pump_VarSpeedCondensateReturn_traits;

        const SimFlowMover_Pump_VarSpeedCondensateReturn_sequence&
        SimFlowMover_Pump_VarSpeedCondensateReturn () const;

        SimFlowMover_Pump_VarSpeedCondensateReturn_sequence&
        SimFlowMover_Pump_VarSpeedCondensateReturn ();

        void
        SimFlowMover_Pump_VarSpeedCondensateReturn (const SimFlowMover_Pump_VarSpeedCondensateReturn_sequence& s);

        // SimFlowMover_Pump_VarSpeedCondensateSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_Pump_VarSpeedCondensateSupply SimFlowMover_Pump_VarSpeedCondensateSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_Pump_VarSpeedCondensateSupply_type > SimFlowMover_Pump_VarSpeedCondensateSupply_sequence;
        typedef SimFlowMover_Pump_VarSpeedCondensateSupply_sequence::iterator SimFlowMover_Pump_VarSpeedCondensateSupply_iterator;
        typedef SimFlowMover_Pump_VarSpeedCondensateSupply_sequence::const_iterator SimFlowMover_Pump_VarSpeedCondensateSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_Pump_VarSpeedCondensateSupply_type, char > SimFlowMover_Pump_VarSpeedCondensateSupply_traits;

        const SimFlowMover_Pump_VarSpeedCondensateSupply_sequence&
        SimFlowMover_Pump_VarSpeedCondensateSupply () const;

        SimFlowMover_Pump_VarSpeedCondensateSupply_sequence&
        SimFlowMover_Pump_VarSpeedCondensateSupply ();

        void
        SimFlowMover_Pump_VarSpeedCondensateSupply (const SimFlowMover_Pump_VarSpeedCondensateSupply_sequence& s);

        // SimFlowMover_PumpSet_ConstantSpeed2
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_PumpSet_ConstantSpeed2 SimFlowMover_PumpSet_ConstantSpeed2_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_PumpSet_ConstantSpeed2_type > SimFlowMover_PumpSet_ConstantSpeed2_sequence;
        typedef SimFlowMover_PumpSet_ConstantSpeed2_sequence::iterator SimFlowMover_PumpSet_ConstantSpeed2_iterator;
        typedef SimFlowMover_PumpSet_ConstantSpeed2_sequence::const_iterator SimFlowMover_PumpSet_ConstantSpeed2_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_PumpSet_ConstantSpeed2_type, char > SimFlowMover_PumpSet_ConstantSpeed2_traits;

        const SimFlowMover_PumpSet_ConstantSpeed2_sequence&
        SimFlowMover_PumpSet_ConstantSpeed2 () const;

        SimFlowMover_PumpSet_ConstantSpeed2_sequence&
        SimFlowMover_PumpSet_ConstantSpeed2 ();

        void
        SimFlowMover_PumpSet_ConstantSpeed2 (const SimFlowMover_PumpSet_ConstantSpeed2_sequence& s);

        // SimFlowMover_PumpSet_ConstantSpeed3
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_PumpSet_ConstantSpeed3 SimFlowMover_PumpSet_ConstantSpeed3_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_PumpSet_ConstantSpeed3_type > SimFlowMover_PumpSet_ConstantSpeed3_sequence;
        typedef SimFlowMover_PumpSet_ConstantSpeed3_sequence::iterator SimFlowMover_PumpSet_ConstantSpeed3_iterator;
        typedef SimFlowMover_PumpSet_ConstantSpeed3_sequence::const_iterator SimFlowMover_PumpSet_ConstantSpeed3_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_PumpSet_ConstantSpeed3_type, char > SimFlowMover_PumpSet_ConstantSpeed3_traits;

        const SimFlowMover_PumpSet_ConstantSpeed3_sequence&
        SimFlowMover_PumpSet_ConstantSpeed3 () const;

        SimFlowMover_PumpSet_ConstantSpeed3_sequence&
        SimFlowMover_PumpSet_ConstantSpeed3 ();

        void
        SimFlowMover_PumpSet_ConstantSpeed3 (const SimFlowMover_PumpSet_ConstantSpeed3_sequence& s);

        // SimFlowMover_PumpSet_VariableSpeed2
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_PumpSet_VariableSpeed2 SimFlowMover_PumpSet_VariableSpeed2_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_PumpSet_VariableSpeed2_type > SimFlowMover_PumpSet_VariableSpeed2_sequence;
        typedef SimFlowMover_PumpSet_VariableSpeed2_sequence::iterator SimFlowMover_PumpSet_VariableSpeed2_iterator;
        typedef SimFlowMover_PumpSet_VariableSpeed2_sequence::const_iterator SimFlowMover_PumpSet_VariableSpeed2_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_PumpSet_VariableSpeed2_type, char > SimFlowMover_PumpSet_VariableSpeed2_traits;

        const SimFlowMover_PumpSet_VariableSpeed2_sequence&
        SimFlowMover_PumpSet_VariableSpeed2 () const;

        SimFlowMover_PumpSet_VariableSpeed2_sequence&
        SimFlowMover_PumpSet_VariableSpeed2 ();

        void
        SimFlowMover_PumpSet_VariableSpeed2 (const SimFlowMover_PumpSet_VariableSpeed2_sequence& s);

        // SimFlowMover_PumpSet_VariableSpeed3
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_PumpSet_VariableSpeed3 SimFlowMover_PumpSet_VariableSpeed3_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_PumpSet_VariableSpeed3_type > SimFlowMover_PumpSet_VariableSpeed3_sequence;
        typedef SimFlowMover_PumpSet_VariableSpeed3_sequence::iterator SimFlowMover_PumpSet_VariableSpeed3_iterator;
        typedef SimFlowMover_PumpSet_VariableSpeed3_sequence::const_iterator SimFlowMover_PumpSet_VariableSpeed3_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_PumpSet_VariableSpeed3_type, char > SimFlowMover_PumpSet_VariableSpeed3_traits;

        const SimFlowMover_PumpSet_VariableSpeed3_sequence&
        SimFlowMover_PumpSet_VariableSpeed3 () const;

        SimFlowMover_PumpSet_VariableSpeed3_sequence&
        SimFlowMover_PumpSet_VariableSpeed3 ();

        void
        SimFlowMover_PumpSet_VariableSpeed3 (const SimFlowMover_PumpSet_VariableSpeed3_sequence& s);

        // SimFlowMover_ReturnFan_ComponentModel
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_ReturnFan_ComponentModel SimFlowMover_ReturnFan_ComponentModel_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_ReturnFan_ComponentModel_type > SimFlowMover_ReturnFan_ComponentModel_sequence;
        typedef SimFlowMover_ReturnFan_ComponentModel_sequence::iterator SimFlowMover_ReturnFan_ComponentModel_iterator;
        typedef SimFlowMover_ReturnFan_ComponentModel_sequence::const_iterator SimFlowMover_ReturnFan_ComponentModel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_ReturnFan_ComponentModel_type, char > SimFlowMover_ReturnFan_ComponentModel_traits;

        const SimFlowMover_ReturnFan_ComponentModel_sequence&
        SimFlowMover_ReturnFan_ComponentModel () const;

        SimFlowMover_ReturnFan_ComponentModel_sequence&
        SimFlowMover_ReturnFan_ComponentModel ();

        void
        SimFlowMover_ReturnFan_ComponentModel (const SimFlowMover_ReturnFan_ComponentModel_sequence& s);

        // SimFlowMover_ReturnFan_ConstantVolume
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_ReturnFan_ConstantVolume SimFlowMover_ReturnFan_ConstantVolume_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_ReturnFan_ConstantVolume_type > SimFlowMover_ReturnFan_ConstantVolume_sequence;
        typedef SimFlowMover_ReturnFan_ConstantVolume_sequence::iterator SimFlowMover_ReturnFan_ConstantVolume_iterator;
        typedef SimFlowMover_ReturnFan_ConstantVolume_sequence::const_iterator SimFlowMover_ReturnFan_ConstantVolume_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_ReturnFan_ConstantVolume_type, char > SimFlowMover_ReturnFan_ConstantVolume_traits;

        const SimFlowMover_ReturnFan_ConstantVolume_sequence&
        SimFlowMover_ReturnFan_ConstantVolume () const;

        SimFlowMover_ReturnFan_ConstantVolume_sequence&
        SimFlowMover_ReturnFan_ConstantVolume ();

        void
        SimFlowMover_ReturnFan_ConstantVolume (const SimFlowMover_ReturnFan_ConstantVolume_sequence& s);

        // SimFlowMover_ReturnFan_OnOff
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_ReturnFan_OnOff SimFlowMover_ReturnFan_OnOff_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_ReturnFan_OnOff_type > SimFlowMover_ReturnFan_OnOff_sequence;
        typedef SimFlowMover_ReturnFan_OnOff_sequence::iterator SimFlowMover_ReturnFan_OnOff_iterator;
        typedef SimFlowMover_ReturnFan_OnOff_sequence::const_iterator SimFlowMover_ReturnFan_OnOff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_ReturnFan_OnOff_type, char > SimFlowMover_ReturnFan_OnOff_traits;

        const SimFlowMover_ReturnFan_OnOff_sequence&
        SimFlowMover_ReturnFan_OnOff () const;

        SimFlowMover_ReturnFan_OnOff_sequence&
        SimFlowMover_ReturnFan_OnOff ();

        void
        SimFlowMover_ReturnFan_OnOff (const SimFlowMover_ReturnFan_OnOff_sequence& s);

        // SimFlowMover_ReturnFan_VariableVolume
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_ReturnFan_VariableVolume SimFlowMover_ReturnFan_VariableVolume_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_ReturnFan_VariableVolume_type > SimFlowMover_ReturnFan_VariableVolume_sequence;
        typedef SimFlowMover_ReturnFan_VariableVolume_sequence::iterator SimFlowMover_ReturnFan_VariableVolume_iterator;
        typedef SimFlowMover_ReturnFan_VariableVolume_sequence::const_iterator SimFlowMover_ReturnFan_VariableVolume_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_ReturnFan_VariableVolume_type, char > SimFlowMover_ReturnFan_VariableVolume_traits;

        const SimFlowMover_ReturnFan_VariableVolume_sequence&
        SimFlowMover_ReturnFan_VariableVolume () const;

        SimFlowMover_ReturnFan_VariableVolume_sequence&
        SimFlowMover_ReturnFan_VariableVolume ();

        void
        SimFlowMover_ReturnFan_VariableVolume (const SimFlowMover_ReturnFan_VariableVolume_sequence& s);

        // SimFlowMover_SupplyFan_ComponentModel
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_SupplyFan_ComponentModel SimFlowMover_SupplyFan_ComponentModel_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_SupplyFan_ComponentModel_type > SimFlowMover_SupplyFan_ComponentModel_sequence;
        typedef SimFlowMover_SupplyFan_ComponentModel_sequence::iterator SimFlowMover_SupplyFan_ComponentModel_iterator;
        typedef SimFlowMover_SupplyFan_ComponentModel_sequence::const_iterator SimFlowMover_SupplyFan_ComponentModel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_SupplyFan_ComponentModel_type, char > SimFlowMover_SupplyFan_ComponentModel_traits;

        const SimFlowMover_SupplyFan_ComponentModel_sequence&
        SimFlowMover_SupplyFan_ComponentModel () const;

        SimFlowMover_SupplyFan_ComponentModel_sequence&
        SimFlowMover_SupplyFan_ComponentModel ();

        void
        SimFlowMover_SupplyFan_ComponentModel (const SimFlowMover_SupplyFan_ComponentModel_sequence& s);

        // SimFlowMover_SupplyFan_ConstantVolume
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_SupplyFan_ConstantVolume SimFlowMover_SupplyFan_ConstantVolume_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_SupplyFan_ConstantVolume_type > SimFlowMover_SupplyFan_ConstantVolume_sequence;
        typedef SimFlowMover_SupplyFan_ConstantVolume_sequence::iterator SimFlowMover_SupplyFan_ConstantVolume_iterator;
        typedef SimFlowMover_SupplyFan_ConstantVolume_sequence::const_iterator SimFlowMover_SupplyFan_ConstantVolume_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_SupplyFan_ConstantVolume_type, char > SimFlowMover_SupplyFan_ConstantVolume_traits;

        const SimFlowMover_SupplyFan_ConstantVolume_sequence&
        SimFlowMover_SupplyFan_ConstantVolume () const;

        SimFlowMover_SupplyFan_ConstantVolume_sequence&
        SimFlowMover_SupplyFan_ConstantVolume ();

        void
        SimFlowMover_SupplyFan_ConstantVolume (const SimFlowMover_SupplyFan_ConstantVolume_sequence& s);

        // SimFlowMover_SupplyFan_OnOff
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_SupplyFan_OnOff SimFlowMover_SupplyFan_OnOff_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_SupplyFan_OnOff_type > SimFlowMover_SupplyFan_OnOff_sequence;
        typedef SimFlowMover_SupplyFan_OnOff_sequence::iterator SimFlowMover_SupplyFan_OnOff_iterator;
        typedef SimFlowMover_SupplyFan_OnOff_sequence::const_iterator SimFlowMover_SupplyFan_OnOff_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_SupplyFan_OnOff_type, char > SimFlowMover_SupplyFan_OnOff_traits;

        const SimFlowMover_SupplyFan_OnOff_sequence&
        SimFlowMover_SupplyFan_OnOff () const;

        SimFlowMover_SupplyFan_OnOff_sequence&
        SimFlowMover_SupplyFan_OnOff ();

        void
        SimFlowMover_SupplyFan_OnOff (const SimFlowMover_SupplyFan_OnOff_sequence& s);

        // SimFlowMover_SupplyFan_VariableVolume
        //
        typedef ::namespaces::Sim::MepModel::SimFlowMover_SupplyFan_VariableVolume SimFlowMover_SupplyFan_VariableVolume_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowMover_SupplyFan_VariableVolume_type > SimFlowMover_SupplyFan_VariableVolume_sequence;
        typedef SimFlowMover_SupplyFan_VariableVolume_sequence::iterator SimFlowMover_SupplyFan_VariableVolume_iterator;
        typedef SimFlowMover_SupplyFan_VariableVolume_sequence::const_iterator SimFlowMover_SupplyFan_VariableVolume_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowMover_SupplyFan_VariableVolume_type, char > SimFlowMover_SupplyFan_VariableVolume_traits;

        const SimFlowMover_SupplyFan_VariableVolume_sequence&
        SimFlowMover_SupplyFan_VariableVolume () const;

        SimFlowMover_SupplyFan_VariableVolume_sequence&
        SimFlowMover_SupplyFan_VariableVolume ();

        void
        SimFlowMover_SupplyFan_VariableVolume (const SimFlowMover_SupplyFan_VariableVolume_sequence& s);

        // SimFlowPlant_Boiler_BoilerHotWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Boiler_BoilerHotWater SimFlowPlant_Boiler_BoilerHotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Boiler_BoilerHotWater_type > SimFlowPlant_Boiler_BoilerHotWater_sequence;
        typedef SimFlowPlant_Boiler_BoilerHotWater_sequence::iterator SimFlowPlant_Boiler_BoilerHotWater_iterator;
        typedef SimFlowPlant_Boiler_BoilerHotWater_sequence::const_iterator SimFlowPlant_Boiler_BoilerHotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Boiler_BoilerHotWater_type, char > SimFlowPlant_Boiler_BoilerHotWater_traits;

        const SimFlowPlant_Boiler_BoilerHotWater_sequence&
        SimFlowPlant_Boiler_BoilerHotWater () const;

        SimFlowPlant_Boiler_BoilerHotWater_sequence&
        SimFlowPlant_Boiler_BoilerHotWater ();

        void
        SimFlowPlant_Boiler_BoilerHotWater (const SimFlowPlant_Boiler_BoilerHotWater_sequence& s);

        // SimFlowPlant_Boiler_BoilerSteam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Boiler_BoilerSteam SimFlowPlant_Boiler_BoilerSteam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Boiler_BoilerSteam_type > SimFlowPlant_Boiler_BoilerSteam_sequence;
        typedef SimFlowPlant_Boiler_BoilerSteam_sequence::iterator SimFlowPlant_Boiler_BoilerSteam_iterator;
        typedef SimFlowPlant_Boiler_BoilerSteam_sequence::const_iterator SimFlowPlant_Boiler_BoilerSteam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Boiler_BoilerSteam_type, char > SimFlowPlant_Boiler_BoilerSteam_traits;

        const SimFlowPlant_Boiler_BoilerSteam_sequence&
        SimFlowPlant_Boiler_BoilerSteam () const;

        SimFlowPlant_Boiler_BoilerSteam_sequence&
        SimFlowPlant_Boiler_BoilerSteam ();

        void
        SimFlowPlant_Boiler_BoilerSteam (const SimFlowPlant_Boiler_BoilerSteam_sequence& s);

        // SimFlowPlant_Boiler_UserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Boiler_UserDefined SimFlowPlant_Boiler_UserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Boiler_UserDefined_type > SimFlowPlant_Boiler_UserDefined_sequence;
        typedef SimFlowPlant_Boiler_UserDefined_sequence::iterator SimFlowPlant_Boiler_UserDefined_iterator;
        typedef SimFlowPlant_Boiler_UserDefined_sequence::const_iterator SimFlowPlant_Boiler_UserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Boiler_UserDefined_type, char > SimFlowPlant_Boiler_UserDefined_traits;

        const SimFlowPlant_Boiler_UserDefined_sequence&
        SimFlowPlant_Boiler_UserDefined () const;

        SimFlowPlant_Boiler_UserDefined_sequence&
        SimFlowPlant_Boiler_UserDefined ();

        void
        SimFlowPlant_Boiler_UserDefined (const SimFlowPlant_Boiler_UserDefined_sequence& s);

        // SimFlowPlant_Chiller_Absorption
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_Absorption SimFlowPlant_Chiller_Absorption_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_Absorption_type > SimFlowPlant_Chiller_Absorption_sequence;
        typedef SimFlowPlant_Chiller_Absorption_sequence::iterator SimFlowPlant_Chiller_Absorption_iterator;
        typedef SimFlowPlant_Chiller_Absorption_sequence::const_iterator SimFlowPlant_Chiller_Absorption_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_Absorption_type, char > SimFlowPlant_Chiller_Absorption_traits;

        const SimFlowPlant_Chiller_Absorption_sequence&
        SimFlowPlant_Chiller_Absorption () const;

        SimFlowPlant_Chiller_Absorption_sequence&
        SimFlowPlant_Chiller_Absorption ();

        void
        SimFlowPlant_Chiller_Absorption (const SimFlowPlant_Chiller_Absorption_sequence& s);

        // SimFlowPlant_Chiller_AbsorptionIndirect
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_AbsorptionIndirect SimFlowPlant_Chiller_AbsorptionIndirect_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_AbsorptionIndirect_type > SimFlowPlant_Chiller_AbsorptionIndirect_sequence;
        typedef SimFlowPlant_Chiller_AbsorptionIndirect_sequence::iterator SimFlowPlant_Chiller_AbsorptionIndirect_iterator;
        typedef SimFlowPlant_Chiller_AbsorptionIndirect_sequence::const_iterator SimFlowPlant_Chiller_AbsorptionIndirect_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_AbsorptionIndirect_type, char > SimFlowPlant_Chiller_AbsorptionIndirect_traits;

        const SimFlowPlant_Chiller_AbsorptionIndirect_sequence&
        SimFlowPlant_Chiller_AbsorptionIndirect () const;

        SimFlowPlant_Chiller_AbsorptionIndirect_sequence&
        SimFlowPlant_Chiller_AbsorptionIndirect ();

        void
        SimFlowPlant_Chiller_AbsorptionIndirect (const SimFlowPlant_Chiller_AbsorptionIndirect_sequence& s);

        // SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_type > SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence::iterator SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_iterator;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence::const_iterator SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_type, char > SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_traits;

        const SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine () const;

        SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine ();

        void
        SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine (const SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence& s);

        // SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_type > SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence::iterator SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_iterator;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence::const_iterator SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_type, char > SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_traits;

        const SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP () const;

        SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP ();

        void
        SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP (const SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence& s);

        // SimFlowPlant_Chiller_ChillerVaporCompressionElectric
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_ChillerVaporCompressionElectric SimFlowPlant_Chiller_ChillerVaporCompressionElectric_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_ChillerVaporCompressionElectric_type > SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence::iterator SimFlowPlant_Chiller_ChillerVaporCompressionElectric_iterator;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence::const_iterator SimFlowPlant_Chiller_ChillerVaporCompressionElectric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_ChillerVaporCompressionElectric_type, char > SimFlowPlant_Chiller_ChillerVaporCompressionElectric_traits;

        const SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric () const;

        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric ();

        void
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric (const SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence& s);

        // SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_type > SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence::iterator SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_iterator;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence::const_iterator SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_type, char > SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_traits;

        const SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR () const;

        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR ();

        void
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR (const SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence& s);

        // SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_type > SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence::iterator SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_iterator;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence::const_iterator SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_type, char > SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_traits;

        const SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR () const;

        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR ();

        void
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR (const SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence& s);

        // SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_type > SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence::iterator SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_iterator;
        typedef SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence::const_iterator SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_type, char > SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_traits;

        const SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven () const;

        SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence&
        SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven ();

        void
        SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven (const SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence& s);

        // SimFlowPlant_Chiller_UserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_Chiller_UserDefined SimFlowPlant_Chiller_UserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_Chiller_UserDefined_type > SimFlowPlant_Chiller_UserDefined_sequence;
        typedef SimFlowPlant_Chiller_UserDefined_sequence::iterator SimFlowPlant_Chiller_UserDefined_iterator;
        typedef SimFlowPlant_Chiller_UserDefined_sequence::const_iterator SimFlowPlant_Chiller_UserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_Chiller_UserDefined_type, char > SimFlowPlant_Chiller_UserDefined_traits;

        const SimFlowPlant_Chiller_UserDefined_sequence&
        SimFlowPlant_Chiller_UserDefined () const;

        SimFlowPlant_Chiller_UserDefined_sequence&
        SimFlowPlant_Chiller_UserDefined ();

        void
        SimFlowPlant_Chiller_UserDefined (const SimFlowPlant_Chiller_UserDefined_sequence& s);

        // SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_type > SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence;
        typedef SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence::iterator SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_iterator;
        typedef SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence::const_iterator SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_type, char > SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_traits;

        const SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence&
        SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect () const;

        SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence&
        SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect ();

        void
        SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect (const SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence& s);

        // SimFlowPlant_ChillerHeater_AbsorptionDirectFired
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ChillerHeater_AbsorptionDirectFired SimFlowPlant_ChillerHeater_AbsorptionDirectFired_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ChillerHeater_AbsorptionDirectFired_type > SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence;
        typedef SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence::iterator SimFlowPlant_ChillerHeater_AbsorptionDirectFired_iterator;
        typedef SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence::const_iterator SimFlowPlant_ChillerHeater_AbsorptionDirectFired_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ChillerHeater_AbsorptionDirectFired_type, char > SimFlowPlant_ChillerHeater_AbsorptionDirectFired_traits;

        const SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence&
        SimFlowPlant_ChillerHeater_AbsorptionDirectFired () const;

        SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence&
        SimFlowPlant_ChillerHeater_AbsorptionDirectFired ();

        void
        SimFlowPlant_ChillerHeater_AbsorptionDirectFired (const SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence& s);

        // SimFlowPlant_CoolingTower_SingleSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower_SingleSpeed SimFlowPlant_CoolingTower_SingleSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_CoolingTower_SingleSpeed_type > SimFlowPlant_CoolingTower_SingleSpeed_sequence;
        typedef SimFlowPlant_CoolingTower_SingleSpeed_sequence::iterator SimFlowPlant_CoolingTower_SingleSpeed_iterator;
        typedef SimFlowPlant_CoolingTower_SingleSpeed_sequence::const_iterator SimFlowPlant_CoolingTower_SingleSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_CoolingTower_SingleSpeed_type, char > SimFlowPlant_CoolingTower_SingleSpeed_traits;

        const SimFlowPlant_CoolingTower_SingleSpeed_sequence&
        SimFlowPlant_CoolingTower_SingleSpeed () const;

        SimFlowPlant_CoolingTower_SingleSpeed_sequence&
        SimFlowPlant_CoolingTower_SingleSpeed ();

        void
        SimFlowPlant_CoolingTower_SingleSpeed (const SimFlowPlant_CoolingTower_SingleSpeed_sequence& s);

        // SimFlowPlant_CoolingTower_TwoSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower_TwoSpeed SimFlowPlant_CoolingTower_TwoSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_CoolingTower_TwoSpeed_type > SimFlowPlant_CoolingTower_TwoSpeed_sequence;
        typedef SimFlowPlant_CoolingTower_TwoSpeed_sequence::iterator SimFlowPlant_CoolingTower_TwoSpeed_iterator;
        typedef SimFlowPlant_CoolingTower_TwoSpeed_sequence::const_iterator SimFlowPlant_CoolingTower_TwoSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_CoolingTower_TwoSpeed_type, char > SimFlowPlant_CoolingTower_TwoSpeed_traits;

        const SimFlowPlant_CoolingTower_TwoSpeed_sequence&
        SimFlowPlant_CoolingTower_TwoSpeed () const;

        SimFlowPlant_CoolingTower_TwoSpeed_sequence&
        SimFlowPlant_CoolingTower_TwoSpeed ();

        void
        SimFlowPlant_CoolingTower_TwoSpeed (const SimFlowPlant_CoolingTower_TwoSpeed_sequence& s);

        // SimFlowPlant_CoolingTower_UserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower_UserDefined SimFlowPlant_CoolingTower_UserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_CoolingTower_UserDefined_type > SimFlowPlant_CoolingTower_UserDefined_sequence;
        typedef SimFlowPlant_CoolingTower_UserDefined_sequence::iterator SimFlowPlant_CoolingTower_UserDefined_iterator;
        typedef SimFlowPlant_CoolingTower_UserDefined_sequence::const_iterator SimFlowPlant_CoolingTower_UserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_CoolingTower_UserDefined_type, char > SimFlowPlant_CoolingTower_UserDefined_traits;

        const SimFlowPlant_CoolingTower_UserDefined_sequence&
        SimFlowPlant_CoolingTower_UserDefined () const;

        SimFlowPlant_CoolingTower_UserDefined_sequence&
        SimFlowPlant_CoolingTower_UserDefined ();

        void
        SimFlowPlant_CoolingTower_UserDefined (const SimFlowPlant_CoolingTower_UserDefined_sequence& s);

        // SimFlowPlant_CoolingTower_VariableSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_CoolingTower_VariableSpeed SimFlowPlant_CoolingTower_VariableSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_CoolingTower_VariableSpeed_type > SimFlowPlant_CoolingTower_VariableSpeed_sequence;
        typedef SimFlowPlant_CoolingTower_VariableSpeed_sequence::iterator SimFlowPlant_CoolingTower_VariableSpeed_iterator;
        typedef SimFlowPlant_CoolingTower_VariableSpeed_sequence::const_iterator SimFlowPlant_CoolingTower_VariableSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_CoolingTower_VariableSpeed_type, char > SimFlowPlant_CoolingTower_VariableSpeed_traits;

        const SimFlowPlant_CoolingTower_VariableSpeed_sequence&
        SimFlowPlant_CoolingTower_VariableSpeed () const;

        SimFlowPlant_CoolingTower_VariableSpeed_sequence&
        SimFlowPlant_CoolingTower_VariableSpeed ();

        void
        SimFlowPlant_CoolingTower_VariableSpeed (const SimFlowPlant_CoolingTower_VariableSpeed_sequence& s);

        // SimFlowPlant_ElectricalGenerator_CombustionTurbine
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_CombustionTurbine SimFlowPlant_ElectricalGenerator_CombustionTurbine_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_CombustionTurbine_type > SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence;
        typedef SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence::iterator SimFlowPlant_ElectricalGenerator_CombustionTurbine_iterator;
        typedef SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence::const_iterator SimFlowPlant_ElectricalGenerator_CombustionTurbine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_CombustionTurbine_type, char > SimFlowPlant_ElectricalGenerator_CombustionTurbine_traits;

        const SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence&
        SimFlowPlant_ElectricalGenerator_CombustionTurbine () const;

        SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence&
        SimFlowPlant_ElectricalGenerator_CombustionTurbine ();

        void
        SimFlowPlant_ElectricalGenerator_CombustionTurbine (const SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence& s);

        // SimFlowPlant_ElectricalGenerator_DefaultGenerator
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_DefaultGenerator SimFlowPlant_ElectricalGenerator_DefaultGenerator_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_DefaultGenerator_type > SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence;
        typedef SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence::iterator SimFlowPlant_ElectricalGenerator_DefaultGenerator_iterator;
        typedef SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence::const_iterator SimFlowPlant_ElectricalGenerator_DefaultGenerator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_DefaultGenerator_type, char > SimFlowPlant_ElectricalGenerator_DefaultGenerator_traits;

        const SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence&
        SimFlowPlant_ElectricalGenerator_DefaultGenerator () const;

        SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence&
        SimFlowPlant_ElectricalGenerator_DefaultGenerator ();

        void
        SimFlowPlant_ElectricalGenerator_DefaultGenerator (const SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCell
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCell SimFlowPlant_ElectricalGenerator_FuelCell_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCell_type > SimFlowPlant_ElectricalGenerator_FuelCell_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCell_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCell_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCell_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCell_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCell_type, char > SimFlowPlant_ElectricalGenerator_FuelCell_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCell_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCell () const;

        SimFlowPlant_ElectricalGenerator_FuelCell_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCell ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCell (const SimFlowPlant_ElectricalGenerator_FuelCell_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellAirSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellAirSupply SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_type > SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_type, char > SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellAirSupply () const;

        SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellAirSupply ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellAirSupply (const SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_type > SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_type, char > SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater () const;

        SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater (const SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_type > SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_type, char > SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage () const;

        SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage (const SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_type > SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_type, char > SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger () const;

        SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger (const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellInverter
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellInverter SimFlowPlant_ElectricalGenerator_FuelCellInverter_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellInverter_type > SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellInverter_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellInverter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellInverter_type, char > SimFlowPlant_ElectricalGenerator_FuelCellInverter_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellInverter () const;

        SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellInverter ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellInverter (const SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellPowerModule
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellPowerModule SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_type > SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_type, char > SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellPowerModule () const;

        SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellPowerModule ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellPowerModule (const SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellStackCooler
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellStackCooler SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_type > SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_type, char > SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellStackCooler () const;

        SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellStackCooler ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellStackCooler (const SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_type > SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_type, char > SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_traits;

        const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply () const;

        SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence&
        SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply ();

        void
        SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply (const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelEquipment
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelEquipment SimFlowPlant_ElectricalGenerator_FuelEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelEquipment_type > SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelEquipment_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelEquipment_type, char > SimFlowPlant_ElectricalGenerator_FuelEquipment_traits;

        const SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence&
        SimFlowPlant_ElectricalGenerator_FuelEquipment () const;

        SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence&
        SimFlowPlant_ElectricalGenerator_FuelEquipment ();

        void
        SimFlowPlant_ElectricalGenerator_FuelEquipment (const SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence& s);

        // SimFlowPlant_ElectricalGenerator_FuelSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_FuelSupply SimFlowPlant_ElectricalGenerator_FuelSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_FuelSupply_type > SimFlowPlant_ElectricalGenerator_FuelSupply_sequence;
        typedef SimFlowPlant_ElectricalGenerator_FuelSupply_sequence::iterator SimFlowPlant_ElectricalGenerator_FuelSupply_iterator;
        typedef SimFlowPlant_ElectricalGenerator_FuelSupply_sequence::const_iterator SimFlowPlant_ElectricalGenerator_FuelSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_FuelSupply_type, char > SimFlowPlant_ElectricalGenerator_FuelSupply_traits;

        const SimFlowPlant_ElectricalGenerator_FuelSupply_sequence&
        SimFlowPlant_ElectricalGenerator_FuelSupply () const;

        SimFlowPlant_ElectricalGenerator_FuelSupply_sequence&
        SimFlowPlant_ElectricalGenerator_FuelSupply ();

        void
        SimFlowPlant_ElectricalGenerator_FuelSupply (const SimFlowPlant_ElectricalGenerator_FuelSupply_sequence& s);

        // SimFlowPlant_ElectricalGenerator_InternalCombustionEngine
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_InternalCombustionEngine SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_type > SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence;
        typedef SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence::iterator SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_iterator;
        typedef SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence::const_iterator SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_type, char > SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_traits;

        const SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence&
        SimFlowPlant_ElectricalGenerator_InternalCombustionEngine () const;

        SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence&
        SimFlowPlant_ElectricalGenerator_InternalCombustionEngine ();

        void
        SimFlowPlant_ElectricalGenerator_InternalCombustionEngine (const SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence& s);

        // SimFlowPlant_ElectricalGenerator_MicroCHP
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_MicroCHP SimFlowPlant_ElectricalGenerator_MicroCHP_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_MicroCHP_type > SimFlowPlant_ElectricalGenerator_MicroCHP_sequence;
        typedef SimFlowPlant_ElectricalGenerator_MicroCHP_sequence::iterator SimFlowPlant_ElectricalGenerator_MicroCHP_iterator;
        typedef SimFlowPlant_ElectricalGenerator_MicroCHP_sequence::const_iterator SimFlowPlant_ElectricalGenerator_MicroCHP_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_MicroCHP_type, char > SimFlowPlant_ElectricalGenerator_MicroCHP_traits;

        const SimFlowPlant_ElectricalGenerator_MicroCHP_sequence&
        SimFlowPlant_ElectricalGenerator_MicroCHP () const;

        SimFlowPlant_ElectricalGenerator_MicroCHP_sequence&
        SimFlowPlant_ElectricalGenerator_MicroCHP ();

        void
        SimFlowPlant_ElectricalGenerator_MicroCHP (const SimFlowPlant_ElectricalGenerator_MicroCHP_sequence& s);

        // SimFlowPlant_ElectricalGenerator_MicroTurbine
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_MicroTurbine SimFlowPlant_ElectricalGenerator_MicroTurbine_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_MicroTurbine_type > SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence;
        typedef SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence::iterator SimFlowPlant_ElectricalGenerator_MicroTurbine_iterator;
        typedef SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence::const_iterator SimFlowPlant_ElectricalGenerator_MicroTurbine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_MicroTurbine_type, char > SimFlowPlant_ElectricalGenerator_MicroTurbine_traits;

        const SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence&
        SimFlowPlant_ElectricalGenerator_MicroTurbine () const;

        SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence&
        SimFlowPlant_ElectricalGenerator_MicroTurbine ();

        void
        SimFlowPlant_ElectricalGenerator_MicroTurbine (const SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence& s);

        // SimFlowPlant_ElectricalGenerator_Photovoltaic
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_Photovoltaic SimFlowPlant_ElectricalGenerator_Photovoltaic_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_Photovoltaic_type > SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence;
        typedef SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence::iterator SimFlowPlant_ElectricalGenerator_Photovoltaic_iterator;
        typedef SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence::const_iterator SimFlowPlant_ElectricalGenerator_Photovoltaic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_Photovoltaic_type, char > SimFlowPlant_ElectricalGenerator_Photovoltaic_traits;

        const SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence&
        SimFlowPlant_ElectricalGenerator_Photovoltaic () const;

        SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence&
        SimFlowPlant_ElectricalGenerator_Photovoltaic ();

        void
        SimFlowPlant_ElectricalGenerator_Photovoltaic (const SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence& s);

        // SimFlowPlant_ElectricalGenerator_WindTurbine
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_ElectricalGenerator_WindTurbine SimFlowPlant_ElectricalGenerator_WindTurbine_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_ElectricalGenerator_WindTurbine_type > SimFlowPlant_ElectricalGenerator_WindTurbine_sequence;
        typedef SimFlowPlant_ElectricalGenerator_WindTurbine_sequence::iterator SimFlowPlant_ElectricalGenerator_WindTurbine_iterator;
        typedef SimFlowPlant_ElectricalGenerator_WindTurbine_sequence::const_iterator SimFlowPlant_ElectricalGenerator_WindTurbine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_ElectricalGenerator_WindTurbine_type, char > SimFlowPlant_ElectricalGenerator_WindTurbine_traits;

        const SimFlowPlant_ElectricalGenerator_WindTurbine_sequence&
        SimFlowPlant_ElectricalGenerator_WindTurbine () const;

        SimFlowPlant_ElectricalGenerator_WindTurbine_sequence&
        SimFlowPlant_ElectricalGenerator_WindTurbine ();

        void
        SimFlowPlant_ElectricalGenerator_WindTurbine (const SimFlowPlant_ElectricalGenerator_WindTurbine_sequence& s);

        // SimFlowPlant_HeatAndPower_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatAndPower_Default SimFlowPlant_HeatAndPower_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatAndPower_Default_type > SimFlowPlant_HeatAndPower_Default_sequence;
        typedef SimFlowPlant_HeatAndPower_Default_sequence::iterator SimFlowPlant_HeatAndPower_Default_iterator;
        typedef SimFlowPlant_HeatAndPower_Default_sequence::const_iterator SimFlowPlant_HeatAndPower_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatAndPower_Default_type, char > SimFlowPlant_HeatAndPower_Default_traits;

        const SimFlowPlant_HeatAndPower_Default_sequence&
        SimFlowPlant_HeatAndPower_Default () const;

        SimFlowPlant_HeatAndPower_Default_sequence&
        SimFlowPlant_HeatAndPower_Default ();

        void
        SimFlowPlant_HeatAndPower_Default (const SimFlowPlant_HeatAndPower_Default_sequence& s);

        // SimFlowPlant_HeatPump_AirToAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_AirToAir SimFlowPlant_HeatPump_AirToAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_AirToAir_type > SimFlowPlant_HeatPump_AirToAir_sequence;
        typedef SimFlowPlant_HeatPump_AirToAir_sequence::iterator SimFlowPlant_HeatPump_AirToAir_iterator;
        typedef SimFlowPlant_HeatPump_AirToAir_sequence::const_iterator SimFlowPlant_HeatPump_AirToAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_AirToAir_type, char > SimFlowPlant_HeatPump_AirToAir_traits;

        const SimFlowPlant_HeatPump_AirToAir_sequence&
        SimFlowPlant_HeatPump_AirToAir () const;

        SimFlowPlant_HeatPump_AirToAir_sequence&
        SimFlowPlant_HeatPump_AirToAir ();

        void
        SimFlowPlant_HeatPump_AirToAir (const SimFlowPlant_HeatPump_AirToAir_sequence& s);

        // SimFlowPlant_HeatPump_AirToAir_MultiSpeed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_AirToAir_MultiSpeed SimFlowPlant_HeatPump_AirToAir_MultiSpeed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_AirToAir_MultiSpeed_type > SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence;
        typedef SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence::iterator SimFlowPlant_HeatPump_AirToAir_MultiSpeed_iterator;
        typedef SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence::const_iterator SimFlowPlant_HeatPump_AirToAir_MultiSpeed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_AirToAir_MultiSpeed_type, char > SimFlowPlant_HeatPump_AirToAir_MultiSpeed_traits;

        const SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence&
        SimFlowPlant_HeatPump_AirToAir_MultiSpeed () const;

        SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence&
        SimFlowPlant_HeatPump_AirToAir_MultiSpeed ();

        void
        SimFlowPlant_HeatPump_AirToAir_MultiSpeed (const SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence& s);

        // SimFlowPlant_HeatPump_GroundSource
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_GroundSource SimFlowPlant_HeatPump_GroundSource_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_GroundSource_type > SimFlowPlant_HeatPump_GroundSource_sequence;
        typedef SimFlowPlant_HeatPump_GroundSource_sequence::iterator SimFlowPlant_HeatPump_GroundSource_iterator;
        typedef SimFlowPlant_HeatPump_GroundSource_sequence::const_iterator SimFlowPlant_HeatPump_GroundSource_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_GroundSource_type, char > SimFlowPlant_HeatPump_GroundSource_traits;

        const SimFlowPlant_HeatPump_GroundSource_sequence&
        SimFlowPlant_HeatPump_GroundSource () const;

        SimFlowPlant_HeatPump_GroundSource_sequence&
        SimFlowPlant_HeatPump_GroundSource ();

        void
        SimFlowPlant_HeatPump_GroundSource (const SimFlowPlant_HeatPump_GroundSource_sequence& s);

        // SimFlowPlant_HeatPump_WaterToAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_WaterToAir SimFlowPlant_HeatPump_WaterToAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_WaterToAir_type > SimFlowPlant_HeatPump_WaterToAir_sequence;
        typedef SimFlowPlant_HeatPump_WaterToAir_sequence::iterator SimFlowPlant_HeatPump_WaterToAir_iterator;
        typedef SimFlowPlant_HeatPump_WaterToAir_sequence::const_iterator SimFlowPlant_HeatPump_WaterToAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_WaterToAir_type, char > SimFlowPlant_HeatPump_WaterToAir_traits;

        const SimFlowPlant_HeatPump_WaterToAir_sequence&
        SimFlowPlant_HeatPump_WaterToAir () const;

        SimFlowPlant_HeatPump_WaterToAir_sequence&
        SimFlowPlant_HeatPump_WaterToAir ();

        void
        SimFlowPlant_HeatPump_WaterToAir (const SimFlowPlant_HeatPump_WaterToAir_sequence& s);

        // SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_type > SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence;
        typedef SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence::iterator SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_iterator;
        typedef SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence::const_iterator SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_type, char > SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_traits;

        const SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence&
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling () const;

        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence&
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling ();

        void
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling (const SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence& s);

        // SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_type > SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence;
        typedef SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence::iterator SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_iterator;
        typedef SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence::const_iterator SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_type, char > SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_traits;

        const SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence&
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating () const;

        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence&
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating ();

        void
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating (const SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence& s);

        // SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_type > SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence;
        typedef SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence::iterator SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_iterator;
        typedef SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence::const_iterator SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_type, char > SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_traits;

        const SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence&
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling () const;

        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence&
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling ();

        void
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling (const SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence& s);

        // SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_type > SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence;
        typedef SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence::iterator SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_iterator;
        typedef SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence::const_iterator SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_type, char > SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_traits;

        const SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence&
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating () const;

        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence&
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating ();

        void
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating (const SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence& s);

        // SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_type > SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence;
        typedef SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence::iterator SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_iterator;
        typedef SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence::const_iterator SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_type, char > SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_traits;

        const SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence&
        SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage () const;

        SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence&
        SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage ();

        void
        SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage (const SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence& s);

        // SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_type > SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence;
        typedef SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence::iterator SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_iterator;
        typedef SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence::const_iterator SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_type, char > SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_traits;

        const SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence&
        SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage () const;

        SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence&
        SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage ();

        void
        SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage (const SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence& s);

        // SimFlowPlant_SolarDevice_SolarPhotoVoltaic
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarPhotoVoltaic SimFlowPlant_SolarDevice_SolarPhotoVoltaic_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarPhotoVoltaic_type > SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence;
        typedef SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence::iterator SimFlowPlant_SolarDevice_SolarPhotoVoltaic_iterator;
        typedef SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence::const_iterator SimFlowPlant_SolarDevice_SolarPhotoVoltaic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarPhotoVoltaic_type, char > SimFlowPlant_SolarDevice_SolarPhotoVoltaic_traits;

        const SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence&
        SimFlowPlant_SolarDevice_SolarPhotoVoltaic () const;

        SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence&
        SimFlowPlant_SolarDevice_SolarPhotoVoltaic ();

        void
        SimFlowPlant_SolarDevice_SolarPhotoVoltaic (const SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence& s);

        // SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_type > SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence;
        typedef SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence::iterator SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_iterator;
        typedef SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence::const_iterator SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_type, char > SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_traits;

        const SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence&
        SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal () const;

        SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence&
        SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal ();

        void
        SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal (const SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence& s);

        // SimFlowPlant_SolarDevice_SolarThermalAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarThermalAir SimFlowPlant_SolarDevice_SolarThermalAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarThermalAir_type > SimFlowPlant_SolarDevice_SolarThermalAir_sequence;
        typedef SimFlowPlant_SolarDevice_SolarThermalAir_sequence::iterator SimFlowPlant_SolarDevice_SolarThermalAir_iterator;
        typedef SimFlowPlant_SolarDevice_SolarThermalAir_sequence::const_iterator SimFlowPlant_SolarDevice_SolarThermalAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarThermalAir_type, char > SimFlowPlant_SolarDevice_SolarThermalAir_traits;

        const SimFlowPlant_SolarDevice_SolarThermalAir_sequence&
        SimFlowPlant_SolarDevice_SolarThermalAir () const;

        SimFlowPlant_SolarDevice_SolarThermalAir_sequence&
        SimFlowPlant_SolarDevice_SolarThermalAir ();

        void
        SimFlowPlant_SolarDevice_SolarThermalAir (const SimFlowPlant_SolarDevice_SolarThermalAir_sequence& s);

        // SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_type > SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence;
        typedef SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence::iterator SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_iterator;
        typedef SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence::const_iterator SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_type, char > SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_traits;

        const SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence&
        SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem () const;

        SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence&
        SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem ();

        void
        SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem (const SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence& s);

        // SimFlowPlant_SolarDevice_SolarThermalWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowPlant_SolarDevice_SolarThermalWater SimFlowPlant_SolarDevice_SolarThermalWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowPlant_SolarDevice_SolarThermalWater_type > SimFlowPlant_SolarDevice_SolarThermalWater_sequence;
        typedef SimFlowPlant_SolarDevice_SolarThermalWater_sequence::iterator SimFlowPlant_SolarDevice_SolarThermalWater_iterator;
        typedef SimFlowPlant_SolarDevice_SolarThermalWater_sequence::const_iterator SimFlowPlant_SolarDevice_SolarThermalWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowPlant_SolarDevice_SolarThermalWater_type, char > SimFlowPlant_SolarDevice_SolarThermalWater_traits;

        const SimFlowPlant_SolarDevice_SolarThermalWater_sequence&
        SimFlowPlant_SolarDevice_SolarThermalWater () const;

        SimFlowPlant_SolarDevice_SolarThermalWater_sequence&
        SimFlowPlant_SolarDevice_SolarThermalWater ();

        void
        SimFlowPlant_SolarDevice_SolarThermalWater (const SimFlowPlant_SolarDevice_SolarThermalWater_sequence& s);

        // SimFlowSegment_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Default_Default SimFlowSegment_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Default_Default_type > SimFlowSegment_Default_Default_sequence;
        typedef SimFlowSegment_Default_Default_sequence::iterator SimFlowSegment_Default_Default_iterator;
        typedef SimFlowSegment_Default_Default_sequence::const_iterator SimFlowSegment_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Default_Default_type, char > SimFlowSegment_Default_Default_traits;

        const SimFlowSegment_Default_Default_sequence&
        SimFlowSegment_Default_Default () const;

        SimFlowSegment_Default_Default_sequence&
        SimFlowSegment_Default_Default ();

        void
        SimFlowSegment_Default_Default (const SimFlowSegment_Default_Default_sequence& s);

        // SimFlowSegment_Duct_AirFlowNetworkDistribution
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Duct_AirFlowNetworkDistribution SimFlowSegment_Duct_AirFlowNetworkDistribution_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Duct_AirFlowNetworkDistribution_type > SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence;
        typedef SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence::iterator SimFlowSegment_Duct_AirFlowNetworkDistribution_iterator;
        typedef SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence::const_iterator SimFlowSegment_Duct_AirFlowNetworkDistribution_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Duct_AirFlowNetworkDistribution_type, char > SimFlowSegment_Duct_AirFlowNetworkDistribution_traits;

        const SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence&
        SimFlowSegment_Duct_AirFlowNetworkDistribution () const;

        SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence&
        SimFlowSegment_Duct_AirFlowNetworkDistribution ();

        void
        SimFlowSegment_Duct_AirFlowNetworkDistribution (const SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence& s);

        // SimFlowSegment_Duct_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Duct_Default SimFlowSegment_Duct_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Duct_Default_type > SimFlowSegment_Duct_Default_sequence;
        typedef SimFlowSegment_Duct_Default_sequence::iterator SimFlowSegment_Duct_Default_iterator;
        typedef SimFlowSegment_Duct_Default_sequence::const_iterator SimFlowSegment_Duct_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Duct_Default_type, char > SimFlowSegment_Duct_Default_traits;

        const SimFlowSegment_Duct_Default_sequence&
        SimFlowSegment_Duct_Default () const;

        SimFlowSegment_Duct_Default_sequence&
        SimFlowSegment_Duct_Default ();

        void
        SimFlowSegment_Duct_Default (const SimFlowSegment_Duct_Default_sequence& s);

        // SimFlowSegment_Filter_Bag
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Filter_Bag SimFlowSegment_Filter_Bag_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Filter_Bag_type > SimFlowSegment_Filter_Bag_sequence;
        typedef SimFlowSegment_Filter_Bag_sequence::iterator SimFlowSegment_Filter_Bag_iterator;
        typedef SimFlowSegment_Filter_Bag_sequence::const_iterator SimFlowSegment_Filter_Bag_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Filter_Bag_type, char > SimFlowSegment_Filter_Bag_traits;

        const SimFlowSegment_Filter_Bag_sequence&
        SimFlowSegment_Filter_Bag () const;

        SimFlowSegment_Filter_Bag_sequence&
        SimFlowSegment_Filter_Bag ();

        void
        SimFlowSegment_Filter_Bag (const SimFlowSegment_Filter_Bag_sequence& s);

        // SimFlowSegment_Filter_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Filter_Default SimFlowSegment_Filter_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Filter_Default_type > SimFlowSegment_Filter_Default_sequence;
        typedef SimFlowSegment_Filter_Default_sequence::iterator SimFlowSegment_Filter_Default_iterator;
        typedef SimFlowSegment_Filter_Default_sequence::const_iterator SimFlowSegment_Filter_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Filter_Default_type, char > SimFlowSegment_Filter_Default_traits;

        const SimFlowSegment_Filter_Default_sequence&
        SimFlowSegment_Filter_Default () const;

        SimFlowSegment_Filter_Default_sequence&
        SimFlowSegment_Filter_Default ();

        void
        SimFlowSegment_Filter_Default (const SimFlowSegment_Filter_Default_sequence& s);

        // SimFlowSegment_Filter_Electrostatic
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Filter_Electrostatic SimFlowSegment_Filter_Electrostatic_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Filter_Electrostatic_type > SimFlowSegment_Filter_Electrostatic_sequence;
        typedef SimFlowSegment_Filter_Electrostatic_sequence::iterator SimFlowSegment_Filter_Electrostatic_iterator;
        typedef SimFlowSegment_Filter_Electrostatic_sequence::const_iterator SimFlowSegment_Filter_Electrostatic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Filter_Electrostatic_type, char > SimFlowSegment_Filter_Electrostatic_traits;

        const SimFlowSegment_Filter_Electrostatic_sequence&
        SimFlowSegment_Filter_Electrostatic () const;

        SimFlowSegment_Filter_Electrostatic_sequence&
        SimFlowSegment_Filter_Electrostatic ();

        void
        SimFlowSegment_Filter_Electrostatic (const SimFlowSegment_Filter_Electrostatic_sequence& s);

        // SimFlowSegment_Filter_HEPA
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Filter_HEPA SimFlowSegment_Filter_HEPA_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Filter_HEPA_type > SimFlowSegment_Filter_HEPA_sequence;
        typedef SimFlowSegment_Filter_HEPA_sequence::iterator SimFlowSegment_Filter_HEPA_iterator;
        typedef SimFlowSegment_Filter_HEPA_sequence::const_iterator SimFlowSegment_Filter_HEPA_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Filter_HEPA_type, char > SimFlowSegment_Filter_HEPA_traits;

        const SimFlowSegment_Filter_HEPA_sequence&
        SimFlowSegment_Filter_HEPA () const;

        SimFlowSegment_Filter_HEPA_sequence&
        SimFlowSegment_Filter_HEPA ();

        void
        SimFlowSegment_Filter_HEPA (const SimFlowSegment_Filter_HEPA_sequence& s);

        // SimFlowSegment_Filter_Panel
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Filter_Panel SimFlowSegment_Filter_Panel_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Filter_Panel_type > SimFlowSegment_Filter_Panel_sequence;
        typedef SimFlowSegment_Filter_Panel_sequence::iterator SimFlowSegment_Filter_Panel_iterator;
        typedef SimFlowSegment_Filter_Panel_sequence::const_iterator SimFlowSegment_Filter_Panel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Filter_Panel_type, char > SimFlowSegment_Filter_Panel_traits;

        const SimFlowSegment_Filter_Panel_sequence&
        SimFlowSegment_Filter_Panel () const;

        SimFlowSegment_Filter_Panel_sequence&
        SimFlowSegment_Filter_Panel ();

        void
        SimFlowSegment_Filter_Panel (const SimFlowSegment_Filter_Panel_sequence& s);

        // SimFlowSegment_Grill_Return
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Grill_Return SimFlowSegment_Grill_Return_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Grill_Return_type > SimFlowSegment_Grill_Return_sequence;
        typedef SimFlowSegment_Grill_Return_sequence::iterator SimFlowSegment_Grill_Return_iterator;
        typedef SimFlowSegment_Grill_Return_sequence::const_iterator SimFlowSegment_Grill_Return_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Grill_Return_type, char > SimFlowSegment_Grill_Return_traits;

        const SimFlowSegment_Grill_Return_sequence&
        SimFlowSegment_Grill_Return () const;

        SimFlowSegment_Grill_Return_sequence&
        SimFlowSegment_Grill_Return ();

        void
        SimFlowSegment_Grill_Return (const SimFlowSegment_Grill_Return_sequence& s);

        // SimFlowSegment_Grill_Supply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Grill_Supply SimFlowSegment_Grill_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Grill_Supply_type > SimFlowSegment_Grill_Supply_sequence;
        typedef SimFlowSegment_Grill_Supply_sequence::iterator SimFlowSegment_Grill_Supply_iterator;
        typedef SimFlowSegment_Grill_Supply_sequence::const_iterator SimFlowSegment_Grill_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Grill_Supply_type, char > SimFlowSegment_Grill_Supply_traits;

        const SimFlowSegment_Grill_Supply_sequence&
        SimFlowSegment_Grill_Supply () const;

        SimFlowSegment_Grill_Supply_sequence&
        SimFlowSegment_Grill_Supply ();

        void
        SimFlowSegment_Grill_Supply (const SimFlowSegment_Grill_Supply_sequence& s);

        // SimFlowSegment_Louver_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Louver_Default SimFlowSegment_Louver_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Louver_Default_type > SimFlowSegment_Louver_Default_sequence;
        typedef SimFlowSegment_Louver_Default_sequence::iterator SimFlowSegment_Louver_Default_iterator;
        typedef SimFlowSegment_Louver_Default_sequence::const_iterator SimFlowSegment_Louver_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Louver_Default_type, char > SimFlowSegment_Louver_Default_traits;

        const SimFlowSegment_Louver_Default_sequence&
        SimFlowSegment_Louver_Default () const;

        SimFlowSegment_Louver_Default_sequence&
        SimFlowSegment_Louver_Default ();

        void
        SimFlowSegment_Louver_Default (const SimFlowSegment_Louver_Default_sequence& s);

        // SimFlowSegment_Louver_Exhaust
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Louver_Exhaust SimFlowSegment_Louver_Exhaust_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Louver_Exhaust_type > SimFlowSegment_Louver_Exhaust_sequence;
        typedef SimFlowSegment_Louver_Exhaust_sequence::iterator SimFlowSegment_Louver_Exhaust_iterator;
        typedef SimFlowSegment_Louver_Exhaust_sequence::const_iterator SimFlowSegment_Louver_Exhaust_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Louver_Exhaust_type, char > SimFlowSegment_Louver_Exhaust_traits;

        const SimFlowSegment_Louver_Exhaust_sequence&
        SimFlowSegment_Louver_Exhaust () const;

        SimFlowSegment_Louver_Exhaust_sequence&
        SimFlowSegment_Louver_Exhaust ();

        void
        SimFlowSegment_Louver_Exhaust (const SimFlowSegment_Louver_Exhaust_sequence& s);

        // SimFlowSegment_Louver_Intake
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Louver_Intake SimFlowSegment_Louver_Intake_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Louver_Intake_type > SimFlowSegment_Louver_Intake_sequence;
        typedef SimFlowSegment_Louver_Intake_sequence::iterator SimFlowSegment_Louver_Intake_iterator;
        typedef SimFlowSegment_Louver_Intake_sequence::const_iterator SimFlowSegment_Louver_Intake_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Louver_Intake_type, char > SimFlowSegment_Louver_Intake_traits;

        const SimFlowSegment_Louver_Intake_sequence&
        SimFlowSegment_Louver_Intake () const;

        SimFlowSegment_Louver_Intake_sequence&
        SimFlowSegment_Louver_Intake ();

        void
        SimFlowSegment_Louver_Intake (const SimFlowSegment_Louver_Intake_sequence& s);

        // SimFlowSegment_Louver_Safety
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Louver_Safety SimFlowSegment_Louver_Safety_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Louver_Safety_type > SimFlowSegment_Louver_Safety_sequence;
        typedef SimFlowSegment_Louver_Safety_sequence::iterator SimFlowSegment_Louver_Safety_iterator;
        typedef SimFlowSegment_Louver_Safety_sequence::const_iterator SimFlowSegment_Louver_Safety_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Louver_Safety_type, char > SimFlowSegment_Louver_Safety_traits;

        const SimFlowSegment_Louver_Safety_sequence&
        SimFlowSegment_Louver_Safety () const;

        SimFlowSegment_Louver_Safety_sequence&
        SimFlowSegment_Louver_Safety ();

        void
        SimFlowSegment_Louver_Safety (const SimFlowSegment_Louver_Safety_sequence& s);

        // SimFlowSegment_Louver_Ventilation
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Louver_Ventilation SimFlowSegment_Louver_Ventilation_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Louver_Ventilation_type > SimFlowSegment_Louver_Ventilation_sequence;
        typedef SimFlowSegment_Louver_Ventilation_sequence::iterator SimFlowSegment_Louver_Ventilation_iterator;
        typedef SimFlowSegment_Louver_Ventilation_sequence::const_iterator SimFlowSegment_Louver_Ventilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Louver_Ventilation_type, char > SimFlowSegment_Louver_Ventilation_traits;

        const SimFlowSegment_Louver_Ventilation_sequence&
        SimFlowSegment_Louver_Ventilation () const;

        SimFlowSegment_Louver_Ventilation_sequence&
        SimFlowSegment_Louver_Ventilation ();

        void
        SimFlowSegment_Louver_Ventilation (const SimFlowSegment_Louver_Ventilation_sequence& s);

        // SimFlowSegment_Pipe_Adiabatic
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Pipe_Adiabatic SimFlowSegment_Pipe_Adiabatic_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Pipe_Adiabatic_type > SimFlowSegment_Pipe_Adiabatic_sequence;
        typedef SimFlowSegment_Pipe_Adiabatic_sequence::iterator SimFlowSegment_Pipe_Adiabatic_iterator;
        typedef SimFlowSegment_Pipe_Adiabatic_sequence::const_iterator SimFlowSegment_Pipe_Adiabatic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Pipe_Adiabatic_type, char > SimFlowSegment_Pipe_Adiabatic_traits;

        const SimFlowSegment_Pipe_Adiabatic_sequence&
        SimFlowSegment_Pipe_Adiabatic () const;

        SimFlowSegment_Pipe_Adiabatic_sequence&
        SimFlowSegment_Pipe_Adiabatic ();

        void
        SimFlowSegment_Pipe_Adiabatic (const SimFlowSegment_Pipe_Adiabatic_sequence& s);

        // SimFlowSegment_Pipe_Adiabatic_Steam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Pipe_Adiabatic_Steam SimFlowSegment_Pipe_Adiabatic_Steam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Pipe_Adiabatic_Steam_type > SimFlowSegment_Pipe_Adiabatic_Steam_sequence;
        typedef SimFlowSegment_Pipe_Adiabatic_Steam_sequence::iterator SimFlowSegment_Pipe_Adiabatic_Steam_iterator;
        typedef SimFlowSegment_Pipe_Adiabatic_Steam_sequence::const_iterator SimFlowSegment_Pipe_Adiabatic_Steam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Pipe_Adiabatic_Steam_type, char > SimFlowSegment_Pipe_Adiabatic_Steam_traits;

        const SimFlowSegment_Pipe_Adiabatic_Steam_sequence&
        SimFlowSegment_Pipe_Adiabatic_Steam () const;

        SimFlowSegment_Pipe_Adiabatic_Steam_sequence&
        SimFlowSegment_Pipe_Adiabatic_Steam ();

        void
        SimFlowSegment_Pipe_Adiabatic_Steam (const SimFlowSegment_Pipe_Adiabatic_Steam_sequence& s);

        // SimFlowSegment_Pipe_Indoor
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Pipe_Indoor SimFlowSegment_Pipe_Indoor_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Pipe_Indoor_type > SimFlowSegment_Pipe_Indoor_sequence;
        typedef SimFlowSegment_Pipe_Indoor_sequence::iterator SimFlowSegment_Pipe_Indoor_iterator;
        typedef SimFlowSegment_Pipe_Indoor_sequence::const_iterator SimFlowSegment_Pipe_Indoor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Pipe_Indoor_type, char > SimFlowSegment_Pipe_Indoor_traits;

        const SimFlowSegment_Pipe_Indoor_sequence&
        SimFlowSegment_Pipe_Indoor () const;

        SimFlowSegment_Pipe_Indoor_sequence&
        SimFlowSegment_Pipe_Indoor ();

        void
        SimFlowSegment_Pipe_Indoor (const SimFlowSegment_Pipe_Indoor_sequence& s);

        // SimFlowSegment_Pipe_Outdoor
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Pipe_Outdoor SimFlowSegment_Pipe_Outdoor_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Pipe_Outdoor_type > SimFlowSegment_Pipe_Outdoor_sequence;
        typedef SimFlowSegment_Pipe_Outdoor_sequence::iterator SimFlowSegment_Pipe_Outdoor_iterator;
        typedef SimFlowSegment_Pipe_Outdoor_sequence::const_iterator SimFlowSegment_Pipe_Outdoor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Pipe_Outdoor_type, char > SimFlowSegment_Pipe_Outdoor_traits;

        const SimFlowSegment_Pipe_Outdoor_sequence&
        SimFlowSegment_Pipe_Outdoor () const;

        SimFlowSegment_Pipe_Outdoor_sequence&
        SimFlowSegment_Pipe_Outdoor ();

        void
        SimFlowSegment_Pipe_Outdoor (const SimFlowSegment_Pipe_Outdoor_sequence& s);

        // SimFlowSegment_Pipe_Underground
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Pipe_Underground SimFlowSegment_Pipe_Underground_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Pipe_Underground_type > SimFlowSegment_Pipe_Underground_sequence;
        typedef SimFlowSegment_Pipe_Underground_sequence::iterator SimFlowSegment_Pipe_Underground_iterator;
        typedef SimFlowSegment_Pipe_Underground_sequence::const_iterator SimFlowSegment_Pipe_Underground_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Pipe_Underground_type, char > SimFlowSegment_Pipe_Underground_traits;

        const SimFlowSegment_Pipe_Underground_sequence&
        SimFlowSegment_Pipe_Underground () const;

        SimFlowSegment_Pipe_Underground_sequence&
        SimFlowSegment_Pipe_Underground ();

        void
        SimFlowSegment_Pipe_Underground (const SimFlowSegment_Pipe_Underground_sequence& s);

        // SimFlowSegment_Pipe_UndergroundPipeSegment
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Pipe_UndergroundPipeSegment SimFlowSegment_Pipe_UndergroundPipeSegment_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Pipe_UndergroundPipeSegment_type > SimFlowSegment_Pipe_UndergroundPipeSegment_sequence;
        typedef SimFlowSegment_Pipe_UndergroundPipeSegment_sequence::iterator SimFlowSegment_Pipe_UndergroundPipeSegment_iterator;
        typedef SimFlowSegment_Pipe_UndergroundPipeSegment_sequence::const_iterator SimFlowSegment_Pipe_UndergroundPipeSegment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Pipe_UndergroundPipeSegment_type, char > SimFlowSegment_Pipe_UndergroundPipeSegment_traits;

        const SimFlowSegment_Pipe_UndergroundPipeSegment_sequence&
        SimFlowSegment_Pipe_UndergroundPipeSegment () const;

        SimFlowSegment_Pipe_UndergroundPipeSegment_sequence&
        SimFlowSegment_Pipe_UndergroundPipeSegment ();

        void
        SimFlowSegment_Pipe_UndergroundPipeSegment (const SimFlowSegment_Pipe_UndergroundPipeSegment_sequence& s);

        // SimFlowSegment_Plenum_DedicatedReturn
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Plenum_DedicatedReturn SimFlowSegment_Plenum_DedicatedReturn_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Plenum_DedicatedReturn_type > SimFlowSegment_Plenum_DedicatedReturn_sequence;
        typedef SimFlowSegment_Plenum_DedicatedReturn_sequence::iterator SimFlowSegment_Plenum_DedicatedReturn_iterator;
        typedef SimFlowSegment_Plenum_DedicatedReturn_sequence::const_iterator SimFlowSegment_Plenum_DedicatedReturn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Plenum_DedicatedReturn_type, char > SimFlowSegment_Plenum_DedicatedReturn_traits;

        const SimFlowSegment_Plenum_DedicatedReturn_sequence&
        SimFlowSegment_Plenum_DedicatedReturn () const;

        SimFlowSegment_Plenum_DedicatedReturn_sequence&
        SimFlowSegment_Plenum_DedicatedReturn ();

        void
        SimFlowSegment_Plenum_DedicatedReturn (const SimFlowSegment_Plenum_DedicatedReturn_sequence& s);

        // SimFlowSegment_Plenum_DedicatedSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Plenum_DedicatedSupply SimFlowSegment_Plenum_DedicatedSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Plenum_DedicatedSupply_type > SimFlowSegment_Plenum_DedicatedSupply_sequence;
        typedef SimFlowSegment_Plenum_DedicatedSupply_sequence::iterator SimFlowSegment_Plenum_DedicatedSupply_iterator;
        typedef SimFlowSegment_Plenum_DedicatedSupply_sequence::const_iterator SimFlowSegment_Plenum_DedicatedSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Plenum_DedicatedSupply_type, char > SimFlowSegment_Plenum_DedicatedSupply_traits;

        const SimFlowSegment_Plenum_DedicatedSupply_sequence&
        SimFlowSegment_Plenum_DedicatedSupply () const;

        SimFlowSegment_Plenum_DedicatedSupply_sequence&
        SimFlowSegment_Plenum_DedicatedSupply ();

        void
        SimFlowSegment_Plenum_DedicatedSupply (const SimFlowSegment_Plenum_DedicatedSupply_sequence& s);

        // SimFlowSegment_Plenum_SharedReturn
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Plenum_SharedReturn SimFlowSegment_Plenum_SharedReturn_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Plenum_SharedReturn_type > SimFlowSegment_Plenum_SharedReturn_sequence;
        typedef SimFlowSegment_Plenum_SharedReturn_sequence::iterator SimFlowSegment_Plenum_SharedReturn_iterator;
        typedef SimFlowSegment_Plenum_SharedReturn_sequence::const_iterator SimFlowSegment_Plenum_SharedReturn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Plenum_SharedReturn_type, char > SimFlowSegment_Plenum_SharedReturn_traits;

        const SimFlowSegment_Plenum_SharedReturn_sequence&
        SimFlowSegment_Plenum_SharedReturn () const;

        SimFlowSegment_Plenum_SharedReturn_sequence&
        SimFlowSegment_Plenum_SharedReturn ();

        void
        SimFlowSegment_Plenum_SharedReturn (const SimFlowSegment_Plenum_SharedReturn_sequence& s);

        // SimFlowSegment_Plenum_SharedSupply
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Plenum_SharedSupply SimFlowSegment_Plenum_SharedSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Plenum_SharedSupply_type > SimFlowSegment_Plenum_SharedSupply_sequence;
        typedef SimFlowSegment_Plenum_SharedSupply_sequence::iterator SimFlowSegment_Plenum_SharedSupply_iterator;
        typedef SimFlowSegment_Plenum_SharedSupply_sequence::const_iterator SimFlowSegment_Plenum_SharedSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Plenum_SharedSupply_type, char > SimFlowSegment_Plenum_SharedSupply_traits;

        const SimFlowSegment_Plenum_SharedSupply_sequence&
        SimFlowSegment_Plenum_SharedSupply () const;

        SimFlowSegment_Plenum_SharedSupply_sequence&
        SimFlowSegment_Plenum_SharedSupply ();

        void
        SimFlowSegment_Plenum_SharedSupply (const SimFlowSegment_Plenum_SharedSupply_sequence& s);

        // SimFlowSegment_VirtualComponent_ConstantPressureDrop
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_VirtualComponent_ConstantPressureDrop SimFlowSegment_VirtualComponent_ConstantPressureDrop_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_VirtualComponent_ConstantPressureDrop_type > SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence;
        typedef SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence::iterator SimFlowSegment_VirtualComponent_ConstantPressureDrop_iterator;
        typedef SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence::const_iterator SimFlowSegment_VirtualComponent_ConstantPressureDrop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_VirtualComponent_ConstantPressureDrop_type, char > SimFlowSegment_VirtualComponent_ConstantPressureDrop_traits;

        const SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence&
        SimFlowSegment_VirtualComponent_ConstantPressureDrop () const;

        SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence&
        SimFlowSegment_VirtualComponent_ConstantPressureDrop ();

        void
        SimFlowSegment_VirtualComponent_ConstantPressureDrop (const SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence& s);

        // SimFlowSegment_VirtualComponent_Leak
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_VirtualComponent_Leak SimFlowSegment_VirtualComponent_Leak_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_VirtualComponent_Leak_type > SimFlowSegment_VirtualComponent_Leak_sequence;
        typedef SimFlowSegment_VirtualComponent_Leak_sequence::iterator SimFlowSegment_VirtualComponent_Leak_iterator;
        typedef SimFlowSegment_VirtualComponent_Leak_sequence::const_iterator SimFlowSegment_VirtualComponent_Leak_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_VirtualComponent_Leak_type, char > SimFlowSegment_VirtualComponent_Leak_traits;

        const SimFlowSegment_VirtualComponent_Leak_sequence&
        SimFlowSegment_VirtualComponent_Leak () const;

        SimFlowSegment_VirtualComponent_Leak_sequence&
        SimFlowSegment_VirtualComponent_Leak ();

        void
        SimFlowSegment_VirtualComponent_Leak (const SimFlowSegment_VirtualComponent_Leak_sequence& s);

        // SimFlowSegment_VirtualComponent_LeakageRatio
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_VirtualComponent_LeakageRatio SimFlowSegment_VirtualComponent_LeakageRatio_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_VirtualComponent_LeakageRatio_type > SimFlowSegment_VirtualComponent_LeakageRatio_sequence;
        typedef SimFlowSegment_VirtualComponent_LeakageRatio_sequence::iterator SimFlowSegment_VirtualComponent_LeakageRatio_iterator;
        typedef SimFlowSegment_VirtualComponent_LeakageRatio_sequence::const_iterator SimFlowSegment_VirtualComponent_LeakageRatio_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_VirtualComponent_LeakageRatio_type, char > SimFlowSegment_VirtualComponent_LeakageRatio_traits;

        const SimFlowSegment_VirtualComponent_LeakageRatio_sequence&
        SimFlowSegment_VirtualComponent_LeakageRatio () const;

        SimFlowSegment_VirtualComponent_LeakageRatio_sequence&
        SimFlowSegment_VirtualComponent_LeakageRatio ();

        void
        SimFlowSegment_VirtualComponent_LeakageRatio (const SimFlowSegment_VirtualComponent_LeakageRatio_sequence& s);

        // SimFlowSegment_Wire_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowSegment_Wire_Default SimFlowSegment_Wire_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowSegment_Wire_Default_type > SimFlowSegment_Wire_Default_sequence;
        typedef SimFlowSegment_Wire_Default_sequence::iterator SimFlowSegment_Wire_Default_iterator;
        typedef SimFlowSegment_Wire_Default_sequence::const_iterator SimFlowSegment_Wire_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowSegment_Wire_Default_type, char > SimFlowSegment_Wire_Default_traits;

        const SimFlowSegment_Wire_Default_sequence&
        SimFlowSegment_Wire_Default () const;

        SimFlowSegment_Wire_Default_sequence&
        SimFlowSegment_Wire_Default ();

        void
        SimFlowSegment_Wire_Default (const SimFlowSegment_Wire_Default_sequence& s);

        // SimFlowStorage_ElectricalStorage_BatteryBank
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_ElectricalStorage_BatteryBank SimFlowStorage_ElectricalStorage_BatteryBank_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_ElectricalStorage_BatteryBank_type > SimFlowStorage_ElectricalStorage_BatteryBank_sequence;
        typedef SimFlowStorage_ElectricalStorage_BatteryBank_sequence::iterator SimFlowStorage_ElectricalStorage_BatteryBank_iterator;
        typedef SimFlowStorage_ElectricalStorage_BatteryBank_sequence::const_iterator SimFlowStorage_ElectricalStorage_BatteryBank_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_ElectricalStorage_BatteryBank_type, char > SimFlowStorage_ElectricalStorage_BatteryBank_traits;

        const SimFlowStorage_ElectricalStorage_BatteryBank_sequence&
        SimFlowStorage_ElectricalStorage_BatteryBank () const;

        SimFlowStorage_ElectricalStorage_BatteryBank_sequence&
        SimFlowStorage_ElectricalStorage_BatteryBank ();

        void
        SimFlowStorage_ElectricalStorage_BatteryBank (const SimFlowStorage_ElectricalStorage_BatteryBank_sequence& s);

        // SimFlowStorage_ElectricalStorage_DefaultElectricalStorage
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_ElectricalStorage_DefaultElectricalStorage SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_type > SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence;
        typedef SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence::iterator SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_iterator;
        typedef SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence::const_iterator SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_type, char > SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_traits;

        const SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence&
        SimFlowStorage_ElectricalStorage_DefaultElectricalStorage () const;

        SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence&
        SimFlowStorage_ElectricalStorage_DefaultElectricalStorage ();

        void
        SimFlowStorage_ElectricalStorage_DefaultElectricalStorage (const SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence& s);

        // SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_type > SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence::iterator SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_iterator;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence::const_iterator SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_type, char > SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_traits;

        const SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed () const;

        SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed ();

        void
        SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed (const SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence& s);

        // SimFlowStorage_ThermalStorage_ThermalStorageIceSimple
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_ThermalStorage_ThermalStorageIceSimple SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_type > SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence::iterator SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_iterator;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence::const_iterator SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_type, char > SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_traits;

        const SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageIceSimple () const;

        SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageIceSimple ();

        void
        SimFlowStorage_ThermalStorage_ThermalStorageIceSimple (const SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence& s);

        // SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_type > SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence::iterator SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_iterator;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence::const_iterator SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_type, char > SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_traits;

        const SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed () const;

        SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed ();

        void
        SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed (const SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence& s);

        // SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_type > SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence::iterator SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_iterator;
        typedef SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence::const_iterator SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_type, char > SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_traits;

        const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified () const;

        SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence&
        SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified ();

        void
        SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified (const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence& s);

        // SimFlowStorage_WaterStorage_CleanWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_WaterStorage_CleanWater SimFlowStorage_WaterStorage_CleanWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_WaterStorage_CleanWater_type > SimFlowStorage_WaterStorage_CleanWater_sequence;
        typedef SimFlowStorage_WaterStorage_CleanWater_sequence::iterator SimFlowStorage_WaterStorage_CleanWater_iterator;
        typedef SimFlowStorage_WaterStorage_CleanWater_sequence::const_iterator SimFlowStorage_WaterStorage_CleanWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_WaterStorage_CleanWater_type, char > SimFlowStorage_WaterStorage_CleanWater_traits;

        const SimFlowStorage_WaterStorage_CleanWater_sequence&
        SimFlowStorage_WaterStorage_CleanWater () const;

        SimFlowStorage_WaterStorage_CleanWater_sequence&
        SimFlowStorage_WaterStorage_CleanWater ();

        void
        SimFlowStorage_WaterStorage_CleanWater (const SimFlowStorage_WaterStorage_CleanWater_sequence& s);

        // SimFlowStorage_WaterStorage_GrayWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_WaterStorage_GrayWater SimFlowStorage_WaterStorage_GrayWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_WaterStorage_GrayWater_type > SimFlowStorage_WaterStorage_GrayWater_sequence;
        typedef SimFlowStorage_WaterStorage_GrayWater_sequence::iterator SimFlowStorage_WaterStorage_GrayWater_iterator;
        typedef SimFlowStorage_WaterStorage_GrayWater_sequence::const_iterator SimFlowStorage_WaterStorage_GrayWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_WaterStorage_GrayWater_type, char > SimFlowStorage_WaterStorage_GrayWater_traits;

        const SimFlowStorage_WaterStorage_GrayWater_sequence&
        SimFlowStorage_WaterStorage_GrayWater () const;

        SimFlowStorage_WaterStorage_GrayWater_sequence&
        SimFlowStorage_WaterStorage_GrayWater ();

        void
        SimFlowStorage_WaterStorage_GrayWater (const SimFlowStorage_WaterStorage_GrayWater_sequence& s);

        // SimFlowStorage_WaterStorage_RainWater
        //
        typedef ::namespaces::Sim::MepModel::SimFlowStorage_WaterStorage_RainWater SimFlowStorage_WaterStorage_RainWater_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowStorage_WaterStorage_RainWater_type > SimFlowStorage_WaterStorage_RainWater_sequence;
        typedef SimFlowStorage_WaterStorage_RainWater_sequence::iterator SimFlowStorage_WaterStorage_RainWater_iterator;
        typedef SimFlowStorage_WaterStorage_RainWater_sequence::const_iterator SimFlowStorage_WaterStorage_RainWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowStorage_WaterStorage_RainWater_type, char > SimFlowStorage_WaterStorage_RainWater_traits;

        const SimFlowStorage_WaterStorage_RainWater_sequence&
        SimFlowStorage_WaterStorage_RainWater () const;

        SimFlowStorage_WaterStorage_RainWater_sequence&
        SimFlowStorage_WaterStorage_RainWater ();

        void
        SimFlowStorage_WaterStorage_RainWater (const SimFlowStorage_WaterStorage_RainWater_sequence& s);

        // SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_type > SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence::iterator SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_iterator;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence::const_iterator SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_type, char > SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_traits;

        const SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume () const;

        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume ();

        void
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume (const SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence& s);

        // SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_type > SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence::iterator SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_iterator;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence::const_iterator SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_type, char > SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_traits;

        const SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV () const;

        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV ();

        void
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV (const SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence& s);

        // SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_type > SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence::iterator SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_iterator;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence::const_iterator SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_type, char > SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_traits;

        const SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir () const;

        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir ();

        void
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir (const SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence& s);

        // SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_type > SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence::iterator SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_iterator;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence::const_iterator SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_type, char > SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_traits;

        const SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume () const;

        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume ();

        void
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume (const SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence& s);

        // SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_type > SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence::iterator SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_iterator;
        typedef SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence::const_iterator SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_type, char > SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_traits;

        const SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV () const;

        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence&
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV ();

        void
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV (const SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence& s);

        // SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_type > SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence;
        typedef SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence::iterator SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_iterator;
        typedef SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence::const_iterator SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_type, char > SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_traits;

        const SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence&
        SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam () const;

        SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence&
        SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam ();

        void
        SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam (const SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence& s);

        // SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_type > SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence;
        typedef SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence::iterator SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_iterator;
        typedef SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence::const_iterator SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_type, char > SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_traits;

        const SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence&
        SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction () const;

        SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence&
        SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction ();

        void
        SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction (const SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence& s);

        // SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_type > SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence;
        typedef SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence::iterator SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_iterator;
        typedef SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence::const_iterator SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_type, char > SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_traits;

        const SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence&
        SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam () const;

        SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence&
        SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam ();

        void
        SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam (const SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence& s);

        // SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_type > SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence;
        typedef SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence::iterator SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_iterator;
        typedef SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence::const_iterator SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_type, char > SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_traits;

        const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence&
        SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction () const;

        SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence&
        SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction ();

        void
        SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction (const SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence& s);

        // SimFlowTerminal_AirTerminal_ConstantVolume_Reheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_ConstantVolume_Reheat SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_type > SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence;
        typedef SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence::iterator SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_iterator;
        typedef SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence::const_iterator SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_type, char > SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_traits;

        const SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence&
        SimFlowTerminal_AirTerminal_ConstantVolume_Reheat () const;

        SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence&
        SimFlowTerminal_AirTerminal_ConstantVolume_Reheat ();

        void
        SimFlowTerminal_AirTerminal_ConstantVolume_Reheat (const SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence& s);

        // SimFlowTerminal_AirTerminal_ParallelPIU_Reheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_ParallelPIU_Reheat SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_type > SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence;
        typedef SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence::iterator SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_iterator;
        typedef SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence::const_iterator SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_type, char > SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_traits;

        const SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence&
        SimFlowTerminal_AirTerminal_ParallelPIU_Reheat () const;

        SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence&
        SimFlowTerminal_AirTerminal_ParallelPIU_Reheat ();

        void
        SimFlowTerminal_AirTerminal_ParallelPIU_Reheat (const SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence& s);

        // SimFlowTerminal_AirTerminal_SeriesPIU_Reheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_SeriesPIU_Reheat SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_type > SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence;
        typedef SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence::iterator SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_iterator;
        typedef SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence::const_iterator SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_type, char > SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_traits;

        const SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence&
        SimFlowTerminal_AirTerminal_SeriesPIU_Reheat () const;

        SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence&
        SimFlowTerminal_AirTerminal_SeriesPIU_Reheat ();

        void
        SimFlowTerminal_AirTerminal_SeriesPIU_Reheat (const SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence& s);

        // SimFlowTerminal_AirTerminal_SingleDuctUserDefined
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_SingleDuctUserDefined SimFlowTerminal_AirTerminal_SingleDuctUserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_SingleDuctUserDefined_type > SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence;
        typedef SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence::iterator SimFlowTerminal_AirTerminal_SingleDuctUserDefined_iterator;
        typedef SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence::const_iterator SimFlowTerminal_AirTerminal_SingleDuctUserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_SingleDuctUserDefined_type, char > SimFlowTerminal_AirTerminal_SingleDuctUserDefined_traits;

        const SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence&
        SimFlowTerminal_AirTerminal_SingleDuctUserDefined () const;

        SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence&
        SimFlowTerminal_AirTerminal_SingleDuctUserDefined ();

        void
        SimFlowTerminal_AirTerminal_SingleDuctUserDefined (const SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence& s);

        // SimFlowTerminal_AirTerminal_Uncontrolled
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_Uncontrolled SimFlowTerminal_AirTerminal_Uncontrolled_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_Uncontrolled_type > SimFlowTerminal_AirTerminal_Uncontrolled_sequence;
        typedef SimFlowTerminal_AirTerminal_Uncontrolled_sequence::iterator SimFlowTerminal_AirTerminal_Uncontrolled_iterator;
        typedef SimFlowTerminal_AirTerminal_Uncontrolled_sequence::const_iterator SimFlowTerminal_AirTerminal_Uncontrolled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_Uncontrolled_type, char > SimFlowTerminal_AirTerminal_Uncontrolled_traits;

        const SimFlowTerminal_AirTerminal_Uncontrolled_sequence&
        SimFlowTerminal_AirTerminal_Uncontrolled () const;

        SimFlowTerminal_AirTerminal_Uncontrolled_sequence&
        SimFlowTerminal_AirTerminal_Uncontrolled ();

        void
        SimFlowTerminal_AirTerminal_Uncontrolled (const SimFlowTerminal_AirTerminal_Uncontrolled_sequence& s);

        // SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_type > SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence;
        typedef SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence::iterator SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_iterator;
        typedef SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence::const_iterator SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_type, char > SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_traits;

        const SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat () const;

        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat ();

        void
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat (const SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence& s);

        // SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_type > SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence;
        typedef SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence::iterator SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_iterator;
        typedef SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence::const_iterator SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_type, char > SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_traits;

        const SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat () const;

        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat ();

        void
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat (const SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence& s);

        // SimFlowTerminal_AirTerminal_VAV_NoReheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_VAV_NoReheat SimFlowTerminal_AirTerminal_VAV_NoReheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_VAV_NoReheat_type > SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence;
        typedef SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence::iterator SimFlowTerminal_AirTerminal_VAV_NoReheat_iterator;
        typedef SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence::const_iterator SimFlowTerminal_AirTerminal_VAV_NoReheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_VAV_NoReheat_type, char > SimFlowTerminal_AirTerminal_VAV_NoReheat_traits;

        const SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_NoReheat () const;

        SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_NoReheat ();

        void
        SimFlowTerminal_AirTerminal_VAV_NoReheat (const SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence& s);

        // SimFlowTerminal_AirTerminal_VAV_Reheat
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_VAV_Reheat SimFlowTerminal_AirTerminal_VAV_Reheat_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_VAV_Reheat_type > SimFlowTerminal_AirTerminal_VAV_Reheat_sequence;
        typedef SimFlowTerminal_AirTerminal_VAV_Reheat_sequence::iterator SimFlowTerminal_AirTerminal_VAV_Reheat_iterator;
        typedef SimFlowTerminal_AirTerminal_VAV_Reheat_sequence::const_iterator SimFlowTerminal_AirTerminal_VAV_Reheat_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_VAV_Reheat_type, char > SimFlowTerminal_AirTerminal_VAV_Reheat_traits;

        const SimFlowTerminal_AirTerminal_VAV_Reheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_Reheat () const;

        SimFlowTerminal_AirTerminal_VAV_Reheat_sequence&
        SimFlowTerminal_AirTerminal_VAV_Reheat ();

        void
        SimFlowTerminal_AirTerminal_VAV_Reheat (const SimFlowTerminal_AirTerminal_VAV_Reheat_sequence& s);

        // SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_type > SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence;
        typedef SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence::iterator SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_iterator;
        typedef SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence::const_iterator SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_type, char > SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_traits;

        const SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence&
        SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan () const;

        SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence&
        SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan ();

        void
        SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan (const SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence& s);

        // SimFlowTerminal_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_Default_Default SimFlowTerminal_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_Default_Default_type > SimFlowTerminal_Default_Default_sequence;
        typedef SimFlowTerminal_Default_Default_sequence::iterator SimFlowTerminal_Default_Default_iterator;
        typedef SimFlowTerminal_Default_Default_sequence::const_iterator SimFlowTerminal_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_Default_Default_type, char > SimFlowTerminal_Default_Default_traits;

        const SimFlowTerminal_Default_Default_sequence&
        SimFlowTerminal_Default_Default () const;

        SimFlowTerminal_Default_Default_sequence&
        SimFlowTerminal_Default_Default ();

        void
        SimFlowTerminal_Default_Default (const SimFlowTerminal_Default_Default_sequence& s);

        // SimFlowTerminal_ElectricalTerminal_Default
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_ElectricalTerminal_Default SimFlowTerminal_ElectricalTerminal_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_ElectricalTerminal_Default_type > SimFlowTerminal_ElectricalTerminal_Default_sequence;
        typedef SimFlowTerminal_ElectricalTerminal_Default_sequence::iterator SimFlowTerminal_ElectricalTerminal_Default_iterator;
        typedef SimFlowTerminal_ElectricalTerminal_Default_sequence::const_iterator SimFlowTerminal_ElectricalTerminal_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_ElectricalTerminal_Default_type, char > SimFlowTerminal_ElectricalTerminal_Default_traits;

        const SimFlowTerminal_ElectricalTerminal_Default_sequence&
        SimFlowTerminal_ElectricalTerminal_Default () const;

        SimFlowTerminal_ElectricalTerminal_Default_sequence&
        SimFlowTerminal_ElectricalTerminal_Default ();

        void
        SimFlowTerminal_ElectricalTerminal_Default (const SimFlowTerminal_ElectricalTerminal_Default_sequence& s);

        // SimFlowTerminal_ElectricalTerminal_ElectricalOutlet
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_ElectricalTerminal_ElectricalOutlet SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_type > SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence;
        typedef SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence::iterator SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_iterator;
        typedef SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence::const_iterator SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_type, char > SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_traits;

        const SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence&
        SimFlowTerminal_ElectricalTerminal_ElectricalOutlet () const;

        SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence&
        SimFlowTerminal_ElectricalTerminal_ElectricalOutlet ();

        void
        SimFlowTerminal_ElectricalTerminal_ElectricalOutlet (const SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence& s);

        // SimFlowTerminal_ElectricalTerminal_LightingFixture
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_ElectricalTerminal_LightingFixture SimFlowTerminal_ElectricalTerminal_LightingFixture_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_ElectricalTerminal_LightingFixture_type > SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence;
        typedef SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence::iterator SimFlowTerminal_ElectricalTerminal_LightingFixture_iterator;
        typedef SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence::const_iterator SimFlowTerminal_ElectricalTerminal_LightingFixture_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_ElectricalTerminal_LightingFixture_type, char > SimFlowTerminal_ElectricalTerminal_LightingFixture_traits;

        const SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence&
        SimFlowTerminal_ElectricalTerminal_LightingFixture () const;

        SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence&
        SimFlowTerminal_ElectricalTerminal_LightingFixture ();

        void
        SimFlowTerminal_ElectricalTerminal_LightingFixture (const SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_DishWasher
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_DishWasher SimFlowTerminal_PlumbingTerminal_DishWasher_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_DishWasher_type > SimFlowTerminal_PlumbingTerminal_DishWasher_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_DishWasher_sequence::iterator SimFlowTerminal_PlumbingTerminal_DishWasher_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_DishWasher_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_DishWasher_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_DishWasher_type, char > SimFlowTerminal_PlumbingTerminal_DishWasher_traits;

        const SimFlowTerminal_PlumbingTerminal_DishWasher_sequence&
        SimFlowTerminal_PlumbingTerminal_DishWasher () const;

        SimFlowTerminal_PlumbingTerminal_DishWasher_sequence&
        SimFlowTerminal_PlumbingTerminal_DishWasher ();

        void
        SimFlowTerminal_PlumbingTerminal_DishWasher (const SimFlowTerminal_PlumbingTerminal_DishWasher_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_HotWaterFixtures
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_HotWaterFixtures SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_type > SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence::iterator SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_type, char > SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_traits;

        const SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence&
        SimFlowTerminal_PlumbingTerminal_HotWaterFixtures () const;

        SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence&
        SimFlowTerminal_PlumbingTerminal_HotWaterFixtures ();

        void
        SimFlowTerminal_PlumbingTerminal_HotWaterFixtures (const SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_Shower
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_Shower SimFlowTerminal_PlumbingTerminal_Shower_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_Shower_type > SimFlowTerminal_PlumbingTerminal_Shower_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_Shower_sequence::iterator SimFlowTerminal_PlumbingTerminal_Shower_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_Shower_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_Shower_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_Shower_type, char > SimFlowTerminal_PlumbingTerminal_Shower_traits;

        const SimFlowTerminal_PlumbingTerminal_Shower_sequence&
        SimFlowTerminal_PlumbingTerminal_Shower () const;

        SimFlowTerminal_PlumbingTerminal_Shower_sequence&
        SimFlowTerminal_PlumbingTerminal_Shower ();

        void
        SimFlowTerminal_PlumbingTerminal_Shower (const SimFlowTerminal_PlumbingTerminal_Shower_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_Sink
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_Sink SimFlowTerminal_PlumbingTerminal_Sink_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_Sink_type > SimFlowTerminal_PlumbingTerminal_Sink_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_Sink_sequence::iterator SimFlowTerminal_PlumbingTerminal_Sink_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_Sink_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_Sink_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_Sink_type, char > SimFlowTerminal_PlumbingTerminal_Sink_traits;

        const SimFlowTerminal_PlumbingTerminal_Sink_sequence&
        SimFlowTerminal_PlumbingTerminal_Sink () const;

        SimFlowTerminal_PlumbingTerminal_Sink_sequence&
        SimFlowTerminal_PlumbingTerminal_Sink ();

        void
        SimFlowTerminal_PlumbingTerminal_Sink (const SimFlowTerminal_PlumbingTerminal_Sink_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_type > SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence::iterator SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_type, char > SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_traits;

        const SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence&
        SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment () const;

        SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence&
        SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment ();

        void
        SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment (const SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_Toilet
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_Toilet SimFlowTerminal_PlumbingTerminal_Toilet_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_Toilet_type > SimFlowTerminal_PlumbingTerminal_Toilet_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_Toilet_sequence::iterator SimFlowTerminal_PlumbingTerminal_Toilet_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_Toilet_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_Toilet_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_Toilet_type, char > SimFlowTerminal_PlumbingTerminal_Toilet_traits;

        const SimFlowTerminal_PlumbingTerminal_Toilet_sequence&
        SimFlowTerminal_PlumbingTerminal_Toilet () const;

        SimFlowTerminal_PlumbingTerminal_Toilet_sequence&
        SimFlowTerminal_PlumbingTerminal_Toilet ();

        void
        SimFlowTerminal_PlumbingTerminal_Toilet (const SimFlowTerminal_PlumbingTerminal_Toilet_sequence& s);

        // SimFlowTerminal_PlumbingTerminal_Urinal
        //
        typedef ::namespaces::Sim::MepModel::SimFlowTerminal_PlumbingTerminal_Urinal SimFlowTerminal_PlumbingTerminal_Urinal_type;
        typedef ::xsd::cxx::tree::sequence< SimFlowTerminal_PlumbingTerminal_Urinal_type > SimFlowTerminal_PlumbingTerminal_Urinal_sequence;
        typedef SimFlowTerminal_PlumbingTerminal_Urinal_sequence::iterator SimFlowTerminal_PlumbingTerminal_Urinal_iterator;
        typedef SimFlowTerminal_PlumbingTerminal_Urinal_sequence::const_iterator SimFlowTerminal_PlumbingTerminal_Urinal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFlowTerminal_PlumbingTerminal_Urinal_type, char > SimFlowTerminal_PlumbingTerminal_Urinal_traits;

        const SimFlowTerminal_PlumbingTerminal_Urinal_sequence&
        SimFlowTerminal_PlumbingTerminal_Urinal () const;

        SimFlowTerminal_PlumbingTerminal_Urinal_sequence&
        SimFlowTerminal_PlumbingTerminal_Urinal ();

        void
        SimFlowTerminal_PlumbingTerminal_Urinal (const SimFlowTerminal_PlumbingTerminal_Urinal_sequence& s);

        // SimFluid_Concentration_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_Concentration_Default SimFluid_Concentration_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_Concentration_Default_type > SimFluid_Concentration_Default_sequence;
        typedef SimFluid_Concentration_Default_sequence::iterator SimFluid_Concentration_Default_iterator;
        typedef SimFluid_Concentration_Default_sequence::const_iterator SimFluid_Concentration_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_Concentration_Default_type, char > SimFluid_Concentration_Default_traits;

        const SimFluid_Concentration_Default_sequence&
        SimFluid_Concentration_Default () const;

        SimFluid_Concentration_Default_sequence&
        SimFluid_Concentration_Default ();

        void
        SimFluid_Concentration_Default (const SimFluid_Concentration_Default_sequence& s);

        // SimFluid_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_Default_Default SimFluid_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_Default_Default_type > SimFluid_Default_Default_sequence;
        typedef SimFluid_Default_Default_sequence::iterator SimFluid_Default_Default_iterator;
        typedef SimFluid_Default_Default_sequence::const_iterator SimFluid_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_Default_Default_type, char > SimFluid_Default_Default_traits;

        const SimFluid_Default_Default_sequence&
        SimFluid_Default_Default () const;

        SimFluid_Default_Default_sequence&
        SimFluid_Default_Default ();

        void
        SimFluid_Default_Default (const SimFluid_Default_Default_sequence& s);

        // SimFluid_GlycolConcentration_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_GlycolConcentration_Default SimFluid_GlycolConcentration_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_GlycolConcentration_Default_type > SimFluid_GlycolConcentration_Default_sequence;
        typedef SimFluid_GlycolConcentration_Default_sequence::iterator SimFluid_GlycolConcentration_Default_iterator;
        typedef SimFluid_GlycolConcentration_Default_sequence::const_iterator SimFluid_GlycolConcentration_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_GlycolConcentration_Default_type, char > SimFluid_GlycolConcentration_Default_traits;

        const SimFluid_GlycolConcentration_Default_sequence&
        SimFluid_GlycolConcentration_Default () const;

        SimFluid_GlycolConcentration_Default_sequence&
        SimFluid_GlycolConcentration_Default ();

        void
        SimFluid_GlycolConcentration_Default (const SimFluid_GlycolConcentration_Default_sequence& s);

        // SimFluid_Name_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_Name_Default SimFluid_Name_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_Name_Default_type > SimFluid_Name_Default_sequence;
        typedef SimFluid_Name_Default_sequence::iterator SimFluid_Name_Default_iterator;
        typedef SimFluid_Name_Default_sequence::const_iterator SimFluid_Name_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_Name_Default_type, char > SimFluid_Name_Default_traits;

        const SimFluid_Name_Default_sequence&
        SimFluid_Name_Default () const;

        SimFluid_Name_Default_sequence&
        SimFluid_Name_Default ();

        void
        SimFluid_Name_Default (const SimFluid_Name_Default_sequence& s);

        // SimFluid_Saturated_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_Saturated_Default SimFluid_Saturated_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_Saturated_Default_type > SimFluid_Saturated_Default_sequence;
        typedef SimFluid_Saturated_Default_sequence::iterator SimFluid_Saturated_Default_iterator;
        typedef SimFluid_Saturated_Default_sequence::const_iterator SimFluid_Saturated_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_Saturated_Default_type, char > SimFluid_Saturated_Default_traits;

        const SimFluid_Saturated_Default_sequence&
        SimFluid_Saturated_Default () const;

        SimFluid_Saturated_Default_sequence&
        SimFluid_Saturated_Default ();

        void
        SimFluid_Saturated_Default (const SimFluid_Saturated_Default_sequence& s);

        // SimFluid_SuperHeated_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_SuperHeated_Default SimFluid_SuperHeated_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_SuperHeated_Default_type > SimFluid_SuperHeated_Default_sequence;
        typedef SimFluid_SuperHeated_Default_sequence::iterator SimFluid_SuperHeated_Default_iterator;
        typedef SimFluid_SuperHeated_Default_sequence::const_iterator SimFluid_SuperHeated_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_SuperHeated_Default_type, char > SimFluid_SuperHeated_Default_traits;

        const SimFluid_SuperHeated_Default_sequence&
        SimFluid_SuperHeated_Default () const;

        SimFluid_SuperHeated_Default_sequence&
        SimFluid_SuperHeated_Default ();

        void
        SimFluid_SuperHeated_Default (const SimFluid_SuperHeated_Default_sequence& s);

        // SimFluid_Temperatures_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimFluid_Temperatures_Default SimFluid_Temperatures_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFluid_Temperatures_Default_type > SimFluid_Temperatures_Default_sequence;
        typedef SimFluid_Temperatures_Default_sequence::iterator SimFluid_Temperatures_Default_iterator;
        typedef SimFluid_Temperatures_Default_sequence::const_iterator SimFluid_Temperatures_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFluid_Temperatures_Default_type, char > SimFluid_Temperatures_Default_traits;

        const SimFluid_Temperatures_Default_sequence&
        SimFluid_Temperatures_Default () const;

        SimFluid_Temperatures_Default_sequence&
        SimFluid_Temperatures_Default ();

        void
        SimFluid_Temperatures_Default (const SimFluid_Temperatures_Default_sequence& s);

        // SimFurnishingElement_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimFurnishingElement_Default_Default SimFurnishingElement_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFurnishingElement_Default_Default_type > SimFurnishingElement_Default_Default_sequence;
        typedef SimFurnishingElement_Default_Default_sequence::iterator SimFurnishingElement_Default_Default_iterator;
        typedef SimFurnishingElement_Default_Default_sequence::const_iterator SimFurnishingElement_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFurnishingElement_Default_Default_type, char > SimFurnishingElement_Default_Default_traits;

        const SimFurnishingElement_Default_Default_sequence&
        SimFurnishingElement_Default_Default () const;

        SimFurnishingElement_Default_Default_sequence&
        SimFurnishingElement_Default_Default ();

        void
        SimFurnishingElement_Default_Default (const SimFurnishingElement_Default_Default_sequence& s);

        // SimFurnishingElementType_Furnishing_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimFurnishingElementType_Furnishing_Default SimFurnishingElementType_Furnishing_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFurnishingElementType_Furnishing_Default_type > SimFurnishingElementType_Furnishing_Default_sequence;
        typedef SimFurnishingElementType_Furnishing_Default_sequence::iterator SimFurnishingElementType_Furnishing_Default_iterator;
        typedef SimFurnishingElementType_Furnishing_Default_sequence::const_iterator SimFurnishingElementType_Furnishing_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFurnishingElementType_Furnishing_Default_type, char > SimFurnishingElementType_Furnishing_Default_traits;

        const SimFurnishingElementType_Furnishing_Default_sequence&
        SimFurnishingElementType_Furnishing_Default () const;

        SimFurnishingElementType_Furnishing_Default_sequence&
        SimFurnishingElementType_Furnishing_Default ();

        void
        SimFurnishingElementType_Furnishing_Default (const SimFurnishingElementType_Furnishing_Default_sequence& s);

        // SimFurnishingElementType_Furniture_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimFurnishingElementType_Furniture_Default SimFurnishingElementType_Furniture_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFurnishingElementType_Furniture_Default_type > SimFurnishingElementType_Furniture_Default_sequence;
        typedef SimFurnishingElementType_Furniture_Default_sequence::iterator SimFurnishingElementType_Furniture_Default_iterator;
        typedef SimFurnishingElementType_Furniture_Default_sequence::const_iterator SimFurnishingElementType_Furniture_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFurnishingElementType_Furniture_Default_type, char > SimFurnishingElementType_Furniture_Default_traits;

        const SimFurnishingElementType_Furniture_Default_sequence&
        SimFurnishingElementType_Furniture_Default () const;

        SimFurnishingElementType_Furniture_Default_sequence&
        SimFurnishingElementType_Furniture_Default ();

        void
        SimFurnishingElementType_Furniture_Default (const SimFurnishingElementType_Furniture_Default_sequence& s);

        // SimFurnitureType_Furniture_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimFurnitureType_Furniture_Default SimFurnitureType_Furniture_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimFurnitureType_Furniture_Default_type > SimFurnitureType_Furniture_Default_sequence;
        typedef SimFurnitureType_Furniture_Default_sequence::iterator SimFurnitureType_Furniture_Default_iterator;
        typedef SimFurnitureType_Furniture_Default_sequence::const_iterator SimFurnitureType_Furniture_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimFurnitureType_Furniture_Default_type, char > SimFurnitureType_Furniture_Default_traits;

        const SimFurnitureType_Furniture_Default_sequence&
        SimFurnitureType_Furniture_Default () const;

        SimFurnitureType_Furniture_Default_sequence&
        SimFurnitureType_Furniture_Default ();

        void
        SimFurnitureType_Furniture_Default (const SimFurnitureType_Furniture_Default_sequence& s);

        // SimGeomBooleanResult_BooleanClippingResult_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomBooleanResult_BooleanClippingResult_Default SimGeomBooleanResult_BooleanClippingResult_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomBooleanResult_BooleanClippingResult_Default_type > SimGeomBooleanResult_BooleanClippingResult_Default_sequence;
        typedef SimGeomBooleanResult_BooleanClippingResult_Default_sequence::iterator SimGeomBooleanResult_BooleanClippingResult_Default_iterator;
        typedef SimGeomBooleanResult_BooleanClippingResult_Default_sequence::const_iterator SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomBooleanResult_BooleanClippingResult_Default_type, char > SimGeomBooleanResult_BooleanClippingResult_Default_traits;

        const SimGeomBooleanResult_BooleanClippingResult_Default_sequence&
        SimGeomBooleanResult_BooleanClippingResult_Default () const;

        SimGeomBooleanResult_BooleanClippingResult_Default_sequence&
        SimGeomBooleanResult_BooleanClippingResult_Default ();

        void
        SimGeomBooleanResult_BooleanClippingResult_Default (const SimGeomBooleanResult_BooleanClippingResult_Default_sequence& s);

        // SimGeomBooleanResult_BooleanResult_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomBooleanResult_BooleanResult_Default SimGeomBooleanResult_BooleanResult_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomBooleanResult_BooleanResult_Default_type > SimGeomBooleanResult_BooleanResult_Default_sequence;
        typedef SimGeomBooleanResult_BooleanResult_Default_sequence::iterator SimGeomBooleanResult_BooleanResult_Default_iterator;
        typedef SimGeomBooleanResult_BooleanResult_Default_sequence::const_iterator SimGeomBooleanResult_BooleanResult_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomBooleanResult_BooleanResult_Default_type, char > SimGeomBooleanResult_BooleanResult_Default_traits;

        const SimGeomBooleanResult_BooleanResult_Default_sequence&
        SimGeomBooleanResult_BooleanResult_Default () const;

        SimGeomBooleanResult_BooleanResult_Default_sequence&
        SimGeomBooleanResult_BooleanResult_Default ();

        void
        SimGeomBooleanResult_BooleanResult_Default (const SimGeomBooleanResult_BooleanResult_Default_sequence& s);

        // SimGeomBoundingBox_BoundingBox_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomBoundingBox_BoundingBox_Default SimGeomBoundingBox_BoundingBox_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomBoundingBox_BoundingBox_Default_type > SimGeomBoundingBox_BoundingBox_Default_sequence;
        typedef SimGeomBoundingBox_BoundingBox_Default_sequence::iterator SimGeomBoundingBox_BoundingBox_Default_iterator;
        typedef SimGeomBoundingBox_BoundingBox_Default_sequence::const_iterator SimGeomBoundingBox_BoundingBox_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomBoundingBox_BoundingBox_Default_type, char > SimGeomBoundingBox_BoundingBox_Default_traits;

        const SimGeomBoundingBox_BoundingBox_Default_sequence&
        SimGeomBoundingBox_BoundingBox_Default () const;

        SimGeomBoundingBox_BoundingBox_Default_sequence&
        SimGeomBoundingBox_BoundingBox_Default ();

        void
        SimGeomBoundingBox_BoundingBox_Default (const SimGeomBoundingBox_BoundingBox_Default_sequence& s);

        // SimGeomCsgPrimative3D_CsgPrimative3D_Block
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCsgPrimative3D_CsgPrimative3D_Block SimGeomCsgPrimative3D_CsgPrimative3D_Block_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCsgPrimative3D_CsgPrimative3D_Block_type > SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence::iterator SimGeomCsgPrimative3D_CsgPrimative3D_Block_iterator;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence::const_iterator SimGeomCsgPrimative3D_CsgPrimative3D_Block_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCsgPrimative3D_CsgPrimative3D_Block_type, char > SimGeomCsgPrimative3D_CsgPrimative3D_Block_traits;

        const SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_Block () const;

        SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_Block ();

        void
        SimGeomCsgPrimative3D_CsgPrimative3D_Block (const SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence& s);

        // SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_type > SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence::iterator SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_iterator;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence::const_iterator SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_type, char > SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_traits;

        const SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid () const;

        SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid ();

        void
        SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid (const SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence& s);

        // SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_type > SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence::iterator SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_iterator;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence::const_iterator SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_type, char > SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_traits;

        const SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone () const;

        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone ();

        void
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone (const SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence& s);

        // SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_type > SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence::iterator SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_iterator;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence::const_iterator SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_type, char > SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_traits;

        const SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder () const;

        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder ();

        void
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder (const SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence& s);

        // SimGeomCsgPrimative3D_CsgPrimative3D_Sphere
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCsgPrimative3D_CsgPrimative3D_Sphere SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_type > SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence::iterator SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_iterator;
        typedef SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence::const_iterator SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_type, char > SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_traits;

        const SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_Sphere () const;

        SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence&
        SimGeomCsgPrimative3D_CsgPrimative3D_Sphere ();

        void
        SimGeomCsgPrimative3D_CsgPrimative3D_Sphere (const SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence& s);

        // SimGeomCurve_2DCompositeCurve_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_2DCompositeCurve_Default SimGeomCurve_2DCompositeCurve_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_2DCompositeCurve_Default_type > SimGeomCurve_2DCompositeCurve_Default_sequence;
        typedef SimGeomCurve_2DCompositeCurve_Default_sequence::iterator SimGeomCurve_2DCompositeCurve_Default_iterator;
        typedef SimGeomCurve_2DCompositeCurve_Default_sequence::const_iterator SimGeomCurve_2DCompositeCurve_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_2DCompositeCurve_Default_type, char > SimGeomCurve_2DCompositeCurve_Default_traits;

        const SimGeomCurve_2DCompositeCurve_Default_sequence&
        SimGeomCurve_2DCompositeCurve_Default () const;

        SimGeomCurve_2DCompositeCurve_Default_sequence&
        SimGeomCurve_2DCompositeCurve_Default ();

        void
        SimGeomCurve_2DCompositeCurve_Default (const SimGeomCurve_2DCompositeCurve_Default_sequence& s);

        // SimGeomCurve_BoundedCurve_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_BoundedCurve_Default SimGeomCurve_BoundedCurve_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_BoundedCurve_Default_type > SimGeomCurve_BoundedCurve_Default_sequence;
        typedef SimGeomCurve_BoundedCurve_Default_sequence::iterator SimGeomCurve_BoundedCurve_Default_iterator;
        typedef SimGeomCurve_BoundedCurve_Default_sequence::const_iterator SimGeomCurve_BoundedCurve_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_BoundedCurve_Default_type, char > SimGeomCurve_BoundedCurve_Default_traits;

        const SimGeomCurve_BoundedCurve_Default_sequence&
        SimGeomCurve_BoundedCurve_Default () const;

        SimGeomCurve_BoundedCurve_Default_sequence&
        SimGeomCurve_BoundedCurve_Default ();

        void
        SimGeomCurve_BoundedCurve_Default (const SimGeomCurve_BoundedCurve_Default_sequence& s);

        // SimGeomCurve_Circle_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_Circle_Default SimGeomCurve_Circle_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_Circle_Default_type > SimGeomCurve_Circle_Default_sequence;
        typedef SimGeomCurve_Circle_Default_sequence::iterator SimGeomCurve_Circle_Default_iterator;
        typedef SimGeomCurve_Circle_Default_sequence::const_iterator SimGeomCurve_Circle_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_Circle_Default_type, char > SimGeomCurve_Circle_Default_traits;

        const SimGeomCurve_Circle_Default_sequence&
        SimGeomCurve_Circle_Default () const;

        SimGeomCurve_Circle_Default_sequence&
        SimGeomCurve_Circle_Default ();

        void
        SimGeomCurve_Circle_Default (const SimGeomCurve_Circle_Default_sequence& s);

        // SimGeomCurve_CompositeCurve_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_CompositeCurve_Default SimGeomCurve_CompositeCurve_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_CompositeCurve_Default_type > SimGeomCurve_CompositeCurve_Default_sequence;
        typedef SimGeomCurve_CompositeCurve_Default_sequence::iterator SimGeomCurve_CompositeCurve_Default_iterator;
        typedef SimGeomCurve_CompositeCurve_Default_sequence::const_iterator SimGeomCurve_CompositeCurve_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_CompositeCurve_Default_type, char > SimGeomCurve_CompositeCurve_Default_traits;

        const SimGeomCurve_CompositeCurve_Default_sequence&
        SimGeomCurve_CompositeCurve_Default () const;

        SimGeomCurve_CompositeCurve_Default_sequence&
        SimGeomCurve_CompositeCurve_Default ();

        void
        SimGeomCurve_CompositeCurve_Default (const SimGeomCurve_CompositeCurve_Default_sequence& s);

        // SimGeomCurve_CompositeCurveSegment_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_CompositeCurveSegment_Default SimGeomCurve_CompositeCurveSegment_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_CompositeCurveSegment_Default_type > SimGeomCurve_CompositeCurveSegment_Default_sequence;
        typedef SimGeomCurve_CompositeCurveSegment_Default_sequence::iterator SimGeomCurve_CompositeCurveSegment_Default_iterator;
        typedef SimGeomCurve_CompositeCurveSegment_Default_sequence::const_iterator SimGeomCurve_CompositeCurveSegment_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_CompositeCurveSegment_Default_type, char > SimGeomCurve_CompositeCurveSegment_Default_traits;

        const SimGeomCurve_CompositeCurveSegment_Default_sequence&
        SimGeomCurve_CompositeCurveSegment_Default () const;

        SimGeomCurve_CompositeCurveSegment_Default_sequence&
        SimGeomCurve_CompositeCurveSegment_Default ();

        void
        SimGeomCurve_CompositeCurveSegment_Default (const SimGeomCurve_CompositeCurveSegment_Default_sequence& s);

        // SimGeomCurve_Ellipse_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_Ellipse_Default SimGeomCurve_Ellipse_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_Ellipse_Default_type > SimGeomCurve_Ellipse_Default_sequence;
        typedef SimGeomCurve_Ellipse_Default_sequence::iterator SimGeomCurve_Ellipse_Default_iterator;
        typedef SimGeomCurve_Ellipse_Default_sequence::const_iterator SimGeomCurve_Ellipse_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_Ellipse_Default_type, char > SimGeomCurve_Ellipse_Default_traits;

        const SimGeomCurve_Ellipse_Default_sequence&
        SimGeomCurve_Ellipse_Default () const;

        SimGeomCurve_Ellipse_Default_sequence&
        SimGeomCurve_Ellipse_Default ();

        void
        SimGeomCurve_Ellipse_Default (const SimGeomCurve_Ellipse_Default_sequence& s);

        // SimGeomCurve_Line_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_Line_Default SimGeomCurve_Line_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_Line_Default_type > SimGeomCurve_Line_Default_sequence;
        typedef SimGeomCurve_Line_Default_sequence::iterator SimGeomCurve_Line_Default_iterator;
        typedef SimGeomCurve_Line_Default_sequence::const_iterator SimGeomCurve_Line_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_Line_Default_type, char > SimGeomCurve_Line_Default_traits;

        const SimGeomCurve_Line_Default_sequence&
        SimGeomCurve_Line_Default () const;

        SimGeomCurve_Line_Default_sequence&
        SimGeomCurve_Line_Default ();

        void
        SimGeomCurve_Line_Default (const SimGeomCurve_Line_Default_sequence& s);

        // SimGeomCurve_OffsetCurve2D_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_OffsetCurve2D_Default SimGeomCurve_OffsetCurve2D_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_OffsetCurve2D_Default_type > SimGeomCurve_OffsetCurve2D_Default_sequence;
        typedef SimGeomCurve_OffsetCurve2D_Default_sequence::iterator SimGeomCurve_OffsetCurve2D_Default_iterator;
        typedef SimGeomCurve_OffsetCurve2D_Default_sequence::const_iterator SimGeomCurve_OffsetCurve2D_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_OffsetCurve2D_Default_type, char > SimGeomCurve_OffsetCurve2D_Default_traits;

        const SimGeomCurve_OffsetCurve2D_Default_sequence&
        SimGeomCurve_OffsetCurve2D_Default () const;

        SimGeomCurve_OffsetCurve2D_Default_sequence&
        SimGeomCurve_OffsetCurve2D_Default ();

        void
        SimGeomCurve_OffsetCurve2D_Default (const SimGeomCurve_OffsetCurve2D_Default_sequence& s);

        // SimGeomCurve_OffsetCurve3D_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_OffsetCurve3D_Default SimGeomCurve_OffsetCurve3D_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_OffsetCurve3D_Default_type > SimGeomCurve_OffsetCurve3D_Default_sequence;
        typedef SimGeomCurve_OffsetCurve3D_Default_sequence::iterator SimGeomCurve_OffsetCurve3D_Default_iterator;
        typedef SimGeomCurve_OffsetCurve3D_Default_sequence::const_iterator SimGeomCurve_OffsetCurve3D_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_OffsetCurve3D_Default_type, char > SimGeomCurve_OffsetCurve3D_Default_traits;

        const SimGeomCurve_OffsetCurve3D_Default_sequence&
        SimGeomCurve_OffsetCurve3D_Default () const;

        SimGeomCurve_OffsetCurve3D_Default_sequence&
        SimGeomCurve_OffsetCurve3D_Default ();

        void
        SimGeomCurve_OffsetCurve3D_Default (const SimGeomCurve_OffsetCurve3D_Default_sequence& s);

        // SimGeomCurve_Polyline_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_Polyline_Default SimGeomCurve_Polyline_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_Polyline_Default_type > SimGeomCurve_Polyline_Default_sequence;
        typedef SimGeomCurve_Polyline_Default_sequence::iterator SimGeomCurve_Polyline_Default_iterator;
        typedef SimGeomCurve_Polyline_Default_sequence::const_iterator SimGeomCurve_Polyline_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_Polyline_Default_type, char > SimGeomCurve_Polyline_Default_traits;

        const SimGeomCurve_Polyline_Default_sequence&
        SimGeomCurve_Polyline_Default () const;

        SimGeomCurve_Polyline_Default_sequence&
        SimGeomCurve_Polyline_Default ();

        void
        SimGeomCurve_Polyline_Default (const SimGeomCurve_Polyline_Default_sequence& s);

        // SimGeomCurve_TrimmedCurve_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomCurve_TrimmedCurve_Default SimGeomCurve_TrimmedCurve_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomCurve_TrimmedCurve_Default_type > SimGeomCurve_TrimmedCurve_Default_sequence;
        typedef SimGeomCurve_TrimmedCurve_Default_sequence::iterator SimGeomCurve_TrimmedCurve_Default_iterator;
        typedef SimGeomCurve_TrimmedCurve_Default_sequence::const_iterator SimGeomCurve_TrimmedCurve_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomCurve_TrimmedCurve_Default_type, char > SimGeomCurve_TrimmedCurve_Default_traits;

        const SimGeomCurve_TrimmedCurve_Default_sequence&
        SimGeomCurve_TrimmedCurve_Default () const;

        SimGeomCurve_TrimmedCurve_Default_sequence&
        SimGeomCurve_TrimmedCurve_Default ();

        void
        SimGeomCurve_TrimmedCurve_Default (const SimGeomCurve_TrimmedCurve_Default_sequence& s);

        // SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_type > SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence;
        typedef SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence::iterator SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_iterator;
        typedef SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence::const_iterator SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_type, char > SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_traits;

        const SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence&
        SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace () const;

        SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence&
        SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace ();

        void
        SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace (const SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence& s);

        // SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type > SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence;
        typedef SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence::iterator SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator;
        typedef SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence::const_iterator SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type, char > SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits;

        const SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence&
        SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace () const;

        SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence&
        SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace ();

        void
        SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace (const SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence& s);

        // SimGeomPoint_Point_CartesianPoint
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomPoint_Point_CartesianPoint SimGeomPoint_Point_CartesianPoint_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomPoint_Point_CartesianPoint_type > SimGeomPoint_Point_CartesianPoint_sequence;
        typedef SimGeomPoint_Point_CartesianPoint_sequence::iterator SimGeomPoint_Point_CartesianPoint_iterator;
        typedef SimGeomPoint_Point_CartesianPoint_sequence::const_iterator SimGeomPoint_Point_CartesianPoint_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomPoint_Point_CartesianPoint_type, char > SimGeomPoint_Point_CartesianPoint_traits;

        const SimGeomPoint_Point_CartesianPoint_sequence&
        SimGeomPoint_Point_CartesianPoint () const;

        SimGeomPoint_Point_CartesianPoint_sequence&
        SimGeomPoint_Point_CartesianPoint ();

        void
        SimGeomPoint_Point_CartesianPoint (const SimGeomPoint_Point_CartesianPoint_sequence& s);

        // SimGeomPoint_Point_PointOnCurve
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomPoint_Point_PointOnCurve SimGeomPoint_Point_PointOnCurve_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomPoint_Point_PointOnCurve_type > SimGeomPoint_Point_PointOnCurve_sequence;
        typedef SimGeomPoint_Point_PointOnCurve_sequence::iterator SimGeomPoint_Point_PointOnCurve_iterator;
        typedef SimGeomPoint_Point_PointOnCurve_sequence::const_iterator SimGeomPoint_Point_PointOnCurve_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomPoint_Point_PointOnCurve_type, char > SimGeomPoint_Point_PointOnCurve_traits;

        const SimGeomPoint_Point_PointOnCurve_sequence&
        SimGeomPoint_Point_PointOnCurve () const;

        SimGeomPoint_Point_PointOnCurve_sequence&
        SimGeomPoint_Point_PointOnCurve ();

        void
        SimGeomPoint_Point_PointOnCurve (const SimGeomPoint_Point_PointOnCurve_sequence& s);

        // SimGeomPoint_Point_PointOnSurface
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomPoint_Point_PointOnSurface SimGeomPoint_Point_PointOnSurface_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomPoint_Point_PointOnSurface_type > SimGeomPoint_Point_PointOnSurface_sequence;
        typedef SimGeomPoint_Point_PointOnSurface_sequence::iterator SimGeomPoint_Point_PointOnSurface_iterator;
        typedef SimGeomPoint_Point_PointOnSurface_sequence::const_iterator SimGeomPoint_Point_PointOnSurface_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomPoint_Point_PointOnSurface_type, char > SimGeomPoint_Point_PointOnSurface_traits;

        const SimGeomPoint_Point_PointOnSurface_sequence&
        SimGeomPoint_Point_PointOnSurface () const;

        SimGeomPoint_Point_PointOnSurface_sequence&
        SimGeomPoint_Point_PointOnSurface ();

        void
        SimGeomPoint_Point_PointOnSurface (const SimGeomPoint_Point_PointOnSurface_sequence& s);

        // SimGeomSet_GeometricCurveSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSet_GeometricCurveSet_Default SimGeomSet_GeometricCurveSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSet_GeometricCurveSet_Default_type > SimGeomSet_GeometricCurveSet_Default_sequence;
        typedef SimGeomSet_GeometricCurveSet_Default_sequence::iterator SimGeomSet_GeometricCurveSet_Default_iterator;
        typedef SimGeomSet_GeometricCurveSet_Default_sequence::const_iterator SimGeomSet_GeometricCurveSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSet_GeometricCurveSet_Default_type, char > SimGeomSet_GeometricCurveSet_Default_traits;

        const SimGeomSet_GeometricCurveSet_Default_sequence&
        SimGeomSet_GeometricCurveSet_Default () const;

        SimGeomSet_GeometricCurveSet_Default_sequence&
        SimGeomSet_GeometricCurveSet_Default ();

        void
        SimGeomSet_GeometricCurveSet_Default (const SimGeomSet_GeometricCurveSet_Default_sequence& s);

        // SimGeomSet_GeometricSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSet_GeometricSet_Default SimGeomSet_GeometricSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSet_GeometricSet_Default_type > SimGeomSet_GeometricSet_Default_sequence;
        typedef SimGeomSet_GeometricSet_Default_sequence::iterator SimGeomSet_GeometricSet_Default_iterator;
        typedef SimGeomSet_GeometricSet_Default_sequence::const_iterator SimGeomSet_GeometricSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSet_GeometricSet_Default_type, char > SimGeomSet_GeometricSet_Default_traits;

        const SimGeomSet_GeometricSet_Default_sequence&
        SimGeomSet_GeometricSet_Default () const;

        SimGeomSet_GeometricSet_Default_sequence&
        SimGeomSet_GeometricSet_Default ();

        void
        SimGeomSet_GeometricSet_Default (const SimGeomSet_GeometricSet_Default_sequence& s);

        // SimGeomSolidModel_CSGSolid_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_CSGSolid_Default SimGeomSolidModel_CSGSolid_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_CSGSolid_Default_type > SimGeomSolidModel_CSGSolid_Default_sequence;
        typedef SimGeomSolidModel_CSGSolid_Default_sequence::iterator SimGeomSolidModel_CSGSolid_Default_iterator;
        typedef SimGeomSolidModel_CSGSolid_Default_sequence::const_iterator SimGeomSolidModel_CSGSolid_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_CSGSolid_Default_type, char > SimGeomSolidModel_CSGSolid_Default_traits;

        const SimGeomSolidModel_CSGSolid_Default_sequence&
        SimGeomSolidModel_CSGSolid_Default () const;

        SimGeomSolidModel_CSGSolid_Default_sequence&
        SimGeomSolidModel_CSGSolid_Default ();

        void
        SimGeomSolidModel_CSGSolid_Default (const SimGeomSolidModel_CSGSolid_Default_sequence& s);

        // SimGeomSolidModel_FacetedBrep_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_FacetedBrep_Default SimGeomSolidModel_FacetedBrep_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_FacetedBrep_Default_type > SimGeomSolidModel_FacetedBrep_Default_sequence;
        typedef SimGeomSolidModel_FacetedBrep_Default_sequence::iterator SimGeomSolidModel_FacetedBrep_Default_iterator;
        typedef SimGeomSolidModel_FacetedBrep_Default_sequence::const_iterator SimGeomSolidModel_FacetedBrep_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_FacetedBrep_Default_type, char > SimGeomSolidModel_FacetedBrep_Default_traits;

        const SimGeomSolidModel_FacetedBrep_Default_sequence&
        SimGeomSolidModel_FacetedBrep_Default () const;

        SimGeomSolidModel_FacetedBrep_Default_sequence&
        SimGeomSolidModel_FacetedBrep_Default ();

        void
        SimGeomSolidModel_FacetedBrep_Default (const SimGeomSolidModel_FacetedBrep_Default_sequence& s);

        // SimGeomSolidModel_FacetedBrepWithVoids_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_FacetedBrepWithVoids_Default SimGeomSolidModel_FacetedBrepWithVoids_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_FacetedBrepWithVoids_Default_type > SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence;
        typedef SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence::iterator SimGeomSolidModel_FacetedBrepWithVoids_Default_iterator;
        typedef SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence::const_iterator SimGeomSolidModel_FacetedBrepWithVoids_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_FacetedBrepWithVoids_Default_type, char > SimGeomSolidModel_FacetedBrepWithVoids_Default_traits;

        const SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence&
        SimGeomSolidModel_FacetedBrepWithVoids_Default () const;

        SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence&
        SimGeomSolidModel_FacetedBrepWithVoids_Default ();

        void
        SimGeomSolidModel_FacetedBrepWithVoids_Default (const SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence& s);

        // SimGeomSolidModel_ManifoldSolidBrep_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_ManifoldSolidBrep_Default SimGeomSolidModel_ManifoldSolidBrep_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_ManifoldSolidBrep_Default_type > SimGeomSolidModel_ManifoldSolidBrep_Default_sequence;
        typedef SimGeomSolidModel_ManifoldSolidBrep_Default_sequence::iterator SimGeomSolidModel_ManifoldSolidBrep_Default_iterator;
        typedef SimGeomSolidModel_ManifoldSolidBrep_Default_sequence::const_iterator SimGeomSolidModel_ManifoldSolidBrep_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_ManifoldSolidBrep_Default_type, char > SimGeomSolidModel_ManifoldSolidBrep_Default_traits;

        const SimGeomSolidModel_ManifoldSolidBrep_Default_sequence&
        SimGeomSolidModel_ManifoldSolidBrep_Default () const;

        SimGeomSolidModel_ManifoldSolidBrep_Default_sequence&
        SimGeomSolidModel_ManifoldSolidBrep_Default ();

        void
        SimGeomSolidModel_ManifoldSolidBrep_Default (const SimGeomSolidModel_ManifoldSolidBrep_Default_sequence& s);

        // SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type > SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence;
        typedef SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence::iterator SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator;
        typedef SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence::const_iterator SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type, char > SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits;

        const SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence&
        SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid () const;

        SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence&
        SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid ();

        void
        SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid (const SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence& s);

        // SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_type > SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence;
        typedef SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence::iterator SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_iterator;
        typedef SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence::const_iterator SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_type, char > SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_traits;

        const SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence&
        SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid () const;

        SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence&
        SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid ();

        void
        SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid (const SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence& s);

        // SimGeomSolidModel_SweptDiskSolid_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSolidModel_SweptDiskSolid_Default SimGeomSolidModel_SweptDiskSolid_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSolidModel_SweptDiskSolid_Default_type > SimGeomSolidModel_SweptDiskSolid_Default_sequence;
        typedef SimGeomSolidModel_SweptDiskSolid_Default_sequence::iterator SimGeomSolidModel_SweptDiskSolid_Default_iterator;
        typedef SimGeomSolidModel_SweptDiskSolid_Default_sequence::const_iterator SimGeomSolidModel_SweptDiskSolid_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSolidModel_SweptDiskSolid_Default_type, char > SimGeomSolidModel_SweptDiskSolid_Default_traits;

        const SimGeomSolidModel_SweptDiskSolid_Default_sequence&
        SimGeomSolidModel_SweptDiskSolid_Default () const;

        SimGeomSolidModel_SweptDiskSolid_Default_sequence&
        SimGeomSolidModel_SweptDiskSolid_Default ();

        void
        SimGeomSolidModel_SweptDiskSolid_Default (const SimGeomSolidModel_SweptDiskSolid_Default_sequence& s);

        // SimGeomSurface_BoundedSurface_CurveBoundedPlane
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_BoundedSurface_CurveBoundedPlane SimGeomSurface_BoundedSurface_CurveBoundedPlane_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_BoundedSurface_CurveBoundedPlane_type > SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence;
        typedef SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence::iterator SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator;
        typedef SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence::const_iterator SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_BoundedSurface_CurveBoundedPlane_type, char > SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits;

        const SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence&
        SimGeomSurface_BoundedSurface_CurveBoundedPlane () const;

        SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence&
        SimGeomSurface_BoundedSurface_CurveBoundedPlane ();

        void
        SimGeomSurface_BoundedSurface_CurveBoundedPlane (const SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence& s);

        // SimGeomSurface_BoundedSurface_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_BoundedSurface_Default SimGeomSurface_BoundedSurface_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_BoundedSurface_Default_type > SimGeomSurface_BoundedSurface_Default_sequence;
        typedef SimGeomSurface_BoundedSurface_Default_sequence::iterator SimGeomSurface_BoundedSurface_Default_iterator;
        typedef SimGeomSurface_BoundedSurface_Default_sequence::const_iterator SimGeomSurface_BoundedSurface_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_BoundedSurface_Default_type, char > SimGeomSurface_BoundedSurface_Default_traits;

        const SimGeomSurface_BoundedSurface_Default_sequence&
        SimGeomSurface_BoundedSurface_Default () const;

        SimGeomSurface_BoundedSurface_Default_sequence&
        SimGeomSurface_BoundedSurface_Default ();

        void
        SimGeomSurface_BoundedSurface_Default (const SimGeomSurface_BoundedSurface_Default_sequence& s);

        // SimGeomSurface_BoundedSurface_RectangularTrimmedSurface
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_BoundedSurface_RectangularTrimmedSurface SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_type > SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence;
        typedef SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence::iterator SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_iterator;
        typedef SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence::const_iterator SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_type, char > SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_traits;

        const SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence&
        SimGeomSurface_BoundedSurface_RectangularTrimmedSurface () const;

        SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence&
        SimGeomSurface_BoundedSurface_RectangularTrimmedSurface ();

        void
        SimGeomSurface_BoundedSurface_RectangularTrimmedSurface (const SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence& s);

        // SimGeomSurface_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_Default_Default SimGeomSurface_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_Default_Default_type > SimGeomSurface_Default_Default_sequence;
        typedef SimGeomSurface_Default_Default_sequence::iterator SimGeomSurface_Default_Default_iterator;
        typedef SimGeomSurface_Default_Default_sequence::const_iterator SimGeomSurface_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_Default_Default_type, char > SimGeomSurface_Default_Default_traits;

        const SimGeomSurface_Default_Default_sequence&
        SimGeomSurface_Default_Default () const;

        SimGeomSurface_Default_Default_sequence&
        SimGeomSurface_Default_Default ();

        void
        SimGeomSurface_Default_Default (const SimGeomSurface_Default_Default_sequence& s);

        // SimGeomSurface_ElementarySurface_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_ElementarySurface_Default SimGeomSurface_ElementarySurface_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_ElementarySurface_Default_type > SimGeomSurface_ElementarySurface_Default_sequence;
        typedef SimGeomSurface_ElementarySurface_Default_sequence::iterator SimGeomSurface_ElementarySurface_Default_iterator;
        typedef SimGeomSurface_ElementarySurface_Default_sequence::const_iterator SimGeomSurface_ElementarySurface_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_ElementarySurface_Default_type, char > SimGeomSurface_ElementarySurface_Default_traits;

        const SimGeomSurface_ElementarySurface_Default_sequence&
        SimGeomSurface_ElementarySurface_Default () const;

        SimGeomSurface_ElementarySurface_Default_sequence&
        SimGeomSurface_ElementarySurface_Default ();

        void
        SimGeomSurface_ElementarySurface_Default (const SimGeomSurface_ElementarySurface_Default_sequence& s);

        // SimGeomSurface_ElementarySurface_Plane
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_ElementarySurface_Plane SimGeomSurface_ElementarySurface_Plane_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_ElementarySurface_Plane_type > SimGeomSurface_ElementarySurface_Plane_sequence;
        typedef SimGeomSurface_ElementarySurface_Plane_sequence::iterator SimGeomSurface_ElementarySurface_Plane_iterator;
        typedef SimGeomSurface_ElementarySurface_Plane_sequence::const_iterator SimGeomSurface_ElementarySurface_Plane_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_ElementarySurface_Plane_type, char > SimGeomSurface_ElementarySurface_Plane_traits;

        const SimGeomSurface_ElementarySurface_Plane_sequence&
        SimGeomSurface_ElementarySurface_Plane () const;

        SimGeomSurface_ElementarySurface_Plane_sequence&
        SimGeomSurface_ElementarySurface_Plane ();

        void
        SimGeomSurface_ElementarySurface_Plane (const SimGeomSurface_ElementarySurface_Plane_sequence& s);

        // SimGeomSurface_SweptSurface_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_SweptSurface_Default SimGeomSurface_SweptSurface_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_SweptSurface_Default_type > SimGeomSurface_SweptSurface_Default_sequence;
        typedef SimGeomSurface_SweptSurface_Default_sequence::iterator SimGeomSurface_SweptSurface_Default_iterator;
        typedef SimGeomSurface_SweptSurface_Default_sequence::const_iterator SimGeomSurface_SweptSurface_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_SweptSurface_Default_type, char > SimGeomSurface_SweptSurface_Default_traits;

        const SimGeomSurface_SweptSurface_Default_sequence&
        SimGeomSurface_SweptSurface_Default () const;

        SimGeomSurface_SweptSurface_Default_sequence&
        SimGeomSurface_SweptSurface_Default ();

        void
        SimGeomSurface_SweptSurface_Default (const SimGeomSurface_SweptSurface_Default_sequence& s);

        // SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_type > SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence;
        typedef SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence::iterator SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_iterator;
        typedef SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence::const_iterator SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_type, char > SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_traits;

        const SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence&
        SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion () const;

        SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence&
        SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion ();

        void
        SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion (const SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence& s);

        // SimGeomSurface_SweptSurface_SurfaceOfRevolution
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurface_SweptSurface_SurfaceOfRevolution SimGeomSurface_SweptSurface_SurfaceOfRevolution_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurface_SweptSurface_SurfaceOfRevolution_type > SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence;
        typedef SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence::iterator SimGeomSurface_SweptSurface_SurfaceOfRevolution_iterator;
        typedef SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence::const_iterator SimGeomSurface_SweptSurface_SurfaceOfRevolution_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurface_SweptSurface_SurfaceOfRevolution_type, char > SimGeomSurface_SweptSurface_SurfaceOfRevolution_traits;

        const SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence&
        SimGeomSurface_SweptSurface_SurfaceOfRevolution () const;

        SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence&
        SimGeomSurface_SweptSurface_SurfaceOfRevolution ();

        void
        SimGeomSurface_SweptSurface_SurfaceOfRevolution (const SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence& s);

        // SimGeomSurfaceModel_FaceBasedSurfaceModel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type > SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence;
        typedef SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence::iterator SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator;
        typedef SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence::const_iterator SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type, char > SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits;

        const SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence&
        SimGeomSurfaceModel_FaceBasedSurfaceModel_Default () const;

        SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence&
        SimGeomSurfaceModel_FaceBasedSurfaceModel_Default ();

        void
        SimGeomSurfaceModel_FaceBasedSurfaceModel_Default (const SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence& s);

        // SimGeomSurfaceModel_ShellBasedSurfaceModel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomSurfaceModel_ShellBasedSurfaceModel_Default SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_type > SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence;
        typedef SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence::iterator SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_iterator;
        typedef SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence::const_iterator SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_type, char > SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_traits;

        const SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence&
        SimGeomSurfaceModel_ShellBasedSurfaceModel_Default () const;

        SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence&
        SimGeomSurfaceModel_ShellBasedSurfaceModel_Default ();

        void
        SimGeomSurfaceModel_ShellBasedSurfaceModel_Default (const SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence& s);

        // SimGeomVector_Vector_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomVector_Vector_Default SimGeomVector_Vector_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomVector_Vector_Default_type > SimGeomVector_Vector_Default_sequence;
        typedef SimGeomVector_Vector_Default_sequence::iterator SimGeomVector_Vector_Default_iterator;
        typedef SimGeomVector_Vector_Default_sequence::const_iterator SimGeomVector_Vector_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomVector_Vector_Default_type, char > SimGeomVector_Vector_Default_traits;

        const SimGeomVector_Vector_Default_sequence&
        SimGeomVector_Vector_Default () const;

        SimGeomVector_Vector_Default_sequence&
        SimGeomVector_Vector_Default ();

        void
        SimGeomVector_Vector_Default (const SimGeomVector_Vector_Default_sequence& s);

        // SimGeomVector_Vector_Direction
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGeomVector_Vector_Direction SimGeomVector_Vector_Direction_type;
        typedef ::xsd::cxx::tree::sequence< SimGeomVector_Vector_Direction_type > SimGeomVector_Vector_Direction_sequence;
        typedef SimGeomVector_Vector_Direction_sequence::iterator SimGeomVector_Vector_Direction_iterator;
        typedef SimGeomVector_Vector_Direction_sequence::const_iterator SimGeomVector_Vector_Direction_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGeomVector_Vector_Direction_type, char > SimGeomVector_Vector_Direction_traits;

        const SimGeomVector_Vector_Direction_sequence&
        SimGeomVector_Vector_Direction () const;

        SimGeomVector_Vector_Direction_sequence&
        SimGeomVector_Vector_Direction ();

        void
        SimGeomVector_Vector_Direction (const SimGeomVector_Vector_Direction_sequence& s);

        // SimGlazingPanelParams_Panel_Glazing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimGlazingPanelParams_Panel_Glazing SimGlazingPanelParams_Panel_Glazing_type;
        typedef ::xsd::cxx::tree::sequence< SimGlazingPanelParams_Panel_Glazing_type > SimGlazingPanelParams_Panel_Glazing_sequence;
        typedef SimGlazingPanelParams_Panel_Glazing_sequence::iterator SimGlazingPanelParams_Panel_Glazing_iterator;
        typedef SimGlazingPanelParams_Panel_Glazing_sequence::const_iterator SimGlazingPanelParams_Panel_Glazing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGlazingPanelParams_Panel_Glazing_type, char > SimGlazingPanelParams_Panel_Glazing_traits;

        const SimGlazingPanelParams_Panel_Glazing_sequence&
        SimGlazingPanelParams_Panel_Glazing () const;

        SimGlazingPanelParams_Panel_Glazing_sequence&
        SimGlazingPanelParams_Panel_Glazing ();

        void
        SimGlazingPanelParams_Panel_Glazing (const SimGlazingPanelParams_Panel_Glazing_sequence& s);

        // SimGridAxis_GridAxis_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimGridAxis_GridAxis_Default SimGridAxis_GridAxis_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGridAxis_GridAxis_Default_type > SimGridAxis_GridAxis_Default_sequence;
        typedef SimGridAxis_GridAxis_Default_sequence::iterator SimGridAxis_GridAxis_Default_iterator;
        typedef SimGridAxis_GridAxis_Default_sequence::const_iterator SimGridAxis_GridAxis_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGridAxis_GridAxis_Default_type, char > SimGridAxis_GridAxis_Default_traits;

        const SimGridAxis_GridAxis_Default_sequence&
        SimGridAxis_GridAxis_Default () const;

        SimGridAxis_GridAxis_Default_sequence&
        SimGridAxis_GridAxis_Default ();

        void
        SimGridAxis_GridAxis_Default (const SimGridAxis_GridAxis_Default_sequence& s);

        // SimGridPlacement_GridPlacement_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimGridPlacement_GridPlacement_Default SimGridPlacement_GridPlacement_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGridPlacement_GridPlacement_Default_type > SimGridPlacement_GridPlacement_Default_sequence;
        typedef SimGridPlacement_GridPlacement_Default_sequence::iterator SimGridPlacement_GridPlacement_Default_iterator;
        typedef SimGridPlacement_GridPlacement_Default_sequence::const_iterator SimGridPlacement_GridPlacement_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGridPlacement_GridPlacement_Default_type, char > SimGridPlacement_GridPlacement_Default_traits;

        const SimGridPlacement_GridPlacement_Default_sequence&
        SimGridPlacement_GridPlacement_Default () const;

        SimGridPlacement_GridPlacement_Default_sequence&
        SimGridPlacement_GridPlacement_Default ();

        void
        SimGridPlacement_GridPlacement_Default (const SimGridPlacement_GridPlacement_Default_sequence& s);

        // SimGroundHeatTransferBasement_BasementTransferModel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimGroundHeatTransferBasement_BasementTransferModel_Default SimGroundHeatTransferBasement_BasementTransferModel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroundHeatTransferBasement_BasementTransferModel_Default_type > SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence;
        typedef SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence::iterator SimGroundHeatTransferBasement_BasementTransferModel_Default_iterator;
        typedef SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence::const_iterator SimGroundHeatTransferBasement_BasementTransferModel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroundHeatTransferBasement_BasementTransferModel_Default_type, char > SimGroundHeatTransferBasement_BasementTransferModel_Default_traits;

        const SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence&
        SimGroundHeatTransferBasement_BasementTransferModel_Default () const;

        SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence&
        SimGroundHeatTransferBasement_BasementTransferModel_Default ();

        void
        SimGroundHeatTransferBasement_BasementTransferModel_Default (const SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence& s);

        // SimGroundHeatTransferSlab_SlabTransferModel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimGroundHeatTransferSlab_SlabTransferModel_Default SimGroundHeatTransferSlab_SlabTransferModel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroundHeatTransferSlab_SlabTransferModel_Default_type > SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence;
        typedef SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence::iterator SimGroundHeatTransferSlab_SlabTransferModel_Default_iterator;
        typedef SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence::const_iterator SimGroundHeatTransferSlab_SlabTransferModel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroundHeatTransferSlab_SlabTransferModel_Default_type, char > SimGroundHeatTransferSlab_SlabTransferModel_Default_traits;

        const SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence&
        SimGroundHeatTransferSlab_SlabTransferModel_Default () const;

        SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence&
        SimGroundHeatTransferSlab_SlabTransferModel_Default ();

        void
        SimGroundHeatTransferSlab_SlabTransferModel_Default (const SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence& s);

        // SimGroup_BldgCompGroup_AirTerminal
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgCompGroup_AirTerminal SimGroup_BldgCompGroup_AirTerminal_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgCompGroup_AirTerminal_type > SimGroup_BldgCompGroup_AirTerminal_sequence;
        typedef SimGroup_BldgCompGroup_AirTerminal_sequence::iterator SimGroup_BldgCompGroup_AirTerminal_iterator;
        typedef SimGroup_BldgCompGroup_AirTerminal_sequence::const_iterator SimGroup_BldgCompGroup_AirTerminal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgCompGroup_AirTerminal_type, char > SimGroup_BldgCompGroup_AirTerminal_traits;

        const SimGroup_BldgCompGroup_AirTerminal_sequence&
        SimGroup_BldgCompGroup_AirTerminal () const;

        SimGroup_BldgCompGroup_AirTerminal_sequence&
        SimGroup_BldgCompGroup_AirTerminal ();

        void
        SimGroup_BldgCompGroup_AirTerminal (const SimGroup_BldgCompGroup_AirTerminal_sequence& s);

        // SimGroup_BldgCompGroup_Coil
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgCompGroup_Coil SimGroup_BldgCompGroup_Coil_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgCompGroup_Coil_type > SimGroup_BldgCompGroup_Coil_sequence;
        typedef SimGroup_BldgCompGroup_Coil_sequence::iterator SimGroup_BldgCompGroup_Coil_iterator;
        typedef SimGroup_BldgCompGroup_Coil_sequence::const_iterator SimGroup_BldgCompGroup_Coil_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgCompGroup_Coil_type, char > SimGroup_BldgCompGroup_Coil_traits;

        const SimGroup_BldgCompGroup_Coil_sequence&
        SimGroup_BldgCompGroup_Coil () const;

        SimGroup_BldgCompGroup_Coil_sequence&
        SimGroup_BldgCompGroup_Coil ();

        void
        SimGroup_BldgCompGroup_Coil (const SimGroup_BldgCompGroup_Coil_sequence& s);

        // SimGroup_BldgCompGroup_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgCompGroup_Default SimGroup_BldgCompGroup_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgCompGroup_Default_type > SimGroup_BldgCompGroup_Default_sequence;
        typedef SimGroup_BldgCompGroup_Default_sequence::iterator SimGroup_BldgCompGroup_Default_iterator;
        typedef SimGroup_BldgCompGroup_Default_sequence::const_iterator SimGroup_BldgCompGroup_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgCompGroup_Default_type, char > SimGroup_BldgCompGroup_Default_traits;

        const SimGroup_BldgCompGroup_Default_sequence&
        SimGroup_BldgCompGroup_Default () const;

        SimGroup_BldgCompGroup_Default_sequence&
        SimGroup_BldgCompGroup_Default ();

        void
        SimGroup_BldgCompGroup_Default (const SimGroup_BldgCompGroup_Default_sequence& s);

        // SimGroup_BldgCompGroup_Sensor
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgCompGroup_Sensor SimGroup_BldgCompGroup_Sensor_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgCompGroup_Sensor_type > SimGroup_BldgCompGroup_Sensor_sequence;
        typedef SimGroup_BldgCompGroup_Sensor_sequence::iterator SimGroup_BldgCompGroup_Sensor_iterator;
        typedef SimGroup_BldgCompGroup_Sensor_sequence::const_iterator SimGroup_BldgCompGroup_Sensor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgCompGroup_Sensor_type, char > SimGroup_BldgCompGroup_Sensor_traits;

        const SimGroup_BldgCompGroup_Sensor_sequence&
        SimGroup_BldgCompGroup_Sensor () const;

        SimGroup_BldgCompGroup_Sensor_sequence&
        SimGroup_BldgCompGroup_Sensor ();

        void
        SimGroup_BldgCompGroup_Sensor (const SimGroup_BldgCompGroup_Sensor_sequence& s);

        // SimGroup_BldgCompGroup_ZoneController
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgCompGroup_ZoneController SimGroup_BldgCompGroup_ZoneController_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgCompGroup_ZoneController_type > SimGroup_BldgCompGroup_ZoneController_sequence;
        typedef SimGroup_BldgCompGroup_ZoneController_sequence::iterator SimGroup_BldgCompGroup_ZoneController_iterator;
        typedef SimGroup_BldgCompGroup_ZoneController_sequence::const_iterator SimGroup_BldgCompGroup_ZoneController_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgCompGroup_ZoneController_type, char > SimGroup_BldgCompGroup_ZoneController_traits;

        const SimGroup_BldgCompGroup_ZoneController_sequence&
        SimGroup_BldgCompGroup_ZoneController () const;

        SimGroup_BldgCompGroup_ZoneController_sequence&
        SimGroup_BldgCompGroup_ZoneController ();

        void
        SimGroup_BldgCompGroup_ZoneController (const SimGroup_BldgCompGroup_ZoneController_sequence& s);

        // SimGroup_BldgCompGroup_ZoneEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgCompGroup_ZoneEquipment SimGroup_BldgCompGroup_ZoneEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgCompGroup_ZoneEquipment_type > SimGroup_BldgCompGroup_ZoneEquipment_sequence;
        typedef SimGroup_BldgCompGroup_ZoneEquipment_sequence::iterator SimGroup_BldgCompGroup_ZoneEquipment_iterator;
        typedef SimGroup_BldgCompGroup_ZoneEquipment_sequence::const_iterator SimGroup_BldgCompGroup_ZoneEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgCompGroup_ZoneEquipment_type, char > SimGroup_BldgCompGroup_ZoneEquipment_traits;

        const SimGroup_BldgCompGroup_ZoneEquipment_sequence&
        SimGroup_BldgCompGroup_ZoneEquipment () const;

        SimGroup_BldgCompGroup_ZoneEquipment_sequence&
        SimGroup_BldgCompGroup_ZoneEquipment ();

        void
        SimGroup_BldgCompGroup_ZoneEquipment (const SimGroup_BldgCompGroup_ZoneEquipment_sequence& s);

        // SimGroup_BldgElementGroup_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BldgElementGroup_Default SimGroup_BldgElementGroup_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BldgElementGroup_Default_type > SimGroup_BldgElementGroup_Default_sequence;
        typedef SimGroup_BldgElementGroup_Default_sequence::iterator SimGroup_BldgElementGroup_Default_iterator;
        typedef SimGroup_BldgElementGroup_Default_sequence::const_iterator SimGroup_BldgElementGroup_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BldgElementGroup_Default_type, char > SimGroup_BldgElementGroup_Default_traits;

        const SimGroup_BldgElementGroup_Default_sequence&
        SimGroup_BldgElementGroup_Default () const;

        SimGroup_BldgElementGroup_Default_sequence&
        SimGroup_BldgElementGroup_Default ();

        void
        SimGroup_BldgElementGroup_Default (const SimGroup_BldgElementGroup_Default_sequence& s);

        // SimGroup_BuildingGroup_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_BuildingGroup_Default SimGroup_BuildingGroup_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_BuildingGroup_Default_type > SimGroup_BuildingGroup_Default_sequence;
        typedef SimGroup_BuildingGroup_Default_sequence::iterator SimGroup_BuildingGroup_Default_iterator;
        typedef SimGroup_BuildingGroup_Default_sequence::const_iterator SimGroup_BuildingGroup_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_BuildingGroup_Default_type, char > SimGroup_BuildingGroup_Default_traits;

        const SimGroup_BuildingGroup_Default_sequence&
        SimGroup_BuildingGroup_Default () const;

        SimGroup_BuildingGroup_Default_sequence&
        SimGroup_BuildingGroup_Default ();

        void
        SimGroup_BuildingGroup_Default (const SimGroup_BuildingGroup_Default_sequence& s);

        // SimGroup_ConnectorList_AirConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ConnectorList_AirConnections SimGroup_ConnectorList_AirConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ConnectorList_AirConnections_type > SimGroup_ConnectorList_AirConnections_sequence;
        typedef SimGroup_ConnectorList_AirConnections_sequence::iterator SimGroup_ConnectorList_AirConnections_iterator;
        typedef SimGroup_ConnectorList_AirConnections_sequence::const_iterator SimGroup_ConnectorList_AirConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ConnectorList_AirConnections_type, char > SimGroup_ConnectorList_AirConnections_traits;

        const SimGroup_ConnectorList_AirConnections_sequence&
        SimGroup_ConnectorList_AirConnections () const;

        SimGroup_ConnectorList_AirConnections_sequence&
        SimGroup_ConnectorList_AirConnections ();

        void
        SimGroup_ConnectorList_AirConnections (const SimGroup_ConnectorList_AirConnections_sequence& s);

        // SimGroup_ConnectorList_ChilledWaterConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ConnectorList_ChilledWaterConnections SimGroup_ConnectorList_ChilledWaterConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ConnectorList_ChilledWaterConnections_type > SimGroup_ConnectorList_ChilledWaterConnections_sequence;
        typedef SimGroup_ConnectorList_ChilledWaterConnections_sequence::iterator SimGroup_ConnectorList_ChilledWaterConnections_iterator;
        typedef SimGroup_ConnectorList_ChilledWaterConnections_sequence::const_iterator SimGroup_ConnectorList_ChilledWaterConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ConnectorList_ChilledWaterConnections_type, char > SimGroup_ConnectorList_ChilledWaterConnections_traits;

        const SimGroup_ConnectorList_ChilledWaterConnections_sequence&
        SimGroup_ConnectorList_ChilledWaterConnections () const;

        SimGroup_ConnectorList_ChilledWaterConnections_sequence&
        SimGroup_ConnectorList_ChilledWaterConnections ();

        void
        SimGroup_ConnectorList_ChilledWaterConnections (const SimGroup_ConnectorList_ChilledWaterConnections_sequence& s);

        // SimGroup_ConnectorList_CondenserConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ConnectorList_CondenserConnections SimGroup_ConnectorList_CondenserConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ConnectorList_CondenserConnections_type > SimGroup_ConnectorList_CondenserConnections_sequence;
        typedef SimGroup_ConnectorList_CondenserConnections_sequence::iterator SimGroup_ConnectorList_CondenserConnections_iterator;
        typedef SimGroup_ConnectorList_CondenserConnections_sequence::const_iterator SimGroup_ConnectorList_CondenserConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ConnectorList_CondenserConnections_type, char > SimGroup_ConnectorList_CondenserConnections_traits;

        const SimGroup_ConnectorList_CondenserConnections_sequence&
        SimGroup_ConnectorList_CondenserConnections () const;

        SimGroup_ConnectorList_CondenserConnections_sequence&
        SimGroup_ConnectorList_CondenserConnections ();

        void
        SimGroup_ConnectorList_CondenserConnections (const SimGroup_ConnectorList_CondenserConnections_sequence& s);

        // SimGroup_ConnectorList_ControllerConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ConnectorList_ControllerConnections SimGroup_ConnectorList_ControllerConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ConnectorList_ControllerConnections_type > SimGroup_ConnectorList_ControllerConnections_sequence;
        typedef SimGroup_ConnectorList_ControllerConnections_sequence::iterator SimGroup_ConnectorList_ControllerConnections_iterator;
        typedef SimGroup_ConnectorList_ControllerConnections_sequence::const_iterator SimGroup_ConnectorList_ControllerConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ConnectorList_ControllerConnections_type, char > SimGroup_ConnectorList_ControllerConnections_traits;

        const SimGroup_ConnectorList_ControllerConnections_sequence&
        SimGroup_ConnectorList_ControllerConnections () const;

        SimGroup_ConnectorList_ControllerConnections_sequence&
        SimGroup_ConnectorList_ControllerConnections ();

        void
        SimGroup_ConnectorList_ControllerConnections (const SimGroup_ConnectorList_ControllerConnections_sequence& s);

        // SimGroup_ConnectorList_HotWaterConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ConnectorList_HotWaterConnections SimGroup_ConnectorList_HotWaterConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ConnectorList_HotWaterConnections_type > SimGroup_ConnectorList_HotWaterConnections_sequence;
        typedef SimGroup_ConnectorList_HotWaterConnections_sequence::iterator SimGroup_ConnectorList_HotWaterConnections_iterator;
        typedef SimGroup_ConnectorList_HotWaterConnections_sequence::const_iterator SimGroup_ConnectorList_HotWaterConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ConnectorList_HotWaterConnections_type, char > SimGroup_ConnectorList_HotWaterConnections_traits;

        const SimGroup_ConnectorList_HotWaterConnections_sequence&
        SimGroup_ConnectorList_HotWaterConnections () const;

        SimGroup_ConnectorList_HotWaterConnections_sequence&
        SimGroup_ConnectorList_HotWaterConnections ();

        void
        SimGroup_ConnectorList_HotWaterConnections (const SimGroup_ConnectorList_HotWaterConnections_sequence& s);

        // SimGroup_ConnectorList_SteamConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ConnectorList_SteamConnections SimGroup_ConnectorList_SteamConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ConnectorList_SteamConnections_type > SimGroup_ConnectorList_SteamConnections_sequence;
        typedef SimGroup_ConnectorList_SteamConnections_sequence::iterator SimGroup_ConnectorList_SteamConnections_iterator;
        typedef SimGroup_ConnectorList_SteamConnections_sequence::const_iterator SimGroup_ConnectorList_SteamConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ConnectorList_SteamConnections_type, char > SimGroup_ConnectorList_SteamConnections_traits;

        const SimGroup_ConnectorList_SteamConnections_sequence&
        SimGroup_ConnectorList_SteamConnections () const;

        SimGroup_ConnectorList_SteamConnections_sequence&
        SimGroup_ConnectorList_SteamConnections ();

        void
        SimGroup_ConnectorList_SteamConnections (const SimGroup_ConnectorList_SteamConnections_sequence& s);

        // SimGroup_ControllerList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_ControllerList_Default SimGroup_ControllerList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_ControllerList_Default_type > SimGroup_ControllerList_Default_sequence;
        typedef SimGroup_ControllerList_Default_sequence::iterator SimGroup_ControllerList_Default_iterator;
        typedef SimGroup_ControllerList_Default_sequence::const_iterator SimGroup_ControllerList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_ControllerList_Default_type, char > SimGroup_ControllerList_Default_traits;

        const SimGroup_ControllerList_Default_sequence&
        SimGroup_ControllerList_Default () const;

        SimGroup_ControllerList_Default_sequence&
        SimGroup_ControllerList_Default ();

        void
        SimGroup_ControllerList_Default (const SimGroup_ControllerList_Default_sequence& s);

        // SimGroup_DefaultGroup_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_DefaultGroup_Default SimGroup_DefaultGroup_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_DefaultGroup_Default_type > SimGroup_DefaultGroup_Default_sequence;
        typedef SimGroup_DefaultGroup_Default_sequence::iterator SimGroup_DefaultGroup_Default_iterator;
        typedef SimGroup_DefaultGroup_Default_sequence::const_iterator SimGroup_DefaultGroup_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_DefaultGroup_Default_type, char > SimGroup_DefaultGroup_Default_traits;

        const SimGroup_DefaultGroup_Default_sequence&
        SimGroup_DefaultGroup_Default () const;

        SimGroup_DefaultGroup_Default_sequence&
        SimGroup_DefaultGroup_Default ();

        void
        SimGroup_DefaultGroup_Default (const SimGroup_DefaultGroup_Default_sequence& s);

        // SimGroup_DefaultList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_DefaultList_Default SimGroup_DefaultList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_DefaultList_Default_type > SimGroup_DefaultList_Default_sequence;
        typedef SimGroup_DefaultList_Default_sequence::iterator SimGroup_DefaultList_Default_iterator;
        typedef SimGroup_DefaultList_Default_sequence::const_iterator SimGroup_DefaultList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_DefaultList_Default_type, char > SimGroup_DefaultList_Default_traits;

        const SimGroup_DefaultList_Default_sequence&
        SimGroup_DefaultList_Default () const;

        SimGroup_DefaultList_Default_sequence&
        SimGroup_DefaultList_Default ();

        void
        SimGroup_DefaultList_Default (const SimGroup_DefaultList_Default_sequence& s);

        // SimGroup_EquipmentList_CondenserEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_CondenserEquipment SimGroup_EquipmentList_CondenserEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_CondenserEquipment_type > SimGroup_EquipmentList_CondenserEquipment_sequence;
        typedef SimGroup_EquipmentList_CondenserEquipment_sequence::iterator SimGroup_EquipmentList_CondenserEquipment_iterator;
        typedef SimGroup_EquipmentList_CondenserEquipment_sequence::const_iterator SimGroup_EquipmentList_CondenserEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_CondenserEquipment_type, char > SimGroup_EquipmentList_CondenserEquipment_traits;

        const SimGroup_EquipmentList_CondenserEquipment_sequence&
        SimGroup_EquipmentList_CondenserEquipment () const;

        SimGroup_EquipmentList_CondenserEquipment_sequence&
        SimGroup_EquipmentList_CondenserEquipment ();

        void
        SimGroup_EquipmentList_CondenserEquipment (const SimGroup_EquipmentList_CondenserEquipment_sequence& s);

        // SimGroup_EquipmentList_ElectricalLoadCenter
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_ElectricalLoadCenter SimGroup_EquipmentList_ElectricalLoadCenter_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_ElectricalLoadCenter_type > SimGroup_EquipmentList_ElectricalLoadCenter_sequence;
        typedef SimGroup_EquipmentList_ElectricalLoadCenter_sequence::iterator SimGroup_EquipmentList_ElectricalLoadCenter_iterator;
        typedef SimGroup_EquipmentList_ElectricalLoadCenter_sequence::const_iterator SimGroup_EquipmentList_ElectricalLoadCenter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_ElectricalLoadCenter_type, char > SimGroup_EquipmentList_ElectricalLoadCenter_traits;

        const SimGroup_EquipmentList_ElectricalLoadCenter_sequence&
        SimGroup_EquipmentList_ElectricalLoadCenter () const;

        SimGroup_EquipmentList_ElectricalLoadCenter_sequence&
        SimGroup_EquipmentList_ElectricalLoadCenter ();

        void
        SimGroup_EquipmentList_ElectricalLoadCenter (const SimGroup_EquipmentList_ElectricalLoadCenter_sequence& s);

        // SimGroup_EquipmentList_OutdoorAirSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_OutdoorAirSystem SimGroup_EquipmentList_OutdoorAirSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_OutdoorAirSystem_type > SimGroup_EquipmentList_OutdoorAirSystem_sequence;
        typedef SimGroup_EquipmentList_OutdoorAirSystem_sequence::iterator SimGroup_EquipmentList_OutdoorAirSystem_iterator;
        typedef SimGroup_EquipmentList_OutdoorAirSystem_sequence::const_iterator SimGroup_EquipmentList_OutdoorAirSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_OutdoorAirSystem_type, char > SimGroup_EquipmentList_OutdoorAirSystem_traits;

        const SimGroup_EquipmentList_OutdoorAirSystem_sequence&
        SimGroup_EquipmentList_OutdoorAirSystem () const;

        SimGroup_EquipmentList_OutdoorAirSystem_sequence&
        SimGroup_EquipmentList_OutdoorAirSystem ();

        void
        SimGroup_EquipmentList_OutdoorAirSystem (const SimGroup_EquipmentList_OutdoorAirSystem_sequence& s);

        // SimGroup_EquipmentList_OutdoorAirUnit
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_OutdoorAirUnit SimGroup_EquipmentList_OutdoorAirUnit_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_OutdoorAirUnit_type > SimGroup_EquipmentList_OutdoorAirUnit_sequence;
        typedef SimGroup_EquipmentList_OutdoorAirUnit_sequence::iterator SimGroup_EquipmentList_OutdoorAirUnit_iterator;
        typedef SimGroup_EquipmentList_OutdoorAirUnit_sequence::const_iterator SimGroup_EquipmentList_OutdoorAirUnit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_OutdoorAirUnit_type, char > SimGroup_EquipmentList_OutdoorAirUnit_traits;

        const SimGroup_EquipmentList_OutdoorAirUnit_sequence&
        SimGroup_EquipmentList_OutdoorAirUnit () const;

        SimGroup_EquipmentList_OutdoorAirUnit_sequence&
        SimGroup_EquipmentList_OutdoorAirUnit ();

        void
        SimGroup_EquipmentList_OutdoorAirUnit (const SimGroup_EquipmentList_OutdoorAirUnit_sequence& s);

        // SimGroup_EquipmentList_PlantEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_PlantEquipment SimGroup_EquipmentList_PlantEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_PlantEquipment_type > SimGroup_EquipmentList_PlantEquipment_sequence;
        typedef SimGroup_EquipmentList_PlantEquipment_sequence::iterator SimGroup_EquipmentList_PlantEquipment_iterator;
        typedef SimGroup_EquipmentList_PlantEquipment_sequence::const_iterator SimGroup_EquipmentList_PlantEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_PlantEquipment_type, char > SimGroup_EquipmentList_PlantEquipment_traits;

        const SimGroup_EquipmentList_PlantEquipment_sequence&
        SimGroup_EquipmentList_PlantEquipment () const;

        SimGroup_EquipmentList_PlantEquipment_sequence&
        SimGroup_EquipmentList_PlantEquipment ();

        void
        SimGroup_EquipmentList_PlantEquipment (const SimGroup_EquipmentList_PlantEquipment_sequence& s);

        // SimGroup_EquipmentList_RefrigerationCompressor
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_RefrigerationCompressor SimGroup_EquipmentList_RefrigerationCompressor_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_RefrigerationCompressor_type > SimGroup_EquipmentList_RefrigerationCompressor_sequence;
        typedef SimGroup_EquipmentList_RefrigerationCompressor_sequence::iterator SimGroup_EquipmentList_RefrigerationCompressor_iterator;
        typedef SimGroup_EquipmentList_RefrigerationCompressor_sequence::const_iterator SimGroup_EquipmentList_RefrigerationCompressor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_RefrigerationCompressor_type, char > SimGroup_EquipmentList_RefrigerationCompressor_traits;

        const SimGroup_EquipmentList_RefrigerationCompressor_sequence&
        SimGroup_EquipmentList_RefrigerationCompressor () const;

        SimGroup_EquipmentList_RefrigerationCompressor_sequence&
        SimGroup_EquipmentList_RefrigerationCompressor ();

        void
        SimGroup_EquipmentList_RefrigerationCompressor (const SimGroup_EquipmentList_RefrigerationCompressor_sequence& s);

        // SimGroup_EquipmentList_RefrigerationEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_RefrigerationEquipment SimGroup_EquipmentList_RefrigerationEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_RefrigerationEquipment_type > SimGroup_EquipmentList_RefrigerationEquipment_sequence;
        typedef SimGroup_EquipmentList_RefrigerationEquipment_sequence::iterator SimGroup_EquipmentList_RefrigerationEquipment_iterator;
        typedef SimGroup_EquipmentList_RefrigerationEquipment_sequence::const_iterator SimGroup_EquipmentList_RefrigerationEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_RefrigerationEquipment_type, char > SimGroup_EquipmentList_RefrigerationEquipment_traits;

        const SimGroup_EquipmentList_RefrigerationEquipment_sequence&
        SimGroup_EquipmentList_RefrigerationEquipment () const;

        SimGroup_EquipmentList_RefrigerationEquipment_sequence&
        SimGroup_EquipmentList_RefrigerationEquipment ();

        void
        SimGroup_EquipmentList_RefrigerationEquipment (const SimGroup_EquipmentList_RefrigerationEquipment_sequence& s);

        // SimGroup_EquipmentList_RefrigerationLoadTransfer
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_RefrigerationLoadTransfer SimGroup_EquipmentList_RefrigerationLoadTransfer_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_RefrigerationLoadTransfer_type > SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence;
        typedef SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence::iterator SimGroup_EquipmentList_RefrigerationLoadTransfer_iterator;
        typedef SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence::const_iterator SimGroup_EquipmentList_RefrigerationLoadTransfer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_RefrigerationLoadTransfer_type, char > SimGroup_EquipmentList_RefrigerationLoadTransfer_traits;

        const SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence&
        SimGroup_EquipmentList_RefrigerationLoadTransfer () const;

        SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence&
        SimGroup_EquipmentList_RefrigerationLoadTransfer ();

        void
        SimGroup_EquipmentList_RefrigerationLoadTransfer (const SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence& s);

        // SimGroup_EquipmentList_ZoneHvac
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_EquipmentList_ZoneHvac SimGroup_EquipmentList_ZoneHvac_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_EquipmentList_ZoneHvac_type > SimGroup_EquipmentList_ZoneHvac_sequence;
        typedef SimGroup_EquipmentList_ZoneHvac_sequence::iterator SimGroup_EquipmentList_ZoneHvac_iterator;
        typedef SimGroup_EquipmentList_ZoneHvac_sequence::const_iterator SimGroup_EquipmentList_ZoneHvac_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_EquipmentList_ZoneHvac_type, char > SimGroup_EquipmentList_ZoneHvac_traits;

        const SimGroup_EquipmentList_ZoneHvac_sequence&
        SimGroup_EquipmentList_ZoneHvac () const;

        SimGroup_EquipmentList_ZoneHvac_sequence&
        SimGroup_EquipmentList_ZoneHvac ();

        void
        SimGroup_EquipmentList_ZoneHvac (const SimGroup_EquipmentList_ZoneHvac_sequence& s);

        // SimGroup_HvacDemandGroup_AirSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_HvacDemandGroup_AirSystem SimGroup_HvacDemandGroup_AirSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_HvacDemandGroup_AirSystem_type > SimGroup_HvacDemandGroup_AirSystem_sequence;
        typedef SimGroup_HvacDemandGroup_AirSystem_sequence::iterator SimGroup_HvacDemandGroup_AirSystem_iterator;
        typedef SimGroup_HvacDemandGroup_AirSystem_sequence::const_iterator SimGroup_HvacDemandGroup_AirSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_HvacDemandGroup_AirSystem_type, char > SimGroup_HvacDemandGroup_AirSystem_traits;

        const SimGroup_HvacDemandGroup_AirSystem_sequence&
        SimGroup_HvacDemandGroup_AirSystem () const;

        SimGroup_HvacDemandGroup_AirSystem_sequence&
        SimGroup_HvacDemandGroup_AirSystem ();

        void
        SimGroup_HvacDemandGroup_AirSystem (const SimGroup_HvacDemandGroup_AirSystem_sequence& s);

        // SimGroup_HvacDemandGroup_RefrigerationSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_HvacDemandGroup_RefrigerationSystem SimGroup_HvacDemandGroup_RefrigerationSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_HvacDemandGroup_RefrigerationSystem_type > SimGroup_HvacDemandGroup_RefrigerationSystem_sequence;
        typedef SimGroup_HvacDemandGroup_RefrigerationSystem_sequence::iterator SimGroup_HvacDemandGroup_RefrigerationSystem_iterator;
        typedef SimGroup_HvacDemandGroup_RefrigerationSystem_sequence::const_iterator SimGroup_HvacDemandGroup_RefrigerationSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_HvacDemandGroup_RefrigerationSystem_type, char > SimGroup_HvacDemandGroup_RefrigerationSystem_traits;

        const SimGroup_HvacDemandGroup_RefrigerationSystem_sequence&
        SimGroup_HvacDemandGroup_RefrigerationSystem () const;

        SimGroup_HvacDemandGroup_RefrigerationSystem_sequence&
        SimGroup_HvacDemandGroup_RefrigerationSystem ();

        void
        SimGroup_HvacDemandGroup_RefrigerationSystem (const SimGroup_HvacDemandGroup_RefrigerationSystem_sequence& s);

        // SimGroup_HvacDemandGroup_WaterSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_HvacDemandGroup_WaterSystem SimGroup_HvacDemandGroup_WaterSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_HvacDemandGroup_WaterSystem_type > SimGroup_HvacDemandGroup_WaterSystem_sequence;
        typedef SimGroup_HvacDemandGroup_WaterSystem_sequence::iterator SimGroup_HvacDemandGroup_WaterSystem_iterator;
        typedef SimGroup_HvacDemandGroup_WaterSystem_sequence::const_iterator SimGroup_HvacDemandGroup_WaterSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_HvacDemandGroup_WaterSystem_type, char > SimGroup_HvacDemandGroup_WaterSystem_traits;

        const SimGroup_HvacDemandGroup_WaterSystem_sequence&
        SimGroup_HvacDemandGroup_WaterSystem () const;

        SimGroup_HvacDemandGroup_WaterSystem_sequence&
        SimGroup_HvacDemandGroup_WaterSystem ();

        void
        SimGroup_HvacDemandGroup_WaterSystem (const SimGroup_HvacDemandGroup_WaterSystem_sequence& s);

        // SimGroup_MaterialList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_MaterialList_Default SimGroup_MaterialList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_MaterialList_Default_type > SimGroup_MaterialList_Default_sequence;
        typedef SimGroup_MaterialList_Default_sequence::iterator SimGroup_MaterialList_Default_iterator;
        typedef SimGroup_MaterialList_Default_sequence::const_iterator SimGroup_MaterialList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_MaterialList_Default_type, char > SimGroup_MaterialList_Default_traits;

        const SimGroup_MaterialList_Default_sequence&
        SimGroup_MaterialList_Default () const;

        SimGroup_MaterialList_Default_sequence&
        SimGroup_MaterialList_Default ();

        void
        SimGroup_MaterialList_Default (const SimGroup_MaterialList_Default_sequence& s);

        // SimGroup_NodeList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_NodeList_Default SimGroup_NodeList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_NodeList_Default_type > SimGroup_NodeList_Default_sequence;
        typedef SimGroup_NodeList_Default_sequence::iterator SimGroup_NodeList_Default_iterator;
        typedef SimGroup_NodeList_Default_sequence::const_iterator SimGroup_NodeList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_NodeList_Default_type, char > SimGroup_NodeList_Default_traits;

        const SimGroup_NodeList_Default_sequence&
        SimGroup_NodeList_Default () const;

        SimGroup_NodeList_Default_sequence&
        SimGroup_NodeList_Default ();

        void
        SimGroup_NodeList_Default (const SimGroup_NodeList_Default_sequence& s);

        // SimGroup_NodeList_OutdoorAir
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_NodeList_OutdoorAir SimGroup_NodeList_OutdoorAir_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_NodeList_OutdoorAir_type > SimGroup_NodeList_OutdoorAir_sequence;
        typedef SimGroup_NodeList_OutdoorAir_sequence::iterator SimGroup_NodeList_OutdoorAir_iterator;
        typedef SimGroup_NodeList_OutdoorAir_sequence::const_iterator SimGroup_NodeList_OutdoorAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_NodeList_OutdoorAir_type, char > SimGroup_NodeList_OutdoorAir_traits;

        const SimGroup_NodeList_OutdoorAir_sequence&
        SimGroup_NodeList_OutdoorAir () const;

        SimGroup_NodeList_OutdoorAir_sequence&
        SimGroup_NodeList_OutdoorAir ();

        void
        SimGroup_NodeList_OutdoorAir (const SimGroup_NodeList_OutdoorAir_sequence& s);

        // SimGroup_OutputRequestList_Daylighting
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Daylighting SimGroup_OutputRequestList_Daylighting_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Daylighting_type > SimGroup_OutputRequestList_Daylighting_sequence;
        typedef SimGroup_OutputRequestList_Daylighting_sequence::iterator SimGroup_OutputRequestList_Daylighting_iterator;
        typedef SimGroup_OutputRequestList_Daylighting_sequence::const_iterator SimGroup_OutputRequestList_Daylighting_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Daylighting_type, char > SimGroup_OutputRequestList_Daylighting_traits;

        const SimGroup_OutputRequestList_Daylighting_sequence&
        SimGroup_OutputRequestList_Daylighting () const;

        SimGroup_OutputRequestList_Daylighting_sequence&
        SimGroup_OutputRequestList_Daylighting ();

        void
        SimGroup_OutputRequestList_Daylighting (const SimGroup_OutputRequestList_Daylighting_sequence& s);

        // SimGroup_OutputRequestList_Environmental
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Environmental SimGroup_OutputRequestList_Environmental_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Environmental_type > SimGroup_OutputRequestList_Environmental_sequence;
        typedef SimGroup_OutputRequestList_Environmental_sequence::iterator SimGroup_OutputRequestList_Environmental_iterator;
        typedef SimGroup_OutputRequestList_Environmental_sequence::const_iterator SimGroup_OutputRequestList_Environmental_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Environmental_type, char > SimGroup_OutputRequestList_Environmental_traits;

        const SimGroup_OutputRequestList_Environmental_sequence&
        SimGroup_OutputRequestList_Environmental () const;

        SimGroup_OutputRequestList_Environmental_sequence&
        SimGroup_OutputRequestList_Environmental ();

        void
        SimGroup_OutputRequestList_Environmental (const SimGroup_OutputRequestList_Environmental_sequence& s);

        // SimGroup_OutputRequestList_Fuel
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Fuel SimGroup_OutputRequestList_Fuel_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Fuel_type > SimGroup_OutputRequestList_Fuel_sequence;
        typedef SimGroup_OutputRequestList_Fuel_sequence::iterator SimGroup_OutputRequestList_Fuel_iterator;
        typedef SimGroup_OutputRequestList_Fuel_sequence::const_iterator SimGroup_OutputRequestList_Fuel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Fuel_type, char > SimGroup_OutputRequestList_Fuel_traits;

        const SimGroup_OutputRequestList_Fuel_sequence&
        SimGroup_OutputRequestList_Fuel () const;

        SimGroup_OutputRequestList_Fuel_sequence&
        SimGroup_OutputRequestList_Fuel ();

        void
        SimGroup_OutputRequestList_Fuel (const SimGroup_OutputRequestList_Fuel_sequence& s);

        // SimGroup_OutputRequestList_Geometry
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Geometry SimGroup_OutputRequestList_Geometry_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Geometry_type > SimGroup_OutputRequestList_Geometry_sequence;
        typedef SimGroup_OutputRequestList_Geometry_sequence::iterator SimGroup_OutputRequestList_Geometry_iterator;
        typedef SimGroup_OutputRequestList_Geometry_sequence::const_iterator SimGroup_OutputRequestList_Geometry_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Geometry_type, char > SimGroup_OutputRequestList_Geometry_traits;

        const SimGroup_OutputRequestList_Geometry_sequence&
        SimGroup_OutputRequestList_Geometry () const;

        SimGroup_OutputRequestList_Geometry_sequence&
        SimGroup_OutputRequestList_Geometry ();

        void
        SimGroup_OutputRequestList_Geometry (const SimGroup_OutputRequestList_Geometry_sequence& s);

        // SimGroup_OutputRequestList_Meters
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Meters SimGroup_OutputRequestList_Meters_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Meters_type > SimGroup_OutputRequestList_Meters_sequence;
        typedef SimGroup_OutputRequestList_Meters_sequence::iterator SimGroup_OutputRequestList_Meters_iterator;
        typedef SimGroup_OutputRequestList_Meters_sequence::const_iterator SimGroup_OutputRequestList_Meters_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Meters_type, char > SimGroup_OutputRequestList_Meters_traits;

        const SimGroup_OutputRequestList_Meters_sequence&
        SimGroup_OutputRequestList_Meters () const;

        SimGroup_OutputRequestList_Meters_sequence&
        SimGroup_OutputRequestList_Meters ();

        void
        SimGroup_OutputRequestList_Meters (const SimGroup_OutputRequestList_Meters_sequence& s);

        // SimGroup_OutputRequestList_Reports
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Reports SimGroup_OutputRequestList_Reports_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Reports_type > SimGroup_OutputRequestList_Reports_sequence;
        typedef SimGroup_OutputRequestList_Reports_sequence::iterator SimGroup_OutputRequestList_Reports_iterator;
        typedef SimGroup_OutputRequestList_Reports_sequence::const_iterator SimGroup_OutputRequestList_Reports_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Reports_type, char > SimGroup_OutputRequestList_Reports_traits;

        const SimGroup_OutputRequestList_Reports_sequence&
        SimGroup_OutputRequestList_Reports () const;

        SimGroup_OutputRequestList_Reports_sequence&
        SimGroup_OutputRequestList_Reports ();

        void
        SimGroup_OutputRequestList_Reports (const SimGroup_OutputRequestList_Reports_sequence& s);

        // SimGroup_OutputRequestList_Variables
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_OutputRequestList_Variables SimGroup_OutputRequestList_Variables_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_OutputRequestList_Variables_type > SimGroup_OutputRequestList_Variables_sequence;
        typedef SimGroup_OutputRequestList_Variables_sequence::iterator SimGroup_OutputRequestList_Variables_iterator;
        typedef SimGroup_OutputRequestList_Variables_sequence::const_iterator SimGroup_OutputRequestList_Variables_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_OutputRequestList_Variables_type, char > SimGroup_OutputRequestList_Variables_traits;

        const SimGroup_OutputRequestList_Variables_sequence&
        SimGroup_OutputRequestList_Variables () const;

        SimGroup_OutputRequestList_Variables_sequence&
        SimGroup_OutputRequestList_Variables ();

        void
        SimGroup_OutputRequestList_Variables (const SimGroup_OutputRequestList_Variables_sequence& s);

        // SimGroup_Refrigeration_ChillerSet
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_Refrigeration_ChillerSet SimGroup_Refrigeration_ChillerSet_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_Refrigeration_ChillerSet_type > SimGroup_Refrigeration_ChillerSet_sequence;
        typedef SimGroup_Refrigeration_ChillerSet_sequence::iterator SimGroup_Refrigeration_ChillerSet_iterator;
        typedef SimGroup_Refrigeration_ChillerSet_sequence::const_iterator SimGroup_Refrigeration_ChillerSet_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_Refrigeration_ChillerSet_type, char > SimGroup_Refrigeration_ChillerSet_traits;

        const SimGroup_Refrigeration_ChillerSet_sequence&
        SimGroup_Refrigeration_ChillerSet () const;

        SimGroup_Refrigeration_ChillerSet_sequence&
        SimGroup_Refrigeration_ChillerSet ();

        void
        SimGroup_Refrigeration_ChillerSet (const SimGroup_Refrigeration_ChillerSet_sequence& s);

        // SimGroup_SchemeList_AirLoopAvailabilityMgrScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_AirLoopAvailabilityMgrScheme SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_type > SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence;
        typedef SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence::iterator SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_iterator;
        typedef SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence::const_iterator SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_type, char > SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_traits;

        const SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence&
        SimGroup_SchemeList_AirLoopAvailabilityMgrScheme () const;

        SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence&
        SimGroup_SchemeList_AirLoopAvailabilityMgrScheme ();

        void
        SimGroup_SchemeList_AirLoopAvailabilityMgrScheme (const SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence& s);

        // SimGroup_SchemeList_AirTempControlScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_AirTempControlScheme SimGroup_SchemeList_AirTempControlScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_AirTempControlScheme_type > SimGroup_SchemeList_AirTempControlScheme_sequence;
        typedef SimGroup_SchemeList_AirTempControlScheme_sequence::iterator SimGroup_SchemeList_AirTempControlScheme_iterator;
        typedef SimGroup_SchemeList_AirTempControlScheme_sequence::const_iterator SimGroup_SchemeList_AirTempControlScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_AirTempControlScheme_type, char > SimGroup_SchemeList_AirTempControlScheme_traits;

        const SimGroup_SchemeList_AirTempControlScheme_sequence&
        SimGroup_SchemeList_AirTempControlScheme () const;

        SimGroup_SchemeList_AirTempControlScheme_sequence&
        SimGroup_SchemeList_AirTempControlScheme ();

        void
        SimGroup_SchemeList_AirTempControlScheme (const SimGroup_SchemeList_AirTempControlScheme_sequence& s);

        // SimGroup_SchemeList_CondenserOperatingScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_CondenserOperatingScheme SimGroup_SchemeList_CondenserOperatingScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_CondenserOperatingScheme_type > SimGroup_SchemeList_CondenserOperatingScheme_sequence;
        typedef SimGroup_SchemeList_CondenserOperatingScheme_sequence::iterator SimGroup_SchemeList_CondenserOperatingScheme_iterator;
        typedef SimGroup_SchemeList_CondenserOperatingScheme_sequence::const_iterator SimGroup_SchemeList_CondenserOperatingScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_CondenserOperatingScheme_type, char > SimGroup_SchemeList_CondenserOperatingScheme_traits;

        const SimGroup_SchemeList_CondenserOperatingScheme_sequence&
        SimGroup_SchemeList_CondenserOperatingScheme () const;

        SimGroup_SchemeList_CondenserOperatingScheme_sequence&
        SimGroup_SchemeList_CondenserOperatingScheme ();

        void
        SimGroup_SchemeList_CondenserOperatingScheme (const SimGroup_SchemeList_CondenserOperatingScheme_sequence& s);

        // SimGroup_SchemeList_DemandManagerScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_DemandManagerScheme SimGroup_SchemeList_DemandManagerScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_DemandManagerScheme_type > SimGroup_SchemeList_DemandManagerScheme_sequence;
        typedef SimGroup_SchemeList_DemandManagerScheme_sequence::iterator SimGroup_SchemeList_DemandManagerScheme_iterator;
        typedef SimGroup_SchemeList_DemandManagerScheme_sequence::const_iterator SimGroup_SchemeList_DemandManagerScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_DemandManagerScheme_type, char > SimGroup_SchemeList_DemandManagerScheme_traits;

        const SimGroup_SchemeList_DemandManagerScheme_sequence&
        SimGroup_SchemeList_DemandManagerScheme () const;

        SimGroup_SchemeList_DemandManagerScheme_sequence&
        SimGroup_SchemeList_DemandManagerScheme ();

        void
        SimGroup_SchemeList_DemandManagerScheme (const SimGroup_SchemeList_DemandManagerScheme_sequence& s);

        // SimGroup_SchemeList_MultiZoneHumidityScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_MultiZoneHumidityScheme SimGroup_SchemeList_MultiZoneHumidityScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_MultiZoneHumidityScheme_type > SimGroup_SchemeList_MultiZoneHumidityScheme_sequence;
        typedef SimGroup_SchemeList_MultiZoneHumidityScheme_sequence::iterator SimGroup_SchemeList_MultiZoneHumidityScheme_iterator;
        typedef SimGroup_SchemeList_MultiZoneHumidityScheme_sequence::const_iterator SimGroup_SchemeList_MultiZoneHumidityScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_MultiZoneHumidityScheme_type, char > SimGroup_SchemeList_MultiZoneHumidityScheme_traits;

        const SimGroup_SchemeList_MultiZoneHumidityScheme_sequence&
        SimGroup_SchemeList_MultiZoneHumidityScheme () const;

        SimGroup_SchemeList_MultiZoneHumidityScheme_sequence&
        SimGroup_SchemeList_MultiZoneHumidityScheme ();

        void
        SimGroup_SchemeList_MultiZoneHumidityScheme (const SimGroup_SchemeList_MultiZoneHumidityScheme_sequence& s);

        // SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_type > SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence;
        typedef SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence::iterator SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_iterator;
        typedef SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence::const_iterator SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_type, char > SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_traits;

        const SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence&
        SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme () const;

        SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence&
        SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme ();

        void
        SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme (const SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence& s);

        // SimGroup_SchemeList_PlantOperatingScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_PlantOperatingScheme SimGroup_SchemeList_PlantOperatingScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_PlantOperatingScheme_type > SimGroup_SchemeList_PlantOperatingScheme_sequence;
        typedef SimGroup_SchemeList_PlantOperatingScheme_sequence::iterator SimGroup_SchemeList_PlantOperatingScheme_iterator;
        typedef SimGroup_SchemeList_PlantOperatingScheme_sequence::const_iterator SimGroup_SchemeList_PlantOperatingScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_PlantOperatingScheme_type, char > SimGroup_SchemeList_PlantOperatingScheme_traits;

        const SimGroup_SchemeList_PlantOperatingScheme_sequence&
        SimGroup_SchemeList_PlantOperatingScheme () const;

        SimGroup_SchemeList_PlantOperatingScheme_sequence&
        SimGroup_SchemeList_PlantOperatingScheme ();

        void
        SimGroup_SchemeList_PlantOperatingScheme (const SimGroup_SchemeList_PlantOperatingScheme_sequence& s);

        // SimGroup_SchemeList_SingleZoneHumidityScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_SingleZoneHumidityScheme SimGroup_SchemeList_SingleZoneHumidityScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_SingleZoneHumidityScheme_type > SimGroup_SchemeList_SingleZoneHumidityScheme_sequence;
        typedef SimGroup_SchemeList_SingleZoneHumidityScheme_sequence::iterator SimGroup_SchemeList_SingleZoneHumidityScheme_iterator;
        typedef SimGroup_SchemeList_SingleZoneHumidityScheme_sequence::const_iterator SimGroup_SchemeList_SingleZoneHumidityScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_SingleZoneHumidityScheme_type, char > SimGroup_SchemeList_SingleZoneHumidityScheme_traits;

        const SimGroup_SchemeList_SingleZoneHumidityScheme_sequence&
        SimGroup_SchemeList_SingleZoneHumidityScheme () const;

        SimGroup_SchemeList_SingleZoneHumidityScheme_sequence&
        SimGroup_SchemeList_SingleZoneHumidityScheme ();

        void
        SimGroup_SchemeList_SingleZoneHumidityScheme (const SimGroup_SchemeList_SingleZoneHumidityScheme_sequence& s);

        // SimGroup_SchemeList_WaterTempControlScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SchemeList_WaterTempControlScheme SimGroup_SchemeList_WaterTempControlScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SchemeList_WaterTempControlScheme_type > SimGroup_SchemeList_WaterTempControlScheme_sequence;
        typedef SimGroup_SchemeList_WaterTempControlScheme_sequence::iterator SimGroup_SchemeList_WaterTempControlScheme_iterator;
        typedef SimGroup_SchemeList_WaterTempControlScheme_sequence::const_iterator SimGroup_SchemeList_WaterTempControlScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SchemeList_WaterTempControlScheme_type, char > SimGroup_SchemeList_WaterTempControlScheme_traits;

        const SimGroup_SchemeList_WaterTempControlScheme_sequence&
        SimGroup_SchemeList_WaterTempControlScheme () const;

        SimGroup_SchemeList_WaterTempControlScheme_sequence&
        SimGroup_SchemeList_WaterTempControlScheme ();

        void
        SimGroup_SchemeList_WaterTempControlScheme (const SimGroup_SchemeList_WaterTempControlScheme_sequence& s);

        // SimGroup_SpatialZoneGroup_Daylighting
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SpatialZoneGroup_Daylighting SimGroup_SpatialZoneGroup_Daylighting_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SpatialZoneGroup_Daylighting_type > SimGroup_SpatialZoneGroup_Daylighting_sequence;
        typedef SimGroup_SpatialZoneGroup_Daylighting_sequence::iterator SimGroup_SpatialZoneGroup_Daylighting_iterator;
        typedef SimGroup_SpatialZoneGroup_Daylighting_sequence::const_iterator SimGroup_SpatialZoneGroup_Daylighting_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SpatialZoneGroup_Daylighting_type, char > SimGroup_SpatialZoneGroup_Daylighting_traits;

        const SimGroup_SpatialZoneGroup_Daylighting_sequence&
        SimGroup_SpatialZoneGroup_Daylighting () const;

        SimGroup_SpatialZoneGroup_Daylighting_sequence&
        SimGroup_SpatialZoneGroup_Daylighting ();

        void
        SimGroup_SpatialZoneGroup_Daylighting (const SimGroup_SpatialZoneGroup_Daylighting_sequence& s);

        // SimGroup_SpatialZoneGroup_NaturalVentilation
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SpatialZoneGroup_NaturalVentilation SimGroup_SpatialZoneGroup_NaturalVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SpatialZoneGroup_NaturalVentilation_type > SimGroup_SpatialZoneGroup_NaturalVentilation_sequence;
        typedef SimGroup_SpatialZoneGroup_NaturalVentilation_sequence::iterator SimGroup_SpatialZoneGroup_NaturalVentilation_iterator;
        typedef SimGroup_SpatialZoneGroup_NaturalVentilation_sequence::const_iterator SimGroup_SpatialZoneGroup_NaturalVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SpatialZoneGroup_NaturalVentilation_type, char > SimGroup_SpatialZoneGroup_NaturalVentilation_traits;

        const SimGroup_SpatialZoneGroup_NaturalVentilation_sequence&
        SimGroup_SpatialZoneGroup_NaturalVentilation () const;

        SimGroup_SpatialZoneGroup_NaturalVentilation_sequence&
        SimGroup_SpatialZoneGroup_NaturalVentilation ();

        void
        SimGroup_SpatialZoneGroup_NaturalVentilation (const SimGroup_SpatialZoneGroup_NaturalVentilation_sequence& s);

        // SimGroup_SpatialZoneGroup_PlenumZoneGroup
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SpatialZoneGroup_PlenumZoneGroup SimGroup_SpatialZoneGroup_PlenumZoneGroup_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SpatialZoneGroup_PlenumZoneGroup_type > SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence;
        typedef SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence::iterator SimGroup_SpatialZoneGroup_PlenumZoneGroup_iterator;
        typedef SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence::const_iterator SimGroup_SpatialZoneGroup_PlenumZoneGroup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SpatialZoneGroup_PlenumZoneGroup_type, char > SimGroup_SpatialZoneGroup_PlenumZoneGroup_traits;

        const SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence&
        SimGroup_SpatialZoneGroup_PlenumZoneGroup () const;

        SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence&
        SimGroup_SpatialZoneGroup_PlenumZoneGroup ();

        void
        SimGroup_SpatialZoneGroup_PlenumZoneGroup (const SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence& s);

        // SimGroup_SpatialZoneGroup_ZoneGroup
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SpatialZoneGroup_ZoneGroup SimGroup_SpatialZoneGroup_ZoneGroup_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SpatialZoneGroup_ZoneGroup_type > SimGroup_SpatialZoneGroup_ZoneGroup_sequence;
        typedef SimGroup_SpatialZoneGroup_ZoneGroup_sequence::iterator SimGroup_SpatialZoneGroup_ZoneGroup_iterator;
        typedef SimGroup_SpatialZoneGroup_ZoneGroup_sequence::const_iterator SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SpatialZoneGroup_ZoneGroup_type, char > SimGroup_SpatialZoneGroup_ZoneGroup_traits;

        const SimGroup_SpatialZoneGroup_ZoneGroup_sequence&
        SimGroup_SpatialZoneGroup_ZoneGroup () const;

        SimGroup_SpatialZoneGroup_ZoneGroup_sequence&
        SimGroup_SpatialZoneGroup_ZoneGroup ();

        void
        SimGroup_SpatialZoneGroup_ZoneGroup (const SimGroup_SpatialZoneGroup_ZoneGroup_sequence& s);

        // SimGroup_SpatialZoneGroup_ZoneHvacGroup
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup SimGroup_SpatialZoneGroup_ZoneHvacGroup_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SpatialZoneGroup_ZoneHvacGroup_type > SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence;
        typedef SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence::iterator SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator;
        typedef SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence::const_iterator SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SpatialZoneGroup_ZoneHvacGroup_type, char > SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits;

        const SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence&
        SimGroup_SpatialZoneGroup_ZoneHvacGroup () const;

        SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence&
        SimGroup_SpatialZoneGroup_ZoneHvacGroup ();

        void
        SimGroup_SpatialZoneGroup_ZoneHvacGroup (const SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence& s);

        // SimGroup_SurfaceGroup_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SurfaceGroup_Default SimGroup_SurfaceGroup_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SurfaceGroup_Default_type > SimGroup_SurfaceGroup_Default_sequence;
        typedef SimGroup_SurfaceGroup_Default_sequence::iterator SimGroup_SurfaceGroup_Default_iterator;
        typedef SimGroup_SurfaceGroup_Default_sequence::const_iterator SimGroup_SurfaceGroup_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SurfaceGroup_Default_type, char > SimGroup_SurfaceGroup_Default_traits;

        const SimGroup_SurfaceGroup_Default_sequence&
        SimGroup_SurfaceGroup_Default () const;

        SimGroup_SurfaceGroup_Default_sequence&
        SimGroup_SurfaceGroup_Default ();

        void
        SimGroup_SurfaceGroup_Default (const SimGroup_SurfaceGroup_Default_sequence& s);

        // SimGroup_SurfaceGroup_LowTempRadiant
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SurfaceGroup_LowTempRadiant SimGroup_SurfaceGroup_LowTempRadiant_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SurfaceGroup_LowTempRadiant_type > SimGroup_SurfaceGroup_LowTempRadiant_sequence;
        typedef SimGroup_SurfaceGroup_LowTempRadiant_sequence::iterator SimGroup_SurfaceGroup_LowTempRadiant_iterator;
        typedef SimGroup_SurfaceGroup_LowTempRadiant_sequence::const_iterator SimGroup_SurfaceGroup_LowTempRadiant_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SurfaceGroup_LowTempRadiant_type, char > SimGroup_SurfaceGroup_LowTempRadiant_traits;

        const SimGroup_SurfaceGroup_LowTempRadiant_sequence&
        SimGroup_SurfaceGroup_LowTempRadiant () const;

        SimGroup_SurfaceGroup_LowTempRadiant_sequence&
        SimGroup_SurfaceGroup_LowTempRadiant ();

        void
        SimGroup_SurfaceGroup_LowTempRadiant (const SimGroup_SurfaceGroup_LowTempRadiant_sequence& s);

        // SimGroup_SurfaceGroup_VentilatedSlab
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_SurfaceGroup_VentilatedSlab SimGroup_SurfaceGroup_VentilatedSlab_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_SurfaceGroup_VentilatedSlab_type > SimGroup_SurfaceGroup_VentilatedSlab_sequence;
        typedef SimGroup_SurfaceGroup_VentilatedSlab_sequence::iterator SimGroup_SurfaceGroup_VentilatedSlab_iterator;
        typedef SimGroup_SurfaceGroup_VentilatedSlab_sequence::const_iterator SimGroup_SurfaceGroup_VentilatedSlab_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_SurfaceGroup_VentilatedSlab_type, char > SimGroup_SurfaceGroup_VentilatedSlab_traits;

        const SimGroup_SurfaceGroup_VentilatedSlab_sequence&
        SimGroup_SurfaceGroup_VentilatedSlab () const;

        SimGroup_SurfaceGroup_VentilatedSlab_sequence&
        SimGroup_SurfaceGroup_VentilatedSlab ();

        void
        SimGroup_SurfaceGroup_VentilatedSlab (const SimGroup_SurfaceGroup_VentilatedSlab_sequence& s);

        // SimGroup_TemplateOutputRequestList_Daylighting
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_TemplateOutputRequestList_Daylighting SimGroup_TemplateOutputRequestList_Daylighting_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_TemplateOutputRequestList_Daylighting_type > SimGroup_TemplateOutputRequestList_Daylighting_sequence;
        typedef SimGroup_TemplateOutputRequestList_Daylighting_sequence::iterator SimGroup_TemplateOutputRequestList_Daylighting_iterator;
        typedef SimGroup_TemplateOutputRequestList_Daylighting_sequence::const_iterator SimGroup_TemplateOutputRequestList_Daylighting_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_TemplateOutputRequestList_Daylighting_type, char > SimGroup_TemplateOutputRequestList_Daylighting_traits;

        const SimGroup_TemplateOutputRequestList_Daylighting_sequence&
        SimGroup_TemplateOutputRequestList_Daylighting () const;

        SimGroup_TemplateOutputRequestList_Daylighting_sequence&
        SimGroup_TemplateOutputRequestList_Daylighting ();

        void
        SimGroup_TemplateOutputRequestList_Daylighting (const SimGroup_TemplateOutputRequestList_Daylighting_sequence& s);

        // SimGroup_TemplateOutputRequestList_FuelAndEnvironmental
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_TemplateOutputRequestList_FuelAndEnvironmental SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_type > SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence;
        typedef SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence::iterator SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_iterator;
        typedef SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence::const_iterator SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_type, char > SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_traits;

        const SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence&
        SimGroup_TemplateOutputRequestList_FuelAndEnvironmental () const;

        SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence&
        SimGroup_TemplateOutputRequestList_FuelAndEnvironmental ();

        void
        SimGroup_TemplateOutputRequestList_FuelAndEnvironmental (const SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence& s);

        // SimGroup_TemplateOutputRequestList_Geometry
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_TemplateOutputRequestList_Geometry SimGroup_TemplateOutputRequestList_Geometry_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_TemplateOutputRequestList_Geometry_type > SimGroup_TemplateOutputRequestList_Geometry_sequence;
        typedef SimGroup_TemplateOutputRequestList_Geometry_sequence::iterator SimGroup_TemplateOutputRequestList_Geometry_iterator;
        typedef SimGroup_TemplateOutputRequestList_Geometry_sequence::const_iterator SimGroup_TemplateOutputRequestList_Geometry_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_TemplateOutputRequestList_Geometry_type, char > SimGroup_TemplateOutputRequestList_Geometry_traits;

        const SimGroup_TemplateOutputRequestList_Geometry_sequence&
        SimGroup_TemplateOutputRequestList_Geometry () const;

        SimGroup_TemplateOutputRequestList_Geometry_sequence&
        SimGroup_TemplateOutputRequestList_Geometry ();

        void
        SimGroup_TemplateOutputRequestList_Geometry (const SimGroup_TemplateOutputRequestList_Geometry_sequence& s);

        // SimGroup_TemplateOutputRequestList_Meters
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_TemplateOutputRequestList_Meters SimGroup_TemplateOutputRequestList_Meters_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_TemplateOutputRequestList_Meters_type > SimGroup_TemplateOutputRequestList_Meters_sequence;
        typedef SimGroup_TemplateOutputRequestList_Meters_sequence::iterator SimGroup_TemplateOutputRequestList_Meters_iterator;
        typedef SimGroup_TemplateOutputRequestList_Meters_sequence::const_iterator SimGroup_TemplateOutputRequestList_Meters_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_TemplateOutputRequestList_Meters_type, char > SimGroup_TemplateOutputRequestList_Meters_traits;

        const SimGroup_TemplateOutputRequestList_Meters_sequence&
        SimGroup_TemplateOutputRequestList_Meters () const;

        SimGroup_TemplateOutputRequestList_Meters_sequence&
        SimGroup_TemplateOutputRequestList_Meters ();

        void
        SimGroup_TemplateOutputRequestList_Meters (const SimGroup_TemplateOutputRequestList_Meters_sequence& s);

        // SimGroup_TemplateOutputRequestList_Reports
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_TemplateOutputRequestList_Reports SimGroup_TemplateOutputRequestList_Reports_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_TemplateOutputRequestList_Reports_type > SimGroup_TemplateOutputRequestList_Reports_sequence;
        typedef SimGroup_TemplateOutputRequestList_Reports_sequence::iterator SimGroup_TemplateOutputRequestList_Reports_iterator;
        typedef SimGroup_TemplateOutputRequestList_Reports_sequence::const_iterator SimGroup_TemplateOutputRequestList_Reports_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_TemplateOutputRequestList_Reports_type, char > SimGroup_TemplateOutputRequestList_Reports_traits;

        const SimGroup_TemplateOutputRequestList_Reports_sequence&
        SimGroup_TemplateOutputRequestList_Reports () const;

        SimGroup_TemplateOutputRequestList_Reports_sequence&
        SimGroup_TemplateOutputRequestList_Reports ();

        void
        SimGroup_TemplateOutputRequestList_Reports (const SimGroup_TemplateOutputRequestList_Reports_sequence& s);

        // SimGroup_TemplateOutputRequestList_Variables
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_TemplateOutputRequestList_Variables SimGroup_TemplateOutputRequestList_Variables_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_TemplateOutputRequestList_Variables_type > SimGroup_TemplateOutputRequestList_Variables_sequence;
        typedef SimGroup_TemplateOutputRequestList_Variables_sequence::iterator SimGroup_TemplateOutputRequestList_Variables_iterator;
        typedef SimGroup_TemplateOutputRequestList_Variables_sequence::const_iterator SimGroup_TemplateOutputRequestList_Variables_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_TemplateOutputRequestList_Variables_type, char > SimGroup_TemplateOutputRequestList_Variables_traits;

        const SimGroup_TemplateOutputRequestList_Variables_sequence&
        SimGroup_TemplateOutputRequestList_Variables () const;

        SimGroup_TemplateOutputRequestList_Variables_sequence&
        SimGroup_TemplateOutputRequestList_Variables ();

        void
        SimGroup_TemplateOutputRequestList_Variables (const SimGroup_TemplateOutputRequestList_Variables_sequence& s);

        // SimGroup_VrfList_VrfTerminals
        //
        typedef ::namespaces::Sim::BuildingModel::SimGroup_VrfList_VrfTerminals SimGroup_VrfList_VrfTerminals_type;
        typedef ::xsd::cxx::tree::sequence< SimGroup_VrfList_VrfTerminals_type > SimGroup_VrfList_VrfTerminals_sequence;
        typedef SimGroup_VrfList_VrfTerminals_sequence::iterator SimGroup_VrfList_VrfTerminals_iterator;
        typedef SimGroup_VrfList_VrfTerminals_sequence::const_iterator SimGroup_VrfList_VrfTerminals_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimGroup_VrfList_VrfTerminals_type, char > SimGroup_VrfList_VrfTerminals_traits;

        const SimGroup_VrfList_VrfTerminals_sequence&
        SimGroup_VrfList_VrfTerminals () const;

        SimGroup_VrfList_VrfTerminals_sequence&
        SimGroup_VrfList_VrfTerminals ();

        void
        SimGroup_VrfList_VrfTerminals (const SimGroup_VrfList_VrfTerminals_sequence& s);

        // SimHeatTransAlgProps_HeatTransferAlgProps_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimHeatTransAlgProps_HeatTransferAlgProps_Default SimHeatTransAlgProps_HeatTransferAlgProps_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimHeatTransAlgProps_HeatTransferAlgProps_Default_type > SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence;
        typedef SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence::iterator SimHeatTransAlgProps_HeatTransferAlgProps_Default_iterator;
        typedef SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence::const_iterator SimHeatTransAlgProps_HeatTransferAlgProps_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimHeatTransAlgProps_HeatTransferAlgProps_Default_type, char > SimHeatTransAlgProps_HeatTransferAlgProps_Default_traits;

        const SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence&
        SimHeatTransAlgProps_HeatTransferAlgProps_Default () const;

        SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence&
        SimHeatTransAlgProps_HeatTransferAlgProps_Default ();

        void
        SimHeatTransAlgProps_HeatTransferAlgProps_Default (const SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence& s);

        // SimInfiltrationOrVentilation_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_Default_Default SimInfiltrationOrVentilation_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_Default_Default_type > SimInfiltrationOrVentilation_Default_Default_sequence;
        typedef SimInfiltrationOrVentilation_Default_Default_sequence::iterator SimInfiltrationOrVentilation_Default_Default_iterator;
        typedef SimInfiltrationOrVentilation_Default_Default_sequence::const_iterator SimInfiltrationOrVentilation_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_Default_Default_type, char > SimInfiltrationOrVentilation_Default_Default_traits;

        const SimInfiltrationOrVentilation_Default_Default_sequence&
        SimInfiltrationOrVentilation_Default_Default () const;

        SimInfiltrationOrVentilation_Default_Default_sequence&
        SimInfiltrationOrVentilation_Default_Default ();

        void
        SimInfiltrationOrVentilation_Default_Default (const SimInfiltrationOrVentilation_Default_Default_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_type > SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence::iterator SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_type, char > SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_traits;

        const SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation () const;

        SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation ();

        void
        SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation (const SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_type > SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence::iterator SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_type, char > SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_traits;

        const SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation () const;

        SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation ();

        void
        SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation (const SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_type > SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence::iterator SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_type, char > SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_traits;

        const SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation () const;

        SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation ();

        void
        SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation (const SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_type > SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence::iterator SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_type, char > SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_traits;

        const SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior () const;

        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior ();

        void
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior (const SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_type > SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence::iterator SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_type, char > SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_traits;

        const SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior () const;

        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior ();

        void
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior (const SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirSettings_UserDefined
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirSettings_UserDefined SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_type > SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence::iterator SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_type, char > SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_traits;

        const SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_UserDefined () const;

        SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence&
        SimInfiltrationOrVentilation_RoomAirSettings_UserDefined ();

        void
        SimInfiltrationOrVentilation_RoomAirSettings_UserDefined (const SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_type > SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence::iterator SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_type, char > SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_traits;

        const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient () const;

        SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient ();

        void
        SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient (const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirTempPattern_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern_Default SimInfiltrationOrVentilation_RoomAirTempPattern_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirTempPattern_Default_type > SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence::iterator SimInfiltrationOrVentilation_RoomAirTempPattern_Default_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirTempPattern_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirTempPattern_Default_type, char > SimInfiltrationOrVentilation_RoomAirTempPattern_Default_traits;

        const SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_Default () const;

        SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_Default ();

        void
        SimInfiltrationOrVentilation_RoomAirTempPattern_Default (const SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_type > SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence::iterator SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_type, char > SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_traits;

        const SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight () const;

        SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight ();

        void
        SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight (const SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_type > SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence::iterator SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_type, char > SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_traits;

        const SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping () const;

        SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping ();

        void
        SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping (const SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_type > SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence::iterator SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_type, char > SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_traits;

        const SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient () const;

        SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient ();

        void
        SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient (const SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence& s);

        // SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_type > SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence::iterator SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_iterator;
        typedef SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence::const_iterator SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_type, char > SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_traits;

        const SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined () const;

        SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence&
        SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined ();

        void
        SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined (const SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence& s);

        // SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_type > SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence;
        typedef SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence::iterator SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_iterator;
        typedef SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence::const_iterator SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_type, char > SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_traits;

        const SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence&
        SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate () const;

        SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence&
        SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate ();

        void
        SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate (const SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence& s);

        // SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_type > SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence;
        typedef SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence::iterator SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_iterator;
        typedef SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence::const_iterator SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_type, char > SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_traits;

        const SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence&
        SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea () const;

        SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence&
        SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea ();

        void
        SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea (const SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence& s);

        // SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_type > SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence;
        typedef SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence::iterator SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_iterator;
        typedef SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence::const_iterator SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_type, char > SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_traits;

        const SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence&
        SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient () const;

        SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence&
        SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient ();

        void
        SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient (const SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence& s);

        // SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_type > SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence;
        typedef SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence::iterator SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_iterator;
        typedef SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence::const_iterator SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_type, char > SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_traits;

        const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence&
        SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate () const;

        SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence&
        SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate ();

        void
        SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate (const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence& s);

        // SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_type;
        typedef ::xsd::cxx::tree::sequence< SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_type > SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence;
        typedef SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence::iterator SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_iterator;
        typedef SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence::const_iterator SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_type, char > SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_traits;

        const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence&
        SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea () const;

        SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence&
        SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea ();

        void
        SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea (const SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence& s);

        // SimInternalLoad_ComfortViewFactorAngles_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_ComfortViewFactorAngles_Default SimInternalLoad_ComfortViewFactorAngles_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_ComfortViewFactorAngles_Default_type > SimInternalLoad_ComfortViewFactorAngles_Default_sequence;
        typedef SimInternalLoad_ComfortViewFactorAngles_Default_sequence::iterator SimInternalLoad_ComfortViewFactorAngles_Default_iterator;
        typedef SimInternalLoad_ComfortViewFactorAngles_Default_sequence::const_iterator SimInternalLoad_ComfortViewFactorAngles_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_ComfortViewFactorAngles_Default_type, char > SimInternalLoad_ComfortViewFactorAngles_Default_traits;

        const SimInternalLoad_ComfortViewFactorAngles_Default_sequence&
        SimInternalLoad_ComfortViewFactorAngles_Default () const;

        SimInternalLoad_ComfortViewFactorAngles_Default_sequence&
        SimInternalLoad_ComfortViewFactorAngles_Default ();

        void
        SimInternalLoad_ComfortViewFactorAngles_Default (const SimInternalLoad_ComfortViewFactorAngles_Default_sequence& s);

        // SimInternalLoad_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Default_Default SimInternalLoad_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Default_Default_type > SimInternalLoad_Default_Default_sequence;
        typedef SimInternalLoad_Default_Default_sequence::iterator SimInternalLoad_Default_Default_iterator;
        typedef SimInternalLoad_Default_Default_sequence::const_iterator SimInternalLoad_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Default_Default_type, char > SimInternalLoad_Default_Default_traits;

        const SimInternalLoad_Default_Default_sequence&
        SimInternalLoad_Default_Default () const;

        SimInternalLoad_Default_Default_sequence&
        SimInternalLoad_Default_Default ();

        void
        SimInternalLoad_Default_Default (const SimInternalLoad_Default_Default_sequence& s);

        // SimInternalLoad_Equipment_Electric
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Equipment_Electric SimInternalLoad_Equipment_Electric_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Equipment_Electric_type > SimInternalLoad_Equipment_Electric_sequence;
        typedef SimInternalLoad_Equipment_Electric_sequence::iterator SimInternalLoad_Equipment_Electric_iterator;
        typedef SimInternalLoad_Equipment_Electric_sequence::const_iterator SimInternalLoad_Equipment_Electric_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Equipment_Electric_type, char > SimInternalLoad_Equipment_Electric_traits;

        const SimInternalLoad_Equipment_Electric_sequence&
        SimInternalLoad_Equipment_Electric () const;

        SimInternalLoad_Equipment_Electric_sequence&
        SimInternalLoad_Equipment_Electric ();

        void
        SimInternalLoad_Equipment_Electric (const SimInternalLoad_Equipment_Electric_sequence& s);

        // SimInternalLoad_Equipment_Gas
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Equipment_Gas SimInternalLoad_Equipment_Gas_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Equipment_Gas_type > SimInternalLoad_Equipment_Gas_sequence;
        typedef SimInternalLoad_Equipment_Gas_sequence::iterator SimInternalLoad_Equipment_Gas_iterator;
        typedef SimInternalLoad_Equipment_Gas_sequence::const_iterator SimInternalLoad_Equipment_Gas_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Equipment_Gas_type, char > SimInternalLoad_Equipment_Gas_traits;

        const SimInternalLoad_Equipment_Gas_sequence&
        SimInternalLoad_Equipment_Gas () const;

        SimInternalLoad_Equipment_Gas_sequence&
        SimInternalLoad_Equipment_Gas ();

        void
        SimInternalLoad_Equipment_Gas (const SimInternalLoad_Equipment_Gas_sequence& s);

        // SimInternalLoad_Equipment_HotWater
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Equipment_HotWater SimInternalLoad_Equipment_HotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Equipment_HotWater_type > SimInternalLoad_Equipment_HotWater_sequence;
        typedef SimInternalLoad_Equipment_HotWater_sequence::iterator SimInternalLoad_Equipment_HotWater_iterator;
        typedef SimInternalLoad_Equipment_HotWater_sequence::const_iterator SimInternalLoad_Equipment_HotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Equipment_HotWater_type, char > SimInternalLoad_Equipment_HotWater_traits;

        const SimInternalLoad_Equipment_HotWater_sequence&
        SimInternalLoad_Equipment_HotWater () const;

        SimInternalLoad_Equipment_HotWater_sequence&
        SimInternalLoad_Equipment_HotWater ();

        void
        SimInternalLoad_Equipment_HotWater (const SimInternalLoad_Equipment_HotWater_sequence& s);

        // SimInternalLoad_Equipment_Other
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Equipment_Other SimInternalLoad_Equipment_Other_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Equipment_Other_type > SimInternalLoad_Equipment_Other_sequence;
        typedef SimInternalLoad_Equipment_Other_sequence::iterator SimInternalLoad_Equipment_Other_iterator;
        typedef SimInternalLoad_Equipment_Other_sequence::const_iterator SimInternalLoad_Equipment_Other_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Equipment_Other_type, char > SimInternalLoad_Equipment_Other_traits;

        const SimInternalLoad_Equipment_Other_sequence&
        SimInternalLoad_Equipment_Other () const;

        SimInternalLoad_Equipment_Other_sequence&
        SimInternalLoad_Equipment_Other ();

        void
        SimInternalLoad_Equipment_Other (const SimInternalLoad_Equipment_Other_sequence& s);

        // SimInternalLoad_Equipment_Steam
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Equipment_Steam SimInternalLoad_Equipment_Steam_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Equipment_Steam_type > SimInternalLoad_Equipment_Steam_sequence;
        typedef SimInternalLoad_Equipment_Steam_sequence::iterator SimInternalLoad_Equipment_Steam_iterator;
        typedef SimInternalLoad_Equipment_Steam_sequence::const_iterator SimInternalLoad_Equipment_Steam_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Equipment_Steam_type, char > SimInternalLoad_Equipment_Steam_traits;

        const SimInternalLoad_Equipment_Steam_sequence&
        SimInternalLoad_Equipment_Steam () const;

        SimInternalLoad_Equipment_Steam_sequence&
        SimInternalLoad_Equipment_Steam ();

        void
        SimInternalLoad_Equipment_Steam (const SimInternalLoad_Equipment_Steam_sequence& s);

        // SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_type > SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence;
        typedef SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence::iterator SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_iterator;
        typedef SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence::const_iterator SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_type, char > SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_traits;

        const SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence&
        SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled () const;

        SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence&
        SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled ();

        void
        SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled (const SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence& s);

        // SimInternalLoad_Lights_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_Lights_Default SimInternalLoad_Lights_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_Lights_Default_type > SimInternalLoad_Lights_Default_sequence;
        typedef SimInternalLoad_Lights_Default_sequence::iterator SimInternalLoad_Lights_Default_iterator;
        typedef SimInternalLoad_Lights_Default_sequence::const_iterator SimInternalLoad_Lights_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_Lights_Default_type, char > SimInternalLoad_Lights_Default_traits;

        const SimInternalLoad_Lights_Default_sequence&
        SimInternalLoad_Lights_Default () const;

        SimInternalLoad_Lights_Default_sequence&
        SimInternalLoad_Lights_Default ();

        void
        SimInternalLoad_Lights_Default (const SimInternalLoad_Lights_Default_sequence& s);

        // SimInternalLoad_People_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_People_Default SimInternalLoad_People_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_People_Default_type > SimInternalLoad_People_Default_sequence;
        typedef SimInternalLoad_People_Default_sequence::iterator SimInternalLoad_People_Default_iterator;
        typedef SimInternalLoad_People_Default_sequence::const_iterator SimInternalLoad_People_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_People_Default_type, char > SimInternalLoad_People_Default_traits;

        const SimInternalLoad_People_Default_sequence&
        SimInternalLoad_People_Default () const;

        SimInternalLoad_People_Default_sequence&
        SimInternalLoad_People_Default ();

        void
        SimInternalLoad_People_Default (const SimInternalLoad_People_Default_sequence& s);

        // SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_type > SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence;
        typedef SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence::iterator SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_iterator;
        typedef SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence::const_iterator SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_type, char > SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_traits;

        const SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence&
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion () const;

        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence&
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion ();

        void
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion (const SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence& s);

        // SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_type > SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence;
        typedef SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence::iterator SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_iterator;
        typedef SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence::const_iterator SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_type, char > SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_traits;

        const SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence&
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink () const;

        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence&
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink ();

        void
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink (const SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence& s);

        // SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_type > SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence;
        typedef SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence::iterator SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_iterator;
        typedef SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence::const_iterator SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_type, char > SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_traits;

        const SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence&
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven () const;

        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence&
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven ();

        void
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven (const SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence& s);

        // SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_type > SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence::iterator SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_iterator;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence::const_iterator SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_type, char > SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_traits;

        const SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide () const;

        SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide ();

        void
        SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide (const SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence& s);

        // SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_type > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence::iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_iterator;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence::const_iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_type, char > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_traits;

        const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant () const;

        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant ();

        void
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant (const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence& s);

        // SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_type > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence::iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_iterator;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence::const_iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_type, char > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_traits;

        const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel () const;

        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel ();

        void
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel (const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence& s);

        // SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_type > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence::iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_iterator;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence::const_iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_type, char > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_traits;

        const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource () const;

        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource ();

        void
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource (const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence& s);

        // SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_type;
        typedef ::xsd::cxx::tree::sequence< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_type > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence::iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_iterator;
        typedef SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence::const_iterator SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_type, char > SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_traits;

        const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink () const;

        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence&
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink ();

        void
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink (const SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence& s);

        // SimIrregularTimeSeries_Irregular_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimIrregularTimeSeries_Irregular_Default SimIrregularTimeSeries_Irregular_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimIrregularTimeSeries_Irregular_Default_type > SimIrregularTimeSeries_Irregular_Default_sequence;
        typedef SimIrregularTimeSeries_Irregular_Default_sequence::iterator SimIrregularTimeSeries_Irregular_Default_iterator;
        typedef SimIrregularTimeSeries_Irregular_Default_sequence::const_iterator SimIrregularTimeSeries_Irregular_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimIrregularTimeSeries_Irregular_Default_type, char > SimIrregularTimeSeries_Irregular_Default_traits;

        const SimIrregularTimeSeries_Irregular_Default_sequence&
        SimIrregularTimeSeries_Irregular_Default () const;

        SimIrregularTimeSeries_Irregular_Default_sequence&
        SimIrregularTimeSeries_Irregular_Default ();

        void
        SimIrregularTimeSeries_Irregular_Default (const SimIrregularTimeSeries_Irregular_Default_sequence& s);

        // SimIrregularTimeSeriesValue_TimeSeries_Irregular
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimIrregularTimeSeriesValue_TimeSeries_Irregular SimIrregularTimeSeriesValue_TimeSeries_Irregular_type;
        typedef ::xsd::cxx::tree::sequence< SimIrregularTimeSeriesValue_TimeSeries_Irregular_type > SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence;
        typedef SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence::iterator SimIrregularTimeSeriesValue_TimeSeries_Irregular_iterator;
        typedef SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence::const_iterator SimIrregularTimeSeriesValue_TimeSeries_Irregular_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimIrregularTimeSeriesValue_TimeSeries_Irregular_type, char > SimIrregularTimeSeriesValue_TimeSeries_Irregular_traits;

        const SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence&
        SimIrregularTimeSeriesValue_TimeSeries_Irregular () const;

        SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence&
        SimIrregularTimeSeriesValue_TimeSeries_Irregular ();

        void
        SimIrregularTimeSeriesValue_TimeSeries_Irregular (const SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence& s);

        // SimList_ConnectorList_AirConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ConnectorList_AirConnections SimList_ConnectorList_AirConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ConnectorList_AirConnections_type > SimList_ConnectorList_AirConnections_sequence;
        typedef SimList_ConnectorList_AirConnections_sequence::iterator SimList_ConnectorList_AirConnections_iterator;
        typedef SimList_ConnectorList_AirConnections_sequence::const_iterator SimList_ConnectorList_AirConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ConnectorList_AirConnections_type, char > SimList_ConnectorList_AirConnections_traits;

        const SimList_ConnectorList_AirConnections_sequence&
        SimList_ConnectorList_AirConnections () const;

        SimList_ConnectorList_AirConnections_sequence&
        SimList_ConnectorList_AirConnections ();

        void
        SimList_ConnectorList_AirConnections (const SimList_ConnectorList_AirConnections_sequence& s);

        // SimList_ConnectorList_ChilledWaterConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ConnectorList_ChilledWaterConnections SimList_ConnectorList_ChilledWaterConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ConnectorList_ChilledWaterConnections_type > SimList_ConnectorList_ChilledWaterConnections_sequence;
        typedef SimList_ConnectorList_ChilledWaterConnections_sequence::iterator SimList_ConnectorList_ChilledWaterConnections_iterator;
        typedef SimList_ConnectorList_ChilledWaterConnections_sequence::const_iterator SimList_ConnectorList_ChilledWaterConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ConnectorList_ChilledWaterConnections_type, char > SimList_ConnectorList_ChilledWaterConnections_traits;

        const SimList_ConnectorList_ChilledWaterConnections_sequence&
        SimList_ConnectorList_ChilledWaterConnections () const;

        SimList_ConnectorList_ChilledWaterConnections_sequence&
        SimList_ConnectorList_ChilledWaterConnections ();

        void
        SimList_ConnectorList_ChilledWaterConnections (const SimList_ConnectorList_ChilledWaterConnections_sequence& s);

        // SimList_ConnectorList_CondenserConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ConnectorList_CondenserConnections SimList_ConnectorList_CondenserConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ConnectorList_CondenserConnections_type > SimList_ConnectorList_CondenserConnections_sequence;
        typedef SimList_ConnectorList_CondenserConnections_sequence::iterator SimList_ConnectorList_CondenserConnections_iterator;
        typedef SimList_ConnectorList_CondenserConnections_sequence::const_iterator SimList_ConnectorList_CondenserConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ConnectorList_CondenserConnections_type, char > SimList_ConnectorList_CondenserConnections_traits;

        const SimList_ConnectorList_CondenserConnections_sequence&
        SimList_ConnectorList_CondenserConnections () const;

        SimList_ConnectorList_CondenserConnections_sequence&
        SimList_ConnectorList_CondenserConnections ();

        void
        SimList_ConnectorList_CondenserConnections (const SimList_ConnectorList_CondenserConnections_sequence& s);

        // SimList_ConnectorList_ControllerConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ConnectorList_ControllerConnections SimList_ConnectorList_ControllerConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ConnectorList_ControllerConnections_type > SimList_ConnectorList_ControllerConnections_sequence;
        typedef SimList_ConnectorList_ControllerConnections_sequence::iterator SimList_ConnectorList_ControllerConnections_iterator;
        typedef SimList_ConnectorList_ControllerConnections_sequence::const_iterator SimList_ConnectorList_ControllerConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ConnectorList_ControllerConnections_type, char > SimList_ConnectorList_ControllerConnections_traits;

        const SimList_ConnectorList_ControllerConnections_sequence&
        SimList_ConnectorList_ControllerConnections () const;

        SimList_ConnectorList_ControllerConnections_sequence&
        SimList_ConnectorList_ControllerConnections ();

        void
        SimList_ConnectorList_ControllerConnections (const SimList_ConnectorList_ControllerConnections_sequence& s);

        // SimList_ConnectorList_HotWaterConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ConnectorList_HotWaterConnections SimList_ConnectorList_HotWaterConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ConnectorList_HotWaterConnections_type > SimList_ConnectorList_HotWaterConnections_sequence;
        typedef SimList_ConnectorList_HotWaterConnections_sequence::iterator SimList_ConnectorList_HotWaterConnections_iterator;
        typedef SimList_ConnectorList_HotWaterConnections_sequence::const_iterator SimList_ConnectorList_HotWaterConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ConnectorList_HotWaterConnections_type, char > SimList_ConnectorList_HotWaterConnections_traits;

        const SimList_ConnectorList_HotWaterConnections_sequence&
        SimList_ConnectorList_HotWaterConnections () const;

        SimList_ConnectorList_HotWaterConnections_sequence&
        SimList_ConnectorList_HotWaterConnections ();

        void
        SimList_ConnectorList_HotWaterConnections (const SimList_ConnectorList_HotWaterConnections_sequence& s);

        // SimList_ConnectorList_SteamConnections
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ConnectorList_SteamConnections SimList_ConnectorList_SteamConnections_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ConnectorList_SteamConnections_type > SimList_ConnectorList_SteamConnections_sequence;
        typedef SimList_ConnectorList_SteamConnections_sequence::iterator SimList_ConnectorList_SteamConnections_iterator;
        typedef SimList_ConnectorList_SteamConnections_sequence::const_iterator SimList_ConnectorList_SteamConnections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ConnectorList_SteamConnections_type, char > SimList_ConnectorList_SteamConnections_traits;

        const SimList_ConnectorList_SteamConnections_sequence&
        SimList_ConnectorList_SteamConnections () const;

        SimList_ConnectorList_SteamConnections_sequence&
        SimList_ConnectorList_SteamConnections ();

        void
        SimList_ConnectorList_SteamConnections (const SimList_ConnectorList_SteamConnections_sequence& s);

        // SimList_ControllerList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_ControllerList_Default SimList_ControllerList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimList_ControllerList_Default_type > SimList_ControllerList_Default_sequence;
        typedef SimList_ControllerList_Default_sequence::iterator SimList_ControllerList_Default_iterator;
        typedef SimList_ControllerList_Default_sequence::const_iterator SimList_ControllerList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_ControllerList_Default_type, char > SimList_ControllerList_Default_traits;

        const SimList_ControllerList_Default_sequence&
        SimList_ControllerList_Default () const;

        SimList_ControllerList_Default_sequence&
        SimList_ControllerList_Default ();

        void
        SimList_ControllerList_Default (const SimList_ControllerList_Default_sequence& s);

        // SimList_DefaultList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_DefaultList_Default SimList_DefaultList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimList_DefaultList_Default_type > SimList_DefaultList_Default_sequence;
        typedef SimList_DefaultList_Default_sequence::iterator SimList_DefaultList_Default_iterator;
        typedef SimList_DefaultList_Default_sequence::const_iterator SimList_DefaultList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_DefaultList_Default_type, char > SimList_DefaultList_Default_traits;

        const SimList_DefaultList_Default_sequence&
        SimList_DefaultList_Default () const;

        SimList_DefaultList_Default_sequence&
        SimList_DefaultList_Default ();

        void
        SimList_DefaultList_Default (const SimList_DefaultList_Default_sequence& s);

        // SimList_EquipmentList_CondenserEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_CondenserEquipment SimList_EquipmentList_CondenserEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_CondenserEquipment_type > SimList_EquipmentList_CondenserEquipment_sequence;
        typedef SimList_EquipmentList_CondenserEquipment_sequence::iterator SimList_EquipmentList_CondenserEquipment_iterator;
        typedef SimList_EquipmentList_CondenserEquipment_sequence::const_iterator SimList_EquipmentList_CondenserEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_CondenserEquipment_type, char > SimList_EquipmentList_CondenserEquipment_traits;

        const SimList_EquipmentList_CondenserEquipment_sequence&
        SimList_EquipmentList_CondenserEquipment () const;

        SimList_EquipmentList_CondenserEquipment_sequence&
        SimList_EquipmentList_CondenserEquipment ();

        void
        SimList_EquipmentList_CondenserEquipment (const SimList_EquipmentList_CondenserEquipment_sequence& s);

        // SimList_EquipmentList_ElectricalLoadCenter
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_ElectricalLoadCenter SimList_EquipmentList_ElectricalLoadCenter_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_ElectricalLoadCenter_type > SimList_EquipmentList_ElectricalLoadCenter_sequence;
        typedef SimList_EquipmentList_ElectricalLoadCenter_sequence::iterator SimList_EquipmentList_ElectricalLoadCenter_iterator;
        typedef SimList_EquipmentList_ElectricalLoadCenter_sequence::const_iterator SimList_EquipmentList_ElectricalLoadCenter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_ElectricalLoadCenter_type, char > SimList_EquipmentList_ElectricalLoadCenter_traits;

        const SimList_EquipmentList_ElectricalLoadCenter_sequence&
        SimList_EquipmentList_ElectricalLoadCenter () const;

        SimList_EquipmentList_ElectricalLoadCenter_sequence&
        SimList_EquipmentList_ElectricalLoadCenter ();

        void
        SimList_EquipmentList_ElectricalLoadCenter (const SimList_EquipmentList_ElectricalLoadCenter_sequence& s);

        // SimList_EquipmentList_OutdoorAirSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_OutdoorAirSystem SimList_EquipmentList_OutdoorAirSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_OutdoorAirSystem_type > SimList_EquipmentList_OutdoorAirSystem_sequence;
        typedef SimList_EquipmentList_OutdoorAirSystem_sequence::iterator SimList_EquipmentList_OutdoorAirSystem_iterator;
        typedef SimList_EquipmentList_OutdoorAirSystem_sequence::const_iterator SimList_EquipmentList_OutdoorAirSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_OutdoorAirSystem_type, char > SimList_EquipmentList_OutdoorAirSystem_traits;

        const SimList_EquipmentList_OutdoorAirSystem_sequence&
        SimList_EquipmentList_OutdoorAirSystem () const;

        SimList_EquipmentList_OutdoorAirSystem_sequence&
        SimList_EquipmentList_OutdoorAirSystem ();

        void
        SimList_EquipmentList_OutdoorAirSystem (const SimList_EquipmentList_OutdoorAirSystem_sequence& s);

        // SimList_EquipmentList_OutdoorAirUnit
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_OutdoorAirUnit SimList_EquipmentList_OutdoorAirUnit_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_OutdoorAirUnit_type > SimList_EquipmentList_OutdoorAirUnit_sequence;
        typedef SimList_EquipmentList_OutdoorAirUnit_sequence::iterator SimList_EquipmentList_OutdoorAirUnit_iterator;
        typedef SimList_EquipmentList_OutdoorAirUnit_sequence::const_iterator SimList_EquipmentList_OutdoorAirUnit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_OutdoorAirUnit_type, char > SimList_EquipmentList_OutdoorAirUnit_traits;

        const SimList_EquipmentList_OutdoorAirUnit_sequence&
        SimList_EquipmentList_OutdoorAirUnit () const;

        SimList_EquipmentList_OutdoorAirUnit_sequence&
        SimList_EquipmentList_OutdoorAirUnit ();

        void
        SimList_EquipmentList_OutdoorAirUnit (const SimList_EquipmentList_OutdoorAirUnit_sequence& s);

        // SimList_EquipmentList_PlantEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_PlantEquipment SimList_EquipmentList_PlantEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_PlantEquipment_type > SimList_EquipmentList_PlantEquipment_sequence;
        typedef SimList_EquipmentList_PlantEquipment_sequence::iterator SimList_EquipmentList_PlantEquipment_iterator;
        typedef SimList_EquipmentList_PlantEquipment_sequence::const_iterator SimList_EquipmentList_PlantEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_PlantEquipment_type, char > SimList_EquipmentList_PlantEquipment_traits;

        const SimList_EquipmentList_PlantEquipment_sequence&
        SimList_EquipmentList_PlantEquipment () const;

        SimList_EquipmentList_PlantEquipment_sequence&
        SimList_EquipmentList_PlantEquipment ();

        void
        SimList_EquipmentList_PlantEquipment (const SimList_EquipmentList_PlantEquipment_sequence& s);

        // SimList_EquipmentList_RefrigerationCompressor
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_RefrigerationCompressor SimList_EquipmentList_RefrigerationCompressor_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_RefrigerationCompressor_type > SimList_EquipmentList_RefrigerationCompressor_sequence;
        typedef SimList_EquipmentList_RefrigerationCompressor_sequence::iterator SimList_EquipmentList_RefrigerationCompressor_iterator;
        typedef SimList_EquipmentList_RefrigerationCompressor_sequence::const_iterator SimList_EquipmentList_RefrigerationCompressor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_RefrigerationCompressor_type, char > SimList_EquipmentList_RefrigerationCompressor_traits;

        const SimList_EquipmentList_RefrigerationCompressor_sequence&
        SimList_EquipmentList_RefrigerationCompressor () const;

        SimList_EquipmentList_RefrigerationCompressor_sequence&
        SimList_EquipmentList_RefrigerationCompressor ();

        void
        SimList_EquipmentList_RefrigerationCompressor (const SimList_EquipmentList_RefrigerationCompressor_sequence& s);

        // SimList_EquipmentList_RefrigerationEquipment
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_RefrigerationEquipment SimList_EquipmentList_RefrigerationEquipment_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_RefrigerationEquipment_type > SimList_EquipmentList_RefrigerationEquipment_sequence;
        typedef SimList_EquipmentList_RefrigerationEquipment_sequence::iterator SimList_EquipmentList_RefrigerationEquipment_iterator;
        typedef SimList_EquipmentList_RefrigerationEquipment_sequence::const_iterator SimList_EquipmentList_RefrigerationEquipment_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_RefrigerationEquipment_type, char > SimList_EquipmentList_RefrigerationEquipment_traits;

        const SimList_EquipmentList_RefrigerationEquipment_sequence&
        SimList_EquipmentList_RefrigerationEquipment () const;

        SimList_EquipmentList_RefrigerationEquipment_sequence&
        SimList_EquipmentList_RefrigerationEquipment ();

        void
        SimList_EquipmentList_RefrigerationEquipment (const SimList_EquipmentList_RefrigerationEquipment_sequence& s);

        // SimList_EquipmentList_RefrigerationLoadTransfer
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_RefrigerationLoadTransfer SimList_EquipmentList_RefrigerationLoadTransfer_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_RefrigerationLoadTransfer_type > SimList_EquipmentList_RefrigerationLoadTransfer_sequence;
        typedef SimList_EquipmentList_RefrigerationLoadTransfer_sequence::iterator SimList_EquipmentList_RefrigerationLoadTransfer_iterator;
        typedef SimList_EquipmentList_RefrigerationLoadTransfer_sequence::const_iterator SimList_EquipmentList_RefrigerationLoadTransfer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_RefrigerationLoadTransfer_type, char > SimList_EquipmentList_RefrigerationLoadTransfer_traits;

        const SimList_EquipmentList_RefrigerationLoadTransfer_sequence&
        SimList_EquipmentList_RefrigerationLoadTransfer () const;

        SimList_EquipmentList_RefrigerationLoadTransfer_sequence&
        SimList_EquipmentList_RefrigerationLoadTransfer ();

        void
        SimList_EquipmentList_RefrigerationLoadTransfer (const SimList_EquipmentList_RefrigerationLoadTransfer_sequence& s);

        // SimList_EquipmentList_ZoneHvac
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_EquipmentList_ZoneHvac SimList_EquipmentList_ZoneHvac_type;
        typedef ::xsd::cxx::tree::sequence< SimList_EquipmentList_ZoneHvac_type > SimList_EquipmentList_ZoneHvac_sequence;
        typedef SimList_EquipmentList_ZoneHvac_sequence::iterator SimList_EquipmentList_ZoneHvac_iterator;
        typedef SimList_EquipmentList_ZoneHvac_sequence::const_iterator SimList_EquipmentList_ZoneHvac_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_EquipmentList_ZoneHvac_type, char > SimList_EquipmentList_ZoneHvac_traits;

        const SimList_EquipmentList_ZoneHvac_sequence&
        SimList_EquipmentList_ZoneHvac () const;

        SimList_EquipmentList_ZoneHvac_sequence&
        SimList_EquipmentList_ZoneHvac ();

        void
        SimList_EquipmentList_ZoneHvac (const SimList_EquipmentList_ZoneHvac_sequence& s);

        // SimList_MaterialList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_MaterialList_Default SimList_MaterialList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimList_MaterialList_Default_type > SimList_MaterialList_Default_sequence;
        typedef SimList_MaterialList_Default_sequence::iterator SimList_MaterialList_Default_iterator;
        typedef SimList_MaterialList_Default_sequence::const_iterator SimList_MaterialList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_MaterialList_Default_type, char > SimList_MaterialList_Default_traits;

        const SimList_MaterialList_Default_sequence&
        SimList_MaterialList_Default () const;

        SimList_MaterialList_Default_sequence&
        SimList_MaterialList_Default ();

        void
        SimList_MaterialList_Default (const SimList_MaterialList_Default_sequence& s);

        // SimList_NodeList_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_NodeList_Default SimList_NodeList_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimList_NodeList_Default_type > SimList_NodeList_Default_sequence;
        typedef SimList_NodeList_Default_sequence::iterator SimList_NodeList_Default_iterator;
        typedef SimList_NodeList_Default_sequence::const_iterator SimList_NodeList_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_NodeList_Default_type, char > SimList_NodeList_Default_traits;

        const SimList_NodeList_Default_sequence&
        SimList_NodeList_Default () const;

        SimList_NodeList_Default_sequence&
        SimList_NodeList_Default ();

        void
        SimList_NodeList_Default (const SimList_NodeList_Default_sequence& s);

        // SimList_NodeList_OutdoorAir
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_NodeList_OutdoorAir SimList_NodeList_OutdoorAir_type;
        typedef ::xsd::cxx::tree::sequence< SimList_NodeList_OutdoorAir_type > SimList_NodeList_OutdoorAir_sequence;
        typedef SimList_NodeList_OutdoorAir_sequence::iterator SimList_NodeList_OutdoorAir_iterator;
        typedef SimList_NodeList_OutdoorAir_sequence::const_iterator SimList_NodeList_OutdoorAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_NodeList_OutdoorAir_type, char > SimList_NodeList_OutdoorAir_traits;

        const SimList_NodeList_OutdoorAir_sequence&
        SimList_NodeList_OutdoorAir () const;

        SimList_NodeList_OutdoorAir_sequence&
        SimList_NodeList_OutdoorAir ();

        void
        SimList_NodeList_OutdoorAir (const SimList_NodeList_OutdoorAir_sequence& s);

        // SimList_OutputRequestList_Daylighting
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Daylighting SimList_OutputRequestList_Daylighting_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Daylighting_type > SimList_OutputRequestList_Daylighting_sequence;
        typedef SimList_OutputRequestList_Daylighting_sequence::iterator SimList_OutputRequestList_Daylighting_iterator;
        typedef SimList_OutputRequestList_Daylighting_sequence::const_iterator SimList_OutputRequestList_Daylighting_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Daylighting_type, char > SimList_OutputRequestList_Daylighting_traits;

        const SimList_OutputRequestList_Daylighting_sequence&
        SimList_OutputRequestList_Daylighting () const;

        SimList_OutputRequestList_Daylighting_sequence&
        SimList_OutputRequestList_Daylighting ();

        void
        SimList_OutputRequestList_Daylighting (const SimList_OutputRequestList_Daylighting_sequence& s);

        // SimList_OutputRequestList_Environmental
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Environmental SimList_OutputRequestList_Environmental_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Environmental_type > SimList_OutputRequestList_Environmental_sequence;
        typedef SimList_OutputRequestList_Environmental_sequence::iterator SimList_OutputRequestList_Environmental_iterator;
        typedef SimList_OutputRequestList_Environmental_sequence::const_iterator SimList_OutputRequestList_Environmental_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Environmental_type, char > SimList_OutputRequestList_Environmental_traits;

        const SimList_OutputRequestList_Environmental_sequence&
        SimList_OutputRequestList_Environmental () const;

        SimList_OutputRequestList_Environmental_sequence&
        SimList_OutputRequestList_Environmental ();

        void
        SimList_OutputRequestList_Environmental (const SimList_OutputRequestList_Environmental_sequence& s);

        // SimList_OutputRequestList_Fuel
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Fuel SimList_OutputRequestList_Fuel_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Fuel_type > SimList_OutputRequestList_Fuel_sequence;
        typedef SimList_OutputRequestList_Fuel_sequence::iterator SimList_OutputRequestList_Fuel_iterator;
        typedef SimList_OutputRequestList_Fuel_sequence::const_iterator SimList_OutputRequestList_Fuel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Fuel_type, char > SimList_OutputRequestList_Fuel_traits;

        const SimList_OutputRequestList_Fuel_sequence&
        SimList_OutputRequestList_Fuel () const;

        SimList_OutputRequestList_Fuel_sequence&
        SimList_OutputRequestList_Fuel ();

        void
        SimList_OutputRequestList_Fuel (const SimList_OutputRequestList_Fuel_sequence& s);

        // SimList_OutputRequestList_Geometry
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Geometry SimList_OutputRequestList_Geometry_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Geometry_type > SimList_OutputRequestList_Geometry_sequence;
        typedef SimList_OutputRequestList_Geometry_sequence::iterator SimList_OutputRequestList_Geometry_iterator;
        typedef SimList_OutputRequestList_Geometry_sequence::const_iterator SimList_OutputRequestList_Geometry_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Geometry_type, char > SimList_OutputRequestList_Geometry_traits;

        const SimList_OutputRequestList_Geometry_sequence&
        SimList_OutputRequestList_Geometry () const;

        SimList_OutputRequestList_Geometry_sequence&
        SimList_OutputRequestList_Geometry ();

        void
        SimList_OutputRequestList_Geometry (const SimList_OutputRequestList_Geometry_sequence& s);

        // SimList_OutputRequestList_Meters
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Meters SimList_OutputRequestList_Meters_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Meters_type > SimList_OutputRequestList_Meters_sequence;
        typedef SimList_OutputRequestList_Meters_sequence::iterator SimList_OutputRequestList_Meters_iterator;
        typedef SimList_OutputRequestList_Meters_sequence::const_iterator SimList_OutputRequestList_Meters_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Meters_type, char > SimList_OutputRequestList_Meters_traits;

        const SimList_OutputRequestList_Meters_sequence&
        SimList_OutputRequestList_Meters () const;

        SimList_OutputRequestList_Meters_sequence&
        SimList_OutputRequestList_Meters ();

        void
        SimList_OutputRequestList_Meters (const SimList_OutputRequestList_Meters_sequence& s);

        // SimList_OutputRequestList_Reports
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Reports SimList_OutputRequestList_Reports_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Reports_type > SimList_OutputRequestList_Reports_sequence;
        typedef SimList_OutputRequestList_Reports_sequence::iterator SimList_OutputRequestList_Reports_iterator;
        typedef SimList_OutputRequestList_Reports_sequence::const_iterator SimList_OutputRequestList_Reports_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Reports_type, char > SimList_OutputRequestList_Reports_traits;

        const SimList_OutputRequestList_Reports_sequence&
        SimList_OutputRequestList_Reports () const;

        SimList_OutputRequestList_Reports_sequence&
        SimList_OutputRequestList_Reports ();

        void
        SimList_OutputRequestList_Reports (const SimList_OutputRequestList_Reports_sequence& s);

        // SimList_OutputRequestList_Variables
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_OutputRequestList_Variables SimList_OutputRequestList_Variables_type;
        typedef ::xsd::cxx::tree::sequence< SimList_OutputRequestList_Variables_type > SimList_OutputRequestList_Variables_sequence;
        typedef SimList_OutputRequestList_Variables_sequence::iterator SimList_OutputRequestList_Variables_iterator;
        typedef SimList_OutputRequestList_Variables_sequence::const_iterator SimList_OutputRequestList_Variables_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_OutputRequestList_Variables_type, char > SimList_OutputRequestList_Variables_traits;

        const SimList_OutputRequestList_Variables_sequence&
        SimList_OutputRequestList_Variables () const;

        SimList_OutputRequestList_Variables_sequence&
        SimList_OutputRequestList_Variables ();

        void
        SimList_OutputRequestList_Variables (const SimList_OutputRequestList_Variables_sequence& s);

        // SimList_Refrigeration_ChillerSet
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_Refrigeration_ChillerSet SimList_Refrigeration_ChillerSet_type;
        typedef ::xsd::cxx::tree::sequence< SimList_Refrigeration_ChillerSet_type > SimList_Refrigeration_ChillerSet_sequence;
        typedef SimList_Refrigeration_ChillerSet_sequence::iterator SimList_Refrigeration_ChillerSet_iterator;
        typedef SimList_Refrigeration_ChillerSet_sequence::const_iterator SimList_Refrigeration_ChillerSet_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_Refrigeration_ChillerSet_type, char > SimList_Refrigeration_ChillerSet_traits;

        const SimList_Refrigeration_ChillerSet_sequence&
        SimList_Refrigeration_ChillerSet () const;

        SimList_Refrigeration_ChillerSet_sequence&
        SimList_Refrigeration_ChillerSet ();

        void
        SimList_Refrigeration_ChillerSet (const SimList_Refrigeration_ChillerSet_sequence& s);

        // SimList_SchemeList_AirLoopAvailabilityMgrScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme SimList_SchemeList_AirLoopAvailabilityMgrScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_AirLoopAvailabilityMgrScheme_type > SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence;
        typedef SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence::iterator SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator;
        typedef SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence::const_iterator SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_AirLoopAvailabilityMgrScheme_type, char > SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits;

        const SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence&
        SimList_SchemeList_AirLoopAvailabilityMgrScheme () const;

        SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence&
        SimList_SchemeList_AirLoopAvailabilityMgrScheme ();

        void
        SimList_SchemeList_AirLoopAvailabilityMgrScheme (const SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence& s);

        // SimList_SchemeList_AirTempControlScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_AirTempControlScheme SimList_SchemeList_AirTempControlScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_AirTempControlScheme_type > SimList_SchemeList_AirTempControlScheme_sequence;
        typedef SimList_SchemeList_AirTempControlScheme_sequence::iterator SimList_SchemeList_AirTempControlScheme_iterator;
        typedef SimList_SchemeList_AirTempControlScheme_sequence::const_iterator SimList_SchemeList_AirTempControlScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_AirTempControlScheme_type, char > SimList_SchemeList_AirTempControlScheme_traits;

        const SimList_SchemeList_AirTempControlScheme_sequence&
        SimList_SchemeList_AirTempControlScheme () const;

        SimList_SchemeList_AirTempControlScheme_sequence&
        SimList_SchemeList_AirTempControlScheme ();

        void
        SimList_SchemeList_AirTempControlScheme (const SimList_SchemeList_AirTempControlScheme_sequence& s);

        // SimList_SchemeList_CondenserOperatingScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_CondenserOperatingScheme SimList_SchemeList_CondenserOperatingScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_CondenserOperatingScheme_type > SimList_SchemeList_CondenserOperatingScheme_sequence;
        typedef SimList_SchemeList_CondenserOperatingScheme_sequence::iterator SimList_SchemeList_CondenserOperatingScheme_iterator;
        typedef SimList_SchemeList_CondenserOperatingScheme_sequence::const_iterator SimList_SchemeList_CondenserOperatingScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_CondenserOperatingScheme_type, char > SimList_SchemeList_CondenserOperatingScheme_traits;

        const SimList_SchemeList_CondenserOperatingScheme_sequence&
        SimList_SchemeList_CondenserOperatingScheme () const;

        SimList_SchemeList_CondenserOperatingScheme_sequence&
        SimList_SchemeList_CondenserOperatingScheme ();

        void
        SimList_SchemeList_CondenserOperatingScheme (const SimList_SchemeList_CondenserOperatingScheme_sequence& s);

        // SimList_SchemeList_DemandManagerScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_DemandManagerScheme SimList_SchemeList_DemandManagerScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_DemandManagerScheme_type > SimList_SchemeList_DemandManagerScheme_sequence;
        typedef SimList_SchemeList_DemandManagerScheme_sequence::iterator SimList_SchemeList_DemandManagerScheme_iterator;
        typedef SimList_SchemeList_DemandManagerScheme_sequence::const_iterator SimList_SchemeList_DemandManagerScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_DemandManagerScheme_type, char > SimList_SchemeList_DemandManagerScheme_traits;

        const SimList_SchemeList_DemandManagerScheme_sequence&
        SimList_SchemeList_DemandManagerScheme () const;

        SimList_SchemeList_DemandManagerScheme_sequence&
        SimList_SchemeList_DemandManagerScheme ();

        void
        SimList_SchemeList_DemandManagerScheme (const SimList_SchemeList_DemandManagerScheme_sequence& s);

        // SimList_SchemeList_MultiZoneHumidityScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_MultiZoneHumidityScheme SimList_SchemeList_MultiZoneHumidityScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_MultiZoneHumidityScheme_type > SimList_SchemeList_MultiZoneHumidityScheme_sequence;
        typedef SimList_SchemeList_MultiZoneHumidityScheme_sequence::iterator SimList_SchemeList_MultiZoneHumidityScheme_iterator;
        typedef SimList_SchemeList_MultiZoneHumidityScheme_sequence::const_iterator SimList_SchemeList_MultiZoneHumidityScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_MultiZoneHumidityScheme_type, char > SimList_SchemeList_MultiZoneHumidityScheme_traits;

        const SimList_SchemeList_MultiZoneHumidityScheme_sequence&
        SimList_SchemeList_MultiZoneHumidityScheme () const;

        SimList_SchemeList_MultiZoneHumidityScheme_sequence&
        SimList_SchemeList_MultiZoneHumidityScheme ();

        void
        SimList_SchemeList_MultiZoneHumidityScheme (const SimList_SchemeList_MultiZoneHumidityScheme_sequence& s);

        // SimList_SchemeList_PlantLoopAvailabilityMgrScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_PlantLoopAvailabilityMgrScheme SimList_SchemeList_PlantLoopAvailabilityMgrScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_PlantLoopAvailabilityMgrScheme_type > SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence;
        typedef SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence::iterator SimList_SchemeList_PlantLoopAvailabilityMgrScheme_iterator;
        typedef SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence::const_iterator SimList_SchemeList_PlantLoopAvailabilityMgrScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_PlantLoopAvailabilityMgrScheme_type, char > SimList_SchemeList_PlantLoopAvailabilityMgrScheme_traits;

        const SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence&
        SimList_SchemeList_PlantLoopAvailabilityMgrScheme () const;

        SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence&
        SimList_SchemeList_PlantLoopAvailabilityMgrScheme ();

        void
        SimList_SchemeList_PlantLoopAvailabilityMgrScheme (const SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence& s);

        // SimList_SchemeList_PlantOperatingScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_PlantOperatingScheme SimList_SchemeList_PlantOperatingScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_PlantOperatingScheme_type > SimList_SchemeList_PlantOperatingScheme_sequence;
        typedef SimList_SchemeList_PlantOperatingScheme_sequence::iterator SimList_SchemeList_PlantOperatingScheme_iterator;
        typedef SimList_SchemeList_PlantOperatingScheme_sequence::const_iterator SimList_SchemeList_PlantOperatingScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_PlantOperatingScheme_type, char > SimList_SchemeList_PlantOperatingScheme_traits;

        const SimList_SchemeList_PlantOperatingScheme_sequence&
        SimList_SchemeList_PlantOperatingScheme () const;

        SimList_SchemeList_PlantOperatingScheme_sequence&
        SimList_SchemeList_PlantOperatingScheme ();

        void
        SimList_SchemeList_PlantOperatingScheme (const SimList_SchemeList_PlantOperatingScheme_sequence& s);

        // SimList_SchemeList_SingleZoneHumidityScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_SingleZoneHumidityScheme SimList_SchemeList_SingleZoneHumidityScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_SingleZoneHumidityScheme_type > SimList_SchemeList_SingleZoneHumidityScheme_sequence;
        typedef SimList_SchemeList_SingleZoneHumidityScheme_sequence::iterator SimList_SchemeList_SingleZoneHumidityScheme_iterator;
        typedef SimList_SchemeList_SingleZoneHumidityScheme_sequence::const_iterator SimList_SchemeList_SingleZoneHumidityScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_SingleZoneHumidityScheme_type, char > SimList_SchemeList_SingleZoneHumidityScheme_traits;

        const SimList_SchemeList_SingleZoneHumidityScheme_sequence&
        SimList_SchemeList_SingleZoneHumidityScheme () const;

        SimList_SchemeList_SingleZoneHumidityScheme_sequence&
        SimList_SchemeList_SingleZoneHumidityScheme ();

        void
        SimList_SchemeList_SingleZoneHumidityScheme (const SimList_SchemeList_SingleZoneHumidityScheme_sequence& s);

        // SimList_SchemeList_WaterTempControlScheme
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_SchemeList_WaterTempControlScheme SimList_SchemeList_WaterTempControlScheme_type;
        typedef ::xsd::cxx::tree::sequence< SimList_SchemeList_WaterTempControlScheme_type > SimList_SchemeList_WaterTempControlScheme_sequence;
        typedef SimList_SchemeList_WaterTempControlScheme_sequence::iterator SimList_SchemeList_WaterTempControlScheme_iterator;
        typedef SimList_SchemeList_WaterTempControlScheme_sequence::const_iterator SimList_SchemeList_WaterTempControlScheme_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_SchemeList_WaterTempControlScheme_type, char > SimList_SchemeList_WaterTempControlScheme_traits;

        const SimList_SchemeList_WaterTempControlScheme_sequence&
        SimList_SchemeList_WaterTempControlScheme () const;

        SimList_SchemeList_WaterTempControlScheme_sequence&
        SimList_SchemeList_WaterTempControlScheme ();

        void
        SimList_SchemeList_WaterTempControlScheme (const SimList_SchemeList_WaterTempControlScheme_sequence& s);

        // SimList_TemplateOutputRequestList_Daylighting
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_TemplateOutputRequestList_Daylighting SimList_TemplateOutputRequestList_Daylighting_type;
        typedef ::xsd::cxx::tree::sequence< SimList_TemplateOutputRequestList_Daylighting_type > SimList_TemplateOutputRequestList_Daylighting_sequence;
        typedef SimList_TemplateOutputRequestList_Daylighting_sequence::iterator SimList_TemplateOutputRequestList_Daylighting_iterator;
        typedef SimList_TemplateOutputRequestList_Daylighting_sequence::const_iterator SimList_TemplateOutputRequestList_Daylighting_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_TemplateOutputRequestList_Daylighting_type, char > SimList_TemplateOutputRequestList_Daylighting_traits;

        const SimList_TemplateOutputRequestList_Daylighting_sequence&
        SimList_TemplateOutputRequestList_Daylighting () const;

        SimList_TemplateOutputRequestList_Daylighting_sequence&
        SimList_TemplateOutputRequestList_Daylighting ();

        void
        SimList_TemplateOutputRequestList_Daylighting (const SimList_TemplateOutputRequestList_Daylighting_sequence& s);

        // SimList_TemplateOutputRequestList_FuelAndEnvironmental
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_TemplateOutputRequestList_FuelAndEnvironmental SimList_TemplateOutputRequestList_FuelAndEnvironmental_type;
        typedef ::xsd::cxx::tree::sequence< SimList_TemplateOutputRequestList_FuelAndEnvironmental_type > SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence;
        typedef SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence::iterator SimList_TemplateOutputRequestList_FuelAndEnvironmental_iterator;
        typedef SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence::const_iterator SimList_TemplateOutputRequestList_FuelAndEnvironmental_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_TemplateOutputRequestList_FuelAndEnvironmental_type, char > SimList_TemplateOutputRequestList_FuelAndEnvironmental_traits;

        const SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence&
        SimList_TemplateOutputRequestList_FuelAndEnvironmental () const;

        SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence&
        SimList_TemplateOutputRequestList_FuelAndEnvironmental ();

        void
        SimList_TemplateOutputRequestList_FuelAndEnvironmental (const SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence& s);

        // SimList_TemplateOutputRequestList_Geometry
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_TemplateOutputRequestList_Geometry SimList_TemplateOutputRequestList_Geometry_type;
        typedef ::xsd::cxx::tree::sequence< SimList_TemplateOutputRequestList_Geometry_type > SimList_TemplateOutputRequestList_Geometry_sequence;
        typedef SimList_TemplateOutputRequestList_Geometry_sequence::iterator SimList_TemplateOutputRequestList_Geometry_iterator;
        typedef SimList_TemplateOutputRequestList_Geometry_sequence::const_iterator SimList_TemplateOutputRequestList_Geometry_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_TemplateOutputRequestList_Geometry_type, char > SimList_TemplateOutputRequestList_Geometry_traits;

        const SimList_TemplateOutputRequestList_Geometry_sequence&
        SimList_TemplateOutputRequestList_Geometry () const;

        SimList_TemplateOutputRequestList_Geometry_sequence&
        SimList_TemplateOutputRequestList_Geometry ();

        void
        SimList_TemplateOutputRequestList_Geometry (const SimList_TemplateOutputRequestList_Geometry_sequence& s);

        // SimList_TemplateOutputRequestList_Meters
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_TemplateOutputRequestList_Meters SimList_TemplateOutputRequestList_Meters_type;
        typedef ::xsd::cxx::tree::sequence< SimList_TemplateOutputRequestList_Meters_type > SimList_TemplateOutputRequestList_Meters_sequence;
        typedef SimList_TemplateOutputRequestList_Meters_sequence::iterator SimList_TemplateOutputRequestList_Meters_iterator;
        typedef SimList_TemplateOutputRequestList_Meters_sequence::const_iterator SimList_TemplateOutputRequestList_Meters_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_TemplateOutputRequestList_Meters_type, char > SimList_TemplateOutputRequestList_Meters_traits;

        const SimList_TemplateOutputRequestList_Meters_sequence&
        SimList_TemplateOutputRequestList_Meters () const;

        SimList_TemplateOutputRequestList_Meters_sequence&
        SimList_TemplateOutputRequestList_Meters ();

        void
        SimList_TemplateOutputRequestList_Meters (const SimList_TemplateOutputRequestList_Meters_sequence& s);

        // SimList_TemplateOutputRequestList_Reports
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_TemplateOutputRequestList_Reports SimList_TemplateOutputRequestList_Reports_type;
        typedef ::xsd::cxx::tree::sequence< SimList_TemplateOutputRequestList_Reports_type > SimList_TemplateOutputRequestList_Reports_sequence;
        typedef SimList_TemplateOutputRequestList_Reports_sequence::iterator SimList_TemplateOutputRequestList_Reports_iterator;
        typedef SimList_TemplateOutputRequestList_Reports_sequence::const_iterator SimList_TemplateOutputRequestList_Reports_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_TemplateOutputRequestList_Reports_type, char > SimList_TemplateOutputRequestList_Reports_traits;

        const SimList_TemplateOutputRequestList_Reports_sequence&
        SimList_TemplateOutputRequestList_Reports () const;

        SimList_TemplateOutputRequestList_Reports_sequence&
        SimList_TemplateOutputRequestList_Reports ();

        void
        SimList_TemplateOutputRequestList_Reports (const SimList_TemplateOutputRequestList_Reports_sequence& s);

        // SimList_TemplateOutputRequestList_Variables
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_TemplateOutputRequestList_Variables SimList_TemplateOutputRequestList_Variables_type;
        typedef ::xsd::cxx::tree::sequence< SimList_TemplateOutputRequestList_Variables_type > SimList_TemplateOutputRequestList_Variables_sequence;
        typedef SimList_TemplateOutputRequestList_Variables_sequence::iterator SimList_TemplateOutputRequestList_Variables_iterator;
        typedef SimList_TemplateOutputRequestList_Variables_sequence::const_iterator SimList_TemplateOutputRequestList_Variables_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_TemplateOutputRequestList_Variables_type, char > SimList_TemplateOutputRequestList_Variables_traits;

        const SimList_TemplateOutputRequestList_Variables_sequence&
        SimList_TemplateOutputRequestList_Variables () const;

        SimList_TemplateOutputRequestList_Variables_sequence&
        SimList_TemplateOutputRequestList_Variables ();

        void
        SimList_TemplateOutputRequestList_Variables (const SimList_TemplateOutputRequestList_Variables_sequence& s);

        // SimList_VrfList_VrfTerminals
        //
        typedef ::namespaces::Sim::BuildingModel::SimList_VrfList_VrfTerminals SimList_VrfList_VrfTerminals_type;
        typedef ::xsd::cxx::tree::sequence< SimList_VrfList_VrfTerminals_type > SimList_VrfList_VrfTerminals_sequence;
        typedef SimList_VrfList_VrfTerminals_sequence::iterator SimList_VrfList_VrfTerminals_iterator;
        typedef SimList_VrfList_VrfTerminals_sequence::const_iterator SimList_VrfList_VrfTerminals_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimList_VrfList_VrfTerminals_type, char > SimList_VrfList_VrfTerminals_traits;

        const SimList_VrfList_VrfTerminals_sequence&
        SimList_VrfList_VrfTerminals () const;

        SimList_VrfList_VrfTerminals_sequence&
        SimList_VrfList_VrfTerminals ();

        void
        SimList_VrfList_VrfTerminals (const SimList_VrfList_VrfTerminals_sequence& s);

        // SimLocalPlacement_LocalPlacement_AbsolutePlacement
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimLocalPlacement_LocalPlacement_AbsolutePlacement SimLocalPlacement_LocalPlacement_AbsolutePlacement_type;
        typedef ::xsd::cxx::tree::sequence< SimLocalPlacement_LocalPlacement_AbsolutePlacement_type > SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence;
        typedef SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence::iterator SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator;
        typedef SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence::const_iterator SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocalPlacement_LocalPlacement_AbsolutePlacement_type, char > SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits;

        const SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence&
        SimLocalPlacement_LocalPlacement_AbsolutePlacement () const;

        SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence&
        SimLocalPlacement_LocalPlacement_AbsolutePlacement ();

        void
        SimLocalPlacement_LocalPlacement_AbsolutePlacement (const SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence& s);

        // SimLocalPlacement_LocalPlacement_RelativePlacement
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimLocalPlacement_LocalPlacement_RelativePlacement SimLocalPlacement_LocalPlacement_RelativePlacement_type;
        typedef ::xsd::cxx::tree::sequence< SimLocalPlacement_LocalPlacement_RelativePlacement_type > SimLocalPlacement_LocalPlacement_RelativePlacement_sequence;
        typedef SimLocalPlacement_LocalPlacement_RelativePlacement_sequence::iterator SimLocalPlacement_LocalPlacement_RelativePlacement_iterator;
        typedef SimLocalPlacement_LocalPlacement_RelativePlacement_sequence::const_iterator SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocalPlacement_LocalPlacement_RelativePlacement_type, char > SimLocalPlacement_LocalPlacement_RelativePlacement_traits;

        const SimLocalPlacement_LocalPlacement_RelativePlacement_sequence&
        SimLocalPlacement_LocalPlacement_RelativePlacement () const;

        SimLocalPlacement_LocalPlacement_RelativePlacement_sequence&
        SimLocalPlacement_LocalPlacement_RelativePlacement ();

        void
        SimLocalPlacement_LocalPlacement_RelativePlacement (const SimLocalPlacement_LocalPlacement_RelativePlacement_sequence& s);

        // SimLocationAndWeather_DesignDay_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_DesignDay_Default SimLocationAndWeather_DesignDay_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimLocationAndWeather_DesignDay_Default_type > SimLocationAndWeather_DesignDay_Default_sequence;
        typedef SimLocationAndWeather_DesignDay_Default_sequence::iterator SimLocationAndWeather_DesignDay_Default_iterator;
        typedef SimLocationAndWeather_DesignDay_Default_sequence::const_iterator SimLocationAndWeather_DesignDay_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocationAndWeather_DesignDay_Default_type, char > SimLocationAndWeather_DesignDay_Default_traits;

        const SimLocationAndWeather_DesignDay_Default_sequence&
        SimLocationAndWeather_DesignDay_Default () const;

        SimLocationAndWeather_DesignDay_Default_sequence&
        SimLocationAndWeather_DesignDay_Default ();

        void
        SimLocationAndWeather_DesignDay_Default (const SimLocationAndWeather_DesignDay_Default_sequence& s);

        // SimLocationAndWeather_Location_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_Location_Default SimLocationAndWeather_Location_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimLocationAndWeather_Location_Default_type > SimLocationAndWeather_Location_Default_sequence;
        typedef SimLocationAndWeather_Location_Default_sequence::iterator SimLocationAndWeather_Location_Default_iterator;
        typedef SimLocationAndWeather_Location_Default_sequence::const_iterator SimLocationAndWeather_Location_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocationAndWeather_Location_Default_type, char > SimLocationAndWeather_Location_Default_traits;

        const SimLocationAndWeather_Location_Default_sequence&
        SimLocationAndWeather_Location_Default () const;

        SimLocationAndWeather_Location_Default_sequence&
        SimLocationAndWeather_Location_Default ();

        void
        SimLocationAndWeather_Location_Default (const SimLocationAndWeather_Location_Default_sequence& s);

        // SimLocationAndWeather_WeatherFile_ConditionType
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile_ConditionType SimLocationAndWeather_WeatherFile_ConditionType_type;
        typedef ::xsd::cxx::tree::sequence< SimLocationAndWeather_WeatherFile_ConditionType_type > SimLocationAndWeather_WeatherFile_ConditionType_sequence;
        typedef SimLocationAndWeather_WeatherFile_ConditionType_sequence::iterator SimLocationAndWeather_WeatherFile_ConditionType_iterator;
        typedef SimLocationAndWeather_WeatherFile_ConditionType_sequence::const_iterator SimLocationAndWeather_WeatherFile_ConditionType_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocationAndWeather_WeatherFile_ConditionType_type, char > SimLocationAndWeather_WeatherFile_ConditionType_traits;

        const SimLocationAndWeather_WeatherFile_ConditionType_sequence&
        SimLocationAndWeather_WeatherFile_ConditionType () const;

        SimLocationAndWeather_WeatherFile_ConditionType_sequence&
        SimLocationAndWeather_WeatherFile_ConditionType ();

        void
        SimLocationAndWeather_WeatherFile_ConditionType (const SimLocationAndWeather_WeatherFile_ConditionType_sequence& s);

        // SimLocationAndWeather_WeatherFile_Days
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile_Days SimLocationAndWeather_WeatherFile_Days_type;
        typedef ::xsd::cxx::tree::sequence< SimLocationAndWeather_WeatherFile_Days_type > SimLocationAndWeather_WeatherFile_Days_sequence;
        typedef SimLocationAndWeather_WeatherFile_Days_sequence::iterator SimLocationAndWeather_WeatherFile_Days_iterator;
        typedef SimLocationAndWeather_WeatherFile_Days_sequence::const_iterator SimLocationAndWeather_WeatherFile_Days_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocationAndWeather_WeatherFile_Days_type, char > SimLocationAndWeather_WeatherFile_Days_traits;

        const SimLocationAndWeather_WeatherFile_Days_sequence&
        SimLocationAndWeather_WeatherFile_Days () const;

        SimLocationAndWeather_WeatherFile_Days_sequence&
        SimLocationAndWeather_WeatherFile_Days ();

        void
        SimLocationAndWeather_WeatherFile_Days (const SimLocationAndWeather_WeatherFile_Days_sequence& s);

        // SimLocationAndWeather_WeatherFile_WeatherStation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherFile_WeatherStation SimLocationAndWeather_WeatherFile_WeatherStation_type;
        typedef ::xsd::cxx::tree::sequence< SimLocationAndWeather_WeatherFile_WeatherStation_type > SimLocationAndWeather_WeatherFile_WeatherStation_sequence;
        typedef SimLocationAndWeather_WeatherFile_WeatherStation_sequence::iterator SimLocationAndWeather_WeatherFile_WeatherStation_iterator;
        typedef SimLocationAndWeather_WeatherFile_WeatherStation_sequence::const_iterator SimLocationAndWeather_WeatherFile_WeatherStation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocationAndWeather_WeatherFile_WeatherStation_type, char > SimLocationAndWeather_WeatherFile_WeatherStation_traits;

        const SimLocationAndWeather_WeatherFile_WeatherStation_sequence&
        SimLocationAndWeather_WeatherFile_WeatherStation () const;

        SimLocationAndWeather_WeatherFile_WeatherStation_sequence&
        SimLocationAndWeather_WeatherFile_WeatherStation ();

        void
        SimLocationAndWeather_WeatherFile_WeatherStation (const SimLocationAndWeather_WeatherFile_WeatherStation_sequence& s);

        // SimLocationAndWeather_WeatherProperty_SkyTemperature
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimLocationAndWeather_WeatherProperty_SkyTemperature SimLocationAndWeather_WeatherProperty_SkyTemperature_type;
        typedef ::xsd::cxx::tree::sequence< SimLocationAndWeather_WeatherProperty_SkyTemperature_type > SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence;
        typedef SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence::iterator SimLocationAndWeather_WeatherProperty_SkyTemperature_iterator;
        typedef SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence::const_iterator SimLocationAndWeather_WeatherProperty_SkyTemperature_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLocationAndWeather_WeatherProperty_SkyTemperature_type, char > SimLocationAndWeather_WeatherProperty_SkyTemperature_traits;

        const SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence&
        SimLocationAndWeather_WeatherProperty_SkyTemperature () const;

        SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence&
        SimLocationAndWeather_WeatherProperty_SkyTemperature ();

        void
        SimLocationAndWeather_WeatherProperty_SkyTemperature (const SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence& s);

        // SimLoop_Loop_EdgeLoop
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimLoop_Loop_EdgeLoop SimLoop_Loop_EdgeLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimLoop_Loop_EdgeLoop_type > SimLoop_Loop_EdgeLoop_sequence;
        typedef SimLoop_Loop_EdgeLoop_sequence::iterator SimLoop_Loop_EdgeLoop_iterator;
        typedef SimLoop_Loop_EdgeLoop_sequence::const_iterator SimLoop_Loop_EdgeLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLoop_Loop_EdgeLoop_type, char > SimLoop_Loop_EdgeLoop_traits;

        const SimLoop_Loop_EdgeLoop_sequence&
        SimLoop_Loop_EdgeLoop () const;

        SimLoop_Loop_EdgeLoop_sequence&
        SimLoop_Loop_EdgeLoop ();

        void
        SimLoop_Loop_EdgeLoop (const SimLoop_Loop_EdgeLoop_sequence& s);

        // SimLoop_Loop_PolyLoop
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimLoop_Loop_PolyLoop SimLoop_Loop_PolyLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimLoop_Loop_PolyLoop_type > SimLoop_Loop_PolyLoop_sequence;
        typedef SimLoop_Loop_PolyLoop_sequence::iterator SimLoop_Loop_PolyLoop_iterator;
        typedef SimLoop_Loop_PolyLoop_sequence::const_iterator SimLoop_Loop_PolyLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLoop_Loop_PolyLoop_type, char > SimLoop_Loop_PolyLoop_traits;

        const SimLoop_Loop_PolyLoop_sequence&
        SimLoop_Loop_PolyLoop () const;

        SimLoop_Loop_PolyLoop_sequence&
        SimLoop_Loop_PolyLoop ();

        void
        SimLoop_Loop_PolyLoop (const SimLoop_Loop_PolyLoop_sequence& s);

        // SimLoop_Loop_VertexLoop
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimLoop_Loop_VertexLoop SimLoop_Loop_VertexLoop_type;
        typedef ::xsd::cxx::tree::sequence< SimLoop_Loop_VertexLoop_type > SimLoop_Loop_VertexLoop_sequence;
        typedef SimLoop_Loop_VertexLoop_sequence::iterator SimLoop_Loop_VertexLoop_iterator;
        typedef SimLoop_Loop_VertexLoop_sequence::const_iterator SimLoop_Loop_VertexLoop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimLoop_Loop_VertexLoop_type, char > SimLoop_Loop_VertexLoop_traits;

        const SimLoop_Loop_VertexLoop_sequence&
        SimLoop_Loop_VertexLoop () const;

        SimLoop_Loop_VertexLoop_sequence&
        SimLoop_Loop_VertexLoop ();

        void
        SimLoop_Loop_VertexLoop (const SimLoop_Loop_VertexLoop_sequence& s);

        // SimMappedRepresentationItem_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimMappedRepresentationItem_Default_Default SimMappedRepresentationItem_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMappedRepresentationItem_Default_Default_type > SimMappedRepresentationItem_Default_Default_sequence;
        typedef SimMappedRepresentationItem_Default_Default_sequence::iterator SimMappedRepresentationItem_Default_Default_iterator;
        typedef SimMappedRepresentationItem_Default_Default_sequence::const_iterator SimMappedRepresentationItem_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMappedRepresentationItem_Default_Default_type, char > SimMappedRepresentationItem_Default_Default_traits;

        const SimMappedRepresentationItem_Default_Default_sequence&
        SimMappedRepresentationItem_Default_Default () const;

        SimMappedRepresentationItem_Default_Default_sequence&
        SimMappedRepresentationItem_Default_Default ();

        void
        SimMappedRepresentationItem_Default_Default (const SimMappedRepresentationItem_Default_Default_sequence& s);

        // SimMaterial_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_Default_Default SimMaterial_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_Default_Default_type > SimMaterial_Default_Default_sequence;
        typedef SimMaterial_Default_Default_sequence::iterator SimMaterial_Default_Default_iterator;
        typedef SimMaterial_Default_Default_sequence::const_iterator SimMaterial_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_Default_Default_type, char > SimMaterial_Default_Default_traits;

        const SimMaterial_Default_Default_sequence&
        SimMaterial_Default_Default () const;

        SimMaterial_Default_Default_sequence&
        SimMaterial_Default_Default ();

        void
        SimMaterial_Default_Default (const SimMaterial_Default_Default_sequence& s);

        // SimMaterial_GlazingMaterial_Blind
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Blind SimMaterial_GlazingMaterial_Blind_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Blind_type > SimMaterial_GlazingMaterial_Blind_sequence;
        typedef SimMaterial_GlazingMaterial_Blind_sequence::iterator SimMaterial_GlazingMaterial_Blind_iterator;
        typedef SimMaterial_GlazingMaterial_Blind_sequence::const_iterator SimMaterial_GlazingMaterial_Blind_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Blind_type, char > SimMaterial_GlazingMaterial_Blind_traits;

        const SimMaterial_GlazingMaterial_Blind_sequence&
        SimMaterial_GlazingMaterial_Blind () const;

        SimMaterial_GlazingMaterial_Blind_sequence&
        SimMaterial_GlazingMaterial_Blind ();

        void
        SimMaterial_GlazingMaterial_Blind (const SimMaterial_GlazingMaterial_Blind_sequence& s);

        // SimMaterial_GlazingMaterial_ComplexShade
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_ComplexShade SimMaterial_GlazingMaterial_ComplexShade_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_ComplexShade_type > SimMaterial_GlazingMaterial_ComplexShade_sequence;
        typedef SimMaterial_GlazingMaterial_ComplexShade_sequence::iterator SimMaterial_GlazingMaterial_ComplexShade_iterator;
        typedef SimMaterial_GlazingMaterial_ComplexShade_sequence::const_iterator SimMaterial_GlazingMaterial_ComplexShade_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_ComplexShade_type, char > SimMaterial_GlazingMaterial_ComplexShade_traits;

        const SimMaterial_GlazingMaterial_ComplexShade_sequence&
        SimMaterial_GlazingMaterial_ComplexShade () const;

        SimMaterial_GlazingMaterial_ComplexShade_sequence&
        SimMaterial_GlazingMaterial_ComplexShade ();

        void
        SimMaterial_GlazingMaterial_ComplexShade (const SimMaterial_GlazingMaterial_ComplexShade_sequence& s);

        // SimMaterial_GlazingMaterial_Gap
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Gap SimMaterial_GlazingMaterial_Gap_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Gap_type > SimMaterial_GlazingMaterial_Gap_sequence;
        typedef SimMaterial_GlazingMaterial_Gap_sequence::iterator SimMaterial_GlazingMaterial_Gap_iterator;
        typedef SimMaterial_GlazingMaterial_Gap_sequence::const_iterator SimMaterial_GlazingMaterial_Gap_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Gap_type, char > SimMaterial_GlazingMaterial_Gap_traits;

        const SimMaterial_GlazingMaterial_Gap_sequence&
        SimMaterial_GlazingMaterial_Gap () const;

        SimMaterial_GlazingMaterial_Gap_sequence&
        SimMaterial_GlazingMaterial_Gap ();

        void
        SimMaterial_GlazingMaterial_Gap (const SimMaterial_GlazingMaterial_Gap_sequence& s);

        // SimMaterial_GlazingMaterial_Gas
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Gas SimMaterial_GlazingMaterial_Gas_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Gas_type > SimMaterial_GlazingMaterial_Gas_sequence;
        typedef SimMaterial_GlazingMaterial_Gas_sequence::iterator SimMaterial_GlazingMaterial_Gas_iterator;
        typedef SimMaterial_GlazingMaterial_Gas_sequence::const_iterator SimMaterial_GlazingMaterial_Gas_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Gas_type, char > SimMaterial_GlazingMaterial_Gas_traits;

        const SimMaterial_GlazingMaterial_Gas_sequence&
        SimMaterial_GlazingMaterial_Gas () const;

        SimMaterial_GlazingMaterial_Gas_sequence&
        SimMaterial_GlazingMaterial_Gas ();

        void
        SimMaterial_GlazingMaterial_Gas (const SimMaterial_GlazingMaterial_Gas_sequence& s);

        // SimMaterial_GlazingMaterial_GasMixture
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_GasMixture SimMaterial_GlazingMaterial_GasMixture_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_GasMixture_type > SimMaterial_GlazingMaterial_GasMixture_sequence;
        typedef SimMaterial_GlazingMaterial_GasMixture_sequence::iterator SimMaterial_GlazingMaterial_GasMixture_iterator;
        typedef SimMaterial_GlazingMaterial_GasMixture_sequence::const_iterator SimMaterial_GlazingMaterial_GasMixture_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_GasMixture_type, char > SimMaterial_GlazingMaterial_GasMixture_traits;

        const SimMaterial_GlazingMaterial_GasMixture_sequence&
        SimMaterial_GlazingMaterial_GasMixture () const;

        SimMaterial_GlazingMaterial_GasMixture_sequence&
        SimMaterial_GlazingMaterial_GasMixture ();

        void
        SimMaterial_GlazingMaterial_GasMixture (const SimMaterial_GlazingMaterial_GasMixture_sequence& s);

        // SimMaterial_GlazingMaterial_Glazing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Glazing SimMaterial_GlazingMaterial_Glazing_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Glazing_type > SimMaterial_GlazingMaterial_Glazing_sequence;
        typedef SimMaterial_GlazingMaterial_Glazing_sequence::iterator SimMaterial_GlazingMaterial_Glazing_iterator;
        typedef SimMaterial_GlazingMaterial_Glazing_sequence::const_iterator SimMaterial_GlazingMaterial_Glazing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Glazing_type, char > SimMaterial_GlazingMaterial_Glazing_traits;

        const SimMaterial_GlazingMaterial_Glazing_sequence&
        SimMaterial_GlazingMaterial_Glazing () const;

        SimMaterial_GlazingMaterial_Glazing_sequence&
        SimMaterial_GlazingMaterial_Glazing ();

        void
        SimMaterial_GlazingMaterial_Glazing (const SimMaterial_GlazingMaterial_Glazing_sequence& s);

        // SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_type > SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence;
        typedef SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence::iterator SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_iterator;
        typedef SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence::const_iterator SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_type, char > SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_traits;

        const SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence&
        SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod () const;

        SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence&
        SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod ();

        void
        SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod (const SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence& s);

        // SimMaterial_GlazingMaterial_Screen
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Screen SimMaterial_GlazingMaterial_Screen_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Screen_type > SimMaterial_GlazingMaterial_Screen_sequence;
        typedef SimMaterial_GlazingMaterial_Screen_sequence::iterator SimMaterial_GlazingMaterial_Screen_iterator;
        typedef SimMaterial_GlazingMaterial_Screen_sequence::const_iterator SimMaterial_GlazingMaterial_Screen_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Screen_type, char > SimMaterial_GlazingMaterial_Screen_traits;

        const SimMaterial_GlazingMaterial_Screen_sequence&
        SimMaterial_GlazingMaterial_Screen () const;

        SimMaterial_GlazingMaterial_Screen_sequence&
        SimMaterial_GlazingMaterial_Screen ();

        void
        SimMaterial_GlazingMaterial_Screen (const SimMaterial_GlazingMaterial_Screen_sequence& s);

        // SimMaterial_GlazingMaterial_Shade
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Shade SimMaterial_GlazingMaterial_Shade_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Shade_type > SimMaterial_GlazingMaterial_Shade_sequence;
        typedef SimMaterial_GlazingMaterial_Shade_sequence::iterator SimMaterial_GlazingMaterial_Shade_iterator;
        typedef SimMaterial_GlazingMaterial_Shade_sequence::const_iterator SimMaterial_GlazingMaterial_Shade_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Shade_type, char > SimMaterial_GlazingMaterial_Shade_traits;

        const SimMaterial_GlazingMaterial_Shade_sequence&
        SimMaterial_GlazingMaterial_Shade () const;

        SimMaterial_GlazingMaterial_Shade_sequence&
        SimMaterial_GlazingMaterial_Shade ();

        void
        SimMaterial_GlazingMaterial_Shade (const SimMaterial_GlazingMaterial_Shade_sequence& s);

        // SimMaterial_GlazingMaterial_SimpleGlazingSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_SimpleGlazingSystem SimMaterial_GlazingMaterial_SimpleGlazingSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_SimpleGlazingSystem_type > SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence;
        typedef SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence::iterator SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator;
        typedef SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence::const_iterator SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_SimpleGlazingSystem_type, char > SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits;

        const SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence&
        SimMaterial_GlazingMaterial_SimpleGlazingSystem () const;

        SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence&
        SimMaterial_GlazingMaterial_SimpleGlazingSystem ();

        void
        SimMaterial_GlazingMaterial_SimpleGlazingSystem (const SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence& s);

        // SimMaterial_GlazingMaterial_Thermochromic
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_GlazingMaterial_Thermochromic SimMaterial_GlazingMaterial_Thermochromic_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_GlazingMaterial_Thermochromic_type > SimMaterial_GlazingMaterial_Thermochromic_sequence;
        typedef SimMaterial_GlazingMaterial_Thermochromic_sequence::iterator SimMaterial_GlazingMaterial_Thermochromic_iterator;
        typedef SimMaterial_GlazingMaterial_Thermochromic_sequence::const_iterator SimMaterial_GlazingMaterial_Thermochromic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_GlazingMaterial_Thermochromic_type, char > SimMaterial_GlazingMaterial_Thermochromic_traits;

        const SimMaterial_GlazingMaterial_Thermochromic_sequence&
        SimMaterial_GlazingMaterial_Thermochromic () const;

        SimMaterial_GlazingMaterial_Thermochromic_sequence&
        SimMaterial_GlazingMaterial_Thermochromic ();

        void
        SimMaterial_GlazingMaterial_Thermochromic (const SimMaterial_GlazingMaterial_Thermochromic_sequence& s);

        // SimMaterial_OpaqueMaterial_AirGap
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_AirGap SimMaterial_OpaqueMaterial_AirGap_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_AirGap_type > SimMaterial_OpaqueMaterial_AirGap_sequence;
        typedef SimMaterial_OpaqueMaterial_AirGap_sequence::iterator SimMaterial_OpaqueMaterial_AirGap_iterator;
        typedef SimMaterial_OpaqueMaterial_AirGap_sequence::const_iterator SimMaterial_OpaqueMaterial_AirGap_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_AirGap_type, char > SimMaterial_OpaqueMaterial_AirGap_traits;

        const SimMaterial_OpaqueMaterial_AirGap_sequence&
        SimMaterial_OpaqueMaterial_AirGap () const;

        SimMaterial_OpaqueMaterial_AirGap_sequence&
        SimMaterial_OpaqueMaterial_AirGap ();

        void
        SimMaterial_OpaqueMaterial_AirGap (const SimMaterial_OpaqueMaterial_AirGap_sequence& s);

        // SimMaterial_OpaqueMaterial_Composite
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_Composite SimMaterial_OpaqueMaterial_Composite_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_Composite_type > SimMaterial_OpaqueMaterial_Composite_sequence;
        typedef SimMaterial_OpaqueMaterial_Composite_sequence::iterator SimMaterial_OpaqueMaterial_Composite_iterator;
        typedef SimMaterial_OpaqueMaterial_Composite_sequence::const_iterator SimMaterial_OpaqueMaterial_Composite_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_Composite_type, char > SimMaterial_OpaqueMaterial_Composite_traits;

        const SimMaterial_OpaqueMaterial_Composite_sequence&
        SimMaterial_OpaqueMaterial_Composite () const;

        SimMaterial_OpaqueMaterial_Composite_sequence&
        SimMaterial_OpaqueMaterial_Composite ();

        void
        SimMaterial_OpaqueMaterial_Composite (const SimMaterial_OpaqueMaterial_Composite_sequence& s);

        // SimMaterial_OpaqueMaterial_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_Default SimMaterial_OpaqueMaterial_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_Default_type > SimMaterial_OpaqueMaterial_Default_sequence;
        typedef SimMaterial_OpaqueMaterial_Default_sequence::iterator SimMaterial_OpaqueMaterial_Default_iterator;
        typedef SimMaterial_OpaqueMaterial_Default_sequence::const_iterator SimMaterial_OpaqueMaterial_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_Default_type, char > SimMaterial_OpaqueMaterial_Default_traits;

        const SimMaterial_OpaqueMaterial_Default_sequence&
        SimMaterial_OpaqueMaterial_Default () const;

        SimMaterial_OpaqueMaterial_Default_sequence&
        SimMaterial_OpaqueMaterial_Default ();

        void
        SimMaterial_OpaqueMaterial_Default (const SimMaterial_OpaqueMaterial_Default_sequence& s);

        // SimMaterial_OpaqueMaterial_InfraredTransparent
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_InfraredTransparent SimMaterial_OpaqueMaterial_InfraredTransparent_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_InfraredTransparent_type > SimMaterial_OpaqueMaterial_InfraredTransparent_sequence;
        typedef SimMaterial_OpaqueMaterial_InfraredTransparent_sequence::iterator SimMaterial_OpaqueMaterial_InfraredTransparent_iterator;
        typedef SimMaterial_OpaqueMaterial_InfraredTransparent_sequence::const_iterator SimMaterial_OpaqueMaterial_InfraredTransparent_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_InfraredTransparent_type, char > SimMaterial_OpaqueMaterial_InfraredTransparent_traits;

        const SimMaterial_OpaqueMaterial_InfraredTransparent_sequence&
        SimMaterial_OpaqueMaterial_InfraredTransparent () const;

        SimMaterial_OpaqueMaterial_InfraredTransparent_sequence&
        SimMaterial_OpaqueMaterial_InfraredTransparent ();

        void
        SimMaterial_OpaqueMaterial_InfraredTransparent (const SimMaterial_OpaqueMaterial_InfraredTransparent_sequence& s);

        // SimMaterial_OpaqueMaterial_Insulation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_Insulation SimMaterial_OpaqueMaterial_Insulation_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_Insulation_type > SimMaterial_OpaqueMaterial_Insulation_sequence;
        typedef SimMaterial_OpaqueMaterial_Insulation_sequence::iterator SimMaterial_OpaqueMaterial_Insulation_iterator;
        typedef SimMaterial_OpaqueMaterial_Insulation_sequence::const_iterator SimMaterial_OpaqueMaterial_Insulation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_Insulation_type, char > SimMaterial_OpaqueMaterial_Insulation_traits;

        const SimMaterial_OpaqueMaterial_Insulation_sequence&
        SimMaterial_OpaqueMaterial_Insulation () const;

        SimMaterial_OpaqueMaterial_Insulation_sequence&
        SimMaterial_OpaqueMaterial_Insulation ();

        void
        SimMaterial_OpaqueMaterial_Insulation (const SimMaterial_OpaqueMaterial_Insulation_sequence& s);

        // SimMaterial_OpaqueMaterial_InsulationMovable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_InsulationMovable SimMaterial_OpaqueMaterial_InsulationMovable_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_InsulationMovable_type > SimMaterial_OpaqueMaterial_InsulationMovable_sequence;
        typedef SimMaterial_OpaqueMaterial_InsulationMovable_sequence::iterator SimMaterial_OpaqueMaterial_InsulationMovable_iterator;
        typedef SimMaterial_OpaqueMaterial_InsulationMovable_sequence::const_iterator SimMaterial_OpaqueMaterial_InsulationMovable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_InsulationMovable_type, char > SimMaterial_OpaqueMaterial_InsulationMovable_traits;

        const SimMaterial_OpaqueMaterial_InsulationMovable_sequence&
        SimMaterial_OpaqueMaterial_InsulationMovable () const;

        SimMaterial_OpaqueMaterial_InsulationMovable_sequence&
        SimMaterial_OpaqueMaterial_InsulationMovable ();

        void
        SimMaterial_OpaqueMaterial_InsulationMovable (const SimMaterial_OpaqueMaterial_InsulationMovable_sequence& s);

        // SimMaterial_OpaqueMaterial_NoMass
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_NoMass SimMaterial_OpaqueMaterial_NoMass_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_NoMass_type > SimMaterial_OpaqueMaterial_NoMass_sequence;
        typedef SimMaterial_OpaqueMaterial_NoMass_sequence::iterator SimMaterial_OpaqueMaterial_NoMass_iterator;
        typedef SimMaterial_OpaqueMaterial_NoMass_sequence::const_iterator SimMaterial_OpaqueMaterial_NoMass_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_NoMass_type, char > SimMaterial_OpaqueMaterial_NoMass_traits;

        const SimMaterial_OpaqueMaterial_NoMass_sequence&
        SimMaterial_OpaqueMaterial_NoMass () const;

        SimMaterial_OpaqueMaterial_NoMass_sequence&
        SimMaterial_OpaqueMaterial_NoMass ();

        void
        SimMaterial_OpaqueMaterial_NoMass (const SimMaterial_OpaqueMaterial_NoMass_sequence& s);

        // SimMaterial_OpaqueMaterial_Vegetation
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_OpaqueMaterial_Vegetation SimMaterial_OpaqueMaterial_Vegetation_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_OpaqueMaterial_Vegetation_type > SimMaterial_OpaqueMaterial_Vegetation_sequence;
        typedef SimMaterial_OpaqueMaterial_Vegetation_sequence::iterator SimMaterial_OpaqueMaterial_Vegetation_iterator;
        typedef SimMaterial_OpaqueMaterial_Vegetation_sequence::const_iterator SimMaterial_OpaqueMaterial_Vegetation_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_OpaqueMaterial_Vegetation_type, char > SimMaterial_OpaqueMaterial_Vegetation_traits;

        const SimMaterial_OpaqueMaterial_Vegetation_sequence&
        SimMaterial_OpaqueMaterial_Vegetation () const;

        SimMaterial_OpaqueMaterial_Vegetation_sequence&
        SimMaterial_OpaqueMaterial_Vegetation ();

        void
        SimMaterial_OpaqueMaterial_Vegetation (const SimMaterial_OpaqueMaterial_Vegetation_sequence& s);

        // SimMaterial_VirtualBoundary_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterial_VirtualBoundary_Default SimMaterial_VirtualBoundary_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterial_VirtualBoundary_Default_type > SimMaterial_VirtualBoundary_Default_sequence;
        typedef SimMaterial_VirtualBoundary_Default_sequence::iterator SimMaterial_VirtualBoundary_Default_iterator;
        typedef SimMaterial_VirtualBoundary_Default_sequence::const_iterator SimMaterial_VirtualBoundary_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterial_VirtualBoundary_Default_type, char > SimMaterial_VirtualBoundary_Default_traits;

        const SimMaterial_VirtualBoundary_Default_sequence&
        SimMaterial_VirtualBoundary_Default () const;

        SimMaterial_VirtualBoundary_Default_sequence&
        SimMaterial_VirtualBoundary_Default ();

        void
        SimMaterial_VirtualBoundary_Default (const SimMaterial_VirtualBoundary_Default_sequence& s);

        // SimMaterialLayer_GlazingMaterialLayer_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayer_GlazingMaterialLayer_Default SimMaterialLayer_GlazingMaterialLayer_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayer_GlazingMaterialLayer_Default_type > SimMaterialLayer_GlazingMaterialLayer_Default_sequence;
        typedef SimMaterialLayer_GlazingMaterialLayer_Default_sequence::iterator SimMaterialLayer_GlazingMaterialLayer_Default_iterator;
        typedef SimMaterialLayer_GlazingMaterialLayer_Default_sequence::const_iterator SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayer_GlazingMaterialLayer_Default_type, char > SimMaterialLayer_GlazingMaterialLayer_Default_traits;

        const SimMaterialLayer_GlazingMaterialLayer_Default_sequence&
        SimMaterialLayer_GlazingMaterialLayer_Default () const;

        SimMaterialLayer_GlazingMaterialLayer_Default_sequence&
        SimMaterialLayer_GlazingMaterialLayer_Default ();

        void
        SimMaterialLayer_GlazingMaterialLayer_Default (const SimMaterialLayer_GlazingMaterialLayer_Default_sequence& s);

        // SimMaterialLayer_OpaqueMaterialLayer_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayer_OpaqueMaterialLayer_Default SimMaterialLayer_OpaqueMaterialLayer_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayer_OpaqueMaterialLayer_Default_type > SimMaterialLayer_OpaqueMaterialLayer_Default_sequence;
        typedef SimMaterialLayer_OpaqueMaterialLayer_Default_sequence::iterator SimMaterialLayer_OpaqueMaterialLayer_Default_iterator;
        typedef SimMaterialLayer_OpaqueMaterialLayer_Default_sequence::const_iterator SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayer_OpaqueMaterialLayer_Default_type, char > SimMaterialLayer_OpaqueMaterialLayer_Default_traits;

        const SimMaterialLayer_OpaqueMaterialLayer_Default_sequence&
        SimMaterialLayer_OpaqueMaterialLayer_Default () const;

        SimMaterialLayer_OpaqueMaterialLayer_Default_sequence&
        SimMaterialLayer_OpaqueMaterialLayer_Default ();

        void
        SimMaterialLayer_OpaqueMaterialLayer_Default (const SimMaterialLayer_OpaqueMaterialLayer_Default_sequence& s);

        // SimMaterialLayer_VirtualBoundaryLayer_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayer_VirtualBoundaryLayer_Default SimMaterialLayer_VirtualBoundaryLayer_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayer_VirtualBoundaryLayer_Default_type > SimMaterialLayer_VirtualBoundaryLayer_Default_sequence;
        typedef SimMaterialLayer_VirtualBoundaryLayer_Default_sequence::iterator SimMaterialLayer_VirtualBoundaryLayer_Default_iterator;
        typedef SimMaterialLayer_VirtualBoundaryLayer_Default_sequence::const_iterator SimMaterialLayer_VirtualBoundaryLayer_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayer_VirtualBoundaryLayer_Default_type, char > SimMaterialLayer_VirtualBoundaryLayer_Default_traits;

        const SimMaterialLayer_VirtualBoundaryLayer_Default_sequence&
        SimMaterialLayer_VirtualBoundaryLayer_Default () const;

        SimMaterialLayer_VirtualBoundaryLayer_Default_sequence&
        SimMaterialLayer_VirtualBoundaryLayer_Default ();

        void
        SimMaterialLayer_VirtualBoundaryLayer_Default (const SimMaterialLayer_VirtualBoundaryLayer_Default_sequence& s);

        // SimMaterialLayerSet_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_Default_Default SimMaterialLayerSet_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_Default_Default_type > SimMaterialLayerSet_Default_Default_sequence;
        typedef SimMaterialLayerSet_Default_Default_sequence::iterator SimMaterialLayerSet_Default_Default_iterator;
        typedef SimMaterialLayerSet_Default_Default_sequence::const_iterator SimMaterialLayerSet_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_Default_Default_type, char > SimMaterialLayerSet_Default_Default_traits;

        const SimMaterialLayerSet_Default_Default_sequence&
        SimMaterialLayerSet_Default_Default () const;

        SimMaterialLayerSet_Default_Default_sequence&
        SimMaterialLayerSet_Default_Default ();

        void
        SimMaterialLayerSet_Default_Default (const SimMaterialLayerSet_Default_Default_sequence& s);

        // SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_type > SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence;
        typedef SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence::iterator SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_iterator;
        typedef SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence::const_iterator SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_type, char > SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_traits;

        const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence&
        SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState () const;

        SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence&
        SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState ();

        void
        SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState (const SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence& s);

        // SimMaterialLayerSet_GlazingLayerSet_CurtainWall
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_CurtainWall SimMaterialLayerSet_GlazingLayerSet_CurtainWall_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_GlazingLayerSet_CurtainWall_type > SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence;
        typedef SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence::iterator SimMaterialLayerSet_GlazingLayerSet_CurtainWall_iterator;
        typedef SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence::const_iterator SimMaterialLayerSet_GlazingLayerSet_CurtainWall_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_GlazingLayerSet_CurtainWall_type, char > SimMaterialLayerSet_GlazingLayerSet_CurtainWall_traits;

        const SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence&
        SimMaterialLayerSet_GlazingLayerSet_CurtainWall () const;

        SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence&
        SimMaterialLayerSet_GlazingLayerSet_CurtainWall ();

        void
        SimMaterialLayerSet_GlazingLayerSet_CurtainWall (const SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence& s);

        // SimMaterialLayerSet_GlazingLayerSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_Default SimMaterialLayerSet_GlazingLayerSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_GlazingLayerSet_Default_type > SimMaterialLayerSet_GlazingLayerSet_Default_sequence;
        typedef SimMaterialLayerSet_GlazingLayerSet_Default_sequence::iterator SimMaterialLayerSet_GlazingLayerSet_Default_iterator;
        typedef SimMaterialLayerSet_GlazingLayerSet_Default_sequence::const_iterator SimMaterialLayerSet_GlazingLayerSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_GlazingLayerSet_Default_type, char > SimMaterialLayerSet_GlazingLayerSet_Default_traits;

        const SimMaterialLayerSet_GlazingLayerSet_Default_sequence&
        SimMaterialLayerSet_GlazingLayerSet_Default () const;

        SimMaterialLayerSet_GlazingLayerSet_Default_sequence&
        SimMaterialLayerSet_GlazingLayerSet_Default ();

        void
        SimMaterialLayerSet_GlazingLayerSet_Default (const SimMaterialLayerSet_GlazingLayerSet_Default_sequence& s);

        // SimMaterialLayerSet_GlazingLayerSet_GlassDoor
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_GlassDoor SimMaterialLayerSet_GlazingLayerSet_GlassDoor_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_GlazingLayerSet_GlassDoor_type > SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence;
        typedef SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence::iterator SimMaterialLayerSet_GlazingLayerSet_GlassDoor_iterator;
        typedef SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence::const_iterator SimMaterialLayerSet_GlazingLayerSet_GlassDoor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_GlazingLayerSet_GlassDoor_type, char > SimMaterialLayerSet_GlazingLayerSet_GlassDoor_traits;

        const SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence&
        SimMaterialLayerSet_GlazingLayerSet_GlassDoor () const;

        SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence&
        SimMaterialLayerSet_GlazingLayerSet_GlassDoor ();

        void
        SimMaterialLayerSet_GlazingLayerSet_GlassDoor (const SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence& s);

        // SimMaterialLayerSet_GlazingLayerSet_Window
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_Window SimMaterialLayerSet_GlazingLayerSet_Window_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_GlazingLayerSet_Window_type > SimMaterialLayerSet_GlazingLayerSet_Window_sequence;
        typedef SimMaterialLayerSet_GlazingLayerSet_Window_sequence::iterator SimMaterialLayerSet_GlazingLayerSet_Window_iterator;
        typedef SimMaterialLayerSet_GlazingLayerSet_Window_sequence::const_iterator SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_GlazingLayerSet_Window_type, char > SimMaterialLayerSet_GlazingLayerSet_Window_traits;

        const SimMaterialLayerSet_GlazingLayerSet_Window_sequence&
        SimMaterialLayerSet_GlazingLayerSet_Window () const;

        SimMaterialLayerSet_GlazingLayerSet_Window_sequence&
        SimMaterialLayerSet_GlazingLayerSet_Window ();

        void
        SimMaterialLayerSet_GlazingLayerSet_Window (const SimMaterialLayerSet_GlazingLayerSet_Window_sequence& s);

        // SimMaterialLayerSet_GlazingLayerSet_WindowDataFile
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_WindowDataFile SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_type > SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence;
        typedef SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence::iterator SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_iterator;
        typedef SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence::const_iterator SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_type, char > SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_traits;

        const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence&
        SimMaterialLayerSet_GlazingLayerSet_WindowDataFile () const;

        SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence&
        SimMaterialLayerSet_GlazingLayerSet_WindowDataFile ();

        void
        SimMaterialLayerSet_GlazingLayerSet_WindowDataFile (const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Ceiling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Ceiling SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type > SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type, char > SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Ceiling () const;

        SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Ceiling ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Ceiling (const SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_type > SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_type, char > SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall () const;

        SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall (const SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Default SimMaterialLayerSet_OpaqueLayerSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Default_type > SimMaterialLayerSet_OpaqueLayerSet_Default_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Default_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Default_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Default_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Default_type, char > SimMaterialLayerSet_OpaqueLayerSet_Default_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Default_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Default () const;

        SimMaterialLayerSet_OpaqueLayerSet_Default_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Default ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Default (const SimMaterialLayerSet_OpaqueLayerSet_Default_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Door
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Door SimMaterialLayerSet_OpaqueLayerSet_Door_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Door_type > SimMaterialLayerSet_OpaqueLayerSet_Door_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Door_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Door_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Door_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Door_type, char > SimMaterialLayerSet_OpaqueLayerSet_Door_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Door_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Door () const;

        SimMaterialLayerSet_OpaqueLayerSet_Door_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Door ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Door (const SimMaterialLayerSet_OpaqueLayerSet_Door_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_type > SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_type, char > SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor () const;

        SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor (const SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Floor
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Floor SimMaterialLayerSet_OpaqueLayerSet_Floor_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Floor_type > SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Floor_type, char > SimMaterialLayerSet_OpaqueLayerSet_Floor_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Floor () const;

        SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Floor ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Floor (const SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_InternalSource
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_InternalSource SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type > SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type, char > SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_InternalSource () const;

        SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_InternalSource ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_InternalSource (const SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Landing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Landing SimMaterialLayerSet_OpaqueLayerSet_Landing_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Landing_type > SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Landing_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Landing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Landing_type, char > SimMaterialLayerSet_OpaqueLayerSet_Landing_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Landing () const;

        SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Landing ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Landing (const SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Roof
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Roof SimMaterialLayerSet_OpaqueLayerSet_Roof_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Roof_type > SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Roof_type, char > SimMaterialLayerSet_OpaqueLayerSet_Roof_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Roof () const;

        SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Roof ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Roof (const SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence& s);

        // SimMaterialLayerSet_OpaqueLayerSet_Wall
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Wall SimMaterialLayerSet_OpaqueLayerSet_Wall_type;
        typedef ::xsd::cxx::tree::sequence< SimMaterialLayerSet_OpaqueLayerSet_Wall_type > SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence::iterator SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator;
        typedef SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence::const_iterator SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMaterialLayerSet_OpaqueLayerSet_Wall_type, char > SimMaterialLayerSet_OpaqueLayerSet_Wall_traits;

        const SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Wall () const;

        SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence&
        SimMaterialLayerSet_OpaqueLayerSet_Wall ();

        void
        SimMaterialLayerSet_OpaqueLayerSet_Wall (const SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence& s);

        // SimMeasureType_AreaMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_AreaMeasure_Default SimMeasureType_AreaMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_AreaMeasure_Default_type > SimMeasureType_AreaMeasure_Default_sequence;
        typedef SimMeasureType_AreaMeasure_Default_sequence::iterator SimMeasureType_AreaMeasure_Default_iterator;
        typedef SimMeasureType_AreaMeasure_Default_sequence::const_iterator SimMeasureType_AreaMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_AreaMeasure_Default_type, char > SimMeasureType_AreaMeasure_Default_traits;

        const SimMeasureType_AreaMeasure_Default_sequence&
        SimMeasureType_AreaMeasure_Default () const;

        SimMeasureType_AreaMeasure_Default_sequence&
        SimMeasureType_AreaMeasure_Default ();

        void
        SimMeasureType_AreaMeasure_Default (const SimMeasureType_AreaMeasure_Default_sequence& s);

        // SimMeasureType_CountMeasure_AirChangesPerhour
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_CountMeasure_AirChangesPerhour SimMeasureType_CountMeasure_AirChangesPerhour_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_CountMeasure_AirChangesPerhour_type > SimMeasureType_CountMeasure_AirChangesPerhour_sequence;
        typedef SimMeasureType_CountMeasure_AirChangesPerhour_sequence::iterator SimMeasureType_CountMeasure_AirChangesPerhour_iterator;
        typedef SimMeasureType_CountMeasure_AirChangesPerhour_sequence::const_iterator SimMeasureType_CountMeasure_AirChangesPerhour_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_CountMeasure_AirChangesPerhour_type, char > SimMeasureType_CountMeasure_AirChangesPerhour_traits;

        const SimMeasureType_CountMeasure_AirChangesPerhour_sequence&
        SimMeasureType_CountMeasure_AirChangesPerhour () const;

        SimMeasureType_CountMeasure_AirChangesPerhour_sequence&
        SimMeasureType_CountMeasure_AirChangesPerhour ();

        void
        SimMeasureType_CountMeasure_AirChangesPerhour (const SimMeasureType_CountMeasure_AirChangesPerhour_sequence& s);

        // SimMeasureType_CountMeasure_Count
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_CountMeasure_Count SimMeasureType_CountMeasure_Count_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_CountMeasure_Count_type > SimMeasureType_CountMeasure_Count_sequence;
        typedef SimMeasureType_CountMeasure_Count_sequence::iterator SimMeasureType_CountMeasure_Count_iterator;
        typedef SimMeasureType_CountMeasure_Count_sequence::const_iterator SimMeasureType_CountMeasure_Count_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_CountMeasure_Count_type, char > SimMeasureType_CountMeasure_Count_traits;

        const SimMeasureType_CountMeasure_Count_sequence&
        SimMeasureType_CountMeasure_Count () const;

        SimMeasureType_CountMeasure_Count_sequence&
        SimMeasureType_CountMeasure_Count ();

        void
        SimMeasureType_CountMeasure_Count (const SimMeasureType_CountMeasure_Count_sequence& s);

        // SimMeasureType_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_Default_Default SimMeasureType_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_Default_Default_type > SimMeasureType_Default_Default_sequence;
        typedef SimMeasureType_Default_Default_sequence::iterator SimMeasureType_Default_Default_iterator;
        typedef SimMeasureType_Default_Default_sequence::const_iterator SimMeasureType_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_Default_Default_type, char > SimMeasureType_Default_Default_traits;

        const SimMeasureType_Default_Default_sequence&
        SimMeasureType_Default_Default () const;

        SimMeasureType_Default_Default_sequence&
        SimMeasureType_Default_Default ();

        void
        SimMeasureType_Default_Default (const SimMeasureType_Default_Default_sequence& s);

        // SimMeasureType_EnergyMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_EnergyMeasure_Default SimMeasureType_EnergyMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_EnergyMeasure_Default_type > SimMeasureType_EnergyMeasure_Default_sequence;
        typedef SimMeasureType_EnergyMeasure_Default_sequence::iterator SimMeasureType_EnergyMeasure_Default_iterator;
        typedef SimMeasureType_EnergyMeasure_Default_sequence::const_iterator SimMeasureType_EnergyMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_EnergyMeasure_Default_type, char > SimMeasureType_EnergyMeasure_Default_traits;

        const SimMeasureType_EnergyMeasure_Default_sequence&
        SimMeasureType_EnergyMeasure_Default () const;

        SimMeasureType_EnergyMeasure_Default_sequence&
        SimMeasureType_EnergyMeasure_Default ();

        void
        SimMeasureType_EnergyMeasure_Default (const SimMeasureType_EnergyMeasure_Default_sequence& s);

        // SimMeasureType_EnergyMeasure_WattsPerAreaMeasure
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_EnergyMeasure_WattsPerAreaMeasure SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_type > SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence;
        typedef SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence::iterator SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_iterator;
        typedef SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence::const_iterator SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_type, char > SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_traits;

        const SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence&
        SimMeasureType_EnergyMeasure_WattsPerAreaMeasure () const;

        SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence&
        SimMeasureType_EnergyMeasure_WattsPerAreaMeasure ();

        void
        SimMeasureType_EnergyMeasure_WattsPerAreaMeasure (const SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence& s);

        // SimMeasureType_EnergyMeasure_WattsPerPerson
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_EnergyMeasure_WattsPerPerson SimMeasureType_EnergyMeasure_WattsPerPerson_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_EnergyMeasure_WattsPerPerson_type > SimMeasureType_EnergyMeasure_WattsPerPerson_sequence;
        typedef SimMeasureType_EnergyMeasure_WattsPerPerson_sequence::iterator SimMeasureType_EnergyMeasure_WattsPerPerson_iterator;
        typedef SimMeasureType_EnergyMeasure_WattsPerPerson_sequence::const_iterator SimMeasureType_EnergyMeasure_WattsPerPerson_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_EnergyMeasure_WattsPerPerson_type, char > SimMeasureType_EnergyMeasure_WattsPerPerson_traits;

        const SimMeasureType_EnergyMeasure_WattsPerPerson_sequence&
        SimMeasureType_EnergyMeasure_WattsPerPerson () const;

        SimMeasureType_EnergyMeasure_WattsPerPerson_sequence&
        SimMeasureType_EnergyMeasure_WattsPerPerson ();

        void
        SimMeasureType_EnergyMeasure_WattsPerPerson (const SimMeasureType_EnergyMeasure_WattsPerPerson_sequence& s);

        // SimMeasureType_LengthMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_LengthMeasure_Default SimMeasureType_LengthMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_LengthMeasure_Default_type > SimMeasureType_LengthMeasure_Default_sequence;
        typedef SimMeasureType_LengthMeasure_Default_sequence::iterator SimMeasureType_LengthMeasure_Default_iterator;
        typedef SimMeasureType_LengthMeasure_Default_sequence::const_iterator SimMeasureType_LengthMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_LengthMeasure_Default_type, char > SimMeasureType_LengthMeasure_Default_traits;

        const SimMeasureType_LengthMeasure_Default_sequence&
        SimMeasureType_LengthMeasure_Default () const;

        SimMeasureType_LengthMeasure_Default_sequence&
        SimMeasureType_LengthMeasure_Default ();

        void
        SimMeasureType_LengthMeasure_Default (const SimMeasureType_LengthMeasure_Default_sequence& s);

        // SimMeasureType_MassMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_MassMeasure_Default SimMeasureType_MassMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_MassMeasure_Default_type > SimMeasureType_MassMeasure_Default_sequence;
        typedef SimMeasureType_MassMeasure_Default_sequence::iterator SimMeasureType_MassMeasure_Default_iterator;
        typedef SimMeasureType_MassMeasure_Default_sequence::const_iterator SimMeasureType_MassMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_MassMeasure_Default_type, char > SimMeasureType_MassMeasure_Default_traits;

        const SimMeasureType_MassMeasure_Default_sequence&
        SimMeasureType_MassMeasure_Default () const;

        SimMeasureType_MassMeasure_Default_sequence&
        SimMeasureType_MassMeasure_Default ();

        void
        SimMeasureType_MassMeasure_Default (const SimMeasureType_MassMeasure_Default_sequence& s);

        // SimMeasureType_MonetaryMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_MonetaryMeasure_Default SimMeasureType_MonetaryMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_MonetaryMeasure_Default_type > SimMeasureType_MonetaryMeasure_Default_sequence;
        typedef SimMeasureType_MonetaryMeasure_Default_sequence::iterator SimMeasureType_MonetaryMeasure_Default_iterator;
        typedef SimMeasureType_MonetaryMeasure_Default_sequence::const_iterator SimMeasureType_MonetaryMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_MonetaryMeasure_Default_type, char > SimMeasureType_MonetaryMeasure_Default_traits;

        const SimMeasureType_MonetaryMeasure_Default_sequence&
        SimMeasureType_MonetaryMeasure_Default () const;

        SimMeasureType_MonetaryMeasure_Default_sequence&
        SimMeasureType_MonetaryMeasure_Default ();

        void
        SimMeasureType_MonetaryMeasure_Default (const SimMeasureType_MonetaryMeasure_Default_sequence& s);

        // SimMeasureType_PersonsPerAreaMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_PersonsPerAreaMeasure_Default SimMeasureType_PersonsPerAreaMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_PersonsPerAreaMeasure_Default_type > SimMeasureType_PersonsPerAreaMeasure_Default_sequence;
        typedef SimMeasureType_PersonsPerAreaMeasure_Default_sequence::iterator SimMeasureType_PersonsPerAreaMeasure_Default_iterator;
        typedef SimMeasureType_PersonsPerAreaMeasure_Default_sequence::const_iterator SimMeasureType_PersonsPerAreaMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_PersonsPerAreaMeasure_Default_type, char > SimMeasureType_PersonsPerAreaMeasure_Default_traits;

        const SimMeasureType_PersonsPerAreaMeasure_Default_sequence&
        SimMeasureType_PersonsPerAreaMeasure_Default () const;

        SimMeasureType_PersonsPerAreaMeasure_Default_sequence&
        SimMeasureType_PersonsPerAreaMeasure_Default ();

        void
        SimMeasureType_PersonsPerAreaMeasure_Default (const SimMeasureType_PersonsPerAreaMeasure_Default_sequence& s);

        // SimMeasureType_RatioMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_RatioMeasure_Default SimMeasureType_RatioMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_RatioMeasure_Default_type > SimMeasureType_RatioMeasure_Default_sequence;
        typedef SimMeasureType_RatioMeasure_Default_sequence::iterator SimMeasureType_RatioMeasure_Default_iterator;
        typedef SimMeasureType_RatioMeasure_Default_sequence::const_iterator SimMeasureType_RatioMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_RatioMeasure_Default_type, char > SimMeasureType_RatioMeasure_Default_traits;

        const SimMeasureType_RatioMeasure_Default_sequence&
        SimMeasureType_RatioMeasure_Default () const;

        SimMeasureType_RatioMeasure_Default_sequence&
        SimMeasureType_RatioMeasure_Default ();

        void
        SimMeasureType_RatioMeasure_Default (const SimMeasureType_RatioMeasure_Default_sequence& s);

        // SimMeasureType_RatioMeasure_PositiveRatioMeasure
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_RatioMeasure_PositiveRatioMeasure SimMeasureType_RatioMeasure_PositiveRatioMeasure_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_RatioMeasure_PositiveRatioMeasure_type > SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence;
        typedef SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence::iterator SimMeasureType_RatioMeasure_PositiveRatioMeasure_iterator;
        typedef SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence::const_iterator SimMeasureType_RatioMeasure_PositiveRatioMeasure_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_RatioMeasure_PositiveRatioMeasure_type, char > SimMeasureType_RatioMeasure_PositiveRatioMeasure_traits;

        const SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence&
        SimMeasureType_RatioMeasure_PositiveRatioMeasure () const;

        SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence&
        SimMeasureType_RatioMeasure_PositiveRatioMeasure ();

        void
        SimMeasureType_RatioMeasure_PositiveRatioMeasure (const SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence& s);

        // SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_type > SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence;
        typedef SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence::iterator SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_iterator;
        typedef SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence::const_iterator SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_type, char > SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_traits;

        const SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence&
        SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure () const;

        SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence&
        SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure ();

        void
        SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure (const SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence& s);

        // SimMeasureType_RotationalAngleMeasure_Degrees
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_RotationalAngleMeasure_Degrees SimMeasureType_RotationalAngleMeasure_Degrees_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_RotationalAngleMeasure_Degrees_type > SimMeasureType_RotationalAngleMeasure_Degrees_sequence;
        typedef SimMeasureType_RotationalAngleMeasure_Degrees_sequence::iterator SimMeasureType_RotationalAngleMeasure_Degrees_iterator;
        typedef SimMeasureType_RotationalAngleMeasure_Degrees_sequence::const_iterator SimMeasureType_RotationalAngleMeasure_Degrees_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_RotationalAngleMeasure_Degrees_type, char > SimMeasureType_RotationalAngleMeasure_Degrees_traits;

        const SimMeasureType_RotationalAngleMeasure_Degrees_sequence&
        SimMeasureType_RotationalAngleMeasure_Degrees () const;

        SimMeasureType_RotationalAngleMeasure_Degrees_sequence&
        SimMeasureType_RotationalAngleMeasure_Degrees ();

        void
        SimMeasureType_RotationalAngleMeasure_Degrees (const SimMeasureType_RotationalAngleMeasure_Degrees_sequence& s);

        // SimMeasureType_ThermodynamicTemperatureMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_ThermodynamicTemperatureMeasure_Default SimMeasureType_ThermodynamicTemperatureMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_ThermodynamicTemperatureMeasure_Default_type > SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence;
        typedef SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence::iterator SimMeasureType_ThermodynamicTemperatureMeasure_Default_iterator;
        typedef SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence::const_iterator SimMeasureType_ThermodynamicTemperatureMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_ThermodynamicTemperatureMeasure_Default_type, char > SimMeasureType_ThermodynamicTemperatureMeasure_Default_traits;

        const SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence&
        SimMeasureType_ThermodynamicTemperatureMeasure_Default () const;

        SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence&
        SimMeasureType_ThermodynamicTemperatureMeasure_Default ();

        void
        SimMeasureType_ThermodynamicTemperatureMeasure_Default (const SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence& s);

        // SimMeasureType_VolumeMeasure_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_VolumeMeasure_Default SimMeasureType_VolumeMeasure_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_VolumeMeasure_Default_type > SimMeasureType_VolumeMeasure_Default_sequence;
        typedef SimMeasureType_VolumeMeasure_Default_sequence::iterator SimMeasureType_VolumeMeasure_Default_iterator;
        typedef SimMeasureType_VolumeMeasure_Default_sequence::const_iterator SimMeasureType_VolumeMeasure_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_VolumeMeasure_Default_type, char > SimMeasureType_VolumeMeasure_Default_traits;

        const SimMeasureType_VolumeMeasure_Default_sequence&
        SimMeasureType_VolumeMeasure_Default () const;

        SimMeasureType_VolumeMeasure_Default_sequence&
        SimMeasureType_VolumeMeasure_Default ();

        void
        SimMeasureType_VolumeMeasure_Default (const SimMeasureType_VolumeMeasure_Default_sequence& s);

        // SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_type > SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence;
        typedef SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence::iterator SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_iterator;
        typedef SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence::const_iterator SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_type, char > SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_traits;

        const SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence&
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond () const;

        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence&
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond ();

        void
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond (const SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence& s);

        // SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_type;
        typedef ::xsd::cxx::tree::sequence< SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_type > SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence;
        typedef SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence::iterator SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_iterator;
        typedef SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence::const_iterator SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_type, char > SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_traits;

        const SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence&
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson () const;

        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence&
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson ();

        void
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson (const SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence& s);

        // SimMember_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimMember_Default_Default SimMember_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMember_Default_Default_type > SimMember_Default_Default_sequence;
        typedef SimMember_Default_Default_sequence::iterator SimMember_Default_Default_iterator;
        typedef SimMember_Default_Default_sequence::const_iterator SimMember_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMember_Default_Default_type, char > SimMember_Default_Default_traits;

        const SimMember_Default_Default_sequence&
        SimMember_Default_Default () const;

        SimMember_Default_Default_sequence&
        SimMember_Default_Default ();

        void
        SimMember_Default_Default (const SimMember_Default_Default_sequence& s);

        // SimMemberParams_Profile_Member
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMemberParams_Profile_Member SimMemberParams_Profile_Member_type;
        typedef ::xsd::cxx::tree::sequence< SimMemberParams_Profile_Member_type > SimMemberParams_Profile_Member_sequence;
        typedef SimMemberParams_Profile_Member_sequence::iterator SimMemberParams_Profile_Member_iterator;
        typedef SimMemberParams_Profile_Member_sequence::const_iterator SimMemberParams_Profile_Member_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMemberParams_Profile_Member_type, char > SimMemberParams_Profile_Member_traits;

        const SimMemberParams_Profile_Member_sequence&
        SimMemberParams_Profile_Member () const;

        SimMemberParams_Profile_Member_sequence&
        SimMemberParams_Profile_Member ();

        void
        SimMemberParams_Profile_Member (const SimMemberParams_Profile_Member_sequence& s);

        // SimMemberProfileProperties_Beam_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMemberProfileProperties_Beam_Default SimMemberProfileProperties_Beam_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMemberProfileProperties_Beam_Default_type > SimMemberProfileProperties_Beam_Default_sequence;
        typedef SimMemberProfileProperties_Beam_Default_sequence::iterator SimMemberProfileProperties_Beam_Default_iterator;
        typedef SimMemberProfileProperties_Beam_Default_sequence::const_iterator SimMemberProfileProperties_Beam_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMemberProfileProperties_Beam_Default_type, char > SimMemberProfileProperties_Beam_Default_traits;

        const SimMemberProfileProperties_Beam_Default_sequence&
        SimMemberProfileProperties_Beam_Default () const;

        SimMemberProfileProperties_Beam_Default_sequence&
        SimMemberProfileProperties_Beam_Default ();

        void
        SimMemberProfileProperties_Beam_Default (const SimMemberProfileProperties_Beam_Default_sequence& s);

        // SimMemberProfileProperties_Column_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMemberProfileProperties_Column_Default SimMemberProfileProperties_Column_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMemberProfileProperties_Column_Default_type > SimMemberProfileProperties_Column_Default_sequence;
        typedef SimMemberProfileProperties_Column_Default_sequence::iterator SimMemberProfileProperties_Column_Default_iterator;
        typedef SimMemberProfileProperties_Column_Default_sequence::const_iterator SimMemberProfileProperties_Column_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMemberProfileProperties_Column_Default_type, char > SimMemberProfileProperties_Column_Default_traits;

        const SimMemberProfileProperties_Column_Default_sequence&
        SimMemberProfileProperties_Column_Default () const;

        SimMemberProfileProperties_Column_Default_sequence&
        SimMemberProfileProperties_Column_Default ();

        void
        SimMemberProfileProperties_Column_Default (const SimMemberProfileProperties_Column_Default_sequence& s);

        // SimMemberProfileProperties_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimMemberProfileProperties_Default_Default SimMemberProfileProperties_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimMemberProfileProperties_Default_Default_type > SimMemberProfileProperties_Default_Default_sequence;
        typedef SimMemberProfileProperties_Default_Default_sequence::iterator SimMemberProfileProperties_Default_Default_iterator;
        typedef SimMemberProfileProperties_Default_Default_sequence::const_iterator SimMemberProfileProperties_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimMemberProfileProperties_Default_Default_type, char > SimMemberProfileProperties_Default_Default_traits;

        const SimMemberProfileProperties_Default_Default_sequence&
        SimMemberProfileProperties_Default_Default () const;

        SimMemberProfileProperties_Default_Default_sequence&
        SimMemberProfileProperties_Default_Default ();

        void
        SimMemberProfileProperties_Default_Default (const SimMemberProfileProperties_Default_Default_sequence& s);

        // SimModelRepresentationContext_GeometricRepresentationContext_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimModelRepresentationContext_GeometricRepresentationContext_Default SimModelRepresentationContext_GeometricRepresentationContext_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimModelRepresentationContext_GeometricRepresentationContext_Default_type > SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence;
        typedef SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence::iterator SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator;
        typedef SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence::const_iterator SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimModelRepresentationContext_GeometricRepresentationContext_Default_type, char > SimModelRepresentationContext_GeometricRepresentationContext_Default_traits;

        const SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence&
        SimModelRepresentationContext_GeometricRepresentationContext_Default () const;

        SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence&
        SimModelRepresentationContext_GeometricRepresentationContext_Default ();

        void
        SimModelRepresentationContext_GeometricRepresentationContext_Default (const SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence& s);

        // SimModelRepresentationContext_GeometricRepresentationSubContext_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimModelRepresentationContext_GeometricRepresentationSubContext_Default SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type > SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence;
        typedef SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence::iterator SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator;
        typedef SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence::const_iterator SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type, char > SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits;

        const SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence&
        SimModelRepresentationContext_GeometricRepresentationSubContext_Default () const;

        SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence&
        SimModelRepresentationContext_GeometricRepresentationSubContext_Default ();

        void
        SimModelRepresentationContext_GeometricRepresentationSubContext_Default (const SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence& s);

        // SimModelRepresentationContext_RepresentationContext_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimModelRepresentationContext_RepresentationContext_Default SimModelRepresentationContext_RepresentationContext_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimModelRepresentationContext_RepresentationContext_Default_type > SimModelRepresentationContext_RepresentationContext_Default_sequence;
        typedef SimModelRepresentationContext_RepresentationContext_Default_sequence::iterator SimModelRepresentationContext_RepresentationContext_Default_iterator;
        typedef SimModelRepresentationContext_RepresentationContext_Default_sequence::const_iterator SimModelRepresentationContext_RepresentationContext_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimModelRepresentationContext_RepresentationContext_Default_type, char > SimModelRepresentationContext_RepresentationContext_Default_traits;

        const SimModelRepresentationContext_RepresentationContext_Default_sequence&
        SimModelRepresentationContext_RepresentationContext_Default () const;

        SimModelRepresentationContext_RepresentationContext_Default_sequence&
        SimModelRepresentationContext_RepresentationContext_Default ();

        void
        SimModelRepresentationContext_RepresentationContext_Default (const SimModelRepresentationContext_RepresentationContext_Default_sequence& s);

        // SimNode_AirflowNetworkNode_AirDistributionNode
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirflowNetworkNode_AirDistributionNode SimNode_AirflowNetworkNode_AirDistributionNode_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirflowNetworkNode_AirDistributionNode_type > SimNode_AirflowNetworkNode_AirDistributionNode_sequence;
        typedef SimNode_AirflowNetworkNode_AirDistributionNode_sequence::iterator SimNode_AirflowNetworkNode_AirDistributionNode_iterator;
        typedef SimNode_AirflowNetworkNode_AirDistributionNode_sequence::const_iterator SimNode_AirflowNetworkNode_AirDistributionNode_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirflowNetworkNode_AirDistributionNode_type, char > SimNode_AirflowNetworkNode_AirDistributionNode_traits;

        const SimNode_AirflowNetworkNode_AirDistributionNode_sequence&
        SimNode_AirflowNetworkNode_AirDistributionNode () const;

        SimNode_AirflowNetworkNode_AirDistributionNode_sequence&
        SimNode_AirflowNetworkNode_AirDistributionNode ();

        void
        SimNode_AirflowNetworkNode_AirDistributionNode (const SimNode_AirflowNetworkNode_AirDistributionNode_sequence& s);

        // SimNode_AirflowNetworkNode_ExternalNode
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirflowNetworkNode_ExternalNode SimNode_AirflowNetworkNode_ExternalNode_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirflowNetworkNode_ExternalNode_type > SimNode_AirflowNetworkNode_ExternalNode_sequence;
        typedef SimNode_AirflowNetworkNode_ExternalNode_sequence::iterator SimNode_AirflowNetworkNode_ExternalNode_iterator;
        typedef SimNode_AirflowNetworkNode_ExternalNode_sequence::const_iterator SimNode_AirflowNetworkNode_ExternalNode_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirflowNetworkNode_ExternalNode_type, char > SimNode_AirflowNetworkNode_ExternalNode_traits;

        const SimNode_AirflowNetworkNode_ExternalNode_sequence&
        SimNode_AirflowNetworkNode_ExternalNode () const;

        SimNode_AirflowNetworkNode_ExternalNode_sequence&
        SimNode_AirflowNetworkNode_ExternalNode ();

        void
        SimNode_AirflowNetworkNode_ExternalNode (const SimNode_AirflowNetworkNode_ExternalNode_sequence& s);

        // SimNode_AirflowNetworkNode_ZoneNode
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirflowNetworkNode_ZoneNode SimNode_AirflowNetworkNode_ZoneNode_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirflowNetworkNode_ZoneNode_type > SimNode_AirflowNetworkNode_ZoneNode_sequence;
        typedef SimNode_AirflowNetworkNode_ZoneNode_sequence::iterator SimNode_AirflowNetworkNode_ZoneNode_iterator;
        typedef SimNode_AirflowNetworkNode_ZoneNode_sequence::const_iterator SimNode_AirflowNetworkNode_ZoneNode_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirflowNetworkNode_ZoneNode_type, char > SimNode_AirflowNetworkNode_ZoneNode_traits;

        const SimNode_AirflowNetworkNode_ZoneNode_sequence&
        SimNode_AirflowNetworkNode_ZoneNode () const;

        SimNode_AirflowNetworkNode_ZoneNode_sequence&
        SimNode_AirflowNetworkNode_ZoneNode ();

        void
        SimNode_AirflowNetworkNode_ZoneNode (const SimNode_AirflowNetworkNode_ZoneNode_sequence& s);

        // SimNode_AirFlowPort_Air_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirFlowPort_Air_In SimNode_AirFlowPort_Air_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirFlowPort_Air_In_type > SimNode_AirFlowPort_Air_In_sequence;
        typedef SimNode_AirFlowPort_Air_In_sequence::iterator SimNode_AirFlowPort_Air_In_iterator;
        typedef SimNode_AirFlowPort_Air_In_sequence::const_iterator SimNode_AirFlowPort_Air_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirFlowPort_Air_In_type, char > SimNode_AirFlowPort_Air_In_traits;

        const SimNode_AirFlowPort_Air_In_sequence&
        SimNode_AirFlowPort_Air_In () const;

        SimNode_AirFlowPort_Air_In_sequence&
        SimNode_AirFlowPort_Air_In ();

        void
        SimNode_AirFlowPort_Air_In (const SimNode_AirFlowPort_Air_In_sequence& s);

        // SimNode_AirFlowPort_Air_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirFlowPort_Air_InOrOut SimNode_AirFlowPort_Air_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirFlowPort_Air_InOrOut_type > SimNode_AirFlowPort_Air_InOrOut_sequence;
        typedef SimNode_AirFlowPort_Air_InOrOut_sequence::iterator SimNode_AirFlowPort_Air_InOrOut_iterator;
        typedef SimNode_AirFlowPort_Air_InOrOut_sequence::const_iterator SimNode_AirFlowPort_Air_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirFlowPort_Air_InOrOut_type, char > SimNode_AirFlowPort_Air_InOrOut_traits;

        const SimNode_AirFlowPort_Air_InOrOut_sequence&
        SimNode_AirFlowPort_Air_InOrOut () const;

        SimNode_AirFlowPort_Air_InOrOut_sequence&
        SimNode_AirFlowPort_Air_InOrOut ();

        void
        SimNode_AirFlowPort_Air_InOrOut (const SimNode_AirFlowPort_Air_InOrOut_sequence& s);

        // SimNode_AirFlowPort_Air_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirFlowPort_Air_Out SimNode_AirFlowPort_Air_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirFlowPort_Air_Out_type > SimNode_AirFlowPort_Air_Out_sequence;
        typedef SimNode_AirFlowPort_Air_Out_sequence::iterator SimNode_AirFlowPort_Air_Out_iterator;
        typedef SimNode_AirFlowPort_Air_Out_sequence::const_iterator SimNode_AirFlowPort_Air_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirFlowPort_Air_Out_type, char > SimNode_AirFlowPort_Air_Out_traits;

        const SimNode_AirFlowPort_Air_Out_sequence&
        SimNode_AirFlowPort_Air_Out () const;

        SimNode_AirFlowPort_Air_Out_sequence&
        SimNode_AirFlowPort_Air_Out ();

        void
        SimNode_AirFlowPort_Air_Out (const SimNode_AirFlowPort_Air_Out_sequence& s);

        // SimNode_AirFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirFlowPort_Default SimNode_AirFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirFlowPort_Default_type > SimNode_AirFlowPort_Default_sequence;
        typedef SimNode_AirFlowPort_Default_sequence::iterator SimNode_AirFlowPort_Default_iterator;
        typedef SimNode_AirFlowPort_Default_sequence::const_iterator SimNode_AirFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirFlowPort_Default_type, char > SimNode_AirFlowPort_Default_traits;

        const SimNode_AirFlowPort_Default_sequence&
        SimNode_AirFlowPort_Default () const;

        SimNode_AirFlowPort_Default_sequence&
        SimNode_AirFlowPort_Default ();

        void
        SimNode_AirFlowPort_Default (const SimNode_AirFlowPort_Default_sequence& s);

        // SimNode_AirFlowPort_ExhaustAir_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirFlowPort_ExhaustAir_Out SimNode_AirFlowPort_ExhaustAir_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirFlowPort_ExhaustAir_Out_type > SimNode_AirFlowPort_ExhaustAir_Out_sequence;
        typedef SimNode_AirFlowPort_ExhaustAir_Out_sequence::iterator SimNode_AirFlowPort_ExhaustAir_Out_iterator;
        typedef SimNode_AirFlowPort_ExhaustAir_Out_sequence::const_iterator SimNode_AirFlowPort_ExhaustAir_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirFlowPort_ExhaustAir_Out_type, char > SimNode_AirFlowPort_ExhaustAir_Out_traits;

        const SimNode_AirFlowPort_ExhaustAir_Out_sequence&
        SimNode_AirFlowPort_ExhaustAir_Out () const;

        SimNode_AirFlowPort_ExhaustAir_Out_sequence&
        SimNode_AirFlowPort_ExhaustAir_Out ();

        void
        SimNode_AirFlowPort_ExhaustAir_Out (const SimNode_AirFlowPort_ExhaustAir_Out_sequence& s);

        // SimNode_AirFlowPort_OutdoorAir_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_AirFlowPort_OutdoorAir_In SimNode_AirFlowPort_OutdoorAir_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_AirFlowPort_OutdoorAir_In_type > SimNode_AirFlowPort_OutdoorAir_In_sequence;
        typedef SimNode_AirFlowPort_OutdoorAir_In_sequence::iterator SimNode_AirFlowPort_OutdoorAir_In_iterator;
        typedef SimNode_AirFlowPort_OutdoorAir_In_sequence::const_iterator SimNode_AirFlowPort_OutdoorAir_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_AirFlowPort_OutdoorAir_In_type, char > SimNode_AirFlowPort_OutdoorAir_In_traits;

        const SimNode_AirFlowPort_OutdoorAir_In_sequence&
        SimNode_AirFlowPort_OutdoorAir_In () const;

        SimNode_AirFlowPort_OutdoorAir_In_sequence&
        SimNode_AirFlowPort_OutdoorAir_In ();

        void
        SimNode_AirFlowPort_OutdoorAir_In (const SimNode_AirFlowPort_OutdoorAir_In_sequence& s);

        // SimNode_ChilledWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ChilledWaterFlowPort_CondensedWaterOut SimNode_ChilledWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ChilledWaterFlowPort_CondensedWaterOut_type > SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence::iterator SimNode_ChilledWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimNode_ChilledWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ChilledWaterFlowPort_CondensedWaterOut_type, char > SimNode_ChilledWaterFlowPort_CondensedWaterOut_traits;

        const SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence&
        SimNode_ChilledWaterFlowPort_CondensedWaterOut () const;

        SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence&
        SimNode_ChilledWaterFlowPort_CondensedWaterOut ();

        void
        SimNode_ChilledWaterFlowPort_CondensedWaterOut (const SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimNode_ChilledWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ChilledWaterFlowPort_Default SimNode_ChilledWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ChilledWaterFlowPort_Default_type > SimNode_ChilledWaterFlowPort_Default_sequence;
        typedef SimNode_ChilledWaterFlowPort_Default_sequence::iterator SimNode_ChilledWaterFlowPort_Default_iterator;
        typedef SimNode_ChilledWaterFlowPort_Default_sequence::const_iterator SimNode_ChilledWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ChilledWaterFlowPort_Default_type, char > SimNode_ChilledWaterFlowPort_Default_traits;

        const SimNode_ChilledWaterFlowPort_Default_sequence&
        SimNode_ChilledWaterFlowPort_Default () const;

        SimNode_ChilledWaterFlowPort_Default_sequence&
        SimNode_ChilledWaterFlowPort_Default ();

        void
        SimNode_ChilledWaterFlowPort_Default (const SimNode_ChilledWaterFlowPort_Default_sequence& s);

        // SimNode_ChilledWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ChilledWaterFlowPort_EvaporativeWaterIn SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_type > SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_type, char > SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_traits;

        const SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence&
        SimNode_ChilledWaterFlowPort_EvaporativeWaterIn () const;

        SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence&
        SimNode_ChilledWaterFlowPort_EvaporativeWaterIn ();

        void
        SimNode_ChilledWaterFlowPort_EvaporativeWaterIn (const SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimNode_ChilledWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ChilledWaterFlowPort_Water_In SimNode_ChilledWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ChilledWaterFlowPort_Water_In_type > SimNode_ChilledWaterFlowPort_Water_In_sequence;
        typedef SimNode_ChilledWaterFlowPort_Water_In_sequence::iterator SimNode_ChilledWaterFlowPort_Water_In_iterator;
        typedef SimNode_ChilledWaterFlowPort_Water_In_sequence::const_iterator SimNode_ChilledWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ChilledWaterFlowPort_Water_In_type, char > SimNode_ChilledWaterFlowPort_Water_In_traits;

        const SimNode_ChilledWaterFlowPort_Water_In_sequence&
        SimNode_ChilledWaterFlowPort_Water_In () const;

        SimNode_ChilledWaterFlowPort_Water_In_sequence&
        SimNode_ChilledWaterFlowPort_Water_In ();

        void
        SimNode_ChilledWaterFlowPort_Water_In (const SimNode_ChilledWaterFlowPort_Water_In_sequence& s);

        // SimNode_ChilledWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ChilledWaterFlowPort_Water_InOrOut SimNode_ChilledWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ChilledWaterFlowPort_Water_InOrOut_type > SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence;
        typedef SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence::iterator SimNode_ChilledWaterFlowPort_Water_InOrOut_iterator;
        typedef SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence::const_iterator SimNode_ChilledWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ChilledWaterFlowPort_Water_InOrOut_type, char > SimNode_ChilledWaterFlowPort_Water_InOrOut_traits;

        const SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence&
        SimNode_ChilledWaterFlowPort_Water_InOrOut () const;

        SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence&
        SimNode_ChilledWaterFlowPort_Water_InOrOut ();

        void
        SimNode_ChilledWaterFlowPort_Water_InOrOut (const SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence& s);

        // SimNode_ChilledWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ChilledWaterFlowPort_Water_Out SimNode_ChilledWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ChilledWaterFlowPort_Water_Out_type > SimNode_ChilledWaterFlowPort_Water_Out_sequence;
        typedef SimNode_ChilledWaterFlowPort_Water_Out_sequence::iterator SimNode_ChilledWaterFlowPort_Water_Out_iterator;
        typedef SimNode_ChilledWaterFlowPort_Water_Out_sequence::const_iterator SimNode_ChilledWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ChilledWaterFlowPort_Water_Out_type, char > SimNode_ChilledWaterFlowPort_Water_Out_traits;

        const SimNode_ChilledWaterFlowPort_Water_Out_sequence&
        SimNode_ChilledWaterFlowPort_Water_Out () const;

        SimNode_ChilledWaterFlowPort_Water_Out_sequence&
        SimNode_ChilledWaterFlowPort_Water_Out ();

        void
        SimNode_ChilledWaterFlowPort_Water_Out (const SimNode_ChilledWaterFlowPort_Water_Out_sequence& s);

        // SimNode_CondenserFlowPort_CondenserFlow_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_CondenserFlowPort_CondenserFlow_In SimNode_CondenserFlowPort_CondenserFlow_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_CondenserFlowPort_CondenserFlow_In_type > SimNode_CondenserFlowPort_CondenserFlow_In_sequence;
        typedef SimNode_CondenserFlowPort_CondenserFlow_In_sequence::iterator SimNode_CondenserFlowPort_CondenserFlow_In_iterator;
        typedef SimNode_CondenserFlowPort_CondenserFlow_In_sequence::const_iterator SimNode_CondenserFlowPort_CondenserFlow_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_CondenserFlowPort_CondenserFlow_In_type, char > SimNode_CondenserFlowPort_CondenserFlow_In_traits;

        const SimNode_CondenserFlowPort_CondenserFlow_In_sequence&
        SimNode_CondenserFlowPort_CondenserFlow_In () const;

        SimNode_CondenserFlowPort_CondenserFlow_In_sequence&
        SimNode_CondenserFlowPort_CondenserFlow_In ();

        void
        SimNode_CondenserFlowPort_CondenserFlow_In (const SimNode_CondenserFlowPort_CondenserFlow_In_sequence& s);

        // SimNode_CondenserFlowPort_CondenserFlow_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_CondenserFlowPort_CondenserFlow_InOrOut SimNode_CondenserFlowPort_CondenserFlow_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_CondenserFlowPort_CondenserFlow_InOrOut_type > SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence;
        typedef SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence::iterator SimNode_CondenserFlowPort_CondenserFlow_InOrOut_iterator;
        typedef SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence::const_iterator SimNode_CondenserFlowPort_CondenserFlow_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_CondenserFlowPort_CondenserFlow_InOrOut_type, char > SimNode_CondenserFlowPort_CondenserFlow_InOrOut_traits;

        const SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence&
        SimNode_CondenserFlowPort_CondenserFlow_InOrOut () const;

        SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence&
        SimNode_CondenserFlowPort_CondenserFlow_InOrOut ();

        void
        SimNode_CondenserFlowPort_CondenserFlow_InOrOut (const SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence& s);

        // SimNode_CondenserFlowPort_CondenserFlow_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_CondenserFlowPort_CondenserFlow_Out SimNode_CondenserFlowPort_CondenserFlow_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_CondenserFlowPort_CondenserFlow_Out_type > SimNode_CondenserFlowPort_CondenserFlow_Out_sequence;
        typedef SimNode_CondenserFlowPort_CondenserFlow_Out_sequence::iterator SimNode_CondenserFlowPort_CondenserFlow_Out_iterator;
        typedef SimNode_CondenserFlowPort_CondenserFlow_Out_sequence::const_iterator SimNode_CondenserFlowPort_CondenserFlow_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_CondenserFlowPort_CondenserFlow_Out_type, char > SimNode_CondenserFlowPort_CondenserFlow_Out_traits;

        const SimNode_CondenserFlowPort_CondenserFlow_Out_sequence&
        SimNode_CondenserFlowPort_CondenserFlow_Out () const;

        SimNode_CondenserFlowPort_CondenserFlow_Out_sequence&
        SimNode_CondenserFlowPort_CondenserFlow_Out ();

        void
        SimNode_CondenserFlowPort_CondenserFlow_Out (const SimNode_CondenserFlowPort_CondenserFlow_Out_sequence& s);

        // SimNode_CondenserFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_CondenserFlowPort_Default SimNode_CondenserFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_CondenserFlowPort_Default_type > SimNode_CondenserFlowPort_Default_sequence;
        typedef SimNode_CondenserFlowPort_Default_sequence::iterator SimNode_CondenserFlowPort_Default_iterator;
        typedef SimNode_CondenserFlowPort_Default_sequence::const_iterator SimNode_CondenserFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_CondenserFlowPort_Default_type, char > SimNode_CondenserFlowPort_Default_traits;

        const SimNode_CondenserFlowPort_Default_sequence&
        SimNode_CondenserFlowPort_Default () const;

        SimNode_CondenserFlowPort_Default_sequence&
        SimNode_CondenserFlowPort_Default ();

        void
        SimNode_CondenserFlowPort_Default (const SimNode_CondenserFlowPort_Default_sequence& s);

        // SimNode_DaylightingReferencePoint_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DaylightingReferencePoint_Default SimNode_DaylightingReferencePoint_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DaylightingReferencePoint_Default_type > SimNode_DaylightingReferencePoint_Default_sequence;
        typedef SimNode_DaylightingReferencePoint_Default_sequence::iterator SimNode_DaylightingReferencePoint_Default_iterator;
        typedef SimNode_DaylightingReferencePoint_Default_sequence::const_iterator SimNode_DaylightingReferencePoint_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DaylightingReferencePoint_Default_type, char > SimNode_DaylightingReferencePoint_Default_traits;

        const SimNode_DaylightingReferencePoint_Default_sequence&
        SimNode_DaylightingReferencePoint_Default () const;

        SimNode_DaylightingReferencePoint_Default_sequence&
        SimNode_DaylightingReferencePoint_Default ();

        void
        SimNode_DaylightingReferencePoint_Default (const SimNode_DaylightingReferencePoint_Default_sequence& s);

        // SimNode_DigitalControl_AirLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_AirLoop_Default SimNode_DigitalControl_AirLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_AirLoop_Default_type > SimNode_DigitalControl_AirLoop_Default_sequence;
        typedef SimNode_DigitalControl_AirLoop_Default_sequence::iterator SimNode_DigitalControl_AirLoop_Default_iterator;
        typedef SimNode_DigitalControl_AirLoop_Default_sequence::const_iterator SimNode_DigitalControl_AirLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_AirLoop_Default_type, char > SimNode_DigitalControl_AirLoop_Default_traits;

        const SimNode_DigitalControl_AirLoop_Default_sequence&
        SimNode_DigitalControl_AirLoop_Default () const;

        SimNode_DigitalControl_AirLoop_Default_sequence&
        SimNode_DigitalControl_AirLoop_Default ();

        void
        SimNode_DigitalControl_AirLoop_Default (const SimNode_DigitalControl_AirLoop_Default_sequence& s);

        // SimNode_DigitalControl_AirLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_AirLoop_DigitalSignal_In SimNode_DigitalControl_AirLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_AirLoop_DigitalSignal_In_type > SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_AirLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_AirLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_AirLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_AirLoop_DigitalSignal_In (const SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_AirLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_AirLoop_DigitalSignal_Out SimNode_DigitalControl_AirLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_AirLoop_DigitalSignal_Out_type > SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_AirLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_AirLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_AirLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_AirLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_AirLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_AirLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_AirLoop_DigitalSignal_Out (const SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControl_CHWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CHWLoop_Default SimNode_DigitalControl_CHWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CHWLoop_Default_type > SimNode_DigitalControl_CHWLoop_Default_sequence;
        typedef SimNode_DigitalControl_CHWLoop_Default_sequence::iterator SimNode_DigitalControl_CHWLoop_Default_iterator;
        typedef SimNode_DigitalControl_CHWLoop_Default_sequence::const_iterator SimNode_DigitalControl_CHWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CHWLoop_Default_type, char > SimNode_DigitalControl_CHWLoop_Default_traits;

        const SimNode_DigitalControl_CHWLoop_Default_sequence&
        SimNode_DigitalControl_CHWLoop_Default () const;

        SimNode_DigitalControl_CHWLoop_Default_sequence&
        SimNode_DigitalControl_CHWLoop_Default ();

        void
        SimNode_DigitalControl_CHWLoop_Default (const SimNode_DigitalControl_CHWLoop_Default_sequence& s);

        // SimNode_DigitalControl_CHWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CHWLoop_DigitalSignal_In SimNode_DigitalControl_CHWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CHWLoop_DigitalSignal_In_type > SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_CHWLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_CHWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CHWLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_CHWLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_CHWLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_CHWLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_CHWLoop_DigitalSignal_In (const SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_CHWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CHWLoop_DigitalSignal_Out SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_type > SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_CHWLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_CHWLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_CHWLoop_DigitalSignal_Out (const SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControl_CWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CWLoop_Default SimNode_DigitalControl_CWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CWLoop_Default_type > SimNode_DigitalControl_CWLoop_Default_sequence;
        typedef SimNode_DigitalControl_CWLoop_Default_sequence::iterator SimNode_DigitalControl_CWLoop_Default_iterator;
        typedef SimNode_DigitalControl_CWLoop_Default_sequence::const_iterator SimNode_DigitalControl_CWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CWLoop_Default_type, char > SimNode_DigitalControl_CWLoop_Default_traits;

        const SimNode_DigitalControl_CWLoop_Default_sequence&
        SimNode_DigitalControl_CWLoop_Default () const;

        SimNode_DigitalControl_CWLoop_Default_sequence&
        SimNode_DigitalControl_CWLoop_Default ();

        void
        SimNode_DigitalControl_CWLoop_Default (const SimNode_DigitalControl_CWLoop_Default_sequence& s);

        // SimNode_DigitalControl_CWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CWLoop_DigitalSignal_In SimNode_DigitalControl_CWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CWLoop_DigitalSignal_In_type > SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_CWLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_CWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CWLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_CWLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_CWLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_CWLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_CWLoop_DigitalSignal_In (const SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_CWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_CWLoop_DigitalSignal_Out SimNode_DigitalControl_CWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_CWLoop_DigitalSignal_Out_type > SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_CWLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_CWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_CWLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_CWLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_CWLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_CWLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_CWLoop_DigitalSignal_Out (const SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControl_HWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_HWLoop_Default SimNode_DigitalControl_HWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_HWLoop_Default_type > SimNode_DigitalControl_HWLoop_Default_sequence;
        typedef SimNode_DigitalControl_HWLoop_Default_sequence::iterator SimNode_DigitalControl_HWLoop_Default_iterator;
        typedef SimNode_DigitalControl_HWLoop_Default_sequence::const_iterator SimNode_DigitalControl_HWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_HWLoop_Default_type, char > SimNode_DigitalControl_HWLoop_Default_traits;

        const SimNode_DigitalControl_HWLoop_Default_sequence&
        SimNode_DigitalControl_HWLoop_Default () const;

        SimNode_DigitalControl_HWLoop_Default_sequence&
        SimNode_DigitalControl_HWLoop_Default ();

        void
        SimNode_DigitalControl_HWLoop_Default (const SimNode_DigitalControl_HWLoop_Default_sequence& s);

        // SimNode_DigitalControl_HWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_HWLoop_DigitalSignal_In SimNode_DigitalControl_HWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_HWLoop_DigitalSignal_In_type > SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_HWLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_HWLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_HWLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_HWLoop_DigitalSignal_In (const SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_HWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_HWLoop_DigitalSignal_Out SimNode_DigitalControl_HWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_HWLoop_DigitalSignal_Out_type > SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_HWLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_HWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_HWLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_HWLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_HWLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_HWLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_HWLoop_DigitalSignal_Out (const SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControl_MxWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_MxWLoop_Default SimNode_DigitalControl_MxWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_MxWLoop_Default_type > SimNode_DigitalControl_MxWLoop_Default_sequence;
        typedef SimNode_DigitalControl_MxWLoop_Default_sequence::iterator SimNode_DigitalControl_MxWLoop_Default_iterator;
        typedef SimNode_DigitalControl_MxWLoop_Default_sequence::const_iterator SimNode_DigitalControl_MxWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_MxWLoop_Default_type, char > SimNode_DigitalControl_MxWLoop_Default_traits;

        const SimNode_DigitalControl_MxWLoop_Default_sequence&
        SimNode_DigitalControl_MxWLoop_Default () const;

        SimNode_DigitalControl_MxWLoop_Default_sequence&
        SimNode_DigitalControl_MxWLoop_Default ();

        void
        SimNode_DigitalControl_MxWLoop_Default (const SimNode_DigitalControl_MxWLoop_Default_sequence& s);

        // SimNode_DigitalControl_MxWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_MxWLoop_DigitalSignal_In SimNode_DigitalControl_MxWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_MxWLoop_DigitalSignal_In_type > SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_MxWLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_MxWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_MxWLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_MxWLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_MxWLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_MxWLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_MxWLoop_DigitalSignal_In (const SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_MxWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_MxWLoop_DigitalSignal_Out SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_type > SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_MxWLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_MxWLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_MxWLoop_DigitalSignal_Out (const SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControl_RFGLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_RFGLoop_Default SimNode_DigitalControl_RFGLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_RFGLoop_Default_type > SimNode_DigitalControl_RFGLoop_Default_sequence;
        typedef SimNode_DigitalControl_RFGLoop_Default_sequence::iterator SimNode_DigitalControl_RFGLoop_Default_iterator;
        typedef SimNode_DigitalControl_RFGLoop_Default_sequence::const_iterator SimNode_DigitalControl_RFGLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_RFGLoop_Default_type, char > SimNode_DigitalControl_RFGLoop_Default_traits;

        const SimNode_DigitalControl_RFGLoop_Default_sequence&
        SimNode_DigitalControl_RFGLoop_Default () const;

        SimNode_DigitalControl_RFGLoop_Default_sequence&
        SimNode_DigitalControl_RFGLoop_Default ();

        void
        SimNode_DigitalControl_RFGLoop_Default (const SimNode_DigitalControl_RFGLoop_Default_sequence& s);

        // SimNode_DigitalControl_RFGLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_RFGLoop_DigitalSignal_In SimNode_DigitalControl_RFGLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_RFGLoop_DigitalSignal_In_type > SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_RFGLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_RFGLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_RFGLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_RFGLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_RFGLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_RFGLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_RFGLoop_DigitalSignal_In (const SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_RFGLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_RFGLoop_DigitalSignal_Out SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_type > SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_RFGLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_RFGLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_RFGLoop_DigitalSignal_Out (const SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControl_STMLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_STMLoop_Default SimNode_DigitalControl_STMLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_STMLoop_Default_type > SimNode_DigitalControl_STMLoop_Default_sequence;
        typedef SimNode_DigitalControl_STMLoop_Default_sequence::iterator SimNode_DigitalControl_STMLoop_Default_iterator;
        typedef SimNode_DigitalControl_STMLoop_Default_sequence::const_iterator SimNode_DigitalControl_STMLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_STMLoop_Default_type, char > SimNode_DigitalControl_STMLoop_Default_traits;

        const SimNode_DigitalControl_STMLoop_Default_sequence&
        SimNode_DigitalControl_STMLoop_Default () const;

        SimNode_DigitalControl_STMLoop_Default_sequence&
        SimNode_DigitalControl_STMLoop_Default ();

        void
        SimNode_DigitalControl_STMLoop_Default (const SimNode_DigitalControl_STMLoop_Default_sequence& s);

        // SimNode_DigitalControl_STMLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_STMLoop_DigitalSignal_In SimNode_DigitalControl_STMLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_STMLoop_DigitalSignal_In_type > SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence::iterator SimNode_DigitalControl_STMLoop_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControl_STMLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_STMLoop_DigitalSignal_In_type, char > SimNode_DigitalControl_STMLoop_DigitalSignal_In_traits;

        const SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_STMLoop_DigitalSignal_In () const;

        SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence&
        SimNode_DigitalControl_STMLoop_DigitalSignal_In ();

        void
        SimNode_DigitalControl_STMLoop_DigitalSignal_In (const SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_type > SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_type, char > SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut () const;

        SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut (const SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControl_STMLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControl_STMLoop_DigitalSignal_Out SimNode_DigitalControl_STMLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControl_STMLoop_DigitalSignal_Out_type > SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence::iterator SimNode_DigitalControl_STMLoop_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControl_STMLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControl_STMLoop_DigitalSignal_Out_type, char > SimNode_DigitalControl_STMLoop_DigitalSignal_Out_traits;

        const SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_STMLoop_DigitalSignal_Out () const;

        SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence&
        SimNode_DigitalControl_STMLoop_DigitalSignal_Out ();

        void
        SimNode_DigitalControl_STMLoop_DigitalSignal_Out (const SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControlPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControlPort_Default SimNode_DigitalControlPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControlPort_Default_type > SimNode_DigitalControlPort_Default_sequence;
        typedef SimNode_DigitalControlPort_Default_sequence::iterator SimNode_DigitalControlPort_Default_iterator;
        typedef SimNode_DigitalControlPort_Default_sequence::const_iterator SimNode_DigitalControlPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControlPort_Default_type, char > SimNode_DigitalControlPort_Default_traits;

        const SimNode_DigitalControlPort_Default_sequence&
        SimNode_DigitalControlPort_Default () const;

        SimNode_DigitalControlPort_Default_sequence&
        SimNode_DigitalControlPort_Default ();

        void
        SimNode_DigitalControlPort_Default (const SimNode_DigitalControlPort_Default_sequence& s);

        // SimNode_DigitalControlPort_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControlPort_DigitalSignal_In SimNode_DigitalControlPort_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControlPort_DigitalSignal_In_type > SimNode_DigitalControlPort_DigitalSignal_In_sequence;
        typedef SimNode_DigitalControlPort_DigitalSignal_In_sequence::iterator SimNode_DigitalControlPort_DigitalSignal_In_iterator;
        typedef SimNode_DigitalControlPort_DigitalSignal_In_sequence::const_iterator SimNode_DigitalControlPort_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControlPort_DigitalSignal_In_type, char > SimNode_DigitalControlPort_DigitalSignal_In_traits;

        const SimNode_DigitalControlPort_DigitalSignal_In_sequence&
        SimNode_DigitalControlPort_DigitalSignal_In () const;

        SimNode_DigitalControlPort_DigitalSignal_In_sequence&
        SimNode_DigitalControlPort_DigitalSignal_In ();

        void
        SimNode_DigitalControlPort_DigitalSignal_In (const SimNode_DigitalControlPort_DigitalSignal_In_sequence& s);

        // SimNode_DigitalControlPort_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControlPort_DigitalSignal_InOrOut SimNode_DigitalControlPort_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControlPort_DigitalSignal_InOrOut_type > SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence;
        typedef SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence::iterator SimNode_DigitalControlPort_DigitalSignal_InOrOut_iterator;
        typedef SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence::const_iterator SimNode_DigitalControlPort_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControlPort_DigitalSignal_InOrOut_type, char > SimNode_DigitalControlPort_DigitalSignal_InOrOut_traits;

        const SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControlPort_DigitalSignal_InOrOut () const;

        SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence&
        SimNode_DigitalControlPort_DigitalSignal_InOrOut ();

        void
        SimNode_DigitalControlPort_DigitalSignal_InOrOut (const SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence& s);

        // SimNode_DigitalControlPort_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControlPort_DigitalSignal_Out SimNode_DigitalControlPort_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControlPort_DigitalSignal_Out_type > SimNode_DigitalControlPort_DigitalSignal_Out_sequence;
        typedef SimNode_DigitalControlPort_DigitalSignal_Out_sequence::iterator SimNode_DigitalControlPort_DigitalSignal_Out_iterator;
        typedef SimNode_DigitalControlPort_DigitalSignal_Out_sequence::const_iterator SimNode_DigitalControlPort_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControlPort_DigitalSignal_Out_type, char > SimNode_DigitalControlPort_DigitalSignal_Out_traits;

        const SimNode_DigitalControlPort_DigitalSignal_Out_sequence&
        SimNode_DigitalControlPort_DigitalSignal_Out () const;

        SimNode_DigitalControlPort_DigitalSignal_Out_sequence&
        SimNode_DigitalControlPort_DigitalSignal_Out ();

        void
        SimNode_DigitalControlPort_DigitalSignal_Out (const SimNode_DigitalControlPort_DigitalSignal_Out_sequence& s);

        // SimNode_DigitalControlPort_DigitalVirtual
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DigitalControlPort_DigitalVirtual SimNode_DigitalControlPort_DigitalVirtual_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DigitalControlPort_DigitalVirtual_type > SimNode_DigitalControlPort_DigitalVirtual_sequence;
        typedef SimNode_DigitalControlPort_DigitalVirtual_sequence::iterator SimNode_DigitalControlPort_DigitalVirtual_iterator;
        typedef SimNode_DigitalControlPort_DigitalVirtual_sequence::const_iterator SimNode_DigitalControlPort_DigitalVirtual_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DigitalControlPort_DigitalVirtual_type, char > SimNode_DigitalControlPort_DigitalVirtual_traits;

        const SimNode_DigitalControlPort_DigitalVirtual_sequence&
        SimNode_DigitalControlPort_DigitalVirtual () const;

        SimNode_DigitalControlPort_DigitalVirtual_sequence&
        SimNode_DigitalControlPort_DigitalVirtual ();

        void
        SimNode_DigitalControlPort_DigitalVirtual (const SimNode_DigitalControlPort_DigitalVirtual_sequence& s);

        // SimNode_DistributionPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_DistributionPort_Default SimNode_DistributionPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_DistributionPort_Default_type > SimNode_DistributionPort_Default_sequence;
        typedef SimNode_DistributionPort_Default_sequence::iterator SimNode_DistributionPort_Default_iterator;
        typedef SimNode_DistributionPort_Default_sequence::const_iterator SimNode_DistributionPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_DistributionPort_Default_type, char > SimNode_DistributionPort_Default_traits;

        const SimNode_DistributionPort_Default_sequence&
        SimNode_DistributionPort_Default () const;

        SimNode_DistributionPort_Default_sequence&
        SimNode_DistributionPort_Default ();

        void
        SimNode_DistributionPort_Default (const SimNode_DistributionPort_Default_sequence& s);

        // SimNode_Docking_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_Docking_Default SimNode_Docking_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_Docking_Default_type > SimNode_Docking_Default_sequence;
        typedef SimNode_Docking_Default_sequence::iterator SimNode_Docking_Default_iterator;
        typedef SimNode_Docking_Default_sequence::const_iterator SimNode_Docking_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_Docking_Default_type, char > SimNode_Docking_Default_traits;

        const SimNode_Docking_Default_sequence&
        SimNode_Docking_Default () const;

        SimNode_Docking_Default_sequence&
        SimNode_Docking_Default ();

        void
        SimNode_Docking_Default (const SimNode_Docking_Default_sequence& s);

        // SimNode_Docking_Thermalzone
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_Docking_Thermalzone SimNode_Docking_Thermalzone_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_Docking_Thermalzone_type > SimNode_Docking_Thermalzone_sequence;
        typedef SimNode_Docking_Thermalzone_sequence::iterator SimNode_Docking_Thermalzone_iterator;
        typedef SimNode_Docking_Thermalzone_sequence::const_iterator SimNode_Docking_Thermalzone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_Docking_Thermalzone_type, char > SimNode_Docking_Thermalzone_traits;

        const SimNode_Docking_Thermalzone_sequence&
        SimNode_Docking_Thermalzone () const;

        SimNode_Docking_Thermalzone_sequence&
        SimNode_Docking_Thermalzone ();

        void
        SimNode_Docking_Thermalzone (const SimNode_Docking_Thermalzone_sequence& s);

        // SimNode_ElectricalFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ElectricalFlowPort_Default SimNode_ElectricalFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ElectricalFlowPort_Default_type > SimNode_ElectricalFlowPort_Default_sequence;
        typedef SimNode_ElectricalFlowPort_Default_sequence::iterator SimNode_ElectricalFlowPort_Default_iterator;
        typedef SimNode_ElectricalFlowPort_Default_sequence::const_iterator SimNode_ElectricalFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ElectricalFlowPort_Default_type, char > SimNode_ElectricalFlowPort_Default_traits;

        const SimNode_ElectricalFlowPort_Default_sequence&
        SimNode_ElectricalFlowPort_Default () const;

        SimNode_ElectricalFlowPort_Default_sequence&
        SimNode_ElectricalFlowPort_Default ();

        void
        SimNode_ElectricalFlowPort_Default (const SimNode_ElectricalFlowPort_Default_sequence& s);

        // SimNode_ElectricalFlowPort_Electrical_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ElectricalFlowPort_Electrical_In SimNode_ElectricalFlowPort_Electrical_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ElectricalFlowPort_Electrical_In_type > SimNode_ElectricalFlowPort_Electrical_In_sequence;
        typedef SimNode_ElectricalFlowPort_Electrical_In_sequence::iterator SimNode_ElectricalFlowPort_Electrical_In_iterator;
        typedef SimNode_ElectricalFlowPort_Electrical_In_sequence::const_iterator SimNode_ElectricalFlowPort_Electrical_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ElectricalFlowPort_Electrical_In_type, char > SimNode_ElectricalFlowPort_Electrical_In_traits;

        const SimNode_ElectricalFlowPort_Electrical_In_sequence&
        SimNode_ElectricalFlowPort_Electrical_In () const;

        SimNode_ElectricalFlowPort_Electrical_In_sequence&
        SimNode_ElectricalFlowPort_Electrical_In ();

        void
        SimNode_ElectricalFlowPort_Electrical_In (const SimNode_ElectricalFlowPort_Electrical_In_sequence& s);

        // SimNode_ElectricalFlowPort_Electrical_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ElectricalFlowPort_Electrical_InOrOut SimNode_ElectricalFlowPort_Electrical_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ElectricalFlowPort_Electrical_InOrOut_type > SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence;
        typedef SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence::iterator SimNode_ElectricalFlowPort_Electrical_InOrOut_iterator;
        typedef SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence::const_iterator SimNode_ElectricalFlowPort_Electrical_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ElectricalFlowPort_Electrical_InOrOut_type, char > SimNode_ElectricalFlowPort_Electrical_InOrOut_traits;

        const SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence&
        SimNode_ElectricalFlowPort_Electrical_InOrOut () const;

        SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence&
        SimNode_ElectricalFlowPort_Electrical_InOrOut ();

        void
        SimNode_ElectricalFlowPort_Electrical_InOrOut (const SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence& s);

        // SimNode_ElectricalFlowPort_Electrical_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ElectricalFlowPort_Electrical_Out SimNode_ElectricalFlowPort_Electrical_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ElectricalFlowPort_Electrical_Out_type > SimNode_ElectricalFlowPort_Electrical_Out_sequence;
        typedef SimNode_ElectricalFlowPort_Electrical_Out_sequence::iterator SimNode_ElectricalFlowPort_Electrical_Out_iterator;
        typedef SimNode_ElectricalFlowPort_Electrical_Out_sequence::const_iterator SimNode_ElectricalFlowPort_Electrical_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ElectricalFlowPort_Electrical_Out_type, char > SimNode_ElectricalFlowPort_Electrical_Out_traits;

        const SimNode_ElectricalFlowPort_Electrical_Out_sequence&
        SimNode_ElectricalFlowPort_Electrical_Out () const;

        SimNode_ElectricalFlowPort_Electrical_Out_sequence&
        SimNode_ElectricalFlowPort_Electrical_Out ();

        void
        SimNode_ElectricalFlowPort_Electrical_Out (const SimNode_ElectricalFlowPort_Electrical_Out_sequence& s);

        // SimNode_HotWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_HotWaterFlowPort_CondensedWaterOut SimNode_HotWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_HotWaterFlowPort_CondensedWaterOut_type > SimNode_HotWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimNode_HotWaterFlowPort_CondensedWaterOut_sequence::iterator SimNode_HotWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimNode_HotWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimNode_HotWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_HotWaterFlowPort_CondensedWaterOut_type, char > SimNode_HotWaterFlowPort_CondensedWaterOut_traits;

        const SimNode_HotWaterFlowPort_CondensedWaterOut_sequence&
        SimNode_HotWaterFlowPort_CondensedWaterOut () const;

        SimNode_HotWaterFlowPort_CondensedWaterOut_sequence&
        SimNode_HotWaterFlowPort_CondensedWaterOut ();

        void
        SimNode_HotWaterFlowPort_CondensedWaterOut (const SimNode_HotWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimNode_HotWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_HotWaterFlowPort_Default SimNode_HotWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_HotWaterFlowPort_Default_type > SimNode_HotWaterFlowPort_Default_sequence;
        typedef SimNode_HotWaterFlowPort_Default_sequence::iterator SimNode_HotWaterFlowPort_Default_iterator;
        typedef SimNode_HotWaterFlowPort_Default_sequence::const_iterator SimNode_HotWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_HotWaterFlowPort_Default_type, char > SimNode_HotWaterFlowPort_Default_traits;

        const SimNode_HotWaterFlowPort_Default_sequence&
        SimNode_HotWaterFlowPort_Default () const;

        SimNode_HotWaterFlowPort_Default_sequence&
        SimNode_HotWaterFlowPort_Default ();

        void
        SimNode_HotWaterFlowPort_Default (const SimNode_HotWaterFlowPort_Default_sequence& s);

        // SimNode_HotWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_HotWaterFlowPort_EvaporativeWaterIn SimNode_HotWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_HotWaterFlowPort_EvaporativeWaterIn_type > SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimNode_HotWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimNode_HotWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_HotWaterFlowPort_EvaporativeWaterIn_type, char > SimNode_HotWaterFlowPort_EvaporativeWaterIn_traits;

        const SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence&
        SimNode_HotWaterFlowPort_EvaporativeWaterIn () const;

        SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence&
        SimNode_HotWaterFlowPort_EvaporativeWaterIn ();

        void
        SimNode_HotWaterFlowPort_EvaporativeWaterIn (const SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimNode_HotWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_HotWaterFlowPort_Water_In SimNode_HotWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_HotWaterFlowPort_Water_In_type > SimNode_HotWaterFlowPort_Water_In_sequence;
        typedef SimNode_HotWaterFlowPort_Water_In_sequence::iterator SimNode_HotWaterFlowPort_Water_In_iterator;
        typedef SimNode_HotWaterFlowPort_Water_In_sequence::const_iterator SimNode_HotWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_HotWaterFlowPort_Water_In_type, char > SimNode_HotWaterFlowPort_Water_In_traits;

        const SimNode_HotWaterFlowPort_Water_In_sequence&
        SimNode_HotWaterFlowPort_Water_In () const;

        SimNode_HotWaterFlowPort_Water_In_sequence&
        SimNode_HotWaterFlowPort_Water_In ();

        void
        SimNode_HotWaterFlowPort_Water_In (const SimNode_HotWaterFlowPort_Water_In_sequence& s);

        // SimNode_HotWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_HotWaterFlowPort_Water_InOrOut SimNode_HotWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_HotWaterFlowPort_Water_InOrOut_type > SimNode_HotWaterFlowPort_Water_InOrOut_sequence;
        typedef SimNode_HotWaterFlowPort_Water_InOrOut_sequence::iterator SimNode_HotWaterFlowPort_Water_InOrOut_iterator;
        typedef SimNode_HotWaterFlowPort_Water_InOrOut_sequence::const_iterator SimNode_HotWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_HotWaterFlowPort_Water_InOrOut_type, char > SimNode_HotWaterFlowPort_Water_InOrOut_traits;

        const SimNode_HotWaterFlowPort_Water_InOrOut_sequence&
        SimNode_HotWaterFlowPort_Water_InOrOut () const;

        SimNode_HotWaterFlowPort_Water_InOrOut_sequence&
        SimNode_HotWaterFlowPort_Water_InOrOut ();

        void
        SimNode_HotWaterFlowPort_Water_InOrOut (const SimNode_HotWaterFlowPort_Water_InOrOut_sequence& s);

        // SimNode_HotWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_HotWaterFlowPort_Water_Out SimNode_HotWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_HotWaterFlowPort_Water_Out_type > SimNode_HotWaterFlowPort_Water_Out_sequence;
        typedef SimNode_HotWaterFlowPort_Water_Out_sequence::iterator SimNode_HotWaterFlowPort_Water_Out_iterator;
        typedef SimNode_HotWaterFlowPort_Water_Out_sequence::const_iterator SimNode_HotWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_HotWaterFlowPort_Water_Out_type, char > SimNode_HotWaterFlowPort_Water_Out_traits;

        const SimNode_HotWaterFlowPort_Water_Out_sequence&
        SimNode_HotWaterFlowPort_Water_Out () const;

        SimNode_HotWaterFlowPort_Water_Out_sequence&
        SimNode_HotWaterFlowPort_Water_Out ();

        void
        SimNode_HotWaterFlowPort_Water_Out (const SimNode_HotWaterFlowPort_Water_Out_sequence& s);

        // SimNode_MixedWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_MixedWaterFlowPort_CondensedWaterOut SimNode_MixedWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_MixedWaterFlowPort_CondensedWaterOut_type > SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence::iterator SimNode_MixedWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimNode_MixedWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_MixedWaterFlowPort_CondensedWaterOut_type, char > SimNode_MixedWaterFlowPort_CondensedWaterOut_traits;

        const SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence&
        SimNode_MixedWaterFlowPort_CondensedWaterOut () const;

        SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence&
        SimNode_MixedWaterFlowPort_CondensedWaterOut ();

        void
        SimNode_MixedWaterFlowPort_CondensedWaterOut (const SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimNode_MixedWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_MixedWaterFlowPort_Default SimNode_MixedWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_MixedWaterFlowPort_Default_type > SimNode_MixedWaterFlowPort_Default_sequence;
        typedef SimNode_MixedWaterFlowPort_Default_sequence::iterator SimNode_MixedWaterFlowPort_Default_iterator;
        typedef SimNode_MixedWaterFlowPort_Default_sequence::const_iterator SimNode_MixedWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_MixedWaterFlowPort_Default_type, char > SimNode_MixedWaterFlowPort_Default_traits;

        const SimNode_MixedWaterFlowPort_Default_sequence&
        SimNode_MixedWaterFlowPort_Default () const;

        SimNode_MixedWaterFlowPort_Default_sequence&
        SimNode_MixedWaterFlowPort_Default ();

        void
        SimNode_MixedWaterFlowPort_Default (const SimNode_MixedWaterFlowPort_Default_sequence& s);

        // SimNode_MixedWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_MixedWaterFlowPort_EvaporativeWaterIn SimNode_MixedWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_MixedWaterFlowPort_EvaporativeWaterIn_type > SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimNode_MixedWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimNode_MixedWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_MixedWaterFlowPort_EvaporativeWaterIn_type, char > SimNode_MixedWaterFlowPort_EvaporativeWaterIn_traits;

        const SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence&
        SimNode_MixedWaterFlowPort_EvaporativeWaterIn () const;

        SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence&
        SimNode_MixedWaterFlowPort_EvaporativeWaterIn ();

        void
        SimNode_MixedWaterFlowPort_EvaporativeWaterIn (const SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimNode_MixedWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_MixedWaterFlowPort_Water_In SimNode_MixedWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_MixedWaterFlowPort_Water_In_type > SimNode_MixedWaterFlowPort_Water_In_sequence;
        typedef SimNode_MixedWaterFlowPort_Water_In_sequence::iterator SimNode_MixedWaterFlowPort_Water_In_iterator;
        typedef SimNode_MixedWaterFlowPort_Water_In_sequence::const_iterator SimNode_MixedWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_MixedWaterFlowPort_Water_In_type, char > SimNode_MixedWaterFlowPort_Water_In_traits;

        const SimNode_MixedWaterFlowPort_Water_In_sequence&
        SimNode_MixedWaterFlowPort_Water_In () const;

        SimNode_MixedWaterFlowPort_Water_In_sequence&
        SimNode_MixedWaterFlowPort_Water_In ();

        void
        SimNode_MixedWaterFlowPort_Water_In (const SimNode_MixedWaterFlowPort_Water_In_sequence& s);

        // SimNode_MixedWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_MixedWaterFlowPort_Water_InOrOut SimNode_MixedWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_MixedWaterFlowPort_Water_InOrOut_type > SimNode_MixedWaterFlowPort_Water_InOrOut_sequence;
        typedef SimNode_MixedWaterFlowPort_Water_InOrOut_sequence::iterator SimNode_MixedWaterFlowPort_Water_InOrOut_iterator;
        typedef SimNode_MixedWaterFlowPort_Water_InOrOut_sequence::const_iterator SimNode_MixedWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_MixedWaterFlowPort_Water_InOrOut_type, char > SimNode_MixedWaterFlowPort_Water_InOrOut_traits;

        const SimNode_MixedWaterFlowPort_Water_InOrOut_sequence&
        SimNode_MixedWaterFlowPort_Water_InOrOut () const;

        SimNode_MixedWaterFlowPort_Water_InOrOut_sequence&
        SimNode_MixedWaterFlowPort_Water_InOrOut ();

        void
        SimNode_MixedWaterFlowPort_Water_InOrOut (const SimNode_MixedWaterFlowPort_Water_InOrOut_sequence& s);

        // SimNode_MixedWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_MixedWaterFlowPort_Water_Out SimNode_MixedWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_MixedWaterFlowPort_Water_Out_type > SimNode_MixedWaterFlowPort_Water_Out_sequence;
        typedef SimNode_MixedWaterFlowPort_Water_Out_sequence::iterator SimNode_MixedWaterFlowPort_Water_Out_iterator;
        typedef SimNode_MixedWaterFlowPort_Water_Out_sequence::const_iterator SimNode_MixedWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_MixedWaterFlowPort_Water_Out_type, char > SimNode_MixedWaterFlowPort_Water_Out_traits;

        const SimNode_MixedWaterFlowPort_Water_Out_sequence&
        SimNode_MixedWaterFlowPort_Water_Out () const;

        SimNode_MixedWaterFlowPort_Water_Out_sequence&
        SimNode_MixedWaterFlowPort_Water_Out ();

        void
        SimNode_MixedWaterFlowPort_Water_Out (const SimNode_MixedWaterFlowPort_Water_Out_sequence& s);

        // SimNode_Node_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_Node_Default SimNode_Node_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_Node_Default_type > SimNode_Node_Default_sequence;
        typedef SimNode_Node_Default_sequence::iterator SimNode_Node_Default_iterator;
        typedef SimNode_Node_Default_sequence::const_iterator SimNode_Node_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_Node_Default_type, char > SimNode_Node_Default_traits;

        const SimNode_Node_Default_sequence&
        SimNode_Node_Default () const;

        SimNode_Node_Default_sequence&
        SimNode_Node_Default ();

        void
        SimNode_Node_Default (const SimNode_Node_Default_sequence& s);

        // SimNode_Node_OutdoorAir
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_Node_OutdoorAir SimNode_Node_OutdoorAir_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_Node_OutdoorAir_type > SimNode_Node_OutdoorAir_sequence;
        typedef SimNode_Node_OutdoorAir_sequence::iterator SimNode_Node_OutdoorAir_iterator;
        typedef SimNode_Node_OutdoorAir_sequence::const_iterator SimNode_Node_OutdoorAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_Node_OutdoorAir_type, char > SimNode_Node_OutdoorAir_traits;

        const SimNode_Node_OutdoorAir_sequence&
        SimNode_Node_OutdoorAir () const;

        SimNode_Node_OutdoorAir_sequence&
        SimNode_Node_OutdoorAir ();

        void
        SimNode_Node_OutdoorAir (const SimNode_Node_OutdoorAir_sequence& s);

        // SimNode_Port_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_Port_Default SimNode_Port_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_Port_Default_type > SimNode_Port_Default_sequence;
        typedef SimNode_Port_Default_sequence::iterator SimNode_Port_Default_iterator;
        typedef SimNode_Port_Default_sequence::const_iterator SimNode_Port_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_Port_Default_type, char > SimNode_Port_Default_traits;

        const SimNode_Port_Default_sequence&
        SimNode_Port_Default () const;

        SimNode_Port_Default_sequence&
        SimNode_Port_Default ();

        void
        SimNode_Port_Default (const SimNode_Port_Default_sequence& s);

        // SimNode_RefrigerationFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_RefrigerationFlowPort_Default SimNode_RefrigerationFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_RefrigerationFlowPort_Default_type > SimNode_RefrigerationFlowPort_Default_sequence;
        typedef SimNode_RefrigerationFlowPort_Default_sequence::iterator SimNode_RefrigerationFlowPort_Default_iterator;
        typedef SimNode_RefrigerationFlowPort_Default_sequence::const_iterator SimNode_RefrigerationFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_RefrigerationFlowPort_Default_type, char > SimNode_RefrigerationFlowPort_Default_traits;

        const SimNode_RefrigerationFlowPort_Default_sequence&
        SimNode_RefrigerationFlowPort_Default () const;

        SimNode_RefrigerationFlowPort_Default_sequence&
        SimNode_RefrigerationFlowPort_Default ();

        void
        SimNode_RefrigerationFlowPort_Default (const SimNode_RefrigerationFlowPort_Default_sequence& s);

        // SimNode_RefrigerationFlowPort_Refrigeration_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_RefrigerationFlowPort_Refrigeration_In SimNode_RefrigerationFlowPort_Refrigeration_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_RefrigerationFlowPort_Refrigeration_In_type > SimNode_RefrigerationFlowPort_Refrigeration_In_sequence;
        typedef SimNode_RefrigerationFlowPort_Refrigeration_In_sequence::iterator SimNode_RefrigerationFlowPort_Refrigeration_In_iterator;
        typedef SimNode_RefrigerationFlowPort_Refrigeration_In_sequence::const_iterator SimNode_RefrigerationFlowPort_Refrigeration_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_RefrigerationFlowPort_Refrigeration_In_type, char > SimNode_RefrigerationFlowPort_Refrigeration_In_traits;

        const SimNode_RefrigerationFlowPort_Refrigeration_In_sequence&
        SimNode_RefrigerationFlowPort_Refrigeration_In () const;

        SimNode_RefrigerationFlowPort_Refrigeration_In_sequence&
        SimNode_RefrigerationFlowPort_Refrigeration_In ();

        void
        SimNode_RefrigerationFlowPort_Refrigeration_In (const SimNode_RefrigerationFlowPort_Refrigeration_In_sequence& s);

        // SimNode_RefrigerationFlowPort_Refrigeration_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_RefrigerationFlowPort_Refrigeration_InOrOut SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_type > SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence;
        typedef SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence::iterator SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_iterator;
        typedef SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence::const_iterator SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_type, char > SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_traits;

        const SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence&
        SimNode_RefrigerationFlowPort_Refrigeration_InOrOut () const;

        SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence&
        SimNode_RefrigerationFlowPort_Refrigeration_InOrOut ();

        void
        SimNode_RefrigerationFlowPort_Refrigeration_InOrOut (const SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence& s);

        // SimNode_RefrigerationFlowPort_Refrigeration_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_RefrigerationFlowPort_Refrigeration_Out SimNode_RefrigerationFlowPort_Refrigeration_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_RefrigerationFlowPort_Refrigeration_Out_type > SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence;
        typedef SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence::iterator SimNode_RefrigerationFlowPort_Refrigeration_Out_iterator;
        typedef SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence::const_iterator SimNode_RefrigerationFlowPort_Refrigeration_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_RefrigerationFlowPort_Refrigeration_Out_type, char > SimNode_RefrigerationFlowPort_Refrigeration_Out_traits;

        const SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence&
        SimNode_RefrigerationFlowPort_Refrigeration_Out () const;

        SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence&
        SimNode_RefrigerationFlowPort_Refrigeration_Out ();

        void
        SimNode_RefrigerationFlowPort_Refrigeration_Out (const SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence& s);

        // SimNode_SetpointNode_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_SetpointNode_Default SimNode_SetpointNode_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_SetpointNode_Default_type > SimNode_SetpointNode_Default_sequence;
        typedef SimNode_SetpointNode_Default_sequence::iterator SimNode_SetpointNode_Default_iterator;
        typedef SimNode_SetpointNode_Default_sequence::const_iterator SimNode_SetpointNode_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_SetpointNode_Default_type, char > SimNode_SetpointNode_Default_traits;

        const SimNode_SetpointNode_Default_sequence&
        SimNode_SetpointNode_Default () const;

        SimNode_SetpointNode_Default_sequence&
        SimNode_SetpointNode_Default ();

        void
        SimNode_SetpointNode_Default (const SimNode_SetpointNode_Default_sequence& s);

        // SimNode_SteamFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_SteamFlowPort_Default SimNode_SteamFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_SteamFlowPort_Default_type > SimNode_SteamFlowPort_Default_sequence;
        typedef SimNode_SteamFlowPort_Default_sequence::iterator SimNode_SteamFlowPort_Default_iterator;
        typedef SimNode_SteamFlowPort_Default_sequence::const_iterator SimNode_SteamFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_SteamFlowPort_Default_type, char > SimNode_SteamFlowPort_Default_traits;

        const SimNode_SteamFlowPort_Default_sequence&
        SimNode_SteamFlowPort_Default () const;

        SimNode_SteamFlowPort_Default_sequence&
        SimNode_SteamFlowPort_Default ();

        void
        SimNode_SteamFlowPort_Default (const SimNode_SteamFlowPort_Default_sequence& s);

        // SimNode_SteamFlowPort_Steam_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_SteamFlowPort_Steam_In SimNode_SteamFlowPort_Steam_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_SteamFlowPort_Steam_In_type > SimNode_SteamFlowPort_Steam_In_sequence;
        typedef SimNode_SteamFlowPort_Steam_In_sequence::iterator SimNode_SteamFlowPort_Steam_In_iterator;
        typedef SimNode_SteamFlowPort_Steam_In_sequence::const_iterator SimNode_SteamFlowPort_Steam_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_SteamFlowPort_Steam_In_type, char > SimNode_SteamFlowPort_Steam_In_traits;

        const SimNode_SteamFlowPort_Steam_In_sequence&
        SimNode_SteamFlowPort_Steam_In () const;

        SimNode_SteamFlowPort_Steam_In_sequence&
        SimNode_SteamFlowPort_Steam_In ();

        void
        SimNode_SteamFlowPort_Steam_In (const SimNode_SteamFlowPort_Steam_In_sequence& s);

        // SimNode_SteamFlowPort_Steam_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_SteamFlowPort_Steam_InOrOut SimNode_SteamFlowPort_Steam_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_SteamFlowPort_Steam_InOrOut_type > SimNode_SteamFlowPort_Steam_InOrOut_sequence;
        typedef SimNode_SteamFlowPort_Steam_InOrOut_sequence::iterator SimNode_SteamFlowPort_Steam_InOrOut_iterator;
        typedef SimNode_SteamFlowPort_Steam_InOrOut_sequence::const_iterator SimNode_SteamFlowPort_Steam_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_SteamFlowPort_Steam_InOrOut_type, char > SimNode_SteamFlowPort_Steam_InOrOut_traits;

        const SimNode_SteamFlowPort_Steam_InOrOut_sequence&
        SimNode_SteamFlowPort_Steam_InOrOut () const;

        SimNode_SteamFlowPort_Steam_InOrOut_sequence&
        SimNode_SteamFlowPort_Steam_InOrOut ();

        void
        SimNode_SteamFlowPort_Steam_InOrOut (const SimNode_SteamFlowPort_Steam_InOrOut_sequence& s);

        // SimNode_SteamFlowPort_Steam_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_SteamFlowPort_Steam_Out SimNode_SteamFlowPort_Steam_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_SteamFlowPort_Steam_Out_type > SimNode_SteamFlowPort_Steam_Out_sequence;
        typedef SimNode_SteamFlowPort_Steam_Out_sequence::iterator SimNode_SteamFlowPort_Steam_Out_iterator;
        typedef SimNode_SteamFlowPort_Steam_Out_sequence::const_iterator SimNode_SteamFlowPort_Steam_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_SteamFlowPort_Steam_Out_type, char > SimNode_SteamFlowPort_Steam_Out_traits;

        const SimNode_SteamFlowPort_Steam_Out_sequence&
        SimNode_SteamFlowPort_Steam_Out () const;

        SimNode_SteamFlowPort_Steam_Out_sequence&
        SimNode_SteamFlowPort_Steam_Out ();

        void
        SimNode_SteamFlowPort_Steam_Out (const SimNode_SteamFlowPort_Steam_Out_sequence& s);

        // SimNode_ZoneAirFlowPort_Air_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ZoneAirFlowPort_Air_In SimNode_ZoneAirFlowPort_Air_In_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ZoneAirFlowPort_Air_In_type > SimNode_ZoneAirFlowPort_Air_In_sequence;
        typedef SimNode_ZoneAirFlowPort_Air_In_sequence::iterator SimNode_ZoneAirFlowPort_Air_In_iterator;
        typedef SimNode_ZoneAirFlowPort_Air_In_sequence::const_iterator SimNode_ZoneAirFlowPort_Air_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ZoneAirFlowPort_Air_In_type, char > SimNode_ZoneAirFlowPort_Air_In_traits;

        const SimNode_ZoneAirFlowPort_Air_In_sequence&
        SimNode_ZoneAirFlowPort_Air_In () const;

        SimNode_ZoneAirFlowPort_Air_In_sequence&
        SimNode_ZoneAirFlowPort_Air_In ();

        void
        SimNode_ZoneAirFlowPort_Air_In (const SimNode_ZoneAirFlowPort_Air_In_sequence& s);

        // SimNode_ZoneAirFlowPort_Air_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ZoneAirFlowPort_Air_Out SimNode_ZoneAirFlowPort_Air_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ZoneAirFlowPort_Air_Out_type > SimNode_ZoneAirFlowPort_Air_Out_sequence;
        typedef SimNode_ZoneAirFlowPort_Air_Out_sequence::iterator SimNode_ZoneAirFlowPort_Air_Out_iterator;
        typedef SimNode_ZoneAirFlowPort_Air_Out_sequence::const_iterator SimNode_ZoneAirFlowPort_Air_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ZoneAirFlowPort_Air_Out_type, char > SimNode_ZoneAirFlowPort_Air_Out_traits;

        const SimNode_ZoneAirFlowPort_Air_Out_sequence&
        SimNode_ZoneAirFlowPort_Air_Out () const;

        SimNode_ZoneAirFlowPort_Air_Out_sequence&
        SimNode_ZoneAirFlowPort_Air_Out ();

        void
        SimNode_ZoneAirFlowPort_Air_Out (const SimNode_ZoneAirFlowPort_Air_Out_sequence& s);

        // SimNode_ZoneAirNode_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimNode_ZoneAirNode_Default SimNode_ZoneAirNode_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimNode_ZoneAirNode_Default_type > SimNode_ZoneAirNode_Default_sequence;
        typedef SimNode_ZoneAirNode_Default_sequence::iterator SimNode_ZoneAirNode_Default_iterator;
        typedef SimNode_ZoneAirNode_Default_sequence::const_iterator SimNode_ZoneAirNode_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimNode_ZoneAirNode_Default_type, char > SimNode_ZoneAirNode_Default_traits;

        const SimNode_ZoneAirNode_Default_sequence&
        SimNode_ZoneAirNode_Default () const;

        SimNode_ZoneAirNode_Default_sequence&
        SimNode_ZoneAirNode_Default ();

        void
        SimNode_ZoneAirNode_Default (const SimNode_ZoneAirNode_Default_sequence& s);

        // SimObjectOutputRequestSet_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimObjectOutputRequestSet_Default_Default SimObjectOutputRequestSet_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimObjectOutputRequestSet_Default_Default_type > SimObjectOutputRequestSet_Default_Default_sequence;
        typedef SimObjectOutputRequestSet_Default_Default_sequence::iterator SimObjectOutputRequestSet_Default_Default_iterator;
        typedef SimObjectOutputRequestSet_Default_Default_sequence::const_iterator SimObjectOutputRequestSet_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimObjectOutputRequestSet_Default_Default_type, char > SimObjectOutputRequestSet_Default_Default_traits;

        const SimObjectOutputRequestSet_Default_Default_sequence&
        SimObjectOutputRequestSet_Default_Default () const;

        SimObjectOutputRequestSet_Default_Default_sequence&
        SimObjectOutputRequestSet_Default_Default ();

        void
        SimObjectOutputRequestSet_Default_Default (const SimObjectOutputRequestSet_Default_Default_sequence& s);

        // SimOpeningType_Opening_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimOpeningType_Opening_Default SimOpeningType_Opening_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimOpeningType_Opening_Default_type > SimOpeningType_Opening_Default_sequence;
        typedef SimOpeningType_Opening_Default_sequence::iterator SimOpeningType_Opening_Default_iterator;
        typedef SimOpeningType_Opening_Default_sequence::const_iterator SimOpeningType_Opening_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimOpeningType_Opening_Default_type, char > SimOpeningType_Opening_Default_traits;

        const SimOpeningType_Opening_Default_sequence&
        SimOpeningType_Opening_Default () const;

        SimOpeningType_Opening_Default_sequence&
        SimOpeningType_Opening_Default ();

        void
        SimOpeningType_Opening_Default (const SimOpeningType_Opening_Default_sequence& s);

        // SimOrganization_Organization_Architect
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimOrganization_Organization_Architect SimOrganization_Organization_Architect_type;
        typedef ::xsd::cxx::tree::sequence< SimOrganization_Organization_Architect_type > SimOrganization_Organization_Architect_sequence;
        typedef SimOrganization_Organization_Architect_sequence::iterator SimOrganization_Organization_Architect_iterator;
        typedef SimOrganization_Organization_Architect_sequence::const_iterator SimOrganization_Organization_Architect_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimOrganization_Organization_Architect_type, char > SimOrganization_Organization_Architect_traits;

        const SimOrganization_Organization_Architect_sequence&
        SimOrganization_Organization_Architect () const;

        SimOrganization_Organization_Architect_sequence&
        SimOrganization_Organization_Architect ();

        void
        SimOrganization_Organization_Architect (const SimOrganization_Organization_Architect_sequence& s);

        // SimOrganization_Organization_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimOrganization_Organization_Default SimOrganization_Organization_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimOrganization_Organization_Default_type > SimOrganization_Organization_Default_sequence;
        typedef SimOrganization_Organization_Default_sequence::iterator SimOrganization_Organization_Default_iterator;
        typedef SimOrganization_Organization_Default_sequence::const_iterator SimOrganization_Organization_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimOrganization_Organization_Default_type, char > SimOrganization_Organization_Default_traits;

        const SimOrganization_Organization_Default_sequence&
        SimOrganization_Organization_Default () const;

        SimOrganization_Organization_Default_sequence&
        SimOrganization_Organization_Default ();

        void
        SimOrganization_Organization_Default (const SimOrganization_Organization_Default_sequence& s);

        // SimOrganization_Organization_Engineer
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimOrganization_Organization_Engineer SimOrganization_Organization_Engineer_type;
        typedef ::xsd::cxx::tree::sequence< SimOrganization_Organization_Engineer_type > SimOrganization_Organization_Engineer_sequence;
        typedef SimOrganization_Organization_Engineer_sequence::iterator SimOrganization_Organization_Engineer_iterator;
        typedef SimOrganization_Organization_Engineer_sequence::const_iterator SimOrganization_Organization_Engineer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimOrganization_Organization_Engineer_type, char > SimOrganization_Organization_Engineer_traits;

        const SimOrganization_Organization_Engineer_sequence&
        SimOrganization_Organization_Engineer () const;

        SimOrganization_Organization_Engineer_sequence&
        SimOrganization_Organization_Engineer ();

        void
        SimOrganization_Organization_Engineer (const SimOrganization_Organization_Engineer_sequence& s);

        // SimOrganization_Organization_Owner
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimOrganization_Organization_Owner SimOrganization_Organization_Owner_type;
        typedef ::xsd::cxx::tree::sequence< SimOrganization_Organization_Owner_type > SimOrganization_Organization_Owner_sequence;
        typedef SimOrganization_Organization_Owner_sequence::iterator SimOrganization_Organization_Owner_iterator;
        typedef SimOrganization_Organization_Owner_sequence::const_iterator SimOrganization_Organization_Owner_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimOrganization_Organization_Owner_type, char > SimOrganization_Organization_Owner_traits;

        const SimOrganization_Organization_Owner_sequence&
        SimOrganization_Organization_Owner () const;

        SimOrganization_Organization_Owner_sequence&
        SimOrganization_Organization_Owner ();

        void
        SimOrganization_Organization_Owner (const SimOrganization_Organization_Owner_sequence& s);

        // SimOwnerHistory_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimOwnerHistory_Default_Default SimOwnerHistory_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimOwnerHistory_Default_Default_type > SimOwnerHistory_Default_Default_sequence;
        typedef SimOwnerHistory_Default_Default_sequence::iterator SimOwnerHistory_Default_Default_iterator;
        typedef SimOwnerHistory_Default_Default_sequence::const_iterator SimOwnerHistory_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimOwnerHistory_Default_Default_type, char > SimOwnerHistory_Default_Default_traits;

        const SimOwnerHistory_Default_Default_sequence&
        SimOwnerHistory_Default_Default () const;

        SimOwnerHistory_Default_Default_sequence&
        SimOwnerHistory_Default_Default ();

        void
        SimOwnerHistory_Default_Default (const SimOwnerHistory_Default_Default_sequence& s);

        // SimPanel_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimPanel_Default_Default SimPanel_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPanel_Default_Default_type > SimPanel_Default_Default_sequence;
        typedef SimPanel_Default_Default_sequence::iterator SimPanel_Default_Default_iterator;
        typedef SimPanel_Default_Default_sequence::const_iterator SimPanel_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPanel_Default_Default_type, char > SimPanel_Default_Default_traits;

        const SimPanel_Default_Default_sequence&
        SimPanel_Default_Default () const;

        SimPanel_Default_Default_sequence&
        SimPanel_Default_Default ();

        void
        SimPanel_Default_Default (const SimPanel_Default_Default_sequence& s);

        // SimPanelArrayParams_PanelArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPanelArrayParams_PanelArray_Default SimPanelArrayParams_PanelArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPanelArrayParams_PanelArray_Default_type > SimPanelArrayParams_PanelArray_Default_sequence;
        typedef SimPanelArrayParams_PanelArray_Default_sequence::iterator SimPanelArrayParams_PanelArray_Default_iterator;
        typedef SimPanelArrayParams_PanelArray_Default_sequence::const_iterator SimPanelArrayParams_PanelArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPanelArrayParams_PanelArray_Default_type, char > SimPanelArrayParams_PanelArray_Default_traits;

        const SimPanelArrayParams_PanelArray_Default_sequence&
        SimPanelArrayParams_PanelArray_Default () const;

        SimPanelArrayParams_PanelArray_Default_sequence&
        SimPanelArrayParams_PanelArray_Default ();

        void
        SimPanelArrayParams_PanelArray_Default (const SimPanelArrayParams_PanelArray_Default_sequence& s);

        // SimPanelArrayParams_SolarShadeArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPanelArrayParams_SolarShadeArray_Default SimPanelArrayParams_SolarShadeArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPanelArrayParams_SolarShadeArray_Default_type > SimPanelArrayParams_SolarShadeArray_Default_sequence;
        typedef SimPanelArrayParams_SolarShadeArray_Default_sequence::iterator SimPanelArrayParams_SolarShadeArray_Default_iterator;
        typedef SimPanelArrayParams_SolarShadeArray_Default_sequence::const_iterator SimPanelArrayParams_SolarShadeArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPanelArrayParams_SolarShadeArray_Default_type, char > SimPanelArrayParams_SolarShadeArray_Default_traits;

        const SimPanelArrayParams_SolarShadeArray_Default_sequence&
        SimPanelArrayParams_SolarShadeArray_Default () const;

        SimPanelArrayParams_SolarShadeArray_Default_sequence&
        SimPanelArrayParams_SolarShadeArray_Default ();

        void
        SimPanelArrayParams_SolarShadeArray_Default (const SimPanelArrayParams_SolarShadeArray_Default_sequence& s);

        // SimPanelParams_Panel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPanelParams_Panel_Default SimPanelParams_Panel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPanelParams_Panel_Default_type > SimPanelParams_Panel_Default_sequence;
        typedef SimPanelParams_Panel_Default_sequence::iterator SimPanelParams_Panel_Default_iterator;
        typedef SimPanelParams_Panel_Default_sequence::const_iterator SimPanelParams_Panel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPanelParams_Panel_Default_type, char > SimPanelParams_Panel_Default_traits;

        const SimPanelParams_Panel_Default_sequence&
        SimPanelParams_Panel_Default () const;

        SimPanelParams_Panel_Default_sequence&
        SimPanelParams_Panel_Default ();

        void
        SimPanelParams_Panel_Default (const SimPanelParams_Panel_Default_sequence& s);

        // SimPanelParams_Panel_Glazing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPanelParams_Panel_Glazing SimPanelParams_Panel_Glazing_type;
        typedef ::xsd::cxx::tree::sequence< SimPanelParams_Panel_Glazing_type > SimPanelParams_Panel_Glazing_sequence;
        typedef SimPanelParams_Panel_Glazing_sequence::iterator SimPanelParams_Panel_Glazing_iterator;
        typedef SimPanelParams_Panel_Glazing_sequence::const_iterator SimPanelParams_Panel_Glazing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPanelParams_Panel_Glazing_type, char > SimPanelParams_Panel_Glazing_traits;

        const SimPanelParams_Panel_Glazing_sequence&
        SimPanelParams_Panel_Glazing () const;

        SimPanelParams_Panel_Glazing_sequence&
        SimPanelParams_Panel_Glazing ();

        void
        SimPanelParams_Panel_Glazing (const SimPanelParams_Panel_Glazing_sequence& s);

        // SimPanelParams_Panel_SolarShading
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPanelParams_Panel_SolarShading SimPanelParams_Panel_SolarShading_type;
        typedef ::xsd::cxx::tree::sequence< SimPanelParams_Panel_SolarShading_type > SimPanelParams_Panel_SolarShading_sequence;
        typedef SimPanelParams_Panel_SolarShading_sequence::iterator SimPanelParams_Panel_SolarShading_iterator;
        typedef SimPanelParams_Panel_SolarShading_sequence::const_iterator SimPanelParams_Panel_SolarShading_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPanelParams_Panel_SolarShading_type, char > SimPanelParams_Panel_SolarShading_traits;

        const SimPanelParams_Panel_SolarShading_sequence&
        SimPanelParams_Panel_SolarShading () const;

        SimPanelParams_Panel_SolarShading_sequence&
        SimPanelParams_Panel_SolarShading ();

        void
        SimPanelParams_Panel_SolarShading (const SimPanelParams_Panel_SolarShading_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_C_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_C_Shape SimParameterizedProfileDef_ParameterizedProfile_C_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_C_Shape_type > SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_C_Shape_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_C_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_C_Shape_type, char > SimParameterizedProfileDef_ParameterizedProfile_C_Shape_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_C_Shape () const;

        SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_C_Shape ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_C_Shape (const SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_Circle
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_Circle SimParameterizedProfileDef_ParameterizedProfile_Circle_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_Circle_type > SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_Circle_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_Circle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_Circle_type, char > SimParameterizedProfileDef_ParameterizedProfile_Circle_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Circle () const;

        SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Circle ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_Circle (const SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_Ellipse
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_Ellipse SimParameterizedProfileDef_ParameterizedProfile_Ellipse_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_Ellipse_type > SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_Ellipse_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_Ellipse_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_Ellipse_type, char > SimParameterizedProfileDef_ParameterizedProfile_Ellipse_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Ellipse () const;

        SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Ellipse ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_Ellipse (const SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_type > SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_type, char > SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle () const;

        SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle (const SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_I_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_I_Shape SimParameterizedProfileDef_ParameterizedProfile_I_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_I_Shape_type > SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_I_Shape_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_I_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_I_Shape_type, char > SimParameterizedProfileDef_ParameterizedProfile_I_Shape_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_I_Shape () const;

        SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_I_Shape ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_I_Shape (const SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_L_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_L_Shape SimParameterizedProfileDef_ParameterizedProfile_L_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_L_Shape_type > SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_L_Shape_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_L_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_L_Shape_type, char > SimParameterizedProfileDef_ParameterizedProfile_L_Shape_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_L_Shape () const;

        SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_L_Shape ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_L_Shape (const SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_Rectangle
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_Rectangle SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type > SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type, char > SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Rectangle () const;

        SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Rectangle ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_Rectangle (const SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_T_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_T_Shape SimParameterizedProfileDef_ParameterizedProfile_T_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_T_Shape_type > SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_T_Shape_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_T_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_T_Shape_type, char > SimParameterizedProfileDef_ParameterizedProfile_T_Shape_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_T_Shape () const;

        SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_T_Shape ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_T_Shape (const SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_U_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_U_Shape SimParameterizedProfileDef_ParameterizedProfile_U_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_U_Shape_type > SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_U_Shape_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_U_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_U_Shape_type, char > SimParameterizedProfileDef_ParameterizedProfile_U_Shape_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_U_Shape () const;

        SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_U_Shape ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_U_Shape (const SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence& s);

        // SimParameterizedProfileDef_ParameterizedProfile_Z_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_Z_Shape SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_type > SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence::iterator SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_iterator;
        typedef SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence::const_iterator SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_type, char > SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_traits;

        const SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Z_Shape () const;

        SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence&
        SimParameterizedProfileDef_ParameterizedProfile_Z_Shape ();

        void
        SimParameterizedProfileDef_ParameterizedProfile_Z_Shape (const SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence& s);

        // SimPerformanceCurve_Mathematical_Bicubic
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Bicubic SimPerformanceCurve_Mathematical_Bicubic_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Bicubic_type > SimPerformanceCurve_Mathematical_Bicubic_sequence;
        typedef SimPerformanceCurve_Mathematical_Bicubic_sequence::iterator SimPerformanceCurve_Mathematical_Bicubic_iterator;
        typedef SimPerformanceCurve_Mathematical_Bicubic_sequence::const_iterator SimPerformanceCurve_Mathematical_Bicubic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Bicubic_type, char > SimPerformanceCurve_Mathematical_Bicubic_traits;

        const SimPerformanceCurve_Mathematical_Bicubic_sequence&
        SimPerformanceCurve_Mathematical_Bicubic () const;

        SimPerformanceCurve_Mathematical_Bicubic_sequence&
        SimPerformanceCurve_Mathematical_Bicubic ();

        void
        SimPerformanceCurve_Mathematical_Bicubic (const SimPerformanceCurve_Mathematical_Bicubic_sequence& s);

        // SimPerformanceCurve_Mathematical_Biquadratic
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Biquadratic SimPerformanceCurve_Mathematical_Biquadratic_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Biquadratic_type > SimPerformanceCurve_Mathematical_Biquadratic_sequence;
        typedef SimPerformanceCurve_Mathematical_Biquadratic_sequence::iterator SimPerformanceCurve_Mathematical_Biquadratic_iterator;
        typedef SimPerformanceCurve_Mathematical_Biquadratic_sequence::const_iterator SimPerformanceCurve_Mathematical_Biquadratic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Biquadratic_type, char > SimPerformanceCurve_Mathematical_Biquadratic_traits;

        const SimPerformanceCurve_Mathematical_Biquadratic_sequence&
        SimPerformanceCurve_Mathematical_Biquadratic () const;

        SimPerformanceCurve_Mathematical_Biquadratic_sequence&
        SimPerformanceCurve_Mathematical_Biquadratic ();

        void
        SimPerformanceCurve_Mathematical_Biquadratic (const SimPerformanceCurve_Mathematical_Biquadratic_sequence& s);

        // SimPerformanceCurve_Mathematical_Cubic
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Cubic SimPerformanceCurve_Mathematical_Cubic_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Cubic_type > SimPerformanceCurve_Mathematical_Cubic_sequence;
        typedef SimPerformanceCurve_Mathematical_Cubic_sequence::iterator SimPerformanceCurve_Mathematical_Cubic_iterator;
        typedef SimPerformanceCurve_Mathematical_Cubic_sequence::const_iterator SimPerformanceCurve_Mathematical_Cubic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Cubic_type, char > SimPerformanceCurve_Mathematical_Cubic_traits;

        const SimPerformanceCurve_Mathematical_Cubic_sequence&
        SimPerformanceCurve_Mathematical_Cubic () const;

        SimPerformanceCurve_Mathematical_Cubic_sequence&
        SimPerformanceCurve_Mathematical_Cubic ();

        void
        SimPerformanceCurve_Mathematical_Cubic (const SimPerformanceCurve_Mathematical_Cubic_sequence& s);

        // SimPerformanceCurve_Mathematical_DoubleExponentialDecay
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_DoubleExponentialDecay SimPerformanceCurve_Mathematical_DoubleExponentialDecay_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_DoubleExponentialDecay_type > SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence;
        typedef SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence::iterator SimPerformanceCurve_Mathematical_DoubleExponentialDecay_iterator;
        typedef SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence::const_iterator SimPerformanceCurve_Mathematical_DoubleExponentialDecay_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_DoubleExponentialDecay_type, char > SimPerformanceCurve_Mathematical_DoubleExponentialDecay_traits;

        const SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence&
        SimPerformanceCurve_Mathematical_DoubleExponentialDecay () const;

        SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence&
        SimPerformanceCurve_Mathematical_DoubleExponentialDecay ();

        void
        SimPerformanceCurve_Mathematical_DoubleExponentialDecay (const SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence& s);

        // SimPerformanceCurve_Mathematical_Exponent
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Exponent SimPerformanceCurve_Mathematical_Exponent_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Exponent_type > SimPerformanceCurve_Mathematical_Exponent_sequence;
        typedef SimPerformanceCurve_Mathematical_Exponent_sequence::iterator SimPerformanceCurve_Mathematical_Exponent_iterator;
        typedef SimPerformanceCurve_Mathematical_Exponent_sequence::const_iterator SimPerformanceCurve_Mathematical_Exponent_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Exponent_type, char > SimPerformanceCurve_Mathematical_Exponent_traits;

        const SimPerformanceCurve_Mathematical_Exponent_sequence&
        SimPerformanceCurve_Mathematical_Exponent () const;

        SimPerformanceCurve_Mathematical_Exponent_sequence&
        SimPerformanceCurve_Mathematical_Exponent ();

        void
        SimPerformanceCurve_Mathematical_Exponent (const SimPerformanceCurve_Mathematical_Exponent_sequence& s);

        // SimPerformanceCurve_Mathematical_ExponentialDecay
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_ExponentialDecay SimPerformanceCurve_Mathematical_ExponentialDecay_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_ExponentialDecay_type > SimPerformanceCurve_Mathematical_ExponentialDecay_sequence;
        typedef SimPerformanceCurve_Mathematical_ExponentialDecay_sequence::iterator SimPerformanceCurve_Mathematical_ExponentialDecay_iterator;
        typedef SimPerformanceCurve_Mathematical_ExponentialDecay_sequence::const_iterator SimPerformanceCurve_Mathematical_ExponentialDecay_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_ExponentialDecay_type, char > SimPerformanceCurve_Mathematical_ExponentialDecay_traits;

        const SimPerformanceCurve_Mathematical_ExponentialDecay_sequence&
        SimPerformanceCurve_Mathematical_ExponentialDecay () const;

        SimPerformanceCurve_Mathematical_ExponentialDecay_sequence&
        SimPerformanceCurve_Mathematical_ExponentialDecay ();

        void
        SimPerformanceCurve_Mathematical_ExponentialDecay (const SimPerformanceCurve_Mathematical_ExponentialDecay_sequence& s);

        // SimPerformanceCurve_Mathematical_ExponentialSkewNormal
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_ExponentialSkewNormal SimPerformanceCurve_Mathematical_ExponentialSkewNormal_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_ExponentialSkewNormal_type > SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence;
        typedef SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence::iterator SimPerformanceCurve_Mathematical_ExponentialSkewNormal_iterator;
        typedef SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence::const_iterator SimPerformanceCurve_Mathematical_ExponentialSkewNormal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_ExponentialSkewNormal_type, char > SimPerformanceCurve_Mathematical_ExponentialSkewNormal_traits;

        const SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence&
        SimPerformanceCurve_Mathematical_ExponentialSkewNormal () const;

        SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence&
        SimPerformanceCurve_Mathematical_ExponentialSkewNormal ();

        void
        SimPerformanceCurve_Mathematical_ExponentialSkewNormal (const SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence& s);

        // SimPerformanceCurve_Mathematical_FanPressureRise
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_FanPressureRise SimPerformanceCurve_Mathematical_FanPressureRise_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_FanPressureRise_type > SimPerformanceCurve_Mathematical_FanPressureRise_sequence;
        typedef SimPerformanceCurve_Mathematical_FanPressureRise_sequence::iterator SimPerformanceCurve_Mathematical_FanPressureRise_iterator;
        typedef SimPerformanceCurve_Mathematical_FanPressureRise_sequence::const_iterator SimPerformanceCurve_Mathematical_FanPressureRise_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_FanPressureRise_type, char > SimPerformanceCurve_Mathematical_FanPressureRise_traits;

        const SimPerformanceCurve_Mathematical_FanPressureRise_sequence&
        SimPerformanceCurve_Mathematical_FanPressureRise () const;

        SimPerformanceCurve_Mathematical_FanPressureRise_sequence&
        SimPerformanceCurve_Mathematical_FanPressureRise ();

        void
        SimPerformanceCurve_Mathematical_FanPressureRise (const SimPerformanceCurve_Mathematical_FanPressureRise_sequence& s);

        // SimPerformanceCurve_Mathematical_Linear
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Linear SimPerformanceCurve_Mathematical_Linear_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Linear_type > SimPerformanceCurve_Mathematical_Linear_sequence;
        typedef SimPerformanceCurve_Mathematical_Linear_sequence::iterator SimPerformanceCurve_Mathematical_Linear_iterator;
        typedef SimPerformanceCurve_Mathematical_Linear_sequence::const_iterator SimPerformanceCurve_Mathematical_Linear_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Linear_type, char > SimPerformanceCurve_Mathematical_Linear_traits;

        const SimPerformanceCurve_Mathematical_Linear_sequence&
        SimPerformanceCurve_Mathematical_Linear () const;

        SimPerformanceCurve_Mathematical_Linear_sequence&
        SimPerformanceCurve_Mathematical_Linear ();

        void
        SimPerformanceCurve_Mathematical_Linear (const SimPerformanceCurve_Mathematical_Linear_sequence& s);

        // SimPerformanceCurve_Mathematical_QuadLinear
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_QuadLinear SimPerformanceCurve_Mathematical_QuadLinear_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_QuadLinear_type > SimPerformanceCurve_Mathematical_QuadLinear_sequence;
        typedef SimPerformanceCurve_Mathematical_QuadLinear_sequence::iterator SimPerformanceCurve_Mathematical_QuadLinear_iterator;
        typedef SimPerformanceCurve_Mathematical_QuadLinear_sequence::const_iterator SimPerformanceCurve_Mathematical_QuadLinear_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_QuadLinear_type, char > SimPerformanceCurve_Mathematical_QuadLinear_traits;

        const SimPerformanceCurve_Mathematical_QuadLinear_sequence&
        SimPerformanceCurve_Mathematical_QuadLinear () const;

        SimPerformanceCurve_Mathematical_QuadLinear_sequence&
        SimPerformanceCurve_Mathematical_QuadLinear ();

        void
        SimPerformanceCurve_Mathematical_QuadLinear (const SimPerformanceCurve_Mathematical_QuadLinear_sequence& s);

        // SimPerformanceCurve_Mathematical_Quadratic
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Quadratic SimPerformanceCurve_Mathematical_Quadratic_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Quadratic_type > SimPerformanceCurve_Mathematical_Quadratic_sequence;
        typedef SimPerformanceCurve_Mathematical_Quadratic_sequence::iterator SimPerformanceCurve_Mathematical_Quadratic_iterator;
        typedef SimPerformanceCurve_Mathematical_Quadratic_sequence::const_iterator SimPerformanceCurve_Mathematical_Quadratic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Quadratic_type, char > SimPerformanceCurve_Mathematical_Quadratic_traits;

        const SimPerformanceCurve_Mathematical_Quadratic_sequence&
        SimPerformanceCurve_Mathematical_Quadratic () const;

        SimPerformanceCurve_Mathematical_Quadratic_sequence&
        SimPerformanceCurve_Mathematical_Quadratic ();

        void
        SimPerformanceCurve_Mathematical_Quadratic (const SimPerformanceCurve_Mathematical_Quadratic_sequence& s);

        // SimPerformanceCurve_Mathematical_QuadraticLinear
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_QuadraticLinear SimPerformanceCurve_Mathematical_QuadraticLinear_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_QuadraticLinear_type > SimPerformanceCurve_Mathematical_QuadraticLinear_sequence;
        typedef SimPerformanceCurve_Mathematical_QuadraticLinear_sequence::iterator SimPerformanceCurve_Mathematical_QuadraticLinear_iterator;
        typedef SimPerformanceCurve_Mathematical_QuadraticLinear_sequence::const_iterator SimPerformanceCurve_Mathematical_QuadraticLinear_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_QuadraticLinear_type, char > SimPerformanceCurve_Mathematical_QuadraticLinear_traits;

        const SimPerformanceCurve_Mathematical_QuadraticLinear_sequence&
        SimPerformanceCurve_Mathematical_QuadraticLinear () const;

        SimPerformanceCurve_Mathematical_QuadraticLinear_sequence&
        SimPerformanceCurve_Mathematical_QuadraticLinear ();

        void
        SimPerformanceCurve_Mathematical_QuadraticLinear (const SimPerformanceCurve_Mathematical_QuadraticLinear_sequence& s);

        // SimPerformanceCurve_Mathematical_Quartic
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Quartic SimPerformanceCurve_Mathematical_Quartic_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Quartic_type > SimPerformanceCurve_Mathematical_Quartic_sequence;
        typedef SimPerformanceCurve_Mathematical_Quartic_sequence::iterator SimPerformanceCurve_Mathematical_Quartic_iterator;
        typedef SimPerformanceCurve_Mathematical_Quartic_sequence::const_iterator SimPerformanceCurve_Mathematical_Quartic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Quartic_type, char > SimPerformanceCurve_Mathematical_Quartic_traits;

        const SimPerformanceCurve_Mathematical_Quartic_sequence&
        SimPerformanceCurve_Mathematical_Quartic () const;

        SimPerformanceCurve_Mathematical_Quartic_sequence&
        SimPerformanceCurve_Mathematical_Quartic ();

        void
        SimPerformanceCurve_Mathematical_Quartic (const SimPerformanceCurve_Mathematical_Quartic_sequence& s);

        // SimPerformanceCurve_Mathematical_RectangularHyperbola1
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_RectangularHyperbola1 SimPerformanceCurve_Mathematical_RectangularHyperbola1_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_RectangularHyperbola1_type > SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence;
        typedef SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence::iterator SimPerformanceCurve_Mathematical_RectangularHyperbola1_iterator;
        typedef SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence::const_iterator SimPerformanceCurve_Mathematical_RectangularHyperbola1_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_RectangularHyperbola1_type, char > SimPerformanceCurve_Mathematical_RectangularHyperbola1_traits;

        const SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence&
        SimPerformanceCurve_Mathematical_RectangularHyperbola1 () const;

        SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence&
        SimPerformanceCurve_Mathematical_RectangularHyperbola1 ();

        void
        SimPerformanceCurve_Mathematical_RectangularHyperbola1 (const SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence& s);

        // SimPerformanceCurve_Mathematical_RectangularHyperbola2
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_RectangularHyperbola2 SimPerformanceCurve_Mathematical_RectangularHyperbola2_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_RectangularHyperbola2_type > SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence;
        typedef SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence::iterator SimPerformanceCurve_Mathematical_RectangularHyperbola2_iterator;
        typedef SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence::const_iterator SimPerformanceCurve_Mathematical_RectangularHyperbola2_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_RectangularHyperbola2_type, char > SimPerformanceCurve_Mathematical_RectangularHyperbola2_traits;

        const SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence&
        SimPerformanceCurve_Mathematical_RectangularHyperbola2 () const;

        SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence&
        SimPerformanceCurve_Mathematical_RectangularHyperbola2 ();

        void
        SimPerformanceCurve_Mathematical_RectangularHyperbola2 (const SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence& s);

        // SimPerformanceCurve_Mathematical_Sigmoid
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_Sigmoid SimPerformanceCurve_Mathematical_Sigmoid_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_Sigmoid_type > SimPerformanceCurve_Mathematical_Sigmoid_sequence;
        typedef SimPerformanceCurve_Mathematical_Sigmoid_sequence::iterator SimPerformanceCurve_Mathematical_Sigmoid_iterator;
        typedef SimPerformanceCurve_Mathematical_Sigmoid_sequence::const_iterator SimPerformanceCurve_Mathematical_Sigmoid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_Sigmoid_type, char > SimPerformanceCurve_Mathematical_Sigmoid_traits;

        const SimPerformanceCurve_Mathematical_Sigmoid_sequence&
        SimPerformanceCurve_Mathematical_Sigmoid () const;

        SimPerformanceCurve_Mathematical_Sigmoid_sequence&
        SimPerformanceCurve_Mathematical_Sigmoid ();

        void
        SimPerformanceCurve_Mathematical_Sigmoid (const SimPerformanceCurve_Mathematical_Sigmoid_sequence& s);

        // SimPerformanceCurve_Mathematical_TriQuadratic
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Mathematical_TriQuadratic SimPerformanceCurve_Mathematical_TriQuadratic_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Mathematical_TriQuadratic_type > SimPerformanceCurve_Mathematical_TriQuadratic_sequence;
        typedef SimPerformanceCurve_Mathematical_TriQuadratic_sequence::iterator SimPerformanceCurve_Mathematical_TriQuadratic_iterator;
        typedef SimPerformanceCurve_Mathematical_TriQuadratic_sequence::const_iterator SimPerformanceCurve_Mathematical_TriQuadratic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Mathematical_TriQuadratic_type, char > SimPerformanceCurve_Mathematical_TriQuadratic_traits;

        const SimPerformanceCurve_Mathematical_TriQuadratic_sequence&
        SimPerformanceCurve_Mathematical_TriQuadratic () const;

        SimPerformanceCurve_Mathematical_TriQuadratic_sequence&
        SimPerformanceCurve_Mathematical_TriQuadratic ();

        void
        SimPerformanceCurve_Mathematical_TriQuadratic (const SimPerformanceCurve_Mathematical_TriQuadratic_sequence& s);

        // SimPerformanceCurve_Relational_PressureDrop
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceCurve_Relational_PressureDrop SimPerformanceCurve_Relational_PressureDrop_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceCurve_Relational_PressureDrop_type > SimPerformanceCurve_Relational_PressureDrop_sequence;
        typedef SimPerformanceCurve_Relational_PressureDrop_sequence::iterator SimPerformanceCurve_Relational_PressureDrop_iterator;
        typedef SimPerformanceCurve_Relational_PressureDrop_sequence::const_iterator SimPerformanceCurve_Relational_PressureDrop_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceCurve_Relational_PressureDrop_type, char > SimPerformanceCurve_Relational_PressureDrop_traits;

        const SimPerformanceCurve_Relational_PressureDrop_sequence&
        SimPerformanceCurve_Relational_PressureDrop () const;

        SimPerformanceCurve_Relational_PressureDrop_sequence&
        SimPerformanceCurve_Relational_PressureDrop ();

        void
        SimPerformanceCurve_Relational_PressureDrop (const SimPerformanceCurve_Relational_PressureDrop_sequence& s);

        // SimPerformanceTable_Variable_MultiLookup
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable_MultiLookup SimPerformanceTable_Variable_MultiLookup_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceTable_Variable_MultiLookup_type > SimPerformanceTable_Variable_MultiLookup_sequence;
        typedef SimPerformanceTable_Variable_MultiLookup_sequence::iterator SimPerformanceTable_Variable_MultiLookup_iterator;
        typedef SimPerformanceTable_Variable_MultiLookup_sequence::const_iterator SimPerformanceTable_Variable_MultiLookup_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceTable_Variable_MultiLookup_type, char > SimPerformanceTable_Variable_MultiLookup_traits;

        const SimPerformanceTable_Variable_MultiLookup_sequence&
        SimPerformanceTable_Variable_MultiLookup () const;

        SimPerformanceTable_Variable_MultiLookup_sequence&
        SimPerformanceTable_Variable_MultiLookup ();

        void
        SimPerformanceTable_Variable_MultiLookup (const SimPerformanceTable_Variable_MultiLookup_sequence& s);

        // SimPerformanceTable_Variable_OneIndependent
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable_OneIndependent SimPerformanceTable_Variable_OneIndependent_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceTable_Variable_OneIndependent_type > SimPerformanceTable_Variable_OneIndependent_sequence;
        typedef SimPerformanceTable_Variable_OneIndependent_sequence::iterator SimPerformanceTable_Variable_OneIndependent_iterator;
        typedef SimPerformanceTable_Variable_OneIndependent_sequence::const_iterator SimPerformanceTable_Variable_OneIndependent_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceTable_Variable_OneIndependent_type, char > SimPerformanceTable_Variable_OneIndependent_traits;

        const SimPerformanceTable_Variable_OneIndependent_sequence&
        SimPerformanceTable_Variable_OneIndependent () const;

        SimPerformanceTable_Variable_OneIndependent_sequence&
        SimPerformanceTable_Variable_OneIndependent ();

        void
        SimPerformanceTable_Variable_OneIndependent (const SimPerformanceTable_Variable_OneIndependent_sequence& s);

        // SimPerformanceTable_Variable_TwoIndependent
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPerformanceTable_Variable_TwoIndependent SimPerformanceTable_Variable_TwoIndependent_type;
        typedef ::xsd::cxx::tree::sequence< SimPerformanceTable_Variable_TwoIndependent_type > SimPerformanceTable_Variable_TwoIndependent_sequence;
        typedef SimPerformanceTable_Variable_TwoIndependent_sequence::iterator SimPerformanceTable_Variable_TwoIndependent_iterator;
        typedef SimPerformanceTable_Variable_TwoIndependent_sequence::const_iterator SimPerformanceTable_Variable_TwoIndependent_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerformanceTable_Variable_TwoIndependent_type, char > SimPerformanceTable_Variable_TwoIndependent_traits;

        const SimPerformanceTable_Variable_TwoIndependent_sequence&
        SimPerformanceTable_Variable_TwoIndependent () const;

        SimPerformanceTable_Variable_TwoIndependent_sequence&
        SimPerformanceTable_Variable_TwoIndependent ();

        void
        SimPerformanceTable_Variable_TwoIndependent (const SimPerformanceTable_Variable_TwoIndependent_sequence& s);

        // SimPerson_Person_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPerson_Person_Default SimPerson_Person_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPerson_Person_Default_type > SimPerson_Person_Default_sequence;
        typedef SimPerson_Person_Default_sequence::iterator SimPerson_Person_Default_iterator;
        typedef SimPerson_Person_Default_sequence::const_iterator SimPerson_Person_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPerson_Person_Default_type, char > SimPerson_Person_Default_traits;

        const SimPerson_Person_Default_sequence&
        SimPerson_Person_Default () const;

        SimPerson_Person_Default_sequence&
        SimPerson_Person_Default ();

        void
        SimPerson_Person_Default (const SimPerson_Person_Default_sequence& s);

        // SimPersonAndOrganization_PersonAndOrganization_Architect
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPersonAndOrganization_PersonAndOrganization_Architect SimPersonAndOrganization_PersonAndOrganization_Architect_type;
        typedef ::xsd::cxx::tree::sequence< SimPersonAndOrganization_PersonAndOrganization_Architect_type > SimPersonAndOrganization_PersonAndOrganization_Architect_sequence;
        typedef SimPersonAndOrganization_PersonAndOrganization_Architect_sequence::iterator SimPersonAndOrganization_PersonAndOrganization_Architect_iterator;
        typedef SimPersonAndOrganization_PersonAndOrganization_Architect_sequence::const_iterator SimPersonAndOrganization_PersonAndOrganization_Architect_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPersonAndOrganization_PersonAndOrganization_Architect_type, char > SimPersonAndOrganization_PersonAndOrganization_Architect_traits;

        const SimPersonAndOrganization_PersonAndOrganization_Architect_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Architect () const;

        SimPersonAndOrganization_PersonAndOrganization_Architect_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Architect ();

        void
        SimPersonAndOrganization_PersonAndOrganization_Architect (const SimPersonAndOrganization_PersonAndOrganization_Architect_sequence& s);

        // SimPersonAndOrganization_PersonAndOrganization_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPersonAndOrganization_PersonAndOrganization_Default SimPersonAndOrganization_PersonAndOrganization_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPersonAndOrganization_PersonAndOrganization_Default_type > SimPersonAndOrganization_PersonAndOrganization_Default_sequence;
        typedef SimPersonAndOrganization_PersonAndOrganization_Default_sequence::iterator SimPersonAndOrganization_PersonAndOrganization_Default_iterator;
        typedef SimPersonAndOrganization_PersonAndOrganization_Default_sequence::const_iterator SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPersonAndOrganization_PersonAndOrganization_Default_type, char > SimPersonAndOrganization_PersonAndOrganization_Default_traits;

        const SimPersonAndOrganization_PersonAndOrganization_Default_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Default () const;

        SimPersonAndOrganization_PersonAndOrganization_Default_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Default ();

        void
        SimPersonAndOrganization_PersonAndOrganization_Default (const SimPersonAndOrganization_PersonAndOrganization_Default_sequence& s);

        // SimPersonAndOrganization_PersonAndOrganization_Engineer
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPersonAndOrganization_PersonAndOrganization_Engineer SimPersonAndOrganization_PersonAndOrganization_Engineer_type;
        typedef ::xsd::cxx::tree::sequence< SimPersonAndOrganization_PersonAndOrganization_Engineer_type > SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence;
        typedef SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence::iterator SimPersonAndOrganization_PersonAndOrganization_Engineer_iterator;
        typedef SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence::const_iterator SimPersonAndOrganization_PersonAndOrganization_Engineer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPersonAndOrganization_PersonAndOrganization_Engineer_type, char > SimPersonAndOrganization_PersonAndOrganization_Engineer_traits;

        const SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Engineer () const;

        SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Engineer ();

        void
        SimPersonAndOrganization_PersonAndOrganization_Engineer (const SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence& s);

        // SimPersonAndOrganization_PersonAndOrganization_Owner
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPersonAndOrganization_PersonAndOrganization_Owner SimPersonAndOrganization_PersonAndOrganization_Owner_type;
        typedef ::xsd::cxx::tree::sequence< SimPersonAndOrganization_PersonAndOrganization_Owner_type > SimPersonAndOrganization_PersonAndOrganization_Owner_sequence;
        typedef SimPersonAndOrganization_PersonAndOrganization_Owner_sequence::iterator SimPersonAndOrganization_PersonAndOrganization_Owner_iterator;
        typedef SimPersonAndOrganization_PersonAndOrganization_Owner_sequence::const_iterator SimPersonAndOrganization_PersonAndOrganization_Owner_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPersonAndOrganization_PersonAndOrganization_Owner_type, char > SimPersonAndOrganization_PersonAndOrganization_Owner_traits;

        const SimPersonAndOrganization_PersonAndOrganization_Owner_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Owner () const;

        SimPersonAndOrganization_PersonAndOrganization_Owner_sequence&
        SimPersonAndOrganization_PersonAndOrganization_Owner ();

        void
        SimPersonAndOrganization_PersonAndOrganization_Owner (const SimPersonAndOrganization_PersonAndOrganization_Owner_sequence& s);

        // SimPlacement_Axis1Placement_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPlacement_Axis1Placement_Default SimPlacement_Axis1Placement_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPlacement_Axis1Placement_Default_type > SimPlacement_Axis1Placement_Default_sequence;
        typedef SimPlacement_Axis1Placement_Default_sequence::iterator SimPlacement_Axis1Placement_Default_iterator;
        typedef SimPlacement_Axis1Placement_Default_sequence::const_iterator SimPlacement_Axis1Placement_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPlacement_Axis1Placement_Default_type, char > SimPlacement_Axis1Placement_Default_traits;

        const SimPlacement_Axis1Placement_Default_sequence&
        SimPlacement_Axis1Placement_Default () const;

        SimPlacement_Axis1Placement_Default_sequence&
        SimPlacement_Axis1Placement_Default ();

        void
        SimPlacement_Axis1Placement_Default (const SimPlacement_Axis1Placement_Default_sequence& s);

        // SimPlacement_Axis2Placement2D_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPlacement_Axis2Placement2D_Default SimPlacement_Axis2Placement2D_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPlacement_Axis2Placement2D_Default_type > SimPlacement_Axis2Placement2D_Default_sequence;
        typedef SimPlacement_Axis2Placement2D_Default_sequence::iterator SimPlacement_Axis2Placement2D_Default_iterator;
        typedef SimPlacement_Axis2Placement2D_Default_sequence::const_iterator SimPlacement_Axis2Placement2D_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPlacement_Axis2Placement2D_Default_type, char > SimPlacement_Axis2Placement2D_Default_traits;

        const SimPlacement_Axis2Placement2D_Default_sequence&
        SimPlacement_Axis2Placement2D_Default () const;

        SimPlacement_Axis2Placement2D_Default_sequence&
        SimPlacement_Axis2Placement2D_Default ();

        void
        SimPlacement_Axis2Placement2D_Default (const SimPlacement_Axis2Placement2D_Default_sequence& s);

        // SimPlacement_Axis2Placement3D_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimPlacement_Axis2Placement3D_Default SimPlacement_Axis2Placement3D_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPlacement_Axis2Placement3D_Default_type > SimPlacement_Axis2Placement3D_Default_sequence;
        typedef SimPlacement_Axis2Placement3D_Default_sequence::iterator SimPlacement_Axis2Placement3D_Default_iterator;
        typedef SimPlacement_Axis2Placement3D_Default_sequence::const_iterator SimPlacement_Axis2Placement3D_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPlacement_Axis2Placement3D_Default_type, char > SimPlacement_Axis2Placement3D_Default_traits;

        const SimPlacement_Axis2Placement3D_Default_sequence&
        SimPlacement_Axis2Placement3D_Default () const;

        SimPlacement_Axis2Placement3D_Default_sequence&
        SimPlacement_Axis2Placement3D_Default ();

        void
        SimPlacement_Axis2Placement3D_Default (const SimPlacement_Axis2Placement3D_Default_sequence& s);

        // SimPort_AirFlowPort_Air_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_AirFlowPort_Air_In SimPort_AirFlowPort_Air_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_AirFlowPort_Air_In_type > SimPort_AirFlowPort_Air_In_sequence;
        typedef SimPort_AirFlowPort_Air_In_sequence::iterator SimPort_AirFlowPort_Air_In_iterator;
        typedef SimPort_AirFlowPort_Air_In_sequence::const_iterator SimPort_AirFlowPort_Air_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_AirFlowPort_Air_In_type, char > SimPort_AirFlowPort_Air_In_traits;

        const SimPort_AirFlowPort_Air_In_sequence&
        SimPort_AirFlowPort_Air_In () const;

        SimPort_AirFlowPort_Air_In_sequence&
        SimPort_AirFlowPort_Air_In ();

        void
        SimPort_AirFlowPort_Air_In (const SimPort_AirFlowPort_Air_In_sequence& s);

        // SimPort_AirFlowPort_Air_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_AirFlowPort_Air_InOrOut SimPort_AirFlowPort_Air_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_AirFlowPort_Air_InOrOut_type > SimPort_AirFlowPort_Air_InOrOut_sequence;
        typedef SimPort_AirFlowPort_Air_InOrOut_sequence::iterator SimPort_AirFlowPort_Air_InOrOut_iterator;
        typedef SimPort_AirFlowPort_Air_InOrOut_sequence::const_iterator SimPort_AirFlowPort_Air_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_AirFlowPort_Air_InOrOut_type, char > SimPort_AirFlowPort_Air_InOrOut_traits;

        const SimPort_AirFlowPort_Air_InOrOut_sequence&
        SimPort_AirFlowPort_Air_InOrOut () const;

        SimPort_AirFlowPort_Air_InOrOut_sequence&
        SimPort_AirFlowPort_Air_InOrOut ();

        void
        SimPort_AirFlowPort_Air_InOrOut (const SimPort_AirFlowPort_Air_InOrOut_sequence& s);

        // SimPort_AirFlowPort_Air_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_AirFlowPort_Air_Out SimPort_AirFlowPort_Air_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_AirFlowPort_Air_Out_type > SimPort_AirFlowPort_Air_Out_sequence;
        typedef SimPort_AirFlowPort_Air_Out_sequence::iterator SimPort_AirFlowPort_Air_Out_iterator;
        typedef SimPort_AirFlowPort_Air_Out_sequence::const_iterator SimPort_AirFlowPort_Air_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_AirFlowPort_Air_Out_type, char > SimPort_AirFlowPort_Air_Out_traits;

        const SimPort_AirFlowPort_Air_Out_sequence&
        SimPort_AirFlowPort_Air_Out () const;

        SimPort_AirFlowPort_Air_Out_sequence&
        SimPort_AirFlowPort_Air_Out ();

        void
        SimPort_AirFlowPort_Air_Out (const SimPort_AirFlowPort_Air_Out_sequence& s);

        // SimPort_AirFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_AirFlowPort_Default SimPort_AirFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_AirFlowPort_Default_type > SimPort_AirFlowPort_Default_sequence;
        typedef SimPort_AirFlowPort_Default_sequence::iterator SimPort_AirFlowPort_Default_iterator;
        typedef SimPort_AirFlowPort_Default_sequence::const_iterator SimPort_AirFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_AirFlowPort_Default_type, char > SimPort_AirFlowPort_Default_traits;

        const SimPort_AirFlowPort_Default_sequence&
        SimPort_AirFlowPort_Default () const;

        SimPort_AirFlowPort_Default_sequence&
        SimPort_AirFlowPort_Default ();

        void
        SimPort_AirFlowPort_Default (const SimPort_AirFlowPort_Default_sequence& s);

        // SimPort_AirFlowPort_ExhaustAir_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_AirFlowPort_ExhaustAir_Out SimPort_AirFlowPort_ExhaustAir_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_AirFlowPort_ExhaustAir_Out_type > SimPort_AirFlowPort_ExhaustAir_Out_sequence;
        typedef SimPort_AirFlowPort_ExhaustAir_Out_sequence::iterator SimPort_AirFlowPort_ExhaustAir_Out_iterator;
        typedef SimPort_AirFlowPort_ExhaustAir_Out_sequence::const_iterator SimPort_AirFlowPort_ExhaustAir_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_AirFlowPort_ExhaustAir_Out_type, char > SimPort_AirFlowPort_ExhaustAir_Out_traits;

        const SimPort_AirFlowPort_ExhaustAir_Out_sequence&
        SimPort_AirFlowPort_ExhaustAir_Out () const;

        SimPort_AirFlowPort_ExhaustAir_Out_sequence&
        SimPort_AirFlowPort_ExhaustAir_Out ();

        void
        SimPort_AirFlowPort_ExhaustAir_Out (const SimPort_AirFlowPort_ExhaustAir_Out_sequence& s);

        // SimPort_AirFlowPort_OutdoorAir_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_AirFlowPort_OutdoorAir_In SimPort_AirFlowPort_OutdoorAir_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_AirFlowPort_OutdoorAir_In_type > SimPort_AirFlowPort_OutdoorAir_In_sequence;
        typedef SimPort_AirFlowPort_OutdoorAir_In_sequence::iterator SimPort_AirFlowPort_OutdoorAir_In_iterator;
        typedef SimPort_AirFlowPort_OutdoorAir_In_sequence::const_iterator SimPort_AirFlowPort_OutdoorAir_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_AirFlowPort_OutdoorAir_In_type, char > SimPort_AirFlowPort_OutdoorAir_In_traits;

        const SimPort_AirFlowPort_OutdoorAir_In_sequence&
        SimPort_AirFlowPort_OutdoorAir_In () const;

        SimPort_AirFlowPort_OutdoorAir_In_sequence&
        SimPort_AirFlowPort_OutdoorAir_In ();

        void
        SimPort_AirFlowPort_OutdoorAir_In (const SimPort_AirFlowPort_OutdoorAir_In_sequence& s);

        // SimPort_ChilledWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ChilledWaterFlowPort_CondensedWaterOut SimPort_ChilledWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ChilledWaterFlowPort_CondensedWaterOut_type > SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence::iterator SimPort_ChilledWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimPort_ChilledWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ChilledWaterFlowPort_CondensedWaterOut_type, char > SimPort_ChilledWaterFlowPort_CondensedWaterOut_traits;

        const SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence&
        SimPort_ChilledWaterFlowPort_CondensedWaterOut () const;

        SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence&
        SimPort_ChilledWaterFlowPort_CondensedWaterOut ();

        void
        SimPort_ChilledWaterFlowPort_CondensedWaterOut (const SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimPort_ChilledWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ChilledWaterFlowPort_Default SimPort_ChilledWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ChilledWaterFlowPort_Default_type > SimPort_ChilledWaterFlowPort_Default_sequence;
        typedef SimPort_ChilledWaterFlowPort_Default_sequence::iterator SimPort_ChilledWaterFlowPort_Default_iterator;
        typedef SimPort_ChilledWaterFlowPort_Default_sequence::const_iterator SimPort_ChilledWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ChilledWaterFlowPort_Default_type, char > SimPort_ChilledWaterFlowPort_Default_traits;

        const SimPort_ChilledWaterFlowPort_Default_sequence&
        SimPort_ChilledWaterFlowPort_Default () const;

        SimPort_ChilledWaterFlowPort_Default_sequence&
        SimPort_ChilledWaterFlowPort_Default ();

        void
        SimPort_ChilledWaterFlowPort_Default (const SimPort_ChilledWaterFlowPort_Default_sequence& s);

        // SimPort_ChilledWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ChilledWaterFlowPort_EvaporativeWaterIn SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_type > SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_type, char > SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_traits;

        const SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence&
        SimPort_ChilledWaterFlowPort_EvaporativeWaterIn () const;

        SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence&
        SimPort_ChilledWaterFlowPort_EvaporativeWaterIn ();

        void
        SimPort_ChilledWaterFlowPort_EvaporativeWaterIn (const SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimPort_ChilledWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ChilledWaterFlowPort_Water_In SimPort_ChilledWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ChilledWaterFlowPort_Water_In_type > SimPort_ChilledWaterFlowPort_Water_In_sequence;
        typedef SimPort_ChilledWaterFlowPort_Water_In_sequence::iterator SimPort_ChilledWaterFlowPort_Water_In_iterator;
        typedef SimPort_ChilledWaterFlowPort_Water_In_sequence::const_iterator SimPort_ChilledWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ChilledWaterFlowPort_Water_In_type, char > SimPort_ChilledWaterFlowPort_Water_In_traits;

        const SimPort_ChilledWaterFlowPort_Water_In_sequence&
        SimPort_ChilledWaterFlowPort_Water_In () const;

        SimPort_ChilledWaterFlowPort_Water_In_sequence&
        SimPort_ChilledWaterFlowPort_Water_In ();

        void
        SimPort_ChilledWaterFlowPort_Water_In (const SimPort_ChilledWaterFlowPort_Water_In_sequence& s);

        // SimPort_ChilledWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ChilledWaterFlowPort_Water_InOrOut SimPort_ChilledWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ChilledWaterFlowPort_Water_InOrOut_type > SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence;
        typedef SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence::iterator SimPort_ChilledWaterFlowPort_Water_InOrOut_iterator;
        typedef SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence::const_iterator SimPort_ChilledWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ChilledWaterFlowPort_Water_InOrOut_type, char > SimPort_ChilledWaterFlowPort_Water_InOrOut_traits;

        const SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence&
        SimPort_ChilledWaterFlowPort_Water_InOrOut () const;

        SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence&
        SimPort_ChilledWaterFlowPort_Water_InOrOut ();

        void
        SimPort_ChilledWaterFlowPort_Water_InOrOut (const SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence& s);

        // SimPort_ChilledWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ChilledWaterFlowPort_Water_Out SimPort_ChilledWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ChilledWaterFlowPort_Water_Out_type > SimPort_ChilledWaterFlowPort_Water_Out_sequence;
        typedef SimPort_ChilledWaterFlowPort_Water_Out_sequence::iterator SimPort_ChilledWaterFlowPort_Water_Out_iterator;
        typedef SimPort_ChilledWaterFlowPort_Water_Out_sequence::const_iterator SimPort_ChilledWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ChilledWaterFlowPort_Water_Out_type, char > SimPort_ChilledWaterFlowPort_Water_Out_traits;

        const SimPort_ChilledWaterFlowPort_Water_Out_sequence&
        SimPort_ChilledWaterFlowPort_Water_Out () const;

        SimPort_ChilledWaterFlowPort_Water_Out_sequence&
        SimPort_ChilledWaterFlowPort_Water_Out ();

        void
        SimPort_ChilledWaterFlowPort_Water_Out (const SimPort_ChilledWaterFlowPort_Water_Out_sequence& s);

        // SimPort_CondenserFlowPort_CondenserFlow_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_CondenserFlowPort_CondenserFlow_In SimPort_CondenserFlowPort_CondenserFlow_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_CondenserFlowPort_CondenserFlow_In_type > SimPort_CondenserFlowPort_CondenserFlow_In_sequence;
        typedef SimPort_CondenserFlowPort_CondenserFlow_In_sequence::iterator SimPort_CondenserFlowPort_CondenserFlow_In_iterator;
        typedef SimPort_CondenserFlowPort_CondenserFlow_In_sequence::const_iterator SimPort_CondenserFlowPort_CondenserFlow_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_CondenserFlowPort_CondenserFlow_In_type, char > SimPort_CondenserFlowPort_CondenserFlow_In_traits;

        const SimPort_CondenserFlowPort_CondenserFlow_In_sequence&
        SimPort_CondenserFlowPort_CondenserFlow_In () const;

        SimPort_CondenserFlowPort_CondenserFlow_In_sequence&
        SimPort_CondenserFlowPort_CondenserFlow_In ();

        void
        SimPort_CondenserFlowPort_CondenserFlow_In (const SimPort_CondenserFlowPort_CondenserFlow_In_sequence& s);

        // SimPort_CondenserFlowPort_CondenserFlow_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_CondenserFlowPort_CondenserFlow_InOrOut SimPort_CondenserFlowPort_CondenserFlow_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_CondenserFlowPort_CondenserFlow_InOrOut_type > SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence;
        typedef SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence::iterator SimPort_CondenserFlowPort_CondenserFlow_InOrOut_iterator;
        typedef SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence::const_iterator SimPort_CondenserFlowPort_CondenserFlow_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_CondenserFlowPort_CondenserFlow_InOrOut_type, char > SimPort_CondenserFlowPort_CondenserFlow_InOrOut_traits;

        const SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence&
        SimPort_CondenserFlowPort_CondenserFlow_InOrOut () const;

        SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence&
        SimPort_CondenserFlowPort_CondenserFlow_InOrOut ();

        void
        SimPort_CondenserFlowPort_CondenserFlow_InOrOut (const SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence& s);

        // SimPort_CondenserFlowPort_CondenserFlow_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_CondenserFlowPort_CondenserFlow_Out SimPort_CondenserFlowPort_CondenserFlow_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_CondenserFlowPort_CondenserFlow_Out_type > SimPort_CondenserFlowPort_CondenserFlow_Out_sequence;
        typedef SimPort_CondenserFlowPort_CondenserFlow_Out_sequence::iterator SimPort_CondenserFlowPort_CondenserFlow_Out_iterator;
        typedef SimPort_CondenserFlowPort_CondenserFlow_Out_sequence::const_iterator SimPort_CondenserFlowPort_CondenserFlow_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_CondenserFlowPort_CondenserFlow_Out_type, char > SimPort_CondenserFlowPort_CondenserFlow_Out_traits;

        const SimPort_CondenserFlowPort_CondenserFlow_Out_sequence&
        SimPort_CondenserFlowPort_CondenserFlow_Out () const;

        SimPort_CondenserFlowPort_CondenserFlow_Out_sequence&
        SimPort_CondenserFlowPort_CondenserFlow_Out ();

        void
        SimPort_CondenserFlowPort_CondenserFlow_Out (const SimPort_CondenserFlowPort_CondenserFlow_Out_sequence& s);

        // SimPort_CondenserFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_CondenserFlowPort_Default SimPort_CondenserFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_CondenserFlowPort_Default_type > SimPort_CondenserFlowPort_Default_sequence;
        typedef SimPort_CondenserFlowPort_Default_sequence::iterator SimPort_CondenserFlowPort_Default_iterator;
        typedef SimPort_CondenserFlowPort_Default_sequence::const_iterator SimPort_CondenserFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_CondenserFlowPort_Default_type, char > SimPort_CondenserFlowPort_Default_traits;

        const SimPort_CondenserFlowPort_Default_sequence&
        SimPort_CondenserFlowPort_Default () const;

        SimPort_CondenserFlowPort_Default_sequence&
        SimPort_CondenserFlowPort_Default ();

        void
        SimPort_CondenserFlowPort_Default (const SimPort_CondenserFlowPort_Default_sequence& s);

        // SimPort_DigitalControl_AirLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_AirLoop_Default SimPort_DigitalControl_AirLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_AirLoop_Default_type > SimPort_DigitalControl_AirLoop_Default_sequence;
        typedef SimPort_DigitalControl_AirLoop_Default_sequence::iterator SimPort_DigitalControl_AirLoop_Default_iterator;
        typedef SimPort_DigitalControl_AirLoop_Default_sequence::const_iterator SimPort_DigitalControl_AirLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_AirLoop_Default_type, char > SimPort_DigitalControl_AirLoop_Default_traits;

        const SimPort_DigitalControl_AirLoop_Default_sequence&
        SimPort_DigitalControl_AirLoop_Default () const;

        SimPort_DigitalControl_AirLoop_Default_sequence&
        SimPort_DigitalControl_AirLoop_Default ();

        void
        SimPort_DigitalControl_AirLoop_Default (const SimPort_DigitalControl_AirLoop_Default_sequence& s);

        // SimPort_DigitalControl_AirLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_AirLoop_DigitalSignal_In SimPort_DigitalControl_AirLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_AirLoop_DigitalSignal_In_type > SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_AirLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_AirLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_AirLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_AirLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_AirLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_AirLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_AirLoop_DigitalSignal_In (const SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_AirLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_AirLoop_DigitalSignal_Out SimPort_DigitalControl_AirLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_AirLoop_DigitalSignal_Out_type > SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_AirLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_AirLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_AirLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_AirLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_AirLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_AirLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_AirLoop_DigitalSignal_Out (const SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControl_CHWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CHWLoop_Default SimPort_DigitalControl_CHWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CHWLoop_Default_type > SimPort_DigitalControl_CHWLoop_Default_sequence;
        typedef SimPort_DigitalControl_CHWLoop_Default_sequence::iterator SimPort_DigitalControl_CHWLoop_Default_iterator;
        typedef SimPort_DigitalControl_CHWLoop_Default_sequence::const_iterator SimPort_DigitalControl_CHWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CHWLoop_Default_type, char > SimPort_DigitalControl_CHWLoop_Default_traits;

        const SimPort_DigitalControl_CHWLoop_Default_sequence&
        SimPort_DigitalControl_CHWLoop_Default () const;

        SimPort_DigitalControl_CHWLoop_Default_sequence&
        SimPort_DigitalControl_CHWLoop_Default ();

        void
        SimPort_DigitalControl_CHWLoop_Default (const SimPort_DigitalControl_CHWLoop_Default_sequence& s);

        // SimPort_DigitalControl_CHWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CHWLoop_DigitalSignal_In SimPort_DigitalControl_CHWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CHWLoop_DigitalSignal_In_type > SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_CHWLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_CHWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CHWLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_CHWLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_CHWLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_CHWLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_CHWLoop_DigitalSignal_In (const SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_CHWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CHWLoop_DigitalSignal_Out SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_type > SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_CHWLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_CHWLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_CHWLoop_DigitalSignal_Out (const SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControl_CWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CWLoop_Default SimPort_DigitalControl_CWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CWLoop_Default_type > SimPort_DigitalControl_CWLoop_Default_sequence;
        typedef SimPort_DigitalControl_CWLoop_Default_sequence::iterator SimPort_DigitalControl_CWLoop_Default_iterator;
        typedef SimPort_DigitalControl_CWLoop_Default_sequence::const_iterator SimPort_DigitalControl_CWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CWLoop_Default_type, char > SimPort_DigitalControl_CWLoop_Default_traits;

        const SimPort_DigitalControl_CWLoop_Default_sequence&
        SimPort_DigitalControl_CWLoop_Default () const;

        SimPort_DigitalControl_CWLoop_Default_sequence&
        SimPort_DigitalControl_CWLoop_Default ();

        void
        SimPort_DigitalControl_CWLoop_Default (const SimPort_DigitalControl_CWLoop_Default_sequence& s);

        // SimPort_DigitalControl_CWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CWLoop_DigitalSignal_In SimPort_DigitalControl_CWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CWLoop_DigitalSignal_In_type > SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_CWLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_CWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CWLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_CWLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_CWLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_CWLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_CWLoop_DigitalSignal_In (const SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_CWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_CWLoop_DigitalSignal_Out SimPort_DigitalControl_CWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_CWLoop_DigitalSignal_Out_type > SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_CWLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_CWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_CWLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_CWLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_CWLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_CWLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_CWLoop_DigitalSignal_Out (const SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControl_HWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_HWLoop_Default SimPort_DigitalControl_HWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_HWLoop_Default_type > SimPort_DigitalControl_HWLoop_Default_sequence;
        typedef SimPort_DigitalControl_HWLoop_Default_sequence::iterator SimPort_DigitalControl_HWLoop_Default_iterator;
        typedef SimPort_DigitalControl_HWLoop_Default_sequence::const_iterator SimPort_DigitalControl_HWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_HWLoop_Default_type, char > SimPort_DigitalControl_HWLoop_Default_traits;

        const SimPort_DigitalControl_HWLoop_Default_sequence&
        SimPort_DigitalControl_HWLoop_Default () const;

        SimPort_DigitalControl_HWLoop_Default_sequence&
        SimPort_DigitalControl_HWLoop_Default ();

        void
        SimPort_DigitalControl_HWLoop_Default (const SimPort_DigitalControl_HWLoop_Default_sequence& s);

        // SimPort_DigitalControl_HWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_HWLoop_DigitalSignal_In SimPort_DigitalControl_HWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_HWLoop_DigitalSignal_In_type > SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_HWLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_HWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_HWLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_HWLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_HWLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_HWLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_HWLoop_DigitalSignal_In (const SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_HWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_HWLoop_DigitalSignal_Out SimPort_DigitalControl_HWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_HWLoop_DigitalSignal_Out_type > SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_HWLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_HWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_HWLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_HWLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_HWLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_HWLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_HWLoop_DigitalSignal_Out (const SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControl_MxWLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_MxWLoop_Default SimPort_DigitalControl_MxWLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_MxWLoop_Default_type > SimPort_DigitalControl_MxWLoop_Default_sequence;
        typedef SimPort_DigitalControl_MxWLoop_Default_sequence::iterator SimPort_DigitalControl_MxWLoop_Default_iterator;
        typedef SimPort_DigitalControl_MxWLoop_Default_sequence::const_iterator SimPort_DigitalControl_MxWLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_MxWLoop_Default_type, char > SimPort_DigitalControl_MxWLoop_Default_traits;

        const SimPort_DigitalControl_MxWLoop_Default_sequence&
        SimPort_DigitalControl_MxWLoop_Default () const;

        SimPort_DigitalControl_MxWLoop_Default_sequence&
        SimPort_DigitalControl_MxWLoop_Default ();

        void
        SimPort_DigitalControl_MxWLoop_Default (const SimPort_DigitalControl_MxWLoop_Default_sequence& s);

        // SimPort_DigitalControl_MxWLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_MxWLoop_DigitalSignal_In SimPort_DigitalControl_MxWLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_MxWLoop_DigitalSignal_In_type > SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_MxWLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_MxWLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_MxWLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_MxWLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_MxWLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_MxWLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_MxWLoop_DigitalSignal_In (const SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_MxWLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_MxWLoop_DigitalSignal_Out SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_type > SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_MxWLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_MxWLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_MxWLoop_DigitalSignal_Out (const SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControl_RFGLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_RFGLoop_Default SimPort_DigitalControl_RFGLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_RFGLoop_Default_type > SimPort_DigitalControl_RFGLoop_Default_sequence;
        typedef SimPort_DigitalControl_RFGLoop_Default_sequence::iterator SimPort_DigitalControl_RFGLoop_Default_iterator;
        typedef SimPort_DigitalControl_RFGLoop_Default_sequence::const_iterator SimPort_DigitalControl_RFGLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_RFGLoop_Default_type, char > SimPort_DigitalControl_RFGLoop_Default_traits;

        const SimPort_DigitalControl_RFGLoop_Default_sequence&
        SimPort_DigitalControl_RFGLoop_Default () const;

        SimPort_DigitalControl_RFGLoop_Default_sequence&
        SimPort_DigitalControl_RFGLoop_Default ();

        void
        SimPort_DigitalControl_RFGLoop_Default (const SimPort_DigitalControl_RFGLoop_Default_sequence& s);

        // SimPort_DigitalControl_RFGLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_RFGLoop_DigitalSignal_In SimPort_DigitalControl_RFGLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_RFGLoop_DigitalSignal_In_type > SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_RFGLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_RFGLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_RFGLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_RFGLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_RFGLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_RFGLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_RFGLoop_DigitalSignal_In (const SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_RFGLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_RFGLoop_DigitalSignal_Out SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_type > SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_RFGLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_RFGLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_RFGLoop_DigitalSignal_Out (const SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControl_STMLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_STMLoop_Default SimPort_DigitalControl_STMLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_STMLoop_Default_type > SimPort_DigitalControl_STMLoop_Default_sequence;
        typedef SimPort_DigitalControl_STMLoop_Default_sequence::iterator SimPort_DigitalControl_STMLoop_Default_iterator;
        typedef SimPort_DigitalControl_STMLoop_Default_sequence::const_iterator SimPort_DigitalControl_STMLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_STMLoop_Default_type, char > SimPort_DigitalControl_STMLoop_Default_traits;

        const SimPort_DigitalControl_STMLoop_Default_sequence&
        SimPort_DigitalControl_STMLoop_Default () const;

        SimPort_DigitalControl_STMLoop_Default_sequence&
        SimPort_DigitalControl_STMLoop_Default ();

        void
        SimPort_DigitalControl_STMLoop_Default (const SimPort_DigitalControl_STMLoop_Default_sequence& s);

        // SimPort_DigitalControl_STMLoop_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_STMLoop_DigitalSignal_In SimPort_DigitalControl_STMLoop_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_STMLoop_DigitalSignal_In_type > SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence::iterator SimPort_DigitalControl_STMLoop_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControl_STMLoop_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_STMLoop_DigitalSignal_In_type, char > SimPort_DigitalControl_STMLoop_DigitalSignal_In_traits;

        const SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_STMLoop_DigitalSignal_In () const;

        SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence&
        SimPort_DigitalControl_STMLoop_DigitalSignal_In ();

        void
        SimPort_DigitalControl_STMLoop_DigitalSignal_In (const SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_type > SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_type, char > SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut () const;

        SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut (const SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControl_STMLoop_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControl_STMLoop_DigitalSignal_Out SimPort_DigitalControl_STMLoop_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControl_STMLoop_DigitalSignal_Out_type > SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence::iterator SimPort_DigitalControl_STMLoop_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControl_STMLoop_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControl_STMLoop_DigitalSignal_Out_type, char > SimPort_DigitalControl_STMLoop_DigitalSignal_Out_traits;

        const SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_STMLoop_DigitalSignal_Out () const;

        SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence&
        SimPort_DigitalControl_STMLoop_DigitalSignal_Out ();

        void
        SimPort_DigitalControl_STMLoop_DigitalSignal_Out (const SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControlPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControlPort_Default SimPort_DigitalControlPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControlPort_Default_type > SimPort_DigitalControlPort_Default_sequence;
        typedef SimPort_DigitalControlPort_Default_sequence::iterator SimPort_DigitalControlPort_Default_iterator;
        typedef SimPort_DigitalControlPort_Default_sequence::const_iterator SimPort_DigitalControlPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControlPort_Default_type, char > SimPort_DigitalControlPort_Default_traits;

        const SimPort_DigitalControlPort_Default_sequence&
        SimPort_DigitalControlPort_Default () const;

        SimPort_DigitalControlPort_Default_sequence&
        SimPort_DigitalControlPort_Default ();

        void
        SimPort_DigitalControlPort_Default (const SimPort_DigitalControlPort_Default_sequence& s);

        // SimPort_DigitalControlPort_DigitalSignal_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControlPort_DigitalSignal_In SimPort_DigitalControlPort_DigitalSignal_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControlPort_DigitalSignal_In_type > SimPort_DigitalControlPort_DigitalSignal_In_sequence;
        typedef SimPort_DigitalControlPort_DigitalSignal_In_sequence::iterator SimPort_DigitalControlPort_DigitalSignal_In_iterator;
        typedef SimPort_DigitalControlPort_DigitalSignal_In_sequence::const_iterator SimPort_DigitalControlPort_DigitalSignal_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControlPort_DigitalSignal_In_type, char > SimPort_DigitalControlPort_DigitalSignal_In_traits;

        const SimPort_DigitalControlPort_DigitalSignal_In_sequence&
        SimPort_DigitalControlPort_DigitalSignal_In () const;

        SimPort_DigitalControlPort_DigitalSignal_In_sequence&
        SimPort_DigitalControlPort_DigitalSignal_In ();

        void
        SimPort_DigitalControlPort_DigitalSignal_In (const SimPort_DigitalControlPort_DigitalSignal_In_sequence& s);

        // SimPort_DigitalControlPort_DigitalSignal_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControlPort_DigitalSignal_InOrOut SimPort_DigitalControlPort_DigitalSignal_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControlPort_DigitalSignal_InOrOut_type > SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence;
        typedef SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence::iterator SimPort_DigitalControlPort_DigitalSignal_InOrOut_iterator;
        typedef SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence::const_iterator SimPort_DigitalControlPort_DigitalSignal_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControlPort_DigitalSignal_InOrOut_type, char > SimPort_DigitalControlPort_DigitalSignal_InOrOut_traits;

        const SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControlPort_DigitalSignal_InOrOut () const;

        SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence&
        SimPort_DigitalControlPort_DigitalSignal_InOrOut ();

        void
        SimPort_DigitalControlPort_DigitalSignal_InOrOut (const SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence& s);

        // SimPort_DigitalControlPort_DigitalSignal_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControlPort_DigitalSignal_Out SimPort_DigitalControlPort_DigitalSignal_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControlPort_DigitalSignal_Out_type > SimPort_DigitalControlPort_DigitalSignal_Out_sequence;
        typedef SimPort_DigitalControlPort_DigitalSignal_Out_sequence::iterator SimPort_DigitalControlPort_DigitalSignal_Out_iterator;
        typedef SimPort_DigitalControlPort_DigitalSignal_Out_sequence::const_iterator SimPort_DigitalControlPort_DigitalSignal_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControlPort_DigitalSignal_Out_type, char > SimPort_DigitalControlPort_DigitalSignal_Out_traits;

        const SimPort_DigitalControlPort_DigitalSignal_Out_sequence&
        SimPort_DigitalControlPort_DigitalSignal_Out () const;

        SimPort_DigitalControlPort_DigitalSignal_Out_sequence&
        SimPort_DigitalControlPort_DigitalSignal_Out ();

        void
        SimPort_DigitalControlPort_DigitalSignal_Out (const SimPort_DigitalControlPort_DigitalSignal_Out_sequence& s);

        // SimPort_DigitalControlPort_DigitalVirtual
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DigitalControlPort_DigitalVirtual SimPort_DigitalControlPort_DigitalVirtual_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DigitalControlPort_DigitalVirtual_type > SimPort_DigitalControlPort_DigitalVirtual_sequence;
        typedef SimPort_DigitalControlPort_DigitalVirtual_sequence::iterator SimPort_DigitalControlPort_DigitalVirtual_iterator;
        typedef SimPort_DigitalControlPort_DigitalVirtual_sequence::const_iterator SimPort_DigitalControlPort_DigitalVirtual_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DigitalControlPort_DigitalVirtual_type, char > SimPort_DigitalControlPort_DigitalVirtual_traits;

        const SimPort_DigitalControlPort_DigitalVirtual_sequence&
        SimPort_DigitalControlPort_DigitalVirtual () const;

        SimPort_DigitalControlPort_DigitalVirtual_sequence&
        SimPort_DigitalControlPort_DigitalVirtual ();

        void
        SimPort_DigitalControlPort_DigitalVirtual (const SimPort_DigitalControlPort_DigitalVirtual_sequence& s);

        // SimPort_DistributionPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_DistributionPort_Default SimPort_DistributionPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_DistributionPort_Default_type > SimPort_DistributionPort_Default_sequence;
        typedef SimPort_DistributionPort_Default_sequence::iterator SimPort_DistributionPort_Default_iterator;
        typedef SimPort_DistributionPort_Default_sequence::const_iterator SimPort_DistributionPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_DistributionPort_Default_type, char > SimPort_DistributionPort_Default_traits;

        const SimPort_DistributionPort_Default_sequence&
        SimPort_DistributionPort_Default () const;

        SimPort_DistributionPort_Default_sequence&
        SimPort_DistributionPort_Default ();

        void
        SimPort_DistributionPort_Default (const SimPort_DistributionPort_Default_sequence& s);

        // SimPort_Docking_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_Docking_Default SimPort_Docking_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_Docking_Default_type > SimPort_Docking_Default_sequence;
        typedef SimPort_Docking_Default_sequence::iterator SimPort_Docking_Default_iterator;
        typedef SimPort_Docking_Default_sequence::const_iterator SimPort_Docking_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_Docking_Default_type, char > SimPort_Docking_Default_traits;

        const SimPort_Docking_Default_sequence&
        SimPort_Docking_Default () const;

        SimPort_Docking_Default_sequence&
        SimPort_Docking_Default ();

        void
        SimPort_Docking_Default (const SimPort_Docking_Default_sequence& s);

        // SimPort_Docking_Thermalzone
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_Docking_Thermalzone SimPort_Docking_Thermalzone_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_Docking_Thermalzone_type > SimPort_Docking_Thermalzone_sequence;
        typedef SimPort_Docking_Thermalzone_sequence::iterator SimPort_Docking_Thermalzone_iterator;
        typedef SimPort_Docking_Thermalzone_sequence::const_iterator SimPort_Docking_Thermalzone_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_Docking_Thermalzone_type, char > SimPort_Docking_Thermalzone_traits;

        const SimPort_Docking_Thermalzone_sequence&
        SimPort_Docking_Thermalzone () const;

        SimPort_Docking_Thermalzone_sequence&
        SimPort_Docking_Thermalzone ();

        void
        SimPort_Docking_Thermalzone (const SimPort_Docking_Thermalzone_sequence& s);

        // SimPort_ElectricalFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ElectricalFlowPort_Default SimPort_ElectricalFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ElectricalFlowPort_Default_type > SimPort_ElectricalFlowPort_Default_sequence;
        typedef SimPort_ElectricalFlowPort_Default_sequence::iterator SimPort_ElectricalFlowPort_Default_iterator;
        typedef SimPort_ElectricalFlowPort_Default_sequence::const_iterator SimPort_ElectricalFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ElectricalFlowPort_Default_type, char > SimPort_ElectricalFlowPort_Default_traits;

        const SimPort_ElectricalFlowPort_Default_sequence&
        SimPort_ElectricalFlowPort_Default () const;

        SimPort_ElectricalFlowPort_Default_sequence&
        SimPort_ElectricalFlowPort_Default ();

        void
        SimPort_ElectricalFlowPort_Default (const SimPort_ElectricalFlowPort_Default_sequence& s);

        // SimPort_ElectricalFlowPort_Electrical_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ElectricalFlowPort_Electrical_In SimPort_ElectricalFlowPort_Electrical_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ElectricalFlowPort_Electrical_In_type > SimPort_ElectricalFlowPort_Electrical_In_sequence;
        typedef SimPort_ElectricalFlowPort_Electrical_In_sequence::iterator SimPort_ElectricalFlowPort_Electrical_In_iterator;
        typedef SimPort_ElectricalFlowPort_Electrical_In_sequence::const_iterator SimPort_ElectricalFlowPort_Electrical_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ElectricalFlowPort_Electrical_In_type, char > SimPort_ElectricalFlowPort_Electrical_In_traits;

        const SimPort_ElectricalFlowPort_Electrical_In_sequence&
        SimPort_ElectricalFlowPort_Electrical_In () const;

        SimPort_ElectricalFlowPort_Electrical_In_sequence&
        SimPort_ElectricalFlowPort_Electrical_In ();

        void
        SimPort_ElectricalFlowPort_Electrical_In (const SimPort_ElectricalFlowPort_Electrical_In_sequence& s);

        // SimPort_ElectricalFlowPort_Electrical_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ElectricalFlowPort_Electrical_InOrOut SimPort_ElectricalFlowPort_Electrical_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ElectricalFlowPort_Electrical_InOrOut_type > SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence;
        typedef SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence::iterator SimPort_ElectricalFlowPort_Electrical_InOrOut_iterator;
        typedef SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence::const_iterator SimPort_ElectricalFlowPort_Electrical_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ElectricalFlowPort_Electrical_InOrOut_type, char > SimPort_ElectricalFlowPort_Electrical_InOrOut_traits;

        const SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence&
        SimPort_ElectricalFlowPort_Electrical_InOrOut () const;

        SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence&
        SimPort_ElectricalFlowPort_Electrical_InOrOut ();

        void
        SimPort_ElectricalFlowPort_Electrical_InOrOut (const SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence& s);

        // SimPort_ElectricalFlowPort_Electrical_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ElectricalFlowPort_Electrical_Out SimPort_ElectricalFlowPort_Electrical_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ElectricalFlowPort_Electrical_Out_type > SimPort_ElectricalFlowPort_Electrical_Out_sequence;
        typedef SimPort_ElectricalFlowPort_Electrical_Out_sequence::iterator SimPort_ElectricalFlowPort_Electrical_Out_iterator;
        typedef SimPort_ElectricalFlowPort_Electrical_Out_sequence::const_iterator SimPort_ElectricalFlowPort_Electrical_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ElectricalFlowPort_Electrical_Out_type, char > SimPort_ElectricalFlowPort_Electrical_Out_traits;

        const SimPort_ElectricalFlowPort_Electrical_Out_sequence&
        SimPort_ElectricalFlowPort_Electrical_Out () const;

        SimPort_ElectricalFlowPort_Electrical_Out_sequence&
        SimPort_ElectricalFlowPort_Electrical_Out ();

        void
        SimPort_ElectricalFlowPort_Electrical_Out (const SimPort_ElectricalFlowPort_Electrical_Out_sequence& s);

        // SimPort_HotWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_HotWaterFlowPort_CondensedWaterOut SimPort_HotWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_HotWaterFlowPort_CondensedWaterOut_type > SimPort_HotWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimPort_HotWaterFlowPort_CondensedWaterOut_sequence::iterator SimPort_HotWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimPort_HotWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimPort_HotWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_HotWaterFlowPort_CondensedWaterOut_type, char > SimPort_HotWaterFlowPort_CondensedWaterOut_traits;

        const SimPort_HotWaterFlowPort_CondensedWaterOut_sequence&
        SimPort_HotWaterFlowPort_CondensedWaterOut () const;

        SimPort_HotWaterFlowPort_CondensedWaterOut_sequence&
        SimPort_HotWaterFlowPort_CondensedWaterOut ();

        void
        SimPort_HotWaterFlowPort_CondensedWaterOut (const SimPort_HotWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimPort_HotWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_HotWaterFlowPort_Default SimPort_HotWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_HotWaterFlowPort_Default_type > SimPort_HotWaterFlowPort_Default_sequence;
        typedef SimPort_HotWaterFlowPort_Default_sequence::iterator SimPort_HotWaterFlowPort_Default_iterator;
        typedef SimPort_HotWaterFlowPort_Default_sequence::const_iterator SimPort_HotWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_HotWaterFlowPort_Default_type, char > SimPort_HotWaterFlowPort_Default_traits;

        const SimPort_HotWaterFlowPort_Default_sequence&
        SimPort_HotWaterFlowPort_Default () const;

        SimPort_HotWaterFlowPort_Default_sequence&
        SimPort_HotWaterFlowPort_Default ();

        void
        SimPort_HotWaterFlowPort_Default (const SimPort_HotWaterFlowPort_Default_sequence& s);

        // SimPort_HotWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_HotWaterFlowPort_EvaporativeWaterIn SimPort_HotWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_HotWaterFlowPort_EvaporativeWaterIn_type > SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimPort_HotWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimPort_HotWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_HotWaterFlowPort_EvaporativeWaterIn_type, char > SimPort_HotWaterFlowPort_EvaporativeWaterIn_traits;

        const SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence&
        SimPort_HotWaterFlowPort_EvaporativeWaterIn () const;

        SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence&
        SimPort_HotWaterFlowPort_EvaporativeWaterIn ();

        void
        SimPort_HotWaterFlowPort_EvaporativeWaterIn (const SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimPort_HotWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_HotWaterFlowPort_Water_In SimPort_HotWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_HotWaterFlowPort_Water_In_type > SimPort_HotWaterFlowPort_Water_In_sequence;
        typedef SimPort_HotWaterFlowPort_Water_In_sequence::iterator SimPort_HotWaterFlowPort_Water_In_iterator;
        typedef SimPort_HotWaterFlowPort_Water_In_sequence::const_iterator SimPort_HotWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_HotWaterFlowPort_Water_In_type, char > SimPort_HotWaterFlowPort_Water_In_traits;

        const SimPort_HotWaterFlowPort_Water_In_sequence&
        SimPort_HotWaterFlowPort_Water_In () const;

        SimPort_HotWaterFlowPort_Water_In_sequence&
        SimPort_HotWaterFlowPort_Water_In ();

        void
        SimPort_HotWaterFlowPort_Water_In (const SimPort_HotWaterFlowPort_Water_In_sequence& s);

        // SimPort_HotWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_HotWaterFlowPort_Water_InOrOut SimPort_HotWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_HotWaterFlowPort_Water_InOrOut_type > SimPort_HotWaterFlowPort_Water_InOrOut_sequence;
        typedef SimPort_HotWaterFlowPort_Water_InOrOut_sequence::iterator SimPort_HotWaterFlowPort_Water_InOrOut_iterator;
        typedef SimPort_HotWaterFlowPort_Water_InOrOut_sequence::const_iterator SimPort_HotWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_HotWaterFlowPort_Water_InOrOut_type, char > SimPort_HotWaterFlowPort_Water_InOrOut_traits;

        const SimPort_HotWaterFlowPort_Water_InOrOut_sequence&
        SimPort_HotWaterFlowPort_Water_InOrOut () const;

        SimPort_HotWaterFlowPort_Water_InOrOut_sequence&
        SimPort_HotWaterFlowPort_Water_InOrOut ();

        void
        SimPort_HotWaterFlowPort_Water_InOrOut (const SimPort_HotWaterFlowPort_Water_InOrOut_sequence& s);

        // SimPort_HotWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_HotWaterFlowPort_Water_Out SimPort_HotWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_HotWaterFlowPort_Water_Out_type > SimPort_HotWaterFlowPort_Water_Out_sequence;
        typedef SimPort_HotWaterFlowPort_Water_Out_sequence::iterator SimPort_HotWaterFlowPort_Water_Out_iterator;
        typedef SimPort_HotWaterFlowPort_Water_Out_sequence::const_iterator SimPort_HotWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_HotWaterFlowPort_Water_Out_type, char > SimPort_HotWaterFlowPort_Water_Out_traits;

        const SimPort_HotWaterFlowPort_Water_Out_sequence&
        SimPort_HotWaterFlowPort_Water_Out () const;

        SimPort_HotWaterFlowPort_Water_Out_sequence&
        SimPort_HotWaterFlowPort_Water_Out ();

        void
        SimPort_HotWaterFlowPort_Water_Out (const SimPort_HotWaterFlowPort_Water_Out_sequence& s);

        // SimPort_MixedWaterFlowPort_CondensedWaterOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_MixedWaterFlowPort_CondensedWaterOut SimPort_MixedWaterFlowPort_CondensedWaterOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_MixedWaterFlowPort_CondensedWaterOut_type > SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence;
        typedef SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence::iterator SimPort_MixedWaterFlowPort_CondensedWaterOut_iterator;
        typedef SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence::const_iterator SimPort_MixedWaterFlowPort_CondensedWaterOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_MixedWaterFlowPort_CondensedWaterOut_type, char > SimPort_MixedWaterFlowPort_CondensedWaterOut_traits;

        const SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence&
        SimPort_MixedWaterFlowPort_CondensedWaterOut () const;

        SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence&
        SimPort_MixedWaterFlowPort_CondensedWaterOut ();

        void
        SimPort_MixedWaterFlowPort_CondensedWaterOut (const SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence& s);

        // SimPort_MixedWaterFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_MixedWaterFlowPort_Default SimPort_MixedWaterFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_MixedWaterFlowPort_Default_type > SimPort_MixedWaterFlowPort_Default_sequence;
        typedef SimPort_MixedWaterFlowPort_Default_sequence::iterator SimPort_MixedWaterFlowPort_Default_iterator;
        typedef SimPort_MixedWaterFlowPort_Default_sequence::const_iterator SimPort_MixedWaterFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_MixedWaterFlowPort_Default_type, char > SimPort_MixedWaterFlowPort_Default_traits;

        const SimPort_MixedWaterFlowPort_Default_sequence&
        SimPort_MixedWaterFlowPort_Default () const;

        SimPort_MixedWaterFlowPort_Default_sequence&
        SimPort_MixedWaterFlowPort_Default ();

        void
        SimPort_MixedWaterFlowPort_Default (const SimPort_MixedWaterFlowPort_Default_sequence& s);

        // SimPort_MixedWaterFlowPort_EvaporativeWaterIn
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_MixedWaterFlowPort_EvaporativeWaterIn SimPort_MixedWaterFlowPort_EvaporativeWaterIn_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_MixedWaterFlowPort_EvaporativeWaterIn_type > SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence;
        typedef SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence::iterator SimPort_MixedWaterFlowPort_EvaporativeWaterIn_iterator;
        typedef SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence::const_iterator SimPort_MixedWaterFlowPort_EvaporativeWaterIn_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_MixedWaterFlowPort_EvaporativeWaterIn_type, char > SimPort_MixedWaterFlowPort_EvaporativeWaterIn_traits;

        const SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence&
        SimPort_MixedWaterFlowPort_EvaporativeWaterIn () const;

        SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence&
        SimPort_MixedWaterFlowPort_EvaporativeWaterIn ();

        void
        SimPort_MixedWaterFlowPort_EvaporativeWaterIn (const SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence& s);

        // SimPort_MixedWaterFlowPort_Water_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_MixedWaterFlowPort_Water_In SimPort_MixedWaterFlowPort_Water_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_MixedWaterFlowPort_Water_In_type > SimPort_MixedWaterFlowPort_Water_In_sequence;
        typedef SimPort_MixedWaterFlowPort_Water_In_sequence::iterator SimPort_MixedWaterFlowPort_Water_In_iterator;
        typedef SimPort_MixedWaterFlowPort_Water_In_sequence::const_iterator SimPort_MixedWaterFlowPort_Water_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_MixedWaterFlowPort_Water_In_type, char > SimPort_MixedWaterFlowPort_Water_In_traits;

        const SimPort_MixedWaterFlowPort_Water_In_sequence&
        SimPort_MixedWaterFlowPort_Water_In () const;

        SimPort_MixedWaterFlowPort_Water_In_sequence&
        SimPort_MixedWaterFlowPort_Water_In ();

        void
        SimPort_MixedWaterFlowPort_Water_In (const SimPort_MixedWaterFlowPort_Water_In_sequence& s);

        // SimPort_MixedWaterFlowPort_Water_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_MixedWaterFlowPort_Water_InOrOut SimPort_MixedWaterFlowPort_Water_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_MixedWaterFlowPort_Water_InOrOut_type > SimPort_MixedWaterFlowPort_Water_InOrOut_sequence;
        typedef SimPort_MixedWaterFlowPort_Water_InOrOut_sequence::iterator SimPort_MixedWaterFlowPort_Water_InOrOut_iterator;
        typedef SimPort_MixedWaterFlowPort_Water_InOrOut_sequence::const_iterator SimPort_MixedWaterFlowPort_Water_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_MixedWaterFlowPort_Water_InOrOut_type, char > SimPort_MixedWaterFlowPort_Water_InOrOut_traits;

        const SimPort_MixedWaterFlowPort_Water_InOrOut_sequence&
        SimPort_MixedWaterFlowPort_Water_InOrOut () const;

        SimPort_MixedWaterFlowPort_Water_InOrOut_sequence&
        SimPort_MixedWaterFlowPort_Water_InOrOut ();

        void
        SimPort_MixedWaterFlowPort_Water_InOrOut (const SimPort_MixedWaterFlowPort_Water_InOrOut_sequence& s);

        // SimPort_MixedWaterFlowPort_Water_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_MixedWaterFlowPort_Water_Out SimPort_MixedWaterFlowPort_Water_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_MixedWaterFlowPort_Water_Out_type > SimPort_MixedWaterFlowPort_Water_Out_sequence;
        typedef SimPort_MixedWaterFlowPort_Water_Out_sequence::iterator SimPort_MixedWaterFlowPort_Water_Out_iterator;
        typedef SimPort_MixedWaterFlowPort_Water_Out_sequence::const_iterator SimPort_MixedWaterFlowPort_Water_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_MixedWaterFlowPort_Water_Out_type, char > SimPort_MixedWaterFlowPort_Water_Out_traits;

        const SimPort_MixedWaterFlowPort_Water_Out_sequence&
        SimPort_MixedWaterFlowPort_Water_Out () const;

        SimPort_MixedWaterFlowPort_Water_Out_sequence&
        SimPort_MixedWaterFlowPort_Water_Out ();

        void
        SimPort_MixedWaterFlowPort_Water_Out (const SimPort_MixedWaterFlowPort_Water_Out_sequence& s);

        // SimPort_Port_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_Port_Default SimPort_Port_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_Port_Default_type > SimPort_Port_Default_sequence;
        typedef SimPort_Port_Default_sequence::iterator SimPort_Port_Default_iterator;
        typedef SimPort_Port_Default_sequence::const_iterator SimPort_Port_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_Port_Default_type, char > SimPort_Port_Default_traits;

        const SimPort_Port_Default_sequence&
        SimPort_Port_Default () const;

        SimPort_Port_Default_sequence&
        SimPort_Port_Default ();

        void
        SimPort_Port_Default (const SimPort_Port_Default_sequence& s);

        // SimPort_RefrigerationFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_RefrigerationFlowPort_Default SimPort_RefrigerationFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_RefrigerationFlowPort_Default_type > SimPort_RefrigerationFlowPort_Default_sequence;
        typedef SimPort_RefrigerationFlowPort_Default_sequence::iterator SimPort_RefrigerationFlowPort_Default_iterator;
        typedef SimPort_RefrigerationFlowPort_Default_sequence::const_iterator SimPort_RefrigerationFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_RefrigerationFlowPort_Default_type, char > SimPort_RefrigerationFlowPort_Default_traits;

        const SimPort_RefrigerationFlowPort_Default_sequence&
        SimPort_RefrigerationFlowPort_Default () const;

        SimPort_RefrigerationFlowPort_Default_sequence&
        SimPort_RefrigerationFlowPort_Default ();

        void
        SimPort_RefrigerationFlowPort_Default (const SimPort_RefrigerationFlowPort_Default_sequence& s);

        // SimPort_RefrigerationFlowPort_Refrigeration_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_RefrigerationFlowPort_Refrigeration_In SimPort_RefrigerationFlowPort_Refrigeration_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_RefrigerationFlowPort_Refrigeration_In_type > SimPort_RefrigerationFlowPort_Refrigeration_In_sequence;
        typedef SimPort_RefrigerationFlowPort_Refrigeration_In_sequence::iterator SimPort_RefrigerationFlowPort_Refrigeration_In_iterator;
        typedef SimPort_RefrigerationFlowPort_Refrigeration_In_sequence::const_iterator SimPort_RefrigerationFlowPort_Refrigeration_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_RefrigerationFlowPort_Refrigeration_In_type, char > SimPort_RefrigerationFlowPort_Refrigeration_In_traits;

        const SimPort_RefrigerationFlowPort_Refrigeration_In_sequence&
        SimPort_RefrigerationFlowPort_Refrigeration_In () const;

        SimPort_RefrigerationFlowPort_Refrigeration_In_sequence&
        SimPort_RefrigerationFlowPort_Refrigeration_In ();

        void
        SimPort_RefrigerationFlowPort_Refrigeration_In (const SimPort_RefrigerationFlowPort_Refrigeration_In_sequence& s);

        // SimPort_RefrigerationFlowPort_Refrigeration_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_RefrigerationFlowPort_Refrigeration_InOrOut SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_type > SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence;
        typedef SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence::iterator SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_iterator;
        typedef SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence::const_iterator SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_type, char > SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_traits;

        const SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence&
        SimPort_RefrigerationFlowPort_Refrigeration_InOrOut () const;

        SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence&
        SimPort_RefrigerationFlowPort_Refrigeration_InOrOut ();

        void
        SimPort_RefrigerationFlowPort_Refrigeration_InOrOut (const SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence& s);

        // SimPort_RefrigerationFlowPort_Refrigeration_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_RefrigerationFlowPort_Refrigeration_Out SimPort_RefrigerationFlowPort_Refrigeration_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_RefrigerationFlowPort_Refrigeration_Out_type > SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence;
        typedef SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence::iterator SimPort_RefrigerationFlowPort_Refrigeration_Out_iterator;
        typedef SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence::const_iterator SimPort_RefrigerationFlowPort_Refrigeration_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_RefrigerationFlowPort_Refrigeration_Out_type, char > SimPort_RefrigerationFlowPort_Refrigeration_Out_traits;

        const SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence&
        SimPort_RefrigerationFlowPort_Refrigeration_Out () const;

        SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence&
        SimPort_RefrigerationFlowPort_Refrigeration_Out ();

        void
        SimPort_RefrigerationFlowPort_Refrigeration_Out (const SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence& s);

        // SimPort_SteamFlowPort_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_SteamFlowPort_Default SimPort_SteamFlowPort_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_SteamFlowPort_Default_type > SimPort_SteamFlowPort_Default_sequence;
        typedef SimPort_SteamFlowPort_Default_sequence::iterator SimPort_SteamFlowPort_Default_iterator;
        typedef SimPort_SteamFlowPort_Default_sequence::const_iterator SimPort_SteamFlowPort_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_SteamFlowPort_Default_type, char > SimPort_SteamFlowPort_Default_traits;

        const SimPort_SteamFlowPort_Default_sequence&
        SimPort_SteamFlowPort_Default () const;

        SimPort_SteamFlowPort_Default_sequence&
        SimPort_SteamFlowPort_Default ();

        void
        SimPort_SteamFlowPort_Default (const SimPort_SteamFlowPort_Default_sequence& s);

        // SimPort_SteamFlowPort_Steam_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_SteamFlowPort_Steam_In SimPort_SteamFlowPort_Steam_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_SteamFlowPort_Steam_In_type > SimPort_SteamFlowPort_Steam_In_sequence;
        typedef SimPort_SteamFlowPort_Steam_In_sequence::iterator SimPort_SteamFlowPort_Steam_In_iterator;
        typedef SimPort_SteamFlowPort_Steam_In_sequence::const_iterator SimPort_SteamFlowPort_Steam_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_SteamFlowPort_Steam_In_type, char > SimPort_SteamFlowPort_Steam_In_traits;

        const SimPort_SteamFlowPort_Steam_In_sequence&
        SimPort_SteamFlowPort_Steam_In () const;

        SimPort_SteamFlowPort_Steam_In_sequence&
        SimPort_SteamFlowPort_Steam_In ();

        void
        SimPort_SteamFlowPort_Steam_In (const SimPort_SteamFlowPort_Steam_In_sequence& s);

        // SimPort_SteamFlowPort_Steam_InOrOut
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_SteamFlowPort_Steam_InOrOut SimPort_SteamFlowPort_Steam_InOrOut_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_SteamFlowPort_Steam_InOrOut_type > SimPort_SteamFlowPort_Steam_InOrOut_sequence;
        typedef SimPort_SteamFlowPort_Steam_InOrOut_sequence::iterator SimPort_SteamFlowPort_Steam_InOrOut_iterator;
        typedef SimPort_SteamFlowPort_Steam_InOrOut_sequence::const_iterator SimPort_SteamFlowPort_Steam_InOrOut_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_SteamFlowPort_Steam_InOrOut_type, char > SimPort_SteamFlowPort_Steam_InOrOut_traits;

        const SimPort_SteamFlowPort_Steam_InOrOut_sequence&
        SimPort_SteamFlowPort_Steam_InOrOut () const;

        SimPort_SteamFlowPort_Steam_InOrOut_sequence&
        SimPort_SteamFlowPort_Steam_InOrOut ();

        void
        SimPort_SteamFlowPort_Steam_InOrOut (const SimPort_SteamFlowPort_Steam_InOrOut_sequence& s);

        // SimPort_SteamFlowPort_Steam_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_SteamFlowPort_Steam_Out SimPort_SteamFlowPort_Steam_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_SteamFlowPort_Steam_Out_type > SimPort_SteamFlowPort_Steam_Out_sequence;
        typedef SimPort_SteamFlowPort_Steam_Out_sequence::iterator SimPort_SteamFlowPort_Steam_Out_iterator;
        typedef SimPort_SteamFlowPort_Steam_Out_sequence::const_iterator SimPort_SteamFlowPort_Steam_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_SteamFlowPort_Steam_Out_type, char > SimPort_SteamFlowPort_Steam_Out_traits;

        const SimPort_SteamFlowPort_Steam_Out_sequence&
        SimPort_SteamFlowPort_Steam_Out () const;

        SimPort_SteamFlowPort_Steam_Out_sequence&
        SimPort_SteamFlowPort_Steam_Out ();

        void
        SimPort_SteamFlowPort_Steam_Out (const SimPort_SteamFlowPort_Steam_Out_sequence& s);

        // SimPort_ZoneAirFlowPort_Air_In
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ZoneAirFlowPort_Air_In SimPort_ZoneAirFlowPort_Air_In_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ZoneAirFlowPort_Air_In_type > SimPort_ZoneAirFlowPort_Air_In_sequence;
        typedef SimPort_ZoneAirFlowPort_Air_In_sequence::iterator SimPort_ZoneAirFlowPort_Air_In_iterator;
        typedef SimPort_ZoneAirFlowPort_Air_In_sequence::const_iterator SimPort_ZoneAirFlowPort_Air_In_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ZoneAirFlowPort_Air_In_type, char > SimPort_ZoneAirFlowPort_Air_In_traits;

        const SimPort_ZoneAirFlowPort_Air_In_sequence&
        SimPort_ZoneAirFlowPort_Air_In () const;

        SimPort_ZoneAirFlowPort_Air_In_sequence&
        SimPort_ZoneAirFlowPort_Air_In ();

        void
        SimPort_ZoneAirFlowPort_Air_In (const SimPort_ZoneAirFlowPort_Air_In_sequence& s);

        // SimPort_ZoneAirFlowPort_Air_Out
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPort_ZoneAirFlowPort_Air_Out SimPort_ZoneAirFlowPort_Air_Out_type;
        typedef ::xsd::cxx::tree::sequence< SimPort_ZoneAirFlowPort_Air_Out_type > SimPort_ZoneAirFlowPort_Air_Out_sequence;
        typedef SimPort_ZoneAirFlowPort_Air_Out_sequence::iterator SimPort_ZoneAirFlowPort_Air_Out_iterator;
        typedef SimPort_ZoneAirFlowPort_Air_Out_sequence::const_iterator SimPort_ZoneAirFlowPort_Air_Out_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPort_ZoneAirFlowPort_Air_Out_type, char > SimPort_ZoneAirFlowPort_Air_Out_traits;

        const SimPort_ZoneAirFlowPort_Air_Out_sequence&
        SimPort_ZoneAirFlowPort_Air_Out () const;

        SimPort_ZoneAirFlowPort_Air_Out_sequence&
        SimPort_ZoneAirFlowPort_Air_Out ();

        void
        SimPort_ZoneAirFlowPort_Air_Out (const SimPort_ZoneAirFlowPort_Air_Out_sequence& s);

        // SimPresentationLayerAssignment_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPresentationLayerAssignment_Default_Default SimPresentationLayerAssignment_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPresentationLayerAssignment_Default_Default_type > SimPresentationLayerAssignment_Default_Default_sequence;
        typedef SimPresentationLayerAssignment_Default_Default_sequence::iterator SimPresentationLayerAssignment_Default_Default_iterator;
        typedef SimPresentationLayerAssignment_Default_Default_sequence::const_iterator SimPresentationLayerAssignment_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPresentationLayerAssignment_Default_Default_type, char > SimPresentationLayerAssignment_Default_Default_traits;

        const SimPresentationLayerAssignment_Default_Default_sequence&
        SimPresentationLayerAssignment_Default_Default () const;

        SimPresentationLayerAssignment_Default_Default_sequence&
        SimPresentationLayerAssignment_Default_Default ();

        void
        SimPresentationLayerAssignment_Default_Default (const SimPresentationLayerAssignment_Default_Default_sequence& s);

        // SimProfileDefinition_ArbitraryProfile_Closed
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ArbitraryProfile_Closed SimProfileDefinition_ArbitraryProfile_Closed_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ArbitraryProfile_Closed_type > SimProfileDefinition_ArbitraryProfile_Closed_sequence;
        typedef SimProfileDefinition_ArbitraryProfile_Closed_sequence::iterator SimProfileDefinition_ArbitraryProfile_Closed_iterator;
        typedef SimProfileDefinition_ArbitraryProfile_Closed_sequence::const_iterator SimProfileDefinition_ArbitraryProfile_Closed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ArbitraryProfile_Closed_type, char > SimProfileDefinition_ArbitraryProfile_Closed_traits;

        const SimProfileDefinition_ArbitraryProfile_Closed_sequence&
        SimProfileDefinition_ArbitraryProfile_Closed () const;

        SimProfileDefinition_ArbitraryProfile_Closed_sequence&
        SimProfileDefinition_ArbitraryProfile_Closed ();

        void
        SimProfileDefinition_ArbitraryProfile_Closed (const SimProfileDefinition_ArbitraryProfile_Closed_sequence& s);

        // SimProfileDefinition_ArbitraryProfile_ClosedWithVoids
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ArbitraryProfile_ClosedWithVoids SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_type > SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence;
        typedef SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence::iterator SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_iterator;
        typedef SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence::const_iterator SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_type, char > SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_traits;

        const SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence&
        SimProfileDefinition_ArbitraryProfile_ClosedWithVoids () const;

        SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence&
        SimProfileDefinition_ArbitraryProfile_ClosedWithVoids ();

        void
        SimProfileDefinition_ArbitraryProfile_ClosedWithVoids (const SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence& s);

        // SimProfileDefinition_ArbitraryProfile_Open
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ArbitraryProfile_Open SimProfileDefinition_ArbitraryProfile_Open_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ArbitraryProfile_Open_type > SimProfileDefinition_ArbitraryProfile_Open_sequence;
        typedef SimProfileDefinition_ArbitraryProfile_Open_sequence::iterator SimProfileDefinition_ArbitraryProfile_Open_iterator;
        typedef SimProfileDefinition_ArbitraryProfile_Open_sequence::const_iterator SimProfileDefinition_ArbitraryProfile_Open_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ArbitraryProfile_Open_type, char > SimProfileDefinition_ArbitraryProfile_Open_traits;

        const SimProfileDefinition_ArbitraryProfile_Open_sequence&
        SimProfileDefinition_ArbitraryProfile_Open () const;

        SimProfileDefinition_ArbitraryProfile_Open_sequence&
        SimProfileDefinition_ArbitraryProfile_Open ();

        void
        SimProfileDefinition_ArbitraryProfile_Open (const SimProfileDefinition_ArbitraryProfile_Open_sequence& s);

        // SimProfileDefinition_CompositeProfile_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_CompositeProfile_Default SimProfileDefinition_CompositeProfile_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_CompositeProfile_Default_type > SimProfileDefinition_CompositeProfile_Default_sequence;
        typedef SimProfileDefinition_CompositeProfile_Default_sequence::iterator SimProfileDefinition_CompositeProfile_Default_iterator;
        typedef SimProfileDefinition_CompositeProfile_Default_sequence::const_iterator SimProfileDefinition_CompositeProfile_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_CompositeProfile_Default_type, char > SimProfileDefinition_CompositeProfile_Default_traits;

        const SimProfileDefinition_CompositeProfile_Default_sequence&
        SimProfileDefinition_CompositeProfile_Default () const;

        SimProfileDefinition_CompositeProfile_Default_sequence&
        SimProfileDefinition_CompositeProfile_Default ();

        void
        SimProfileDefinition_CompositeProfile_Default (const SimProfileDefinition_CompositeProfile_Default_sequence& s);

        // SimProfileDefinition_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_Default_Default SimProfileDefinition_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_Default_Default_type > SimProfileDefinition_Default_Default_sequence;
        typedef SimProfileDefinition_Default_Default_sequence::iterator SimProfileDefinition_Default_Default_iterator;
        typedef SimProfileDefinition_Default_Default_sequence::const_iterator SimProfileDefinition_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_Default_Default_type, char > SimProfileDefinition_Default_Default_traits;

        const SimProfileDefinition_Default_Default_sequence&
        SimProfileDefinition_Default_Default () const;

        SimProfileDefinition_Default_Default_sequence&
        SimProfileDefinition_Default_Default ();

        void
        SimProfileDefinition_Default_Default (const SimProfileDefinition_Default_Default_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_C_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_C_Shape SimProfileDefinition_ParameterizedProfile_C_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_C_Shape_type > SimProfileDefinition_ParameterizedProfile_C_Shape_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_C_Shape_sequence::iterator SimProfileDefinition_ParameterizedProfile_C_Shape_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_C_Shape_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_C_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_C_Shape_type, char > SimProfileDefinition_ParameterizedProfile_C_Shape_traits;

        const SimProfileDefinition_ParameterizedProfile_C_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_C_Shape () const;

        SimProfileDefinition_ParameterizedProfile_C_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_C_Shape ();

        void
        SimProfileDefinition_ParameterizedProfile_C_Shape (const SimProfileDefinition_ParameterizedProfile_C_Shape_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_Circle
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_Circle SimProfileDefinition_ParameterizedProfile_Circle_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_Circle_type > SimProfileDefinition_ParameterizedProfile_Circle_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_Circle_sequence::iterator SimProfileDefinition_ParameterizedProfile_Circle_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_Circle_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_Circle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_Circle_type, char > SimProfileDefinition_ParameterizedProfile_Circle_traits;

        const SimProfileDefinition_ParameterizedProfile_Circle_sequence&
        SimProfileDefinition_ParameterizedProfile_Circle () const;

        SimProfileDefinition_ParameterizedProfile_Circle_sequence&
        SimProfileDefinition_ParameterizedProfile_Circle ();

        void
        SimProfileDefinition_ParameterizedProfile_Circle (const SimProfileDefinition_ParameterizedProfile_Circle_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_Ellipse
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_Ellipse SimProfileDefinition_ParameterizedProfile_Ellipse_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_Ellipse_type > SimProfileDefinition_ParameterizedProfile_Ellipse_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_Ellipse_sequence::iterator SimProfileDefinition_ParameterizedProfile_Ellipse_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_Ellipse_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_Ellipse_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_Ellipse_type, char > SimProfileDefinition_ParameterizedProfile_Ellipse_traits;

        const SimProfileDefinition_ParameterizedProfile_Ellipse_sequence&
        SimProfileDefinition_ParameterizedProfile_Ellipse () const;

        SimProfileDefinition_ParameterizedProfile_Ellipse_sequence&
        SimProfileDefinition_ParameterizedProfile_Ellipse ();

        void
        SimProfileDefinition_ParameterizedProfile_Ellipse (const SimProfileDefinition_ParameterizedProfile_Ellipse_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_HollowRectangle
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_HollowRectangle SimProfileDefinition_ParameterizedProfile_HollowRectangle_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_HollowRectangle_type > SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence::iterator SimProfileDefinition_ParameterizedProfile_HollowRectangle_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_HollowRectangle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_HollowRectangle_type, char > SimProfileDefinition_ParameterizedProfile_HollowRectangle_traits;

        const SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence&
        SimProfileDefinition_ParameterizedProfile_HollowRectangle () const;

        SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence&
        SimProfileDefinition_ParameterizedProfile_HollowRectangle ();

        void
        SimProfileDefinition_ParameterizedProfile_HollowRectangle (const SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_I_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_I_Shape SimProfileDefinition_ParameterizedProfile_I_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_I_Shape_type > SimProfileDefinition_ParameterizedProfile_I_Shape_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_I_Shape_sequence::iterator SimProfileDefinition_ParameterizedProfile_I_Shape_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_I_Shape_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_I_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_I_Shape_type, char > SimProfileDefinition_ParameterizedProfile_I_Shape_traits;

        const SimProfileDefinition_ParameterizedProfile_I_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_I_Shape () const;

        SimProfileDefinition_ParameterizedProfile_I_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_I_Shape ();

        void
        SimProfileDefinition_ParameterizedProfile_I_Shape (const SimProfileDefinition_ParameterizedProfile_I_Shape_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_L_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_L_Shape SimProfileDefinition_ParameterizedProfile_L_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_L_Shape_type > SimProfileDefinition_ParameterizedProfile_L_Shape_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_L_Shape_sequence::iterator SimProfileDefinition_ParameterizedProfile_L_Shape_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_L_Shape_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_L_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_L_Shape_type, char > SimProfileDefinition_ParameterizedProfile_L_Shape_traits;

        const SimProfileDefinition_ParameterizedProfile_L_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_L_Shape () const;

        SimProfileDefinition_ParameterizedProfile_L_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_L_Shape ();

        void
        SimProfileDefinition_ParameterizedProfile_L_Shape (const SimProfileDefinition_ParameterizedProfile_L_Shape_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_Rectangle
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_Rectangle SimProfileDefinition_ParameterizedProfile_Rectangle_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_Rectangle_type > SimProfileDefinition_ParameterizedProfile_Rectangle_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_Rectangle_sequence::iterator SimProfileDefinition_ParameterizedProfile_Rectangle_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_Rectangle_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_Rectangle_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_Rectangle_type, char > SimProfileDefinition_ParameterizedProfile_Rectangle_traits;

        const SimProfileDefinition_ParameterizedProfile_Rectangle_sequence&
        SimProfileDefinition_ParameterizedProfile_Rectangle () const;

        SimProfileDefinition_ParameterizedProfile_Rectangle_sequence&
        SimProfileDefinition_ParameterizedProfile_Rectangle ();

        void
        SimProfileDefinition_ParameterizedProfile_Rectangle (const SimProfileDefinition_ParameterizedProfile_Rectangle_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_T_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_T_Shape SimProfileDefinition_ParameterizedProfile_T_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_T_Shape_type > SimProfileDefinition_ParameterizedProfile_T_Shape_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_T_Shape_sequence::iterator SimProfileDefinition_ParameterizedProfile_T_Shape_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_T_Shape_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_T_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_T_Shape_type, char > SimProfileDefinition_ParameterizedProfile_T_Shape_traits;

        const SimProfileDefinition_ParameterizedProfile_T_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_T_Shape () const;

        SimProfileDefinition_ParameterizedProfile_T_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_T_Shape ();

        void
        SimProfileDefinition_ParameterizedProfile_T_Shape (const SimProfileDefinition_ParameterizedProfile_T_Shape_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_U_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_U_Shape SimProfileDefinition_ParameterizedProfile_U_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_U_Shape_type > SimProfileDefinition_ParameterizedProfile_U_Shape_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_U_Shape_sequence::iterator SimProfileDefinition_ParameterizedProfile_U_Shape_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_U_Shape_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_U_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_U_Shape_type, char > SimProfileDefinition_ParameterizedProfile_U_Shape_traits;

        const SimProfileDefinition_ParameterizedProfile_U_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_U_Shape () const;

        SimProfileDefinition_ParameterizedProfile_U_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_U_Shape ();

        void
        SimProfileDefinition_ParameterizedProfile_U_Shape (const SimProfileDefinition_ParameterizedProfile_U_Shape_sequence& s);

        // SimProfileDefinition_ParameterizedProfile_Z_Shape
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimProfileDefinition_ParameterizedProfile_Z_Shape SimProfileDefinition_ParameterizedProfile_Z_Shape_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileDefinition_ParameterizedProfile_Z_Shape_type > SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence;
        typedef SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence::iterator SimProfileDefinition_ParameterizedProfile_Z_Shape_iterator;
        typedef SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence::const_iterator SimProfileDefinition_ParameterizedProfile_Z_Shape_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileDefinition_ParameterizedProfile_Z_Shape_type, char > SimProfileDefinition_ParameterizedProfile_Z_Shape_traits;

        const SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_Z_Shape () const;

        SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence&
        SimProfileDefinition_ParameterizedProfile_Z_Shape ();

        void
        SimProfileDefinition_ParameterizedProfile_Z_Shape (const SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence& s);

        // SimProfileParams_Profile_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimProfileParams_Profile_Default SimProfileParams_Profile_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileParams_Profile_Default_type > SimProfileParams_Profile_Default_sequence;
        typedef SimProfileParams_Profile_Default_sequence::iterator SimProfileParams_Profile_Default_iterator;
        typedef SimProfileParams_Profile_Default_sequence::const_iterator SimProfileParams_Profile_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileParams_Profile_Default_type, char > SimProfileParams_Profile_Default_traits;

        const SimProfileParams_Profile_Default_sequence&
        SimProfileParams_Profile_Default () const;

        SimProfileParams_Profile_Default_sequence&
        SimProfileParams_Profile_Default ();

        void
        SimProfileParams_Profile_Default (const SimProfileParams_Profile_Default_sequence& s);

        // SimProfileParams_Profile_Member
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimProfileParams_Profile_Member SimProfileParams_Profile_Member_type;
        typedef ::xsd::cxx::tree::sequence< SimProfileParams_Profile_Member_type > SimProfileParams_Profile_Member_sequence;
        typedef SimProfileParams_Profile_Member_sequence::iterator SimProfileParams_Profile_Member_iterator;
        typedef SimProfileParams_Profile_Member_sequence::const_iterator SimProfileParams_Profile_Member_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProfileParams_Profile_Member_type, char > SimProfileParams_Profile_Member_traits;

        const SimProfileParams_Profile_Member_sequence&
        SimProfileParams_Profile_Member () const;

        SimProfileParams_Profile_Member_sequence&
        SimProfileParams_Profile_Member ();

        void
        SimProfileParams_Profile_Member (const SimProfileParams_Profile_Member_sequence& s);

        // SimProject_Project_DesignAlternative
        //
        typedef ::namespaces::Sim::BuildingModel::SimProject_Project_DesignAlternative SimProject_Project_DesignAlternative_type;
        typedef ::xsd::cxx::tree::sequence< SimProject_Project_DesignAlternative_type > SimProject_Project_DesignAlternative_sequence;
        typedef SimProject_Project_DesignAlternative_sequence::iterator SimProject_Project_DesignAlternative_iterator;
        typedef SimProject_Project_DesignAlternative_sequence::const_iterator SimProject_Project_DesignAlternative_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimProject_Project_DesignAlternative_type, char > SimProject_Project_DesignAlternative_traits;

        const SimProject_Project_DesignAlternative_sequence&
        SimProject_Project_DesignAlternative () const;

        SimProject_Project_DesignAlternative_sequence&
        SimProject_Project_DesignAlternative ();

        void
        SimProject_Project_DesignAlternative (const SimProject_Project_DesignAlternative_sequence& s);

        // SimPropertyListValue_SimpleProp_ListValue
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPropertyListValue_SimpleProp_ListValue SimPropertyListValue_SimpleProp_ListValue_type;
        typedef ::xsd::cxx::tree::sequence< SimPropertyListValue_SimpleProp_ListValue_type > SimPropertyListValue_SimpleProp_ListValue_sequence;
        typedef SimPropertyListValue_SimpleProp_ListValue_sequence::iterator SimPropertyListValue_SimpleProp_ListValue_iterator;
        typedef SimPropertyListValue_SimpleProp_ListValue_sequence::const_iterator SimPropertyListValue_SimpleProp_ListValue_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPropertyListValue_SimpleProp_ListValue_type, char > SimPropertyListValue_SimpleProp_ListValue_traits;

        const SimPropertyListValue_SimpleProp_ListValue_sequence&
        SimPropertyListValue_SimpleProp_ListValue () const;

        SimPropertyListValue_SimpleProp_ListValue_sequence&
        SimPropertyListValue_SimpleProp_ListValue ();

        void
        SimPropertyListValue_SimpleProp_ListValue (const SimPropertyListValue_SimpleProp_ListValue_sequence& s);

        // SimPropertySet_PropertySet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPropertySet_PropertySet_Default SimPropertySet_PropertySet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimPropertySet_PropertySet_Default_type > SimPropertySet_PropertySet_Default_sequence;
        typedef SimPropertySet_PropertySet_Default_sequence::iterator SimPropertySet_PropertySet_Default_iterator;
        typedef SimPropertySet_PropertySet_Default_sequence::const_iterator SimPropertySet_PropertySet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPropertySet_PropertySet_Default_type, char > SimPropertySet_PropertySet_Default_traits;

        const SimPropertySet_PropertySet_Default_sequence&
        SimPropertySet_PropertySet_Default () const;

        SimPropertySet_PropertySet_Default_sequence&
        SimPropertySet_PropertySet_Default ();

        void
        SimPropertySet_PropertySet_Default (const SimPropertySet_PropertySet_Default_sequence& s);

        // SimPropertySingleValue_SimpleProp_SingleValue
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimPropertySingleValue_SimpleProp_SingleValue SimPropertySingleValue_SimpleProp_SingleValue_type;
        typedef ::xsd::cxx::tree::sequence< SimPropertySingleValue_SimpleProp_SingleValue_type > SimPropertySingleValue_SimpleProp_SingleValue_sequence;
        typedef SimPropertySingleValue_SimpleProp_SingleValue_sequence::iterator SimPropertySingleValue_SimpleProp_SingleValue_iterator;
        typedef SimPropertySingleValue_SimpleProp_SingleValue_sequence::const_iterator SimPropertySingleValue_SimpleProp_SingleValue_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimPropertySingleValue_SimpleProp_SingleValue_type, char > SimPropertySingleValue_SimpleProp_SingleValue_traits;

        const SimPropertySingleValue_SimpleProp_SingleValue_sequence&
        SimPropertySingleValue_SimpleProp_SingleValue () const;

        SimPropertySingleValue_SimpleProp_SingleValue_sequence&
        SimPropertySingleValue_SimpleProp_SingleValue ();

        void
        SimPropertySingleValue_SimpleProp_SingleValue (const SimPropertySingleValue_SimpleProp_SingleValue_sequence& s);

        // SimRailing_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimRailing_Default_Default SimRailing_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRailing_Default_Default_type > SimRailing_Default_Default_sequence;
        typedef SimRailing_Default_Default_sequence::iterator SimRailing_Default_Default_iterator;
        typedef SimRailing_Default_Default_sequence::const_iterator SimRailing_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRailing_Default_Default_type, char > SimRailing_Default_Default_traits;

        const SimRailing_Default_Default_sequence&
        SimRailing_Default_Default () const;

        SimRailing_Default_Default_sequence&
        SimRailing_Default_Default ();

        void
        SimRailing_Default_Default (const SimRailing_Default_Default_sequence& s);

        // SimRailing_GuardRailing_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimRailing_GuardRailing_Default SimRailing_GuardRailing_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRailing_GuardRailing_Default_type > SimRailing_GuardRailing_Default_sequence;
        typedef SimRailing_GuardRailing_Default_sequence::iterator SimRailing_GuardRailing_Default_iterator;
        typedef SimRailing_GuardRailing_Default_sequence::const_iterator SimRailing_GuardRailing_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRailing_GuardRailing_Default_type, char > SimRailing_GuardRailing_Default_traits;

        const SimRailing_GuardRailing_Default_sequence&
        SimRailing_GuardRailing_Default () const;

        SimRailing_GuardRailing_Default_sequence&
        SimRailing_GuardRailing_Default ();

        void
        SimRailing_GuardRailing_Default (const SimRailing_GuardRailing_Default_sequence& s);

        // SimRailing_HandRailing_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimRailing_HandRailing_Default SimRailing_HandRailing_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRailing_HandRailing_Default_type > SimRailing_HandRailing_Default_sequence;
        typedef SimRailing_HandRailing_Default_sequence::iterator SimRailing_HandRailing_Default_iterator;
        typedef SimRailing_HandRailing_Default_sequence::const_iterator SimRailing_HandRailing_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRailing_HandRailing_Default_type, char > SimRailing_HandRailing_Default_traits;

        const SimRailing_HandRailing_Default_sequence&
        SimRailing_HandRailing_Default () const;

        SimRailing_HandRailing_Default_sequence&
        SimRailing_HandRailing_Default ();

        void
        SimRailing_HandRailing_Default (const SimRailing_HandRailing_Default_sequence& s);

        // SimRailingParams_Railing_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimRailingParams_Railing_Default SimRailingParams_Railing_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRailingParams_Railing_Default_type > SimRailingParams_Railing_Default_sequence;
        typedef SimRailingParams_Railing_Default_sequence::iterator SimRailingParams_Railing_Default_iterator;
        typedef SimRailingParams_Railing_Default_sequence::const_iterator SimRailingParams_Railing_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRailingParams_Railing_Default_type, char > SimRailingParams_Railing_Default_traits;

        const SimRailingParams_Railing_Default_sequence&
        SimRailingParams_Railing_Default () const;

        SimRailingParams_Railing_Default_sequence&
        SimRailingParams_Railing_Default ();

        void
        SimRailingParams_Railing_Default (const SimRailingParams_Railing_Default_sequence& s);

        // SimRamp_Ramp_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimRamp_Ramp_Default SimRamp_Ramp_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRamp_Ramp_Default_type > SimRamp_Ramp_Default_sequence;
        typedef SimRamp_Ramp_Default_sequence::iterator SimRamp_Ramp_Default_iterator;
        typedef SimRamp_Ramp_Default_sequence::const_iterator SimRamp_Ramp_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRamp_Ramp_Default_type, char > SimRamp_Ramp_Default_traits;

        const SimRamp_Ramp_Default_sequence&
        SimRamp_Ramp_Default () const;

        SimRamp_Ramp_Default_sequence&
        SimRamp_Ramp_Default ();

        void
        SimRamp_Ramp_Default (const SimRamp_Ramp_Default_sequence& s);

        // SimRampFlight_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimRampFlight_Default_Default SimRampFlight_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRampFlight_Default_Default_type > SimRampFlight_Default_Default_sequence;
        typedef SimRampFlight_Default_Default_sequence::iterator SimRampFlight_Default_Default_iterator;
        typedef SimRampFlight_Default_Default_sequence::const_iterator SimRampFlight_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRampFlight_Default_Default_type, char > SimRampFlight_Default_Default_traits;

        const SimRampFlight_Default_Default_sequence&
        SimRampFlight_Default_Default () const;

        SimRampFlight_Default_Default_sequence&
        SimRampFlight_Default_Default ();

        void
        SimRampFlight_Default_Default (const SimRampFlight_Default_Default_sequence& s);

        // SimRampFlightParams_RampFlight_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimRampFlightParams_RampFlight_Default SimRampFlightParams_RampFlight_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRampFlightParams_RampFlight_Default_type > SimRampFlightParams_RampFlight_Default_sequence;
        typedef SimRampFlightParams_RampFlight_Default_sequence::iterator SimRampFlightParams_RampFlight_Default_iterator;
        typedef SimRampFlightParams_RampFlight_Default_sequence::const_iterator SimRampFlightParams_RampFlight_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRampFlightParams_RampFlight_Default_type, char > SimRampFlightParams_RampFlight_Default_traits;

        const SimRampFlightParams_RampFlight_Default_sequence&
        SimRampFlightParams_RampFlight_Default () const;

        SimRampFlightParams_RampFlight_Default_sequence&
        SimRampFlightParams_RampFlight_Default ();

        void
        SimRampFlightParams_RampFlight_Default (const SimRampFlightParams_RampFlight_Default_sequence& s);

        // SimRampParams_Ramp_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimRampParams_Ramp_Default SimRampParams_Ramp_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRampParams_Ramp_Default_type > SimRampParams_Ramp_Default_sequence;
        typedef SimRampParams_Ramp_Default_sequence::iterator SimRampParams_Ramp_Default_iterator;
        typedef SimRampParams_Ramp_Default_sequence::const_iterator SimRampParams_Ramp_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRampParams_Ramp_Default_type, char > SimRampParams_Ramp_Default_traits;

        const SimRampParams_Ramp_Default_sequence&
        SimRampParams_Ramp_Default () const;

        SimRampParams_Ramp_Default_sequence&
        SimRampParams_Ramp_Default ();

        void
        SimRampParams_Ramp_Default (const SimRampParams_Ramp_Default_sequence& s);

        // SimReferenceByName_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimReferenceByName_Default_Default SimReferenceByName_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimReferenceByName_Default_Default_type > SimReferenceByName_Default_Default_sequence;
        typedef SimReferenceByName_Default_Default_sequence::iterator SimReferenceByName_Default_Default_iterator;
        typedef SimReferenceByName_Default_Default_sequence::const_iterator SimReferenceByName_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimReferenceByName_Default_Default_type, char > SimReferenceByName_Default_Default_traits;

        const SimReferenceByName_Default_Default_sequence&
        SimReferenceByName_Default_Default () const;

        SimReferenceByName_Default_Default_sequence&
        SimReferenceByName_Default_Default ();

        void
        SimReferenceByName_Default_Default (const SimReferenceByName_Default_Default_sequence& s);

        // SimRefrigerationSystemElement_Compressor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Compressor_Default SimRefrigerationSystemElement_Compressor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Compressor_Default_type > SimRefrigerationSystemElement_Compressor_Default_sequence;
        typedef SimRefrigerationSystemElement_Compressor_Default_sequence::iterator SimRefrigerationSystemElement_Compressor_Default_iterator;
        typedef SimRefrigerationSystemElement_Compressor_Default_sequence::const_iterator SimRefrigerationSystemElement_Compressor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Compressor_Default_type, char > SimRefrigerationSystemElement_Compressor_Default_traits;

        const SimRefrigerationSystemElement_Compressor_Default_sequence&
        SimRefrigerationSystemElement_Compressor_Default () const;

        SimRefrigerationSystemElement_Compressor_Default_sequence&
        SimRefrigerationSystemElement_Compressor_Default ();

        void
        SimRefrigerationSystemElement_Compressor_Default (const SimRefrigerationSystemElement_Compressor_Default_sequence& s);

        // SimRefrigerationSystemElement_Condenser_AirCooled
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Condenser_AirCooled SimRefrigerationSystemElement_Condenser_AirCooled_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Condenser_AirCooled_type > SimRefrigerationSystemElement_Condenser_AirCooled_sequence;
        typedef SimRefrigerationSystemElement_Condenser_AirCooled_sequence::iterator SimRefrigerationSystemElement_Condenser_AirCooled_iterator;
        typedef SimRefrigerationSystemElement_Condenser_AirCooled_sequence::const_iterator SimRefrigerationSystemElement_Condenser_AirCooled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Condenser_AirCooled_type, char > SimRefrigerationSystemElement_Condenser_AirCooled_traits;

        const SimRefrigerationSystemElement_Condenser_AirCooled_sequence&
        SimRefrigerationSystemElement_Condenser_AirCooled () const;

        SimRefrigerationSystemElement_Condenser_AirCooled_sequence&
        SimRefrigerationSystemElement_Condenser_AirCooled ();

        void
        SimRefrigerationSystemElement_Condenser_AirCooled (const SimRefrigerationSystemElement_Condenser_AirCooled_sequence& s);

        // SimRefrigerationSystemElement_Condenser_Cascade
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Condenser_Cascade SimRefrigerationSystemElement_Condenser_Cascade_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Condenser_Cascade_type > SimRefrigerationSystemElement_Condenser_Cascade_sequence;
        typedef SimRefrigerationSystemElement_Condenser_Cascade_sequence::iterator SimRefrigerationSystemElement_Condenser_Cascade_iterator;
        typedef SimRefrigerationSystemElement_Condenser_Cascade_sequence::const_iterator SimRefrigerationSystemElement_Condenser_Cascade_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Condenser_Cascade_type, char > SimRefrigerationSystemElement_Condenser_Cascade_traits;

        const SimRefrigerationSystemElement_Condenser_Cascade_sequence&
        SimRefrigerationSystemElement_Condenser_Cascade () const;

        SimRefrigerationSystemElement_Condenser_Cascade_sequence&
        SimRefrigerationSystemElement_Condenser_Cascade ();

        void
        SimRefrigerationSystemElement_Condenser_Cascade (const SimRefrigerationSystemElement_Condenser_Cascade_sequence& s);

        // SimRefrigerationSystemElement_Condenser_EvaporativeCooled
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Condenser_EvaporativeCooled SimRefrigerationSystemElement_Condenser_EvaporativeCooled_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Condenser_EvaporativeCooled_type > SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence;
        typedef SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence::iterator SimRefrigerationSystemElement_Condenser_EvaporativeCooled_iterator;
        typedef SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence::const_iterator SimRefrigerationSystemElement_Condenser_EvaporativeCooled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Condenser_EvaporativeCooled_type, char > SimRefrigerationSystemElement_Condenser_EvaporativeCooled_traits;

        const SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence&
        SimRefrigerationSystemElement_Condenser_EvaporativeCooled () const;

        SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence&
        SimRefrigerationSystemElement_Condenser_EvaporativeCooled ();

        void
        SimRefrigerationSystemElement_Condenser_EvaporativeCooled (const SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence& s);

        // SimRefrigerationSystemElement_Condenser_WaterCooled
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Condenser_WaterCooled SimRefrigerationSystemElement_Condenser_WaterCooled_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Condenser_WaterCooled_type > SimRefrigerationSystemElement_Condenser_WaterCooled_sequence;
        typedef SimRefrigerationSystemElement_Condenser_WaterCooled_sequence::iterator SimRefrigerationSystemElement_Condenser_WaterCooled_iterator;
        typedef SimRefrigerationSystemElement_Condenser_WaterCooled_sequence::const_iterator SimRefrigerationSystemElement_Condenser_WaterCooled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Condenser_WaterCooled_type, char > SimRefrigerationSystemElement_Condenser_WaterCooled_traits;

        const SimRefrigerationSystemElement_Condenser_WaterCooled_sequence&
        SimRefrigerationSystemElement_Condenser_WaterCooled () const;

        SimRefrigerationSystemElement_Condenser_WaterCooled_sequence&
        SimRefrigerationSystemElement_Condenser_WaterCooled ();

        void
        SimRefrigerationSystemElement_Condenser_WaterCooled (const SimRefrigerationSystemElement_Condenser_WaterCooled_sequence& s);

        // SimRefrigerationSystemElement_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Default_Default SimRefrigerationSystemElement_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Default_Default_type > SimRefrigerationSystemElement_Default_Default_sequence;
        typedef SimRefrigerationSystemElement_Default_Default_sequence::iterator SimRefrigerationSystemElement_Default_Default_iterator;
        typedef SimRefrigerationSystemElement_Default_Default_sequence::const_iterator SimRefrigerationSystemElement_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Default_Default_type, char > SimRefrigerationSystemElement_Default_Default_traits;

        const SimRefrigerationSystemElement_Default_Default_sequence&
        SimRefrigerationSystemElement_Default_Default () const;

        SimRefrigerationSystemElement_Default_Default_sequence&
        SimRefrigerationSystemElement_Default_Default ();

        void
        SimRefrigerationSystemElement_Default_Default (const SimRefrigerationSystemElement_Default_Default_sequence& s);

        // SimRefrigerationSystemElement_GasCooler_AirCooled
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_GasCooler_AirCooled SimRefrigerationSystemElement_GasCooler_AirCooled_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_GasCooler_AirCooled_type > SimRefrigerationSystemElement_GasCooler_AirCooled_sequence;
        typedef SimRefrigerationSystemElement_GasCooler_AirCooled_sequence::iterator SimRefrigerationSystemElement_GasCooler_AirCooled_iterator;
        typedef SimRefrigerationSystemElement_GasCooler_AirCooled_sequence::const_iterator SimRefrigerationSystemElement_GasCooler_AirCooled_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_GasCooler_AirCooled_type, char > SimRefrigerationSystemElement_GasCooler_AirCooled_traits;

        const SimRefrigerationSystemElement_GasCooler_AirCooled_sequence&
        SimRefrigerationSystemElement_GasCooler_AirCooled () const;

        SimRefrigerationSystemElement_GasCooler_AirCooled_sequence&
        SimRefrigerationSystemElement_GasCooler_AirCooled ();

        void
        SimRefrigerationSystemElement_GasCooler_AirCooled (const SimRefrigerationSystemElement_GasCooler_AirCooled_sequence& s);

        // SimRefrigerationSystemElement_PackagedCompressorRack_Default
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_PackagedCompressorRack_Default SimRefrigerationSystemElement_PackagedCompressorRack_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_PackagedCompressorRack_Default_type > SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence;
        typedef SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence::iterator SimRefrigerationSystemElement_PackagedCompressorRack_Default_iterator;
        typedef SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence::const_iterator SimRefrigerationSystemElement_PackagedCompressorRack_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_PackagedCompressorRack_Default_type, char > SimRefrigerationSystemElement_PackagedCompressorRack_Default_traits;

        const SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence&
        SimRefrigerationSystemElement_PackagedCompressorRack_Default () const;

        SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence&
        SimRefrigerationSystemElement_PackagedCompressorRack_Default ();

        void
        SimRefrigerationSystemElement_PackagedCompressorRack_Default (const SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence& s);

        // SimRefrigerationSystemElement_RefrigeratedCase_Default
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_RefrigeratedCase_Default SimRefrigerationSystemElement_RefrigeratedCase_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_RefrigeratedCase_Default_type > SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence;
        typedef SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence::iterator SimRefrigerationSystemElement_RefrigeratedCase_Default_iterator;
        typedef SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence::const_iterator SimRefrigerationSystemElement_RefrigeratedCase_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_RefrigeratedCase_Default_type, char > SimRefrigerationSystemElement_RefrigeratedCase_Default_traits;

        const SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence&
        SimRefrigerationSystemElement_RefrigeratedCase_Default () const;

        SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence&
        SimRefrigerationSystemElement_RefrigeratedCase_Default ();

        void
        SimRefrigerationSystemElement_RefrigeratedCase_Default (const SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence& s);

        // SimRefrigerationSystemElement_RefrigerationChiller_AirChiller
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_RefrigerationChiller_AirChiller SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_type > SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence;
        typedef SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence::iterator SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_iterator;
        typedef SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence::const_iterator SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_type, char > SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_traits;

        const SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence&
        SimRefrigerationSystemElement_RefrigerationChiller_AirChiller () const;

        SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence&
        SimRefrigerationSystemElement_RefrigerationChiller_AirChiller ();

        void
        SimRefrigerationSystemElement_RefrigerationChiller_AirChiller (const SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence& s);

        // SimRefrigerationSystemElement_Subcooler_Default
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_Subcooler_Default SimRefrigerationSystemElement_Subcooler_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_Subcooler_Default_type > SimRefrigerationSystemElement_Subcooler_Default_sequence;
        typedef SimRefrigerationSystemElement_Subcooler_Default_sequence::iterator SimRefrigerationSystemElement_Subcooler_Default_iterator;
        typedef SimRefrigerationSystemElement_Subcooler_Default_sequence::const_iterator SimRefrigerationSystemElement_Subcooler_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_Subcooler_Default_type, char > SimRefrigerationSystemElement_Subcooler_Default_traits;

        const SimRefrigerationSystemElement_Subcooler_Default_sequence&
        SimRefrigerationSystemElement_Subcooler_Default () const;

        SimRefrigerationSystemElement_Subcooler_Default_sequence&
        SimRefrigerationSystemElement_Subcooler_Default ();

        void
        SimRefrigerationSystemElement_Subcooler_Default (const SimRefrigerationSystemElement_Subcooler_Default_sequence& s);

        // SimRefrigerationSystemElement_WalkInCooler_Default
        //
        typedef ::namespaces::Sim::MepModel::SimRefrigerationSystemElement_WalkInCooler_Default SimRefrigerationSystemElement_WalkInCooler_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRefrigerationSystemElement_WalkInCooler_Default_type > SimRefrigerationSystemElement_WalkInCooler_Default_sequence;
        typedef SimRefrigerationSystemElement_WalkInCooler_Default_sequence::iterator SimRefrigerationSystemElement_WalkInCooler_Default_iterator;
        typedef SimRefrigerationSystemElement_WalkInCooler_Default_sequence::const_iterator SimRefrigerationSystemElement_WalkInCooler_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRefrigerationSystemElement_WalkInCooler_Default_type, char > SimRefrigerationSystemElement_WalkInCooler_Default_traits;

        const SimRefrigerationSystemElement_WalkInCooler_Default_sequence&
        SimRefrigerationSystemElement_WalkInCooler_Default () const;

        SimRefrigerationSystemElement_WalkInCooler_Default_sequence&
        SimRefrigerationSystemElement_WalkInCooler_Default ();

        void
        SimRefrigerationSystemElement_WalkInCooler_Default (const SimRefrigerationSystemElement_WalkInCooler_Default_sequence& s);

        // SimRegularTimeSeries_Regular_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimRegularTimeSeries_Regular_Default SimRegularTimeSeries_Regular_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRegularTimeSeries_Regular_Default_type > SimRegularTimeSeries_Regular_Default_sequence;
        typedef SimRegularTimeSeries_Regular_Default_sequence::iterator SimRegularTimeSeries_Regular_Default_iterator;
        typedef SimRegularTimeSeries_Regular_Default_sequence::const_iterator SimRegularTimeSeries_Regular_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRegularTimeSeries_Regular_Default_type, char > SimRegularTimeSeries_Regular_Default_traits;

        const SimRegularTimeSeries_Regular_Default_sequence&
        SimRegularTimeSeries_Regular_Default () const;

        SimRegularTimeSeries_Regular_Default_sequence&
        SimRegularTimeSeries_Regular_Default ();

        void
        SimRegularTimeSeries_Regular_Default (const SimRegularTimeSeries_Regular_Default_sequence& s);

        // SimRepresentationMap_RepresentationMap_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimRepresentationMap_RepresentationMap_Default SimRepresentationMap_RepresentationMap_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRepresentationMap_RepresentationMap_Default_type > SimRepresentationMap_RepresentationMap_Default_sequence;
        typedef SimRepresentationMap_RepresentationMap_Default_sequence::iterator SimRepresentationMap_RepresentationMap_Default_iterator;
        typedef SimRepresentationMap_RepresentationMap_Default_sequence::const_iterator SimRepresentationMap_RepresentationMap_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRepresentationMap_RepresentationMap_Default_type, char > SimRepresentationMap_RepresentationMap_Default_traits;

        const SimRepresentationMap_RepresentationMap_Default_sequence&
        SimRepresentationMap_RepresentationMap_Default () const;

        SimRepresentationMap_RepresentationMap_Default_sequence&
        SimRepresentationMap_RepresentationMap_Default ();

        void
        SimRepresentationMap_RepresentationMap_Default (const SimRepresentationMap_RepresentationMap_Default_sequence& s);

        // SimResourceConsumption_ExteriorConsumption_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResourceConsumption_ExteriorConsumption_Default SimResourceConsumption_ExteriorConsumption_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResourceConsumption_ExteriorConsumption_Default_type > SimResourceConsumption_ExteriorConsumption_Default_sequence;
        typedef SimResourceConsumption_ExteriorConsumption_Default_sequence::iterator SimResourceConsumption_ExteriorConsumption_Default_iterator;
        typedef SimResourceConsumption_ExteriorConsumption_Default_sequence::const_iterator SimResourceConsumption_ExteriorConsumption_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResourceConsumption_ExteriorConsumption_Default_type, char > SimResourceConsumption_ExteriorConsumption_Default_traits;

        const SimResourceConsumption_ExteriorConsumption_Default_sequence&
        SimResourceConsumption_ExteriorConsumption_Default () const;

        SimResourceConsumption_ExteriorConsumption_Default_sequence&
        SimResourceConsumption_ExteriorConsumption_Default ();

        void
        SimResourceConsumption_ExteriorConsumption_Default (const SimResourceConsumption_ExteriorConsumption_Default_sequence& s);

        // SimResourceConsumption_ExteriorConsumption_Electricity
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResourceConsumption_ExteriorConsumption_Electricity SimResourceConsumption_ExteriorConsumption_Electricity_type;
        typedef ::xsd::cxx::tree::sequence< SimResourceConsumption_ExteriorConsumption_Electricity_type > SimResourceConsumption_ExteriorConsumption_Electricity_sequence;
        typedef SimResourceConsumption_ExteriorConsumption_Electricity_sequence::iterator SimResourceConsumption_ExteriorConsumption_Electricity_iterator;
        typedef SimResourceConsumption_ExteriorConsumption_Electricity_sequence::const_iterator SimResourceConsumption_ExteriorConsumption_Electricity_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResourceConsumption_ExteriorConsumption_Electricity_type, char > SimResourceConsumption_ExteriorConsumption_Electricity_traits;

        const SimResourceConsumption_ExteriorConsumption_Electricity_sequence&
        SimResourceConsumption_ExteriorConsumption_Electricity () const;

        SimResourceConsumption_ExteriorConsumption_Electricity_sequence&
        SimResourceConsumption_ExteriorConsumption_Electricity ();

        void
        SimResourceConsumption_ExteriorConsumption_Electricity (const SimResourceConsumption_ExteriorConsumption_Electricity_sequence& s);

        // SimResourceConsumption_ExteriorConsumption_Fuel
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResourceConsumption_ExteriorConsumption_Fuel SimResourceConsumption_ExteriorConsumption_Fuel_type;
        typedef ::xsd::cxx::tree::sequence< SimResourceConsumption_ExteriorConsumption_Fuel_type > SimResourceConsumption_ExteriorConsumption_Fuel_sequence;
        typedef SimResourceConsumption_ExteriorConsumption_Fuel_sequence::iterator SimResourceConsumption_ExteriorConsumption_Fuel_iterator;
        typedef SimResourceConsumption_ExteriorConsumption_Fuel_sequence::const_iterator SimResourceConsumption_ExteriorConsumption_Fuel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResourceConsumption_ExteriorConsumption_Fuel_type, char > SimResourceConsumption_ExteriorConsumption_Fuel_traits;

        const SimResourceConsumption_ExteriorConsumption_Fuel_sequence&
        SimResourceConsumption_ExteriorConsumption_Fuel () const;

        SimResourceConsumption_ExteriorConsumption_Fuel_sequence&
        SimResourceConsumption_ExteriorConsumption_Fuel ();

        void
        SimResourceConsumption_ExteriorConsumption_Fuel (const SimResourceConsumption_ExteriorConsumption_Fuel_sequence& s);

        // SimResourceConsumption_ExteriorConsumption_NaturalGas
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResourceConsumption_ExteriorConsumption_NaturalGas SimResourceConsumption_ExteriorConsumption_NaturalGas_type;
        typedef ::xsd::cxx::tree::sequence< SimResourceConsumption_ExteriorConsumption_NaturalGas_type > SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence;
        typedef SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence::iterator SimResourceConsumption_ExteriorConsumption_NaturalGas_iterator;
        typedef SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence::const_iterator SimResourceConsumption_ExteriorConsumption_NaturalGas_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResourceConsumption_ExteriorConsumption_NaturalGas_type, char > SimResourceConsumption_ExteriorConsumption_NaturalGas_traits;

        const SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence&
        SimResourceConsumption_ExteriorConsumption_NaturalGas () const;

        SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence&
        SimResourceConsumption_ExteriorConsumption_NaturalGas ();

        void
        SimResourceConsumption_ExteriorConsumption_NaturalGas (const SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence& s);

        // SimResourceConsumption_ExteriorConsumption_Water
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResourceConsumption_ExteriorConsumption_Water SimResourceConsumption_ExteriorConsumption_Water_type;
        typedef ::xsd::cxx::tree::sequence< SimResourceConsumption_ExteriorConsumption_Water_type > SimResourceConsumption_ExteriorConsumption_Water_sequence;
        typedef SimResourceConsumption_ExteriorConsumption_Water_sequence::iterator SimResourceConsumption_ExteriorConsumption_Water_iterator;
        typedef SimResourceConsumption_ExteriorConsumption_Water_sequence::const_iterator SimResourceConsumption_ExteriorConsumption_Water_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResourceConsumption_ExteriorConsumption_Water_type, char > SimResourceConsumption_ExteriorConsumption_Water_traits;

        const SimResourceConsumption_ExteriorConsumption_Water_sequence&
        SimResourceConsumption_ExteriorConsumption_Water () const;

        SimResourceConsumption_ExteriorConsumption_Water_sequence&
        SimResourceConsumption_ExteriorConsumption_Water ();

        void
        SimResourceConsumption_ExteriorConsumption_Water (const SimResourceConsumption_ExteriorConsumption_Water_sequence& s);

        // SimResourceConsumption_InteriorConsumption_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResourceConsumption_InteriorConsumption_Default SimResourceConsumption_InteriorConsumption_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResourceConsumption_InteriorConsumption_Default_type > SimResourceConsumption_InteriorConsumption_Default_sequence;
        typedef SimResourceConsumption_InteriorConsumption_Default_sequence::iterator SimResourceConsumption_InteriorConsumption_Default_iterator;
        typedef SimResourceConsumption_InteriorConsumption_Default_sequence::const_iterator SimResourceConsumption_InteriorConsumption_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResourceConsumption_InteriorConsumption_Default_type, char > SimResourceConsumption_InteriorConsumption_Default_traits;

        const SimResourceConsumption_InteriorConsumption_Default_sequence&
        SimResourceConsumption_InteriorConsumption_Default () const;

        SimResourceConsumption_InteriorConsumption_Default_sequence&
        SimResourceConsumption_InteriorConsumption_Default ();

        void
        SimResourceConsumption_InteriorConsumption_Default (const SimResourceConsumption_InteriorConsumption_Default_sequence& s);

        // SimResultsGuide_ResultsGuide_CustomTemplate
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsGuide_ResultsGuide_CustomTemplate SimResultsGuide_ResultsGuide_CustomTemplate_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsGuide_ResultsGuide_CustomTemplate_type > SimResultsGuide_ResultsGuide_CustomTemplate_sequence;
        typedef SimResultsGuide_ResultsGuide_CustomTemplate_sequence::iterator SimResultsGuide_ResultsGuide_CustomTemplate_iterator;
        typedef SimResultsGuide_ResultsGuide_CustomTemplate_sequence::const_iterator SimResultsGuide_ResultsGuide_CustomTemplate_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsGuide_ResultsGuide_CustomTemplate_type, char > SimResultsGuide_ResultsGuide_CustomTemplate_traits;

        const SimResultsGuide_ResultsGuide_CustomTemplate_sequence&
        SimResultsGuide_ResultsGuide_CustomTemplate () const;

        SimResultsGuide_ResultsGuide_CustomTemplate_sequence&
        SimResultsGuide_ResultsGuide_CustomTemplate ();

        void
        SimResultsGuide_ResultsGuide_CustomTemplate (const SimResultsGuide_ResultsGuide_CustomTemplate_sequence& s);

        // SimResultsGuide_ResultsGuide_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsGuide_ResultsGuide_Default SimResultsGuide_ResultsGuide_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsGuide_ResultsGuide_Default_type > SimResultsGuide_ResultsGuide_Default_sequence;
        typedef SimResultsGuide_ResultsGuide_Default_sequence::iterator SimResultsGuide_ResultsGuide_Default_iterator;
        typedef SimResultsGuide_ResultsGuide_Default_sequence::const_iterator SimResultsGuide_ResultsGuide_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsGuide_ResultsGuide_Default_type, char > SimResultsGuide_ResultsGuide_Default_traits;

        const SimResultsGuide_ResultsGuide_Default_sequence&
        SimResultsGuide_ResultsGuide_Default () const;

        SimResultsGuide_ResultsGuide_Default_sequence&
        SimResultsGuide_ResultsGuide_Default ();

        void
        SimResultsGuide_ResultsGuide_Default (const SimResultsGuide_ResultsGuide_Default_sequence& s);

        // SimResultsGuide_ResultsGuide_PackageTemplate
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsGuide_ResultsGuide_PackageTemplate SimResultsGuide_ResultsGuide_PackageTemplate_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsGuide_ResultsGuide_PackageTemplate_type > SimResultsGuide_ResultsGuide_PackageTemplate_sequence;
        typedef SimResultsGuide_ResultsGuide_PackageTemplate_sequence::iterator SimResultsGuide_ResultsGuide_PackageTemplate_iterator;
        typedef SimResultsGuide_ResultsGuide_PackageTemplate_sequence::const_iterator SimResultsGuide_ResultsGuide_PackageTemplate_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsGuide_ResultsGuide_PackageTemplate_type, char > SimResultsGuide_ResultsGuide_PackageTemplate_traits;

        const SimResultsGuide_ResultsGuide_PackageTemplate_sequence&
        SimResultsGuide_ResultsGuide_PackageTemplate () const;

        SimResultsGuide_ResultsGuide_PackageTemplate_sequence&
        SimResultsGuide_ResultsGuide_PackageTemplate ();

        void
        SimResultsGuide_ResultsGuide_PackageTemplate (const SimResultsGuide_ResultsGuide_PackageTemplate_sequence& s);

        // SimResultsTextInfo_ResultsTextInfo_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsTextInfo_ResultsTextInfo_Default SimResultsTextInfo_ResultsTextInfo_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsTextInfo_ResultsTextInfo_Default_type > SimResultsTextInfo_ResultsTextInfo_Default_sequence;
        typedef SimResultsTextInfo_ResultsTextInfo_Default_sequence::iterator SimResultsTextInfo_ResultsTextInfo_Default_iterator;
        typedef SimResultsTextInfo_ResultsTextInfo_Default_sequence::const_iterator SimResultsTextInfo_ResultsTextInfo_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsTextInfo_ResultsTextInfo_Default_type, char > SimResultsTextInfo_ResultsTextInfo_Default_traits;

        const SimResultsTextInfo_ResultsTextInfo_Default_sequence&
        SimResultsTextInfo_ResultsTextInfo_Default () const;

        SimResultsTextInfo_ResultsTextInfo_Default_sequence&
        SimResultsTextInfo_ResultsTextInfo_Default ();

        void
        SimResultsTextInfo_ResultsTextInfo_Default (const SimResultsTextInfo_ResultsTextInfo_Default_sequence& s);

        // SimResultsVariables_ResultsVariables_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsVariables_ResultsVariables_Default SimResultsVariables_ResultsVariables_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsVariables_ResultsVariables_Default_type > SimResultsVariables_ResultsVariables_Default_sequence;
        typedef SimResultsVariables_ResultsVariables_Default_sequence::iterator SimResultsVariables_ResultsVariables_Default_iterator;
        typedef SimResultsVariables_ResultsVariables_Default_sequence::const_iterator SimResultsVariables_ResultsVariables_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsVariables_ResultsVariables_Default_type, char > SimResultsVariables_ResultsVariables_Default_traits;

        const SimResultsVariables_ResultsVariables_Default_sequence&
        SimResultsVariables_ResultsVariables_Default () const;

        SimResultsVariables_ResultsVariables_Default_sequence&
        SimResultsVariables_ResultsVariables_Default ();

        void
        SimResultsVariables_ResultsVariables_Default (const SimResultsVariables_ResultsVariables_Default_sequence& s);

        // SimResultsView_ResultsView_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsView_ResultsView_Default SimResultsView_ResultsView_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsView_ResultsView_Default_type > SimResultsView_ResultsView_Default_sequence;
        typedef SimResultsView_ResultsView_Default_sequence::iterator SimResultsView_ResultsView_Default_iterator;
        typedef SimResultsView_ResultsView_Default_sequence::const_iterator SimResultsView_ResultsView_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsView_ResultsView_Default_type, char > SimResultsView_ResultsView_Default_traits;

        const SimResultsView_ResultsView_Default_sequence&
        SimResultsView_ResultsView_Default () const;

        SimResultsView_ResultsView_Default_sequence&
        SimResultsView_ResultsView_Default ();

        void
        SimResultsView_ResultsView_Default (const SimResultsView_ResultsView_Default_sequence& s);

        // SimResultsViewSet_ResultsViewSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimResultsViewSet_ResultsViewSet_Default SimResultsViewSet_ResultsViewSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimResultsViewSet_ResultsViewSet_Default_type > SimResultsViewSet_ResultsViewSet_Default_sequence;
        typedef SimResultsViewSet_ResultsViewSet_Default_sequence::iterator SimResultsViewSet_ResultsViewSet_Default_iterator;
        typedef SimResultsViewSet_ResultsViewSet_Default_sequence::const_iterator SimResultsViewSet_ResultsViewSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimResultsViewSet_ResultsViewSet_Default_type, char > SimResultsViewSet_ResultsViewSet_Default_traits;

        const SimResultsViewSet_ResultsViewSet_Default_sequence&
        SimResultsViewSet_ResultsViewSet_Default () const;

        SimResultsViewSet_ResultsViewSet_Default_sequence&
        SimResultsViewSet_ResultsViewSet_Default ();

        void
        SimResultsViewSet_ResultsViewSet_Default (const SimResultsViewSet_ResultsViewSet_Default_sequence& s);

        // SimRoof_Roof_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimRoof_Roof_Default SimRoof_Roof_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimRoof_Roof_Default_type > SimRoof_Roof_Default_sequence;
        typedef SimRoof_Roof_Default_sequence::iterator SimRoof_Roof_Default_iterator;
        typedef SimRoof_Roof_Default_sequence::const_iterator SimRoof_Roof_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimRoof_Roof_Default_type, char > SimRoof_Roof_Default_traits;

        const SimRoof_Roof_Default_sequence&
        SimRoof_Roof_Default () const;

        SimRoof_Roof_Default_sequence&
        SimRoof_Roof_Default ();

        void
        SimRoof_Roof_Default (const SimRoof_Roof_Default_sequence& s);

        // SimSensor_AirVelocitySensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_AirVelocitySensor_Default SimSensor_AirVelocitySensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_AirVelocitySensor_Default_type > SimSensor_AirVelocitySensor_Default_sequence;
        typedef SimSensor_AirVelocitySensor_Default_sequence::iterator SimSensor_AirVelocitySensor_Default_iterator;
        typedef SimSensor_AirVelocitySensor_Default_sequence::const_iterator SimSensor_AirVelocitySensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_AirVelocitySensor_Default_type, char > SimSensor_AirVelocitySensor_Default_traits;

        const SimSensor_AirVelocitySensor_Default_sequence&
        SimSensor_AirVelocitySensor_Default () const;

        SimSensor_AirVelocitySensor_Default_sequence&
        SimSensor_AirVelocitySensor_Default ();

        void
        SimSensor_AirVelocitySensor_Default (const SimSensor_AirVelocitySensor_Default_sequence& s);

        // SimSensor_Default_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_Default_Default SimSensor_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_Default_Default_type > SimSensor_Default_Default_sequence;
        typedef SimSensor_Default_Default_sequence::iterator SimSensor_Default_Default_iterator;
        typedef SimSensor_Default_Default_sequence::const_iterator SimSensor_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_Default_Default_type, char > SimSensor_Default_Default_traits;

        const SimSensor_Default_Default_sequence&
        SimSensor_Default_Default () const;

        SimSensor_Default_Default_sequence&
        SimSensor_Default_Default ();

        void
        SimSensor_Default_Default (const SimSensor_Default_Default_sequence& s);

        // SimSensor_FireSensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_FireSensor_Default SimSensor_FireSensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_FireSensor_Default_type > SimSensor_FireSensor_Default_sequence;
        typedef SimSensor_FireSensor_Default_sequence::iterator SimSensor_FireSensor_Default_iterator;
        typedef SimSensor_FireSensor_Default_sequence::const_iterator SimSensor_FireSensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_FireSensor_Default_type, char > SimSensor_FireSensor_Default_traits;

        const SimSensor_FireSensor_Default_sequence&
        SimSensor_FireSensor_Default () const;

        SimSensor_FireSensor_Default_sequence&
        SimSensor_FireSensor_Default ();

        void
        SimSensor_FireSensor_Default (const SimSensor_FireSensor_Default_sequence& s);

        // SimSensor_GasSensor_CO2Sensor
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_GasSensor_CO2Sensor SimSensor_GasSensor_CO2Sensor_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_GasSensor_CO2Sensor_type > SimSensor_GasSensor_CO2Sensor_sequence;
        typedef SimSensor_GasSensor_CO2Sensor_sequence::iterator SimSensor_GasSensor_CO2Sensor_iterator;
        typedef SimSensor_GasSensor_CO2Sensor_sequence::const_iterator SimSensor_GasSensor_CO2Sensor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_GasSensor_CO2Sensor_type, char > SimSensor_GasSensor_CO2Sensor_traits;

        const SimSensor_GasSensor_CO2Sensor_sequence&
        SimSensor_GasSensor_CO2Sensor () const;

        SimSensor_GasSensor_CO2Sensor_sequence&
        SimSensor_GasSensor_CO2Sensor ();

        void
        SimSensor_GasSensor_CO2Sensor (const SimSensor_GasSensor_CO2Sensor_sequence& s);

        // SimSensor_GasSensor_SmokeSensor
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_GasSensor_SmokeSensor SimSensor_GasSensor_SmokeSensor_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_GasSensor_SmokeSensor_type > SimSensor_GasSensor_SmokeSensor_sequence;
        typedef SimSensor_GasSensor_SmokeSensor_sequence::iterator SimSensor_GasSensor_SmokeSensor_iterator;
        typedef SimSensor_GasSensor_SmokeSensor_sequence::const_iterator SimSensor_GasSensor_SmokeSensor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_GasSensor_SmokeSensor_type, char > SimSensor_GasSensor_SmokeSensor_traits;

        const SimSensor_GasSensor_SmokeSensor_sequence&
        SimSensor_GasSensor_SmokeSensor () const;

        SimSensor_GasSensor_SmokeSensor_sequence&
        SimSensor_GasSensor_SmokeSensor ();

        void
        SimSensor_GasSensor_SmokeSensor (const SimSensor_GasSensor_SmokeSensor_sequence& s);

        // SimSensor_HeatSensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_HeatSensor_Default SimSensor_HeatSensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_HeatSensor_Default_type > SimSensor_HeatSensor_Default_sequence;
        typedef SimSensor_HeatSensor_Default_sequence::iterator SimSensor_HeatSensor_Default_iterator;
        typedef SimSensor_HeatSensor_Default_sequence::const_iterator SimSensor_HeatSensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_HeatSensor_Default_type, char > SimSensor_HeatSensor_Default_traits;

        const SimSensor_HeatSensor_Default_sequence&
        SimSensor_HeatSensor_Default () const;

        SimSensor_HeatSensor_Default_sequence&
        SimSensor_HeatSensor_Default ();

        void
        SimSensor_HeatSensor_Default (const SimSensor_HeatSensor_Default_sequence& s);

        // SimSensor_LuxSensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_LuxSensor_Default SimSensor_LuxSensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_LuxSensor_Default_type > SimSensor_LuxSensor_Default_sequence;
        typedef SimSensor_LuxSensor_Default_sequence::iterator SimSensor_LuxSensor_Default_iterator;
        typedef SimSensor_LuxSensor_Default_sequence::const_iterator SimSensor_LuxSensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_LuxSensor_Default_type, char > SimSensor_LuxSensor_Default_traits;

        const SimSensor_LuxSensor_Default_sequence&
        SimSensor_LuxSensor_Default () const;

        SimSensor_LuxSensor_Default_sequence&
        SimSensor_LuxSensor_Default ();

        void
        SimSensor_LuxSensor_Default (const SimSensor_LuxSensor_Default_sequence& s);

        // SimSensor_Meter_AirFlowRateMeter
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_Meter_AirFlowRateMeter SimSensor_Meter_AirFlowRateMeter_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_Meter_AirFlowRateMeter_type > SimSensor_Meter_AirFlowRateMeter_sequence;
        typedef SimSensor_Meter_AirFlowRateMeter_sequence::iterator SimSensor_Meter_AirFlowRateMeter_iterator;
        typedef SimSensor_Meter_AirFlowRateMeter_sequence::const_iterator SimSensor_Meter_AirFlowRateMeter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_Meter_AirFlowRateMeter_type, char > SimSensor_Meter_AirFlowRateMeter_traits;

        const SimSensor_Meter_AirFlowRateMeter_sequence&
        SimSensor_Meter_AirFlowRateMeter () const;

        SimSensor_Meter_AirFlowRateMeter_sequence&
        SimSensor_Meter_AirFlowRateMeter ();

        void
        SimSensor_Meter_AirFlowRateMeter (const SimSensor_Meter_AirFlowRateMeter_sequence& s);

        // SimSensor_Meter_FluidFlowRateMeter
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_Meter_FluidFlowRateMeter SimSensor_Meter_FluidFlowRateMeter_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_Meter_FluidFlowRateMeter_type > SimSensor_Meter_FluidFlowRateMeter_sequence;
        typedef SimSensor_Meter_FluidFlowRateMeter_sequence::iterator SimSensor_Meter_FluidFlowRateMeter_iterator;
        typedef SimSensor_Meter_FluidFlowRateMeter_sequence::const_iterator SimSensor_Meter_FluidFlowRateMeter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_Meter_FluidFlowRateMeter_type, char > SimSensor_Meter_FluidFlowRateMeter_traits;

        const SimSensor_Meter_FluidFlowRateMeter_sequence&
        SimSensor_Meter_FluidFlowRateMeter () const;

        SimSensor_Meter_FluidFlowRateMeter_sequence&
        SimSensor_Meter_FluidFlowRateMeter ();

        void
        SimSensor_Meter_FluidFlowRateMeter (const SimSensor_Meter_FluidFlowRateMeter_sequence& s);

        // SimSensor_Meter_HvacZoneWaterUseMeter
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_Meter_HvacZoneWaterUseMeter SimSensor_Meter_HvacZoneWaterUseMeter_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_Meter_HvacZoneWaterUseMeter_type > SimSensor_Meter_HvacZoneWaterUseMeter_sequence;
        typedef SimSensor_Meter_HvacZoneWaterUseMeter_sequence::iterator SimSensor_Meter_HvacZoneWaterUseMeter_iterator;
        typedef SimSensor_Meter_HvacZoneWaterUseMeter_sequence::const_iterator SimSensor_Meter_HvacZoneWaterUseMeter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_Meter_HvacZoneWaterUseMeter_type, char > SimSensor_Meter_HvacZoneWaterUseMeter_traits;

        const SimSensor_Meter_HvacZoneWaterUseMeter_sequence&
        SimSensor_Meter_HvacZoneWaterUseMeter () const;

        SimSensor_Meter_HvacZoneWaterUseMeter_sequence&
        SimSensor_Meter_HvacZoneWaterUseMeter ();

        void
        SimSensor_Meter_HvacZoneWaterUseMeter (const SimSensor_Meter_HvacZoneWaterUseMeter_sequence& s);

        // SimSensor_MovementSensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_MovementSensor_Default SimSensor_MovementSensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_MovementSensor_Default_type > SimSensor_MovementSensor_Default_sequence;
        typedef SimSensor_MovementSensor_Default_sequence::iterator SimSensor_MovementSensor_Default_iterator;
        typedef SimSensor_MovementSensor_Default_sequence::const_iterator SimSensor_MovementSensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_MovementSensor_Default_type, char > SimSensor_MovementSensor_Default_traits;

        const SimSensor_MovementSensor_Default_sequence&
        SimSensor_MovementSensor_Default () const;

        SimSensor_MovementSensor_Default_sequence&
        SimSensor_MovementSensor_Default ();

        void
        SimSensor_MovementSensor_Default (const SimSensor_MovementSensor_Default_sequence& s);

        // SimSensor_PressureSensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_PressureSensor_Default SimSensor_PressureSensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_PressureSensor_Default_type > SimSensor_PressureSensor_Default_sequence;
        typedef SimSensor_PressureSensor_Default_sequence::iterator SimSensor_PressureSensor_Default_iterator;
        typedef SimSensor_PressureSensor_Default_sequence::const_iterator SimSensor_PressureSensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_PressureSensor_Default_type, char > SimSensor_PressureSensor_Default_traits;

        const SimSensor_PressureSensor_Default_sequence&
        SimSensor_PressureSensor_Default () const;

        SimSensor_PressureSensor_Default_sequence&
        SimSensor_PressureSensor_Default ();

        void
        SimSensor_PressureSensor_Default (const SimSensor_PressureSensor_Default_sequence& s);

        // SimSensor_RelativeHumidity_Type1
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_RelativeHumidity_Type1 SimSensor_RelativeHumidity_Type1_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_RelativeHumidity_Type1_type > SimSensor_RelativeHumidity_Type1_sequence;
        typedef SimSensor_RelativeHumidity_Type1_sequence::iterator SimSensor_RelativeHumidity_Type1_iterator;
        typedef SimSensor_RelativeHumidity_Type1_sequence::const_iterator SimSensor_RelativeHumidity_Type1_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_RelativeHumidity_Type1_type, char > SimSensor_RelativeHumidity_Type1_traits;

        const SimSensor_RelativeHumidity_Type1_sequence&
        SimSensor_RelativeHumidity_Type1 () const;

        SimSensor_RelativeHumidity_Type1_sequence&
        SimSensor_RelativeHumidity_Type1 ();

        void
        SimSensor_RelativeHumidity_Type1 (const SimSensor_RelativeHumidity_Type1_sequence& s);

        // SimSensor_RelativeHumidity_Type2
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_RelativeHumidity_Type2 SimSensor_RelativeHumidity_Type2_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_RelativeHumidity_Type2_type > SimSensor_RelativeHumidity_Type2_sequence;
        typedef SimSensor_RelativeHumidity_Type2_sequence::iterator SimSensor_RelativeHumidity_Type2_iterator;
        typedef SimSensor_RelativeHumidity_Type2_sequence::const_iterator SimSensor_RelativeHumidity_Type2_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_RelativeHumidity_Type2_type, char > SimSensor_RelativeHumidity_Type2_traits;

        const SimSensor_RelativeHumidity_Type2_sequence&
        SimSensor_RelativeHumidity_Type2 () const;

        SimSensor_RelativeHumidity_Type2_sequence&
        SimSensor_RelativeHumidity_Type2 ();

        void
        SimSensor_RelativeHumidity_Type2 (const SimSensor_RelativeHumidity_Type2_sequence& s);

        // SimSensor_SolarRadiation_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_SolarRadiation_Default SimSensor_SolarRadiation_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_SolarRadiation_Default_type > SimSensor_SolarRadiation_Default_sequence;
        typedef SimSensor_SolarRadiation_Default_sequence::iterator SimSensor_SolarRadiation_Default_iterator;
        typedef SimSensor_SolarRadiation_Default_sequence::const_iterator SimSensor_SolarRadiation_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_SolarRadiation_Default_type, char > SimSensor_SolarRadiation_Default_traits;

        const SimSensor_SolarRadiation_Default_sequence&
        SimSensor_SolarRadiation_Default () const;

        SimSensor_SolarRadiation_Default_sequence&
        SimSensor_SolarRadiation_Default ();

        void
        SimSensor_SolarRadiation_Default (const SimSensor_SolarRadiation_Default_sequence& s);

        // SimSensor_SoundSensor_Default
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_SoundSensor_Default SimSensor_SoundSensor_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_SoundSensor_Default_type > SimSensor_SoundSensor_Default_sequence;
        typedef SimSensor_SoundSensor_Default_sequence::iterator SimSensor_SoundSensor_Default_iterator;
        typedef SimSensor_SoundSensor_Default_sequence::const_iterator SimSensor_SoundSensor_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_SoundSensor_Default_type, char > SimSensor_SoundSensor_Default_traits;

        const SimSensor_SoundSensor_Default_sequence&
        SimSensor_SoundSensor_Default () const;

        SimSensor_SoundSensor_Default_sequence&
        SimSensor_SoundSensor_Default ();

        void
        SimSensor_SoundSensor_Default (const SimSensor_SoundSensor_Default_sequence& s);

        // SimSensor_TemperatureSensor_DryBulb
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_TemperatureSensor_DryBulb SimSensor_TemperatureSensor_DryBulb_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_TemperatureSensor_DryBulb_type > SimSensor_TemperatureSensor_DryBulb_sequence;
        typedef SimSensor_TemperatureSensor_DryBulb_sequence::iterator SimSensor_TemperatureSensor_DryBulb_iterator;
        typedef SimSensor_TemperatureSensor_DryBulb_sequence::const_iterator SimSensor_TemperatureSensor_DryBulb_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_TemperatureSensor_DryBulb_type, char > SimSensor_TemperatureSensor_DryBulb_traits;

        const SimSensor_TemperatureSensor_DryBulb_sequence&
        SimSensor_TemperatureSensor_DryBulb () const;

        SimSensor_TemperatureSensor_DryBulb_sequence&
        SimSensor_TemperatureSensor_DryBulb ();

        void
        SimSensor_TemperatureSensor_DryBulb (const SimSensor_TemperatureSensor_DryBulb_sequence& s);

        // SimSensor_TemperatureSensor_Fluid
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_TemperatureSensor_Fluid SimSensor_TemperatureSensor_Fluid_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_TemperatureSensor_Fluid_type > SimSensor_TemperatureSensor_Fluid_sequence;
        typedef SimSensor_TemperatureSensor_Fluid_sequence::iterator SimSensor_TemperatureSensor_Fluid_iterator;
        typedef SimSensor_TemperatureSensor_Fluid_sequence::const_iterator SimSensor_TemperatureSensor_Fluid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_TemperatureSensor_Fluid_type, char > SimSensor_TemperatureSensor_Fluid_traits;

        const SimSensor_TemperatureSensor_Fluid_sequence&
        SimSensor_TemperatureSensor_Fluid () const;

        SimSensor_TemperatureSensor_Fluid_sequence&
        SimSensor_TemperatureSensor_Fluid ();

        void
        SimSensor_TemperatureSensor_Fluid (const SimSensor_TemperatureSensor_Fluid_sequence& s);

        // SimSensor_TemperatureSensor_Radiant
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_TemperatureSensor_Radiant SimSensor_TemperatureSensor_Radiant_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_TemperatureSensor_Radiant_type > SimSensor_TemperatureSensor_Radiant_sequence;
        typedef SimSensor_TemperatureSensor_Radiant_sequence::iterator SimSensor_TemperatureSensor_Radiant_iterator;
        typedef SimSensor_TemperatureSensor_Radiant_sequence::const_iterator SimSensor_TemperatureSensor_Radiant_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_TemperatureSensor_Radiant_type, char > SimSensor_TemperatureSensor_Radiant_traits;

        const SimSensor_TemperatureSensor_Radiant_sequence&
        SimSensor_TemperatureSensor_Radiant () const;

        SimSensor_TemperatureSensor_Radiant_sequence&
        SimSensor_TemperatureSensor_Radiant ();

        void
        SimSensor_TemperatureSensor_Radiant (const SimSensor_TemperatureSensor_Radiant_sequence& s);

        // SimSensor_TemperatureSensor_WetBulb
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_TemperatureSensor_WetBulb SimSensor_TemperatureSensor_WetBulb_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_TemperatureSensor_WetBulb_type > SimSensor_TemperatureSensor_WetBulb_sequence;
        typedef SimSensor_TemperatureSensor_WetBulb_sequence::iterator SimSensor_TemperatureSensor_WetBulb_iterator;
        typedef SimSensor_TemperatureSensor_WetBulb_sequence::const_iterator SimSensor_TemperatureSensor_WetBulb_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_TemperatureSensor_WetBulb_type, char > SimSensor_TemperatureSensor_WetBulb_traits;

        const SimSensor_TemperatureSensor_WetBulb_sequence&
        SimSensor_TemperatureSensor_WetBulb () const;

        SimSensor_TemperatureSensor_WetBulb_sequence&
        SimSensor_TemperatureSensor_WetBulb ();

        void
        SimSensor_TemperatureSensor_WetBulb (const SimSensor_TemperatureSensor_WetBulb_sequence& s);

        // SimSensor_VirtualSensor_EmsSensor
        //
        typedef ::namespaces::Sim::MepModel::SimSensor_VirtualSensor_EmsSensor SimSensor_VirtualSensor_EmsSensor_type;
        typedef ::xsd::cxx::tree::sequence< SimSensor_VirtualSensor_EmsSensor_type > SimSensor_VirtualSensor_EmsSensor_sequence;
        typedef SimSensor_VirtualSensor_EmsSensor_sequence::iterator SimSensor_VirtualSensor_EmsSensor_iterator;
        typedef SimSensor_VirtualSensor_EmsSensor_sequence::const_iterator SimSensor_VirtualSensor_EmsSensor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSensor_VirtualSensor_EmsSensor_type, char > SimSensor_VirtualSensor_EmsSensor_traits;

        const SimSensor_VirtualSensor_EmsSensor_sequence&
        SimSensor_VirtualSensor_EmsSensor () const;

        SimSensor_VirtualSensor_EmsSensor_sequence&
        SimSensor_VirtualSensor_EmsSensor ();

        void
        SimSensor_VirtualSensor_EmsSensor (const SimSensor_VirtualSensor_EmsSensor_sequence& s);

        // SimShapeRepresentation_ShapeRepresentation_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimShapeRepresentation_ShapeRepresentation_Default SimShapeRepresentation_ShapeRepresentation_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimShapeRepresentation_ShapeRepresentation_Default_type > SimShapeRepresentation_ShapeRepresentation_Default_sequence;
        typedef SimShapeRepresentation_ShapeRepresentation_Default_sequence::iterator SimShapeRepresentation_ShapeRepresentation_Default_iterator;
        typedef SimShapeRepresentation_ShapeRepresentation_Default_sequence::const_iterator SimShapeRepresentation_ShapeRepresentation_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimShapeRepresentation_ShapeRepresentation_Default_type, char > SimShapeRepresentation_ShapeRepresentation_Default_traits;

        const SimShapeRepresentation_ShapeRepresentation_Default_sequence&
        SimShapeRepresentation_ShapeRepresentation_Default () const;

        SimShapeRepresentation_ShapeRepresentation_Default_sequence&
        SimShapeRepresentation_ShapeRepresentation_Default ();

        void
        SimShapeRepresentation_ShapeRepresentation_Default (const SimShapeRepresentation_ShapeRepresentation_Default_sequence& s);

        // SimSimpleProperty_SimpleProp_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimpleProperty_SimpleProp_Default SimSimpleProperty_SimpleProp_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimpleProperty_SimpleProp_Default_type > SimSimpleProperty_SimpleProp_Default_sequence;
        typedef SimSimpleProperty_SimpleProp_Default_sequence::iterator SimSimpleProperty_SimpleProp_Default_iterator;
        typedef SimSimpleProperty_SimpleProp_Default_sequence::const_iterator SimSimpleProperty_SimpleProp_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimpleProperty_SimpleProp_Default_type, char > SimSimpleProperty_SimpleProp_Default_traits;

        const SimSimpleProperty_SimpleProp_Default_sequence&
        SimSimpleProperty_SimpleProp_Default () const;

        SimSimpleProperty_SimpleProp_Default_sequence&
        SimSimpleProperty_SimpleProp_Default ();

        void
        SimSimpleProperty_SimpleProp_Default (const SimSimpleProperty_SimpleProp_Default_sequence& s);

        // SimSimpleProperty_SimpleProp_ListValue
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimpleProperty_SimpleProp_ListValue SimSimpleProperty_SimpleProp_ListValue_type;
        typedef ::xsd::cxx::tree::sequence< SimSimpleProperty_SimpleProp_ListValue_type > SimSimpleProperty_SimpleProp_ListValue_sequence;
        typedef SimSimpleProperty_SimpleProp_ListValue_sequence::iterator SimSimpleProperty_SimpleProp_ListValue_iterator;
        typedef SimSimpleProperty_SimpleProp_ListValue_sequence::const_iterator SimSimpleProperty_SimpleProp_ListValue_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimpleProperty_SimpleProp_ListValue_type, char > SimSimpleProperty_SimpleProp_ListValue_traits;

        const SimSimpleProperty_SimpleProp_ListValue_sequence&
        SimSimpleProperty_SimpleProp_ListValue () const;

        SimSimpleProperty_SimpleProp_ListValue_sequence&
        SimSimpleProperty_SimpleProp_ListValue ();

        void
        SimSimpleProperty_SimpleProp_ListValue (const SimSimpleProperty_SimpleProp_ListValue_sequence& s);

        // SimSimpleProperty_SimpleProp_SingleValue
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimpleProperty_SimpleProp_SingleValue SimSimpleProperty_SimpleProp_SingleValue_type;
        typedef ::xsd::cxx::tree::sequence< SimSimpleProperty_SimpleProp_SingleValue_type > SimSimpleProperty_SimpleProp_SingleValue_sequence;
        typedef SimSimpleProperty_SimpleProp_SingleValue_sequence::iterator SimSimpleProperty_SimpleProp_SingleValue_iterator;
        typedef SimSimpleProperty_SimpleProp_SingleValue_sequence::const_iterator SimSimpleProperty_SimpleProp_SingleValue_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimpleProperty_SimpleProp_SingleValue_type, char > SimSimpleProperty_SimpleProp_SingleValue_traits;

        const SimSimpleProperty_SimpleProp_SingleValue_sequence&
        SimSimpleProperty_SimpleProp_SingleValue () const;

        SimSimpleProperty_SimpleProp_SingleValue_sequence&
        SimSimpleProperty_SimpleProp_SingleValue ();

        void
        SimSimpleProperty_SimpleProp_SingleValue (const SimSimpleProperty_SimpleProp_SingleValue_sequence& s);

        // SimSimulationConfiguration_SimulationConfiguration_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationConfiguration_SimulationConfiguration_Default SimSimulationConfiguration_SimulationConfiguration_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationConfiguration_SimulationConfiguration_Default_type > SimSimulationConfiguration_SimulationConfiguration_Default_sequence;
        typedef SimSimulationConfiguration_SimulationConfiguration_Default_sequence::iterator SimSimulationConfiguration_SimulationConfiguration_Default_iterator;
        typedef SimSimulationConfiguration_SimulationConfiguration_Default_sequence::const_iterator SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationConfiguration_SimulationConfiguration_Default_type, char > SimSimulationConfiguration_SimulationConfiguration_Default_traits;

        const SimSimulationConfiguration_SimulationConfiguration_Default_sequence&
        SimSimulationConfiguration_SimulationConfiguration_Default () const;

        SimSimulationConfiguration_SimulationConfiguration_Default_sequence&
        SimSimulationConfiguration_SimulationConfiguration_Default ();

        void
        SimSimulationConfiguration_SimulationConfiguration_Default (const SimSimulationConfiguration_SimulationConfiguration_Default_sequence& s);

        // SimSimulationOutputFormat_ControlReportingTolerances_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputFormat_ControlReportingTolerances_Default SimSimulationOutputFormat_ControlReportingTolerances_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputFormat_ControlReportingTolerances_Default_type > SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence;
        typedef SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence::iterator SimSimulationOutputFormat_ControlReportingTolerances_Default_iterator;
        typedef SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence::const_iterator SimSimulationOutputFormat_ControlReportingTolerances_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputFormat_ControlReportingTolerances_Default_type, char > SimSimulationOutputFormat_ControlReportingTolerances_Default_traits;

        const SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence&
        SimSimulationOutputFormat_ControlReportingTolerances_Default () const;

        SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence&
        SimSimulationOutputFormat_ControlReportingTolerances_Default ();

        void
        SimSimulationOutputFormat_ControlReportingTolerances_Default (const SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence& s);

        // SimSimulationOutputFormat_ControlSizingStyle_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputFormat_ControlSizingStyle_Default SimSimulationOutputFormat_ControlSizingStyle_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputFormat_ControlSizingStyle_Default_type > SimSimulationOutputFormat_ControlSizingStyle_Default_sequence;
        typedef SimSimulationOutputFormat_ControlSizingStyle_Default_sequence::iterator SimSimulationOutputFormat_ControlSizingStyle_Default_iterator;
        typedef SimSimulationOutputFormat_ControlSizingStyle_Default_sequence::const_iterator SimSimulationOutputFormat_ControlSizingStyle_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputFormat_ControlSizingStyle_Default_type, char > SimSimulationOutputFormat_ControlSizingStyle_Default_traits;

        const SimSimulationOutputFormat_ControlSizingStyle_Default_sequence&
        SimSimulationOutputFormat_ControlSizingStyle_Default () const;

        SimSimulationOutputFormat_ControlSizingStyle_Default_sequence&
        SimSimulationOutputFormat_ControlSizingStyle_Default ();

        void
        SimSimulationOutputFormat_ControlSizingStyle_Default (const SimSimulationOutputFormat_ControlSizingStyle_Default_sequence& s);

        // SimSimulationOutputFormat_ControlSurfaceColorScheme_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputFormat_ControlSurfaceColorScheme_Default SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_type > SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence;
        typedef SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence::iterator SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_iterator;
        typedef SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence::const_iterator SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_type, char > SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_traits;

        const SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence&
        SimSimulationOutputFormat_ControlSurfaceColorScheme_Default () const;

        SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence&
        SimSimulationOutputFormat_ControlSurfaceColorScheme_Default ();

        void
        SimSimulationOutputFormat_ControlSurfaceColorScheme_Default (const SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence& s);

        // SimSimulationOutputFormat_ControlTableStyle_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputFormat_ControlTableStyle_Default SimSimulationOutputFormat_ControlTableStyle_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputFormat_ControlTableStyle_Default_type > SimSimulationOutputFormat_ControlTableStyle_Default_sequence;
        typedef SimSimulationOutputFormat_ControlTableStyle_Default_sequence::iterator SimSimulationOutputFormat_ControlTableStyle_Default_iterator;
        typedef SimSimulationOutputFormat_ControlTableStyle_Default_sequence::const_iterator SimSimulationOutputFormat_ControlTableStyle_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputFormat_ControlTableStyle_Default_type, char > SimSimulationOutputFormat_ControlTableStyle_Default_traits;

        const SimSimulationOutputFormat_ControlTableStyle_Default_sequence&
        SimSimulationOutputFormat_ControlTableStyle_Default () const;

        SimSimulationOutputFormat_ControlTableStyle_Default_sequence&
        SimSimulationOutputFormat_ControlTableStyle_Default ();

        void
        SimSimulationOutputFormat_ControlTableStyle_Default (const SimSimulationOutputFormat_ControlTableStyle_Default_sequence& s);

        // SimSimulationOutputFormat_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputFormat_Default_Default SimSimulationOutputFormat_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputFormat_Default_Default_type > SimSimulationOutputFormat_Default_Default_sequence;
        typedef SimSimulationOutputFormat_Default_Default_sequence::iterator SimSimulationOutputFormat_Default_Default_iterator;
        typedef SimSimulationOutputFormat_Default_Default_sequence::const_iterator SimSimulationOutputFormat_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputFormat_Default_Default_type, char > SimSimulationOutputFormat_Default_Default_traits;

        const SimSimulationOutputFormat_Default_Default_sequence&
        SimSimulationOutputFormat_Default_Default () const;

        SimSimulationOutputFormat_Default_Default_sequence&
        SimSimulationOutputFormat_Default_Default ();

        void
        SimSimulationOutputFormat_Default_Default (const SimSimulationOutputFormat_Default_Default_sequence& s);

        // SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_type > SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence;
        typedef SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence::iterator SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_iterator;
        typedef SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence::const_iterator SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_type, char > SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_traits;

        const SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence&
        SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default () const;

        SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence&
        SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default ();

        void
        SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default (const SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence& s);

        // SimSimulationOutputRequest_Daylighting_DaylightFactors
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Daylighting_DaylightFactors SimSimulationOutputRequest_Daylighting_DaylightFactors_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Daylighting_DaylightFactors_type > SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence;
        typedef SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence::iterator SimSimulationOutputRequest_Daylighting_DaylightFactors_iterator;
        typedef SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence::const_iterator SimSimulationOutputRequest_Daylighting_DaylightFactors_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Daylighting_DaylightFactors_type, char > SimSimulationOutputRequest_Daylighting_DaylightFactors_traits;

        const SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence&
        SimSimulationOutputRequest_Daylighting_DaylightFactors () const;

        SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence&
        SimSimulationOutputRequest_Daylighting_DaylightFactors ();

        void
        SimSimulationOutputRequest_Daylighting_DaylightFactors (const SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence& s);

        // SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_type > SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence;
        typedef SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence::iterator SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_iterator;
        typedef SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence::const_iterator SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_type, char > SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_traits;

        const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence&
        SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap () const;

        SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence&
        SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap ();

        void
        SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap (const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence& s);

        // SimSimulationOutputRequest_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Default_Default SimSimulationOutputRequest_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Default_Default_type > SimSimulationOutputRequest_Default_Default_sequence;
        typedef SimSimulationOutputRequest_Default_Default_sequence::iterator SimSimulationOutputRequest_Default_Default_iterator;
        typedef SimSimulationOutputRequest_Default_Default_sequence::const_iterator SimSimulationOutputRequest_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Default_Default_type, char > SimSimulationOutputRequest_Default_Default_traits;

        const SimSimulationOutputRequest_Default_Default_sequence&
        SimSimulationOutputRequest_Default_Default () const;

        SimSimulationOutputRequest_Default_Default_sequence&
        SimSimulationOutputRequest_Default_Default ();

        void
        SimSimulationOutputRequest_Default_Default (const SimSimulationOutputRequest_Default_Default_sequence& s);

        // SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_type > SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence;
        typedef SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence::iterator SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_iterator;
        typedef SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence::const_iterator SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_type, char > SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_traits;

        const SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence&
        SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors () const;

        SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence&
        SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors ();

        void
        SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors (const SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence& s);

        // SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_type > SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence;
        typedef SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence::iterator SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_iterator;
        typedef SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence::const_iterator SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_type, char > SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_traits;

        const SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence&
        SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors () const;

        SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence&
        SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors ();

        void
        SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors (const SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence& s);

        // SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_type > SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence;
        typedef SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence::iterator SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_iterator;
        typedef SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence::const_iterator SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_type, char > SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_traits;

        const SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence&
        SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors () const;

        SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence&
        SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors ();

        void
        SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors (const SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqDebuggingData
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqDebuggingData SimSimulationOutputRequest_General_ReportReqDebuggingData_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqDebuggingData_type > SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence::iterator SimSimulationOutputRequest_General_ReportReqDebuggingData_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqDebuggingData_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqDebuggingData_type, char > SimSimulationOutputRequest_General_ReportReqDebuggingData_traits;

        const SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence&
        SimSimulationOutputRequest_General_ReportReqDebuggingData () const;

        SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence&
        SimSimulationOutputRequest_General_ReportReqDebuggingData ();

        void
        SimSimulationOutputRequest_General_ReportReqDebuggingData (const SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqDiagnostics
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqDiagnostics SimSimulationOutputRequest_General_ReportReqDiagnostics_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqDiagnostics_type > SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence::iterator SimSimulationOutputRequest_General_ReportReqDiagnostics_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqDiagnostics_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqDiagnostics_type, char > SimSimulationOutputRequest_General_ReportReqDiagnostics_traits;

        const SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence&
        SimSimulationOutputRequest_General_ReportReqDiagnostics () const;

        SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence&
        SimSimulationOutputRequest_General_ReportReqDiagnostics ();

        void
        SimSimulationOutputRequest_General_ReportReqDiagnostics (const SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_type > SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence::iterator SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_type, char > SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_traits;

        const SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence&
        SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem () const;

        SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence&
        SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem ();

        void
        SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem (const SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqPreprocessorMessage
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqPreprocessorMessage SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_type > SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence::iterator SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_type, char > SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_traits;

        const SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence&
        SimSimulationOutputRequest_General_ReportReqPreprocessorMessage () const;

        SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence&
        SimSimulationOutputRequest_General_ReportReqPreprocessorMessage ();

        void
        SimSimulationOutputRequest_General_ReportReqPreprocessorMessage (const SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqSchedules
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqSchedules SimSimulationOutputRequest_General_ReportReqSchedules_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqSchedules_type > SimSimulationOutputRequest_General_ReportReqSchedules_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqSchedules_sequence::iterator SimSimulationOutputRequest_General_ReportReqSchedules_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqSchedules_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqSchedules_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqSchedules_type, char > SimSimulationOutputRequest_General_ReportReqSchedules_traits;

        const SimSimulationOutputRequest_General_ReportReqSchedules_sequence&
        SimSimulationOutputRequest_General_ReportReqSchedules () const;

        SimSimulationOutputRequest_General_ReportReqSchedules_sequence&
        SimSimulationOutputRequest_General_ReportReqSchedules ();

        void
        SimSimulationOutputRequest_General_ReportReqSchedules (const SimSimulationOutputRequest_General_ReportReqSchedules_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqSQLite
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqSQLite SimSimulationOutputRequest_General_ReportReqSQLite_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqSQLite_type > SimSimulationOutputRequest_General_ReportReqSQLite_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqSQLite_sequence::iterator SimSimulationOutputRequest_General_ReportReqSQLite_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqSQLite_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqSQLite_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqSQLite_type, char > SimSimulationOutputRequest_General_ReportReqSQLite_traits;

        const SimSimulationOutputRequest_General_ReportReqSQLite_sequence&
        SimSimulationOutputRequest_General_ReportReqSQLite () const;

        SimSimulationOutputRequest_General_ReportReqSQLite_sequence&
        SimSimulationOutputRequest_General_ReportReqSQLite ();

        void
        SimSimulationOutputRequest_General_ReportReqSQLite (const SimSimulationOutputRequest_General_ReportReqSQLite_sequence& s);

        // SimSimulationOutputRequest_General_ReportReqVariableDictionary
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_General_ReportReqVariableDictionary SimSimulationOutputRequest_General_ReportReqVariableDictionary_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_General_ReportReqVariableDictionary_type > SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence;
        typedef SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence::iterator SimSimulationOutputRequest_General_ReportReqVariableDictionary_iterator;
        typedef SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence::const_iterator SimSimulationOutputRequest_General_ReportReqVariableDictionary_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_General_ReportReqVariableDictionary_type, char > SimSimulationOutputRequest_General_ReportReqVariableDictionary_traits;

        const SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence&
        SimSimulationOutputRequest_General_ReportReqVariableDictionary () const;

        SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence&
        SimSimulationOutputRequest_General_ReportReqVariableDictionary ();

        void
        SimSimulationOutputRequest_General_ReportReqVariableDictionary (const SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence& s);

        // SimSimulationOutputRequest_Geometry_ReportReqConstructions
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Geometry_ReportReqConstructions SimSimulationOutputRequest_Geometry_ReportReqConstructions_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Geometry_ReportReqConstructions_type > SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence;
        typedef SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence::iterator SimSimulationOutputRequest_Geometry_ReportReqConstructions_iterator;
        typedef SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence::const_iterator SimSimulationOutputRequest_Geometry_ReportReqConstructions_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Geometry_ReportReqConstructions_type, char > SimSimulationOutputRequest_Geometry_ReportReqConstructions_traits;

        const SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence&
        SimSimulationOutputRequest_Geometry_ReportReqConstructions () const;

        SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence&
        SimSimulationOutputRequest_Geometry_ReportReqConstructions ();

        void
        SimSimulationOutputRequest_Geometry_ReportReqConstructions (const SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence& s);

        // SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_type > SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence;
        typedef SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence::iterator SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_iterator;
        typedef SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence::const_iterator SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_type, char > SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_traits;

        const SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence&
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing () const;

        SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence&
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing ();

        void
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing (const SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence& s);

        // SimSimulationOutputRequest_Geometry_ReportReqSurfacesList
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Geometry_ReportReqSurfacesList SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_type > SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence;
        typedef SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence::iterator SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_iterator;
        typedef SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence::const_iterator SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_type, char > SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_traits;

        const SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence&
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesList () const;

        SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence&
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesList ();

        void
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesList (const SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence& s);

        // SimSimulationOutputRequest_Meters_EnergyEndUseCategory
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_EnergyEndUseCategory SimSimulationOutputRequest_Meters_EnergyEndUseCategory_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_EnergyEndUseCategory_type > SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence;
        typedef SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence::iterator SimSimulationOutputRequest_Meters_EnergyEndUseCategory_iterator;
        typedef SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence::const_iterator SimSimulationOutputRequest_Meters_EnergyEndUseCategory_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_EnergyEndUseCategory_type, char > SimSimulationOutputRequest_Meters_EnergyEndUseCategory_traits;

        const SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence&
        SimSimulationOutputRequest_Meters_EnergyEndUseCategory () const;

        SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence&
        SimSimulationOutputRequest_Meters_EnergyEndUseCategory ();

        void
        SimSimulationOutputRequest_Meters_EnergyEndUseCategory (const SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence& s);

        // SimSimulationOutputRequest_Meters_MeterCumulative
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_MeterCumulative SimSimulationOutputRequest_Meters_MeterCumulative_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_MeterCumulative_type > SimSimulationOutputRequest_Meters_MeterCumulative_sequence;
        typedef SimSimulationOutputRequest_Meters_MeterCumulative_sequence::iterator SimSimulationOutputRequest_Meters_MeterCumulative_iterator;
        typedef SimSimulationOutputRequest_Meters_MeterCumulative_sequence::const_iterator SimSimulationOutputRequest_Meters_MeterCumulative_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_MeterCumulative_type, char > SimSimulationOutputRequest_Meters_MeterCumulative_traits;

        const SimSimulationOutputRequest_Meters_MeterCumulative_sequence&
        SimSimulationOutputRequest_Meters_MeterCumulative () const;

        SimSimulationOutputRequest_Meters_MeterCumulative_sequence&
        SimSimulationOutputRequest_Meters_MeterCumulative ();

        void
        SimSimulationOutputRequest_Meters_MeterCumulative (const SimSimulationOutputRequest_Meters_MeterCumulative_sequence& s);

        // SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_type > SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence;
        typedef SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence::iterator SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_iterator;
        typedef SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence::const_iterator SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_type, char > SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_traits;

        const SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence&
        SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly () const;

        SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence&
        SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly ();

        void
        SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly (const SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence& s);

        // SimSimulationOutputRequest_Meters_MeterFileOnly
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_MeterFileOnly SimSimulationOutputRequest_Meters_MeterFileOnly_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_MeterFileOnly_type > SimSimulationOutputRequest_Meters_MeterFileOnly_sequence;
        typedef SimSimulationOutputRequest_Meters_MeterFileOnly_sequence::iterator SimSimulationOutputRequest_Meters_MeterFileOnly_iterator;
        typedef SimSimulationOutputRequest_Meters_MeterFileOnly_sequence::const_iterator SimSimulationOutputRequest_Meters_MeterFileOnly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_MeterFileOnly_type, char > SimSimulationOutputRequest_Meters_MeterFileOnly_traits;

        const SimSimulationOutputRequest_Meters_MeterFileOnly_sequence&
        SimSimulationOutputRequest_Meters_MeterFileOnly () const;

        SimSimulationOutputRequest_Meters_MeterFileOnly_sequence&
        SimSimulationOutputRequest_Meters_MeterFileOnly ();

        void
        SimSimulationOutputRequest_Meters_MeterFileOnly (const SimSimulationOutputRequest_Meters_MeterFileOnly_sequence& s);

        // SimSimulationOutputRequest_Meters_VarReqMeter
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_VarReqMeter SimSimulationOutputRequest_Meters_VarReqMeter_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_VarReqMeter_type > SimSimulationOutputRequest_Meters_VarReqMeter_sequence;
        typedef SimSimulationOutputRequest_Meters_VarReqMeter_sequence::iterator SimSimulationOutputRequest_Meters_VarReqMeter_iterator;
        typedef SimSimulationOutputRequest_Meters_VarReqMeter_sequence::const_iterator SimSimulationOutputRequest_Meters_VarReqMeter_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_VarReqMeter_type, char > SimSimulationOutputRequest_Meters_VarReqMeter_traits;

        const SimSimulationOutputRequest_Meters_VarReqMeter_sequence&
        SimSimulationOutputRequest_Meters_VarReqMeter () const;

        SimSimulationOutputRequest_Meters_VarReqMeter_sequence&
        SimSimulationOutputRequest_Meters_VarReqMeter ();

        void
        SimSimulationOutputRequest_Meters_VarReqMeter (const SimSimulationOutputRequest_Meters_VarReqMeter_sequence& s);

        // SimSimulationOutputRequest_Meters_VarReqMeterCustom
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_VarReqMeterCustom SimSimulationOutputRequest_Meters_VarReqMeterCustom_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_VarReqMeterCustom_type > SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence;
        typedef SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence::iterator SimSimulationOutputRequest_Meters_VarReqMeterCustom_iterator;
        typedef SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence::const_iterator SimSimulationOutputRequest_Meters_VarReqMeterCustom_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_VarReqMeterCustom_type, char > SimSimulationOutputRequest_Meters_VarReqMeterCustom_traits;

        const SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence&
        SimSimulationOutputRequest_Meters_VarReqMeterCustom () const;

        SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence&
        SimSimulationOutputRequest_Meters_VarReqMeterCustom ();

        void
        SimSimulationOutputRequest_Meters_VarReqMeterCustom (const SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence& s);

        // SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_type > SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence;
        typedef SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence::iterator SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_iterator;
        typedef SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence::const_iterator SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_type, char > SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_traits;

        const SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence&
        SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement () const;

        SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence&
        SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement ();

        void
        SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement (const SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence& s);

        // SimSimulationOutputRequest_StandardReports_TableMonthly
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_StandardReports_TableMonthly SimSimulationOutputRequest_StandardReports_TableMonthly_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_StandardReports_TableMonthly_type > SimSimulationOutputRequest_StandardReports_TableMonthly_sequence;
        typedef SimSimulationOutputRequest_StandardReports_TableMonthly_sequence::iterator SimSimulationOutputRequest_StandardReports_TableMonthly_iterator;
        typedef SimSimulationOutputRequest_StandardReports_TableMonthly_sequence::const_iterator SimSimulationOutputRequest_StandardReports_TableMonthly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_StandardReports_TableMonthly_type, char > SimSimulationOutputRequest_StandardReports_TableMonthly_traits;

        const SimSimulationOutputRequest_StandardReports_TableMonthly_sequence&
        SimSimulationOutputRequest_StandardReports_TableMonthly () const;

        SimSimulationOutputRequest_StandardReports_TableMonthly_sequence&
        SimSimulationOutputRequest_StandardReports_TableMonthly ();

        void
        SimSimulationOutputRequest_StandardReports_TableMonthly (const SimSimulationOutputRequest_StandardReports_TableMonthly_sequence& s);

        // SimSimulationOutputRequest_StandardReports_TableSummaryReports
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_StandardReports_TableSummaryReports SimSimulationOutputRequest_StandardReports_TableSummaryReports_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_StandardReports_TableSummaryReports_type > SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence;
        typedef SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence::iterator SimSimulationOutputRequest_StandardReports_TableSummaryReports_iterator;
        typedef SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence::const_iterator SimSimulationOutputRequest_StandardReports_TableSummaryReports_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_StandardReports_TableSummaryReports_type, char > SimSimulationOutputRequest_StandardReports_TableSummaryReports_traits;

        const SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence&
        SimSimulationOutputRequest_StandardReports_TableSummaryReports () const;

        SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence&
        SimSimulationOutputRequest_StandardReports_TableSummaryReports ();

        void
        SimSimulationOutputRequest_StandardReports_TableSummaryReports (const SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence& s);

        // SimSimulationOutputRequest_StandardReports_TableTimeBins
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_StandardReports_TableTimeBins SimSimulationOutputRequest_StandardReports_TableTimeBins_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_StandardReports_TableTimeBins_type > SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence;
        typedef SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence::iterator SimSimulationOutputRequest_StandardReports_TableTimeBins_iterator;
        typedef SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence::const_iterator SimSimulationOutputRequest_StandardReports_TableTimeBins_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_StandardReports_TableTimeBins_type, char > SimSimulationOutputRequest_StandardReports_TableTimeBins_traits;

        const SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence&
        SimSimulationOutputRequest_StandardReports_TableTimeBins () const;

        SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence&
        SimSimulationOutputRequest_StandardReports_TableTimeBins ();

        void
        SimSimulationOutputRequest_StandardReports_TableTimeBins (const SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence& s);

        // SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_type > SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence;
        typedef SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence::iterator SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_iterator;
        typedef SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence::const_iterator SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_type, char > SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_traits;

        const SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence&
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable () const;

        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence&
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable ();

        void
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable (const SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence& s);

        // SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_type > SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence;
        typedef SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence::iterator SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_iterator;
        typedef SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence::const_iterator SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_type, char > SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_traits;

        const SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence&
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable () const;

        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence&
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable ();

        void
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable (const SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence& s);

        // SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_type > SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence;
        typedef SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence::iterator SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_iterator;
        typedef SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence::const_iterator SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_type, char > SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_traits;

        const SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence&
        SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable () const;

        SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence&
        SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable ();

        void
        SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable (const SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence& s);

        // SimSimulationParameters_Algorithm_HeatBalanceAlgorithm
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Algorithm_HeatBalanceAlgorithm SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_type > SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence;
        typedef SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence::iterator SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_iterator;
        typedef SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence::const_iterator SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_type, char > SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_traits;

        const SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence&
        SimSimulationParameters_Algorithm_HeatBalanceAlgorithm () const;

        SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence&
        SimSimulationParameters_Algorithm_HeatBalanceAlgorithm ();

        void
        SimSimulationParameters_Algorithm_HeatBalanceAlgorithm (const SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence& s);

        // SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_type > SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence;
        typedef SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence::iterator SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_iterator;
        typedef SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence::const_iterator SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_type, char > SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_traits;

        const SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence&
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside () const;

        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence&
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside ();

        void
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside (const SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence& s);

        // SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_type > SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence;
        typedef SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence::iterator SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_iterator;
        typedef SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence::const_iterator SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_type, char > SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_traits;

        const SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence&
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside () const;

        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence&
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside ();

        void
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside (const SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence& s);

        // SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_type > SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence;
        typedef SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence::iterator SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_iterator;
        typedef SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence::const_iterator SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_type, char > SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_traits;

        const SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence&
        SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm () const;

        SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence&
        SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm ();

        void
        SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm (const SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence& s);

        // SimSimulationParameters_ConvectionCoefficients_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_ConvectionCoefficients_Default SimSimulationParameters_ConvectionCoefficients_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_ConvectionCoefficients_Default_type > SimSimulationParameters_ConvectionCoefficients_Default_sequence;
        typedef SimSimulationParameters_ConvectionCoefficients_Default_sequence::iterator SimSimulationParameters_ConvectionCoefficients_Default_iterator;
        typedef SimSimulationParameters_ConvectionCoefficients_Default_sequence::const_iterator SimSimulationParameters_ConvectionCoefficients_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_ConvectionCoefficients_Default_type, char > SimSimulationParameters_ConvectionCoefficients_Default_traits;

        const SimSimulationParameters_ConvectionCoefficients_Default_sequence&
        SimSimulationParameters_ConvectionCoefficients_Default () const;

        SimSimulationParameters_ConvectionCoefficients_Default_sequence&
        SimSimulationParameters_ConvectionCoefficients_Default ();

        void
        SimSimulationParameters_ConvectionCoefficients_Default (const SimSimulationParameters_ConvectionCoefficients_Default_sequence& s);

        // SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_type > SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence;
        typedef SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence::iterator SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_iterator;
        typedef SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence::const_iterator SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_type, char > SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_traits;

        const SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence&
        SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces () const;

        SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence&
        SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces ();

        void
        SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces (const SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence& s);

        // SimSimulationParameters_FluidProperties_Concentration
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_FluidProperties_Concentration SimSimulationParameters_FluidProperties_Concentration_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_FluidProperties_Concentration_type > SimSimulationParameters_FluidProperties_Concentration_sequence;
        typedef SimSimulationParameters_FluidProperties_Concentration_sequence::iterator SimSimulationParameters_FluidProperties_Concentration_iterator;
        typedef SimSimulationParameters_FluidProperties_Concentration_sequence::const_iterator SimSimulationParameters_FluidProperties_Concentration_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_FluidProperties_Concentration_type, char > SimSimulationParameters_FluidProperties_Concentration_traits;

        const SimSimulationParameters_FluidProperties_Concentration_sequence&
        SimSimulationParameters_FluidProperties_Concentration () const;

        SimSimulationParameters_FluidProperties_Concentration_sequence&
        SimSimulationParameters_FluidProperties_Concentration ();

        void
        SimSimulationParameters_FluidProperties_Concentration (const SimSimulationParameters_FluidProperties_Concentration_sequence& s);

        // SimSimulationParameters_FluidProperties_GlycolConcentrations
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_FluidProperties_GlycolConcentrations SimSimulationParameters_FluidProperties_GlycolConcentrations_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_FluidProperties_GlycolConcentrations_type > SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence;
        typedef SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence::iterator SimSimulationParameters_FluidProperties_GlycolConcentrations_iterator;
        typedef SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence::const_iterator SimSimulationParameters_FluidProperties_GlycolConcentrations_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_FluidProperties_GlycolConcentrations_type, char > SimSimulationParameters_FluidProperties_GlycolConcentrations_traits;

        const SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence&
        SimSimulationParameters_FluidProperties_GlycolConcentrations () const;

        SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence&
        SimSimulationParameters_FluidProperties_GlycolConcentrations ();

        void
        SimSimulationParameters_FluidProperties_GlycolConcentrations (const SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence& s);

        // SimSimulationParameters_FluidProperties_Names
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_FluidProperties_Names SimSimulationParameters_FluidProperties_Names_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_FluidProperties_Names_type > SimSimulationParameters_FluidProperties_Names_sequence;
        typedef SimSimulationParameters_FluidProperties_Names_sequence::iterator SimSimulationParameters_FluidProperties_Names_iterator;
        typedef SimSimulationParameters_FluidProperties_Names_sequence::const_iterator SimSimulationParameters_FluidProperties_Names_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_FluidProperties_Names_type, char > SimSimulationParameters_FluidProperties_Names_traits;

        const SimSimulationParameters_FluidProperties_Names_sequence&
        SimSimulationParameters_FluidProperties_Names () const;

        SimSimulationParameters_FluidProperties_Names_sequence&
        SimSimulationParameters_FluidProperties_Names ();

        void
        SimSimulationParameters_FluidProperties_Names (const SimSimulationParameters_FluidProperties_Names_sequence& s);

        // SimSimulationParameters_FluidProperties_Saturated
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_FluidProperties_Saturated SimSimulationParameters_FluidProperties_Saturated_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_FluidProperties_Saturated_type > SimSimulationParameters_FluidProperties_Saturated_sequence;
        typedef SimSimulationParameters_FluidProperties_Saturated_sequence::iterator SimSimulationParameters_FluidProperties_Saturated_iterator;
        typedef SimSimulationParameters_FluidProperties_Saturated_sequence::const_iterator SimSimulationParameters_FluidProperties_Saturated_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_FluidProperties_Saturated_type, char > SimSimulationParameters_FluidProperties_Saturated_traits;

        const SimSimulationParameters_FluidProperties_Saturated_sequence&
        SimSimulationParameters_FluidProperties_Saturated () const;

        SimSimulationParameters_FluidProperties_Saturated_sequence&
        SimSimulationParameters_FluidProperties_Saturated ();

        void
        SimSimulationParameters_FluidProperties_Saturated (const SimSimulationParameters_FluidProperties_Saturated_sequence& s);

        // SimSimulationParameters_FluidProperties_SuperHeated
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_FluidProperties_SuperHeated SimSimulationParameters_FluidProperties_SuperHeated_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_FluidProperties_SuperHeated_type > SimSimulationParameters_FluidProperties_SuperHeated_sequence;
        typedef SimSimulationParameters_FluidProperties_SuperHeated_sequence::iterator SimSimulationParameters_FluidProperties_SuperHeated_iterator;
        typedef SimSimulationParameters_FluidProperties_SuperHeated_sequence::const_iterator SimSimulationParameters_FluidProperties_SuperHeated_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_FluidProperties_SuperHeated_type, char > SimSimulationParameters_FluidProperties_SuperHeated_traits;

        const SimSimulationParameters_FluidProperties_SuperHeated_sequence&
        SimSimulationParameters_FluidProperties_SuperHeated () const;

        SimSimulationParameters_FluidProperties_SuperHeated_sequence&
        SimSimulationParameters_FluidProperties_SuperHeated ();

        void
        SimSimulationParameters_FluidProperties_SuperHeated (const SimSimulationParameters_FluidProperties_SuperHeated_sequence& s);

        // SimSimulationParameters_FluidProperties_Temperatures
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_FluidProperties_Temperatures SimSimulationParameters_FluidProperties_Temperatures_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_FluidProperties_Temperatures_type > SimSimulationParameters_FluidProperties_Temperatures_sequence;
        typedef SimSimulationParameters_FluidProperties_Temperatures_sequence::iterator SimSimulationParameters_FluidProperties_Temperatures_iterator;
        typedef SimSimulationParameters_FluidProperties_Temperatures_sequence::const_iterator SimSimulationParameters_FluidProperties_Temperatures_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_FluidProperties_Temperatures_type, char > SimSimulationParameters_FluidProperties_Temperatures_traits;

        const SimSimulationParameters_FluidProperties_Temperatures_sequence&
        SimSimulationParameters_FluidProperties_Temperatures () const;

        SimSimulationParameters_FluidProperties_Temperatures_sequence&
        SimSimulationParameters_FluidProperties_Temperatures ();

        void
        SimSimulationParameters_FluidProperties_Temperatures (const SimSimulationParameters_FluidProperties_Temperatures_sequence& s);

        // SimSimulationParameters_GroundHeatTransfer_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_GroundHeatTransfer_Default SimSimulationParameters_GroundHeatTransfer_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_GroundHeatTransfer_Default_type > SimSimulationParameters_GroundHeatTransfer_Default_sequence;
        typedef SimSimulationParameters_GroundHeatTransfer_Default_sequence::iterator SimSimulationParameters_GroundHeatTransfer_Default_iterator;
        typedef SimSimulationParameters_GroundHeatTransfer_Default_sequence::const_iterator SimSimulationParameters_GroundHeatTransfer_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_GroundHeatTransfer_Default_type, char > SimSimulationParameters_GroundHeatTransfer_Default_traits;

        const SimSimulationParameters_GroundHeatTransfer_Default_sequence&
        SimSimulationParameters_GroundHeatTransfer_Default () const;

        SimSimulationParameters_GroundHeatTransfer_Default_sequence&
        SimSimulationParameters_GroundHeatTransfer_Default ();

        void
        SimSimulationParameters_GroundHeatTransfer_Default (const SimSimulationParameters_GroundHeatTransfer_Default_sequence& s);

        // SimSimulationParameters_HvacDesign_AirLoopSizing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_HvacDesign_AirLoopSizing SimSimulationParameters_HvacDesign_AirLoopSizing_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_HvacDesign_AirLoopSizing_type > SimSimulationParameters_HvacDesign_AirLoopSizing_sequence;
        typedef SimSimulationParameters_HvacDesign_AirLoopSizing_sequence::iterator SimSimulationParameters_HvacDesign_AirLoopSizing_iterator;
        typedef SimSimulationParameters_HvacDesign_AirLoopSizing_sequence::const_iterator SimSimulationParameters_HvacDesign_AirLoopSizing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_HvacDesign_AirLoopSizing_type, char > SimSimulationParameters_HvacDesign_AirLoopSizing_traits;

        const SimSimulationParameters_HvacDesign_AirLoopSizing_sequence&
        SimSimulationParameters_HvacDesign_AirLoopSizing () const;

        SimSimulationParameters_HvacDesign_AirLoopSizing_sequence&
        SimSimulationParameters_HvacDesign_AirLoopSizing ();

        void
        SimSimulationParameters_HvacDesign_AirLoopSizing (const SimSimulationParameters_HvacDesign_AirLoopSizing_sequence& s);

        // SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_type > SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence;
        typedef SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence::iterator SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_iterator;
        typedef SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence::const_iterator SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_type, char > SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_traits;

        const SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence&
        SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec () const;

        SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence&
        SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec ();

        void
        SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec (const SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence& s);

        // SimSimulationParameters_HvacDesign_Sizing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_HvacDesign_Sizing SimSimulationParameters_HvacDesign_Sizing_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_HvacDesign_Sizing_type > SimSimulationParameters_HvacDesign_Sizing_sequence;
        typedef SimSimulationParameters_HvacDesign_Sizing_sequence::iterator SimSimulationParameters_HvacDesign_Sizing_iterator;
        typedef SimSimulationParameters_HvacDesign_Sizing_sequence::const_iterator SimSimulationParameters_HvacDesign_Sizing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_HvacDesign_Sizing_type, char > SimSimulationParameters_HvacDesign_Sizing_traits;

        const SimSimulationParameters_HvacDesign_Sizing_sequence&
        SimSimulationParameters_HvacDesign_Sizing () const;

        SimSimulationParameters_HvacDesign_Sizing_sequence&
        SimSimulationParameters_HvacDesign_Sizing ();

        void
        SimSimulationParameters_HvacDesign_Sizing (const SimSimulationParameters_HvacDesign_Sizing_sequence& s);

        // SimSimulationParameters_HvacDesign_WaterLoopSizing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_HvacDesign_WaterLoopSizing SimSimulationParameters_HvacDesign_WaterLoopSizing_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_HvacDesign_WaterLoopSizing_type > SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence;
        typedef SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence::iterator SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator;
        typedef SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence::const_iterator SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_HvacDesign_WaterLoopSizing_type, char > SimSimulationParameters_HvacDesign_WaterLoopSizing_traits;

        const SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence&
        SimSimulationParameters_HvacDesign_WaterLoopSizing () const;

        SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence&
        SimSimulationParameters_HvacDesign_WaterLoopSizing ();

        void
        SimSimulationParameters_HvacDesign_WaterLoopSizing (const SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence& s);

        // SimSimulationParameters_HvacDesign_ZoneAIrDistribution
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_HvacDesign_ZoneAIrDistribution SimSimulationParameters_HvacDesign_ZoneAIrDistribution_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_HvacDesign_ZoneAIrDistribution_type > SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence;
        typedef SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence::iterator SimSimulationParameters_HvacDesign_ZoneAIrDistribution_iterator;
        typedef SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence::const_iterator SimSimulationParameters_HvacDesign_ZoneAIrDistribution_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_HvacDesign_ZoneAIrDistribution_type, char > SimSimulationParameters_HvacDesign_ZoneAIrDistribution_traits;

        const SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence&
        SimSimulationParameters_HvacDesign_ZoneAIrDistribution () const;

        SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence&
        SimSimulationParameters_HvacDesign_ZoneAIrDistribution ();

        void
        SimSimulationParameters_HvacDesign_ZoneAIrDistribution (const SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence& s);

        // SimSimulationParameters_HvacDesign_ZoneSizing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_HvacDesign_ZoneSizing SimSimulationParameters_HvacDesign_ZoneSizing_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_HvacDesign_ZoneSizing_type > SimSimulationParameters_HvacDesign_ZoneSizing_sequence;
        typedef SimSimulationParameters_HvacDesign_ZoneSizing_sequence::iterator SimSimulationParameters_HvacDesign_ZoneSizing_iterator;
        typedef SimSimulationParameters_HvacDesign_ZoneSizing_sequence::const_iterator SimSimulationParameters_HvacDesign_ZoneSizing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_HvacDesign_ZoneSizing_type, char > SimSimulationParameters_HvacDesign_ZoneSizing_traits;

        const SimSimulationParameters_HvacDesign_ZoneSizing_sequence&
        SimSimulationParameters_HvacDesign_ZoneSizing () const;

        SimSimulationParameters_HvacDesign_ZoneSizing_sequence&
        SimSimulationParameters_HvacDesign_ZoneSizing ();

        void
        SimSimulationParameters_HvacDesign_ZoneSizing (const SimSimulationParameters_HvacDesign_ZoneSizing_sequence& s);

        // SimSimulationParameters_Parametric_FileNameSuffix
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Parametric_FileNameSuffix SimSimulationParameters_Parametric_FileNameSuffix_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Parametric_FileNameSuffix_type > SimSimulationParameters_Parametric_FileNameSuffix_sequence;
        typedef SimSimulationParameters_Parametric_FileNameSuffix_sequence::iterator SimSimulationParameters_Parametric_FileNameSuffix_iterator;
        typedef SimSimulationParameters_Parametric_FileNameSuffix_sequence::const_iterator SimSimulationParameters_Parametric_FileNameSuffix_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Parametric_FileNameSuffix_type, char > SimSimulationParameters_Parametric_FileNameSuffix_traits;

        const SimSimulationParameters_Parametric_FileNameSuffix_sequence&
        SimSimulationParameters_Parametric_FileNameSuffix () const;

        SimSimulationParameters_Parametric_FileNameSuffix_sequence&
        SimSimulationParameters_Parametric_FileNameSuffix ();

        void
        SimSimulationParameters_Parametric_FileNameSuffix (const SimSimulationParameters_Parametric_FileNameSuffix_sequence& s);

        // SimSimulationParameters_Parametric_Logic
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Parametric_Logic SimSimulationParameters_Parametric_Logic_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Parametric_Logic_type > SimSimulationParameters_Parametric_Logic_sequence;
        typedef SimSimulationParameters_Parametric_Logic_sequence::iterator SimSimulationParameters_Parametric_Logic_iterator;
        typedef SimSimulationParameters_Parametric_Logic_sequence::const_iterator SimSimulationParameters_Parametric_Logic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Parametric_Logic_type, char > SimSimulationParameters_Parametric_Logic_traits;

        const SimSimulationParameters_Parametric_Logic_sequence&
        SimSimulationParameters_Parametric_Logic () const;

        SimSimulationParameters_Parametric_Logic_sequence&
        SimSimulationParameters_Parametric_Logic ();

        void
        SimSimulationParameters_Parametric_Logic (const SimSimulationParameters_Parametric_Logic_sequence& s);

        // SimSimulationParameters_Parametric_RunControl
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Parametric_RunControl SimSimulationParameters_Parametric_RunControl_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Parametric_RunControl_type > SimSimulationParameters_Parametric_RunControl_sequence;
        typedef SimSimulationParameters_Parametric_RunControl_sequence::iterator SimSimulationParameters_Parametric_RunControl_iterator;
        typedef SimSimulationParameters_Parametric_RunControl_sequence::const_iterator SimSimulationParameters_Parametric_RunControl_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Parametric_RunControl_type, char > SimSimulationParameters_Parametric_RunControl_traits;

        const SimSimulationParameters_Parametric_RunControl_sequence&
        SimSimulationParameters_Parametric_RunControl () const;

        SimSimulationParameters_Parametric_RunControl_sequence&
        SimSimulationParameters_Parametric_RunControl ();

        void
        SimSimulationParameters_Parametric_RunControl (const SimSimulationParameters_Parametric_RunControl_sequence& s);

        // SimSimulationParameters_Parametric_SetValueForRun
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_Parametric_SetValueForRun SimSimulationParameters_Parametric_SetValueForRun_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_Parametric_SetValueForRun_type > SimSimulationParameters_Parametric_SetValueForRun_sequence;
        typedef SimSimulationParameters_Parametric_SetValueForRun_sequence::iterator SimSimulationParameters_Parametric_SetValueForRun_iterator;
        typedef SimSimulationParameters_Parametric_SetValueForRun_sequence::const_iterator SimSimulationParameters_Parametric_SetValueForRun_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_Parametric_SetValueForRun_type, char > SimSimulationParameters_Parametric_SetValueForRun_traits;

        const SimSimulationParameters_Parametric_SetValueForRun_sequence&
        SimSimulationParameters_Parametric_SetValueForRun () const;

        SimSimulationParameters_Parametric_SetValueForRun_sequence&
        SimSimulationParameters_Parametric_SetValueForRun ();

        void
        SimSimulationParameters_Parametric_SetValueForRun (const SimSimulationParameters_Parametric_SetValueForRun_sequence& s);

        // SimSimulationParameters_SimulationControl_DaylightSavingTime
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SimulationControl_DaylightSavingTime SimSimulationParameters_SimulationControl_DaylightSavingTime_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SimulationControl_DaylightSavingTime_type > SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence;
        typedef SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence::iterator SimSimulationParameters_SimulationControl_DaylightSavingTime_iterator;
        typedef SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence::const_iterator SimSimulationParameters_SimulationControl_DaylightSavingTime_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SimulationControl_DaylightSavingTime_type, char > SimSimulationParameters_SimulationControl_DaylightSavingTime_traits;

        const SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence&
        SimSimulationParameters_SimulationControl_DaylightSavingTime () const;

        SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence&
        SimSimulationParameters_SimulationControl_DaylightSavingTime ();

        void
        SimSimulationParameters_SimulationControl_DaylightSavingTime (const SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence& s);

        // SimSimulationParameters_SimulationControl_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SimulationControl_Default SimSimulationParameters_SimulationControl_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SimulationControl_Default_type > SimSimulationParameters_SimulationControl_Default_sequence;
        typedef SimSimulationParameters_SimulationControl_Default_sequence::iterator SimSimulationParameters_SimulationControl_Default_iterator;
        typedef SimSimulationParameters_SimulationControl_Default_sequence::const_iterator SimSimulationParameters_SimulationControl_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SimulationControl_Default_type, char > SimSimulationParameters_SimulationControl_Default_traits;

        const SimSimulationParameters_SimulationControl_Default_sequence&
        SimSimulationParameters_SimulationControl_Default () const;

        SimSimulationParameters_SimulationControl_Default_sequence&
        SimSimulationParameters_SimulationControl_Default ();

        void
        SimSimulationParameters_SimulationControl_Default (const SimSimulationParameters_SimulationControl_Default_sequence& s);

        // SimSimulationParameters_SimulationControl_RunPeriod
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SimulationControl_RunPeriod SimSimulationParameters_SimulationControl_RunPeriod_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SimulationControl_RunPeriod_type > SimSimulationParameters_SimulationControl_RunPeriod_sequence;
        typedef SimSimulationParameters_SimulationControl_RunPeriod_sequence::iterator SimSimulationParameters_SimulationControl_RunPeriod_iterator;
        typedef SimSimulationParameters_SimulationControl_RunPeriod_sequence::const_iterator SimSimulationParameters_SimulationControl_RunPeriod_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SimulationControl_RunPeriod_type, char > SimSimulationParameters_SimulationControl_RunPeriod_traits;

        const SimSimulationParameters_SimulationControl_RunPeriod_sequence&
        SimSimulationParameters_SimulationControl_RunPeriod () const;

        SimSimulationParameters_SimulationControl_RunPeriod_sequence&
        SimSimulationParameters_SimulationControl_RunPeriod ();

        void
        SimSimulationParameters_SimulationControl_RunPeriod (const SimSimulationParameters_SimulationControl_RunPeriod_sequence& s);

        // SimSimulationParameters_SimulationControl_RunPeriodCustomRange
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SimulationControl_RunPeriodCustomRange SimSimulationParameters_SimulationControl_RunPeriodCustomRange_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SimulationControl_RunPeriodCustomRange_type > SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence;
        typedef SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence::iterator SimSimulationParameters_SimulationControl_RunPeriodCustomRange_iterator;
        typedef SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence::const_iterator SimSimulationParameters_SimulationControl_RunPeriodCustomRange_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SimulationControl_RunPeriodCustomRange_type, char > SimSimulationParameters_SimulationControl_RunPeriodCustomRange_traits;

        const SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence&
        SimSimulationParameters_SimulationControl_RunPeriodCustomRange () const;

        SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence&
        SimSimulationParameters_SimulationControl_RunPeriodCustomRange ();

        void
        SimSimulationParameters_SimulationControl_RunPeriodCustomRange (const SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence& s);

        // SimSimulationParameters_SimulationControl_SpecialDays
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SimulationControl_SpecialDays SimSimulationParameters_SimulationControl_SpecialDays_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SimulationControl_SpecialDays_type > SimSimulationParameters_SimulationControl_SpecialDays_sequence;
        typedef SimSimulationParameters_SimulationControl_SpecialDays_sequence::iterator SimSimulationParameters_SimulationControl_SpecialDays_iterator;
        typedef SimSimulationParameters_SimulationControl_SpecialDays_sequence::const_iterator SimSimulationParameters_SimulationControl_SpecialDays_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SimulationControl_SpecialDays_type, char > SimSimulationParameters_SimulationControl_SpecialDays_traits;

        const SimSimulationParameters_SimulationControl_SpecialDays_sequence&
        SimSimulationParameters_SimulationControl_SpecialDays () const;

        SimSimulationParameters_SimulationControl_SpecialDays_sequence&
        SimSimulationParameters_SimulationControl_SpecialDays ();

        void
        SimSimulationParameters_SimulationControl_SpecialDays (const SimSimulationParameters_SimulationControl_SpecialDays_sequence& s);

        // SimSimulationParameters_SiteWindPressure_WindDirections
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SiteWindPressure_WindDirections SimSimulationParameters_SiteWindPressure_WindDirections_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SiteWindPressure_WindDirections_type > SimSimulationParameters_SiteWindPressure_WindDirections_sequence;
        typedef SimSimulationParameters_SiteWindPressure_WindDirections_sequence::iterator SimSimulationParameters_SiteWindPressure_WindDirections_iterator;
        typedef SimSimulationParameters_SiteWindPressure_WindDirections_sequence::const_iterator SimSimulationParameters_SiteWindPressure_WindDirections_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SiteWindPressure_WindDirections_type, char > SimSimulationParameters_SiteWindPressure_WindDirections_traits;

        const SimSimulationParameters_SiteWindPressure_WindDirections_sequence&
        SimSimulationParameters_SiteWindPressure_WindDirections () const;

        SimSimulationParameters_SiteWindPressure_WindDirections_sequence&
        SimSimulationParameters_SiteWindPressure_WindDirections ();

        void
        SimSimulationParameters_SiteWindPressure_WindDirections (const SimSimulationParameters_SiteWindPressure_WindDirections_sequence& s);

        // SimSimulationParameters_SiteWindPressure_WindPressureValues
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SiteWindPressure_WindPressureValues SimSimulationParameters_SiteWindPressure_WindPressureValues_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SiteWindPressure_WindPressureValues_type > SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence;
        typedef SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence::iterator SimSimulationParameters_SiteWindPressure_WindPressureValues_iterator;
        typedef SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence::const_iterator SimSimulationParameters_SiteWindPressure_WindPressureValues_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SiteWindPressure_WindPressureValues_type, char > SimSimulationParameters_SiteWindPressure_WindPressureValues_traits;

        const SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence&
        SimSimulationParameters_SiteWindPressure_WindPressureValues () const;

        SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence&
        SimSimulationParameters_SiteWindPressure_WindPressureValues ();

        void
        SimSimulationParameters_SiteWindPressure_WindPressureValues (const SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence& s);

        // SimSimulationParameters_SurfaceProperties_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SurfaceProperties_Default SimSimulationParameters_SurfaceProperties_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SurfaceProperties_Default_type > SimSimulationParameters_SurfaceProperties_Default_sequence;
        typedef SimSimulationParameters_SurfaceProperties_Default_sequence::iterator SimSimulationParameters_SurfaceProperties_Default_iterator;
        typedef SimSimulationParameters_SurfaceProperties_Default_sequence::const_iterator SimSimulationParameters_SurfaceProperties_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SurfaceProperties_Default_type, char > SimSimulationParameters_SurfaceProperties_Default_traits;

        const SimSimulationParameters_SurfaceProperties_Default_sequence&
        SimSimulationParameters_SurfaceProperties_Default () const;

        SimSimulationParameters_SurfaceProperties_Default_sequence&
        SimSimulationParameters_SurfaceProperties_Default ();

        void
        SimSimulationParameters_SurfaceProperties_Default (const SimSimulationParameters_SurfaceProperties_Default_sequence& s);

        // SimSimulationParameters_SurfaceProperties_VaporCoefficients
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationParameters_SurfaceProperties_VaporCoefficients SimSimulationParameters_SurfaceProperties_VaporCoefficients_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationParameters_SurfaceProperties_VaporCoefficients_type > SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence;
        typedef SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence::iterator SimSimulationParameters_SurfaceProperties_VaporCoefficients_iterator;
        typedef SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence::const_iterator SimSimulationParameters_SurfaceProperties_VaporCoefficients_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationParameters_SurfaceProperties_VaporCoefficients_type, char > SimSimulationParameters_SurfaceProperties_VaporCoefficients_traits;

        const SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence&
        SimSimulationParameters_SurfaceProperties_VaporCoefficients () const;

        SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence&
        SimSimulationParameters_SurfaceProperties_VaporCoefficients ();

        void
        SimSimulationParameters_SurfaceProperties_VaporCoefficients (const SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence& s);

        // SimSimulationRun_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSimulationRun_Default_Default SimSimulationRun_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSimulationRun_Default_Default_type > SimSimulationRun_Default_Default_sequence;
        typedef SimSimulationRun_Default_Default_sequence::iterator SimSimulationRun_Default_Default_iterator;
        typedef SimSimulationRun_Default_Default_sequence::const_iterator SimSimulationRun_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSimulationRun_Default_Default_type, char > SimSimulationRun_Default_Default_traits;

        const SimSimulationRun_Default_Default_sequence&
        SimSimulationRun_Default_Default () const;

        SimSimulationRun_Default_Default_sequence&
        SimSimulationRun_Default_Default ();

        void
        SimSimulationRun_Default_Default (const SimSimulationRun_Default_Default_sequence& s);

        // SimSite_AdjacentSite_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSite_AdjacentSite_Default SimSite_AdjacentSite_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSite_AdjacentSite_Default_type > SimSite_AdjacentSite_Default_sequence;
        typedef SimSite_AdjacentSite_Default_sequence::iterator SimSite_AdjacentSite_Default_iterator;
        typedef SimSite_AdjacentSite_Default_sequence::const_iterator SimSite_AdjacentSite_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSite_AdjacentSite_Default_type, char > SimSite_AdjacentSite_Default_traits;

        const SimSite_AdjacentSite_Default_sequence&
        SimSite_AdjacentSite_Default () const;

        SimSite_AdjacentSite_Default_sequence&
        SimSite_AdjacentSite_Default ();

        void
        SimSite_AdjacentSite_Default (const SimSite_AdjacentSite_Default_sequence& s);

        // SimSite_BuildingSite_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSite_BuildingSite_Default SimSite_BuildingSite_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSite_BuildingSite_Default_type > SimSite_BuildingSite_Default_sequence;
        typedef SimSite_BuildingSite_Default_sequence::iterator SimSite_BuildingSite_Default_iterator;
        typedef SimSite_BuildingSite_Default_sequence::const_iterator SimSite_BuildingSite_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSite_BuildingSite_Default_type, char > SimSite_BuildingSite_Default_traits;

        const SimSite_BuildingSite_Default_sequence&
        SimSite_BuildingSite_Default () const;

        SimSite_BuildingSite_Default_sequence&
        SimSite_BuildingSite_Default ();

        void
        SimSite_BuildingSite_Default (const SimSite_BuildingSite_Default_sequence& s);

        // SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_type > SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence;
        typedef SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence::iterator SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_iterator;
        typedef SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence::const_iterator SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_type, char > SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_traits;

        const SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence&
        SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater () const;

        SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence&
        SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater ();

        void
        SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater (const SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence& s);

        // SimSiteAssembly_SiteAssembly_ExteriorLighting
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_ExteriorLighting SimSiteAssembly_SiteAssembly_ExteriorLighting_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_ExteriorLighting_type > SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence;
        typedef SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence::iterator SimSiteAssembly_SiteAssembly_ExteriorLighting_iterator;
        typedef SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence::const_iterator SimSiteAssembly_SiteAssembly_ExteriorLighting_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_ExteriorLighting_type, char > SimSiteAssembly_SiteAssembly_ExteriorLighting_traits;

        const SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence&
        SimSiteAssembly_SiteAssembly_ExteriorLighting () const;

        SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence&
        SimSiteAssembly_SiteAssembly_ExteriorLighting ();

        void
        SimSiteAssembly_SiteAssembly_ExteriorLighting (const SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence& s);

        // SimSiteAssembly_SiteAssembly_ExteriorSignage
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_ExteriorSignage SimSiteAssembly_SiteAssembly_ExteriorSignage_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_ExteriorSignage_type > SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence;
        typedef SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence::iterator SimSiteAssembly_SiteAssembly_ExteriorSignage_iterator;
        typedef SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence::const_iterator SimSiteAssembly_SiteAssembly_ExteriorSignage_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_ExteriorSignage_type, char > SimSiteAssembly_SiteAssembly_ExteriorSignage_traits;

        const SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence&
        SimSiteAssembly_SiteAssembly_ExteriorSignage () const;

        SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence&
        SimSiteAssembly_SiteAssembly_ExteriorSignage ();

        void
        SimSiteAssembly_SiteAssembly_ExteriorSignage (const SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence& s);

        // SimSiteAssembly_SiteAssembly_Fuel
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_Fuel SimSiteAssembly_SiteAssembly_Fuel_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_Fuel_type > SimSiteAssembly_SiteAssembly_Fuel_sequence;
        typedef SimSiteAssembly_SiteAssembly_Fuel_sequence::iterator SimSiteAssembly_SiteAssembly_Fuel_iterator;
        typedef SimSiteAssembly_SiteAssembly_Fuel_sequence::const_iterator SimSiteAssembly_SiteAssembly_Fuel_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_Fuel_type, char > SimSiteAssembly_SiteAssembly_Fuel_traits;

        const SimSiteAssembly_SiteAssembly_Fuel_sequence&
        SimSiteAssembly_SiteAssembly_Fuel () const;

        SimSiteAssembly_SiteAssembly_Fuel_sequence&
        SimSiteAssembly_SiteAssembly_Fuel ();

        void
        SimSiteAssembly_SiteAssembly_Fuel (const SimSiteAssembly_SiteAssembly_Fuel_sequence& s);

        // SimSiteAssembly_SiteAssembly_FuelCell
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_FuelCell SimSiteAssembly_SiteAssembly_FuelCell_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_FuelCell_type > SimSiteAssembly_SiteAssembly_FuelCell_sequence;
        typedef SimSiteAssembly_SiteAssembly_FuelCell_sequence::iterator SimSiteAssembly_SiteAssembly_FuelCell_iterator;
        typedef SimSiteAssembly_SiteAssembly_FuelCell_sequence::const_iterator SimSiteAssembly_SiteAssembly_FuelCell_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_FuelCell_type, char > SimSiteAssembly_SiteAssembly_FuelCell_traits;

        const SimSiteAssembly_SiteAssembly_FuelCell_sequence&
        SimSiteAssembly_SiteAssembly_FuelCell () const;

        SimSiteAssembly_SiteAssembly_FuelCell_sequence&
        SimSiteAssembly_SiteAssembly_FuelCell ();

        void
        SimSiteAssembly_SiteAssembly_FuelCell (const SimSiteAssembly_SiteAssembly_FuelCell_sequence& s);

        // SimSiteAssembly_SiteAssembly_SolarHotWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_SolarHotWater SimSiteAssembly_SiteAssembly_SolarHotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_SolarHotWater_type > SimSiteAssembly_SiteAssembly_SolarHotWater_sequence;
        typedef SimSiteAssembly_SiteAssembly_SolarHotWater_sequence::iterator SimSiteAssembly_SiteAssembly_SolarHotWater_iterator;
        typedef SimSiteAssembly_SiteAssembly_SolarHotWater_sequence::const_iterator SimSiteAssembly_SiteAssembly_SolarHotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_SolarHotWater_type, char > SimSiteAssembly_SiteAssembly_SolarHotWater_traits;

        const SimSiteAssembly_SiteAssembly_SolarHotWater_sequence&
        SimSiteAssembly_SiteAssembly_SolarHotWater () const;

        SimSiteAssembly_SiteAssembly_SolarHotWater_sequence&
        SimSiteAssembly_SiteAssembly_SolarHotWater ();

        void
        SimSiteAssembly_SiteAssembly_SolarHotWater (const SimSiteAssembly_SiteAssembly_SolarHotWater_sequence& s);

        // SimSiteAssembly_SiteAssembly_SolarPhotovoltaic
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_SolarPhotovoltaic SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_type > SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence;
        typedef SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence::iterator SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_iterator;
        typedef SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence::const_iterator SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_type, char > SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_traits;

        const SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence&
        SimSiteAssembly_SiteAssembly_SolarPhotovoltaic () const;

        SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence&
        SimSiteAssembly_SiteAssembly_SolarPhotovoltaic ();

        void
        SimSiteAssembly_SiteAssembly_SolarPhotovoltaic (const SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence& s);

        // SimSiteAssembly_SiteAssembly_Water
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_Water SimSiteAssembly_SiteAssembly_Water_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_Water_type > SimSiteAssembly_SiteAssembly_Water_sequence;
        typedef SimSiteAssembly_SiteAssembly_Water_sequence::iterator SimSiteAssembly_SiteAssembly_Water_iterator;
        typedef SimSiteAssembly_SiteAssembly_Water_sequence::const_iterator SimSiteAssembly_SiteAssembly_Water_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_Water_type, char > SimSiteAssembly_SiteAssembly_Water_traits;

        const SimSiteAssembly_SiteAssembly_Water_sequence&
        SimSiteAssembly_SiteAssembly_Water () const;

        SimSiteAssembly_SiteAssembly_Water_sequence&
        SimSiteAssembly_SiteAssembly_Water ();

        void
        SimSiteAssembly_SiteAssembly_Water (const SimSiteAssembly_SiteAssembly_Water_sequence& s);

        // SimSiteAssembly_SiteAssembly_WindTurbine
        //
        typedef ::namespaces::Sim::BuildingModel::SimSiteAssembly_SiteAssembly_WindTurbine SimSiteAssembly_SiteAssembly_WindTurbine_type;
        typedef ::xsd::cxx::tree::sequence< SimSiteAssembly_SiteAssembly_WindTurbine_type > SimSiteAssembly_SiteAssembly_WindTurbine_sequence;
        typedef SimSiteAssembly_SiteAssembly_WindTurbine_sequence::iterator SimSiteAssembly_SiteAssembly_WindTurbine_iterator;
        typedef SimSiteAssembly_SiteAssembly_WindTurbine_sequence::const_iterator SimSiteAssembly_SiteAssembly_WindTurbine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSiteAssembly_SiteAssembly_WindTurbine_type, char > SimSiteAssembly_SiteAssembly_WindTurbine_traits;

        const SimSiteAssembly_SiteAssembly_WindTurbine_sequence&
        SimSiteAssembly_SiteAssembly_WindTurbine () const;

        SimSiteAssembly_SiteAssembly_WindTurbine_sequence&
        SimSiteAssembly_SiteAssembly_WindTurbine ();

        void
        SimSiteAssembly_SiteAssembly_WindTurbine (const SimSiteAssembly_SiteAssembly_WindTurbine_sequence& s);

        // SimSIUnitType_SiUnit_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSIUnitType_SiUnit_Default SimSIUnitType_SiUnit_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSIUnitType_SiUnit_Default_type > SimSIUnitType_SiUnit_Default_sequence;
        typedef SimSIUnitType_SiUnit_Default_sequence::iterator SimSIUnitType_SiUnit_Default_iterator;
        typedef SimSIUnitType_SiUnit_Default_sequence::const_iterator SimSIUnitType_SiUnit_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSIUnitType_SiUnit_Default_type, char > SimSIUnitType_SiUnit_Default_traits;

        const SimSIUnitType_SiUnit_Default_sequence&
        SimSIUnitType_SiUnit_Default () const;

        SimSIUnitType_SiUnit_Default_sequence&
        SimSIUnitType_SiUnit_Default ();

        void
        SimSIUnitType_SiUnit_Default (const SimSIUnitType_SiUnit_Default_sequence& s);

        // SimSlab_Ceiling_InterzoneCeiling
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Ceiling_InterzoneCeiling SimSlab_Ceiling_InterzoneCeiling_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Ceiling_InterzoneCeiling_type > SimSlab_Ceiling_InterzoneCeiling_sequence;
        typedef SimSlab_Ceiling_InterzoneCeiling_sequence::iterator SimSlab_Ceiling_InterzoneCeiling_iterator;
        typedef SimSlab_Ceiling_InterzoneCeiling_sequence::const_iterator SimSlab_Ceiling_InterzoneCeiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Ceiling_InterzoneCeiling_type, char > SimSlab_Ceiling_InterzoneCeiling_traits;

        const SimSlab_Ceiling_InterzoneCeiling_sequence&
        SimSlab_Ceiling_InterzoneCeiling () const;

        SimSlab_Ceiling_InterzoneCeiling_sequence&
        SimSlab_Ceiling_InterzoneCeiling ();

        void
        SimSlab_Ceiling_InterzoneCeiling (const SimSlab_Ceiling_InterzoneCeiling_sequence& s);

        // SimSlab_Ceiling_InterzoneCeilingAdiabatic
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Ceiling_InterzoneCeilingAdiabatic SimSlab_Ceiling_InterzoneCeilingAdiabatic_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Ceiling_InterzoneCeilingAdiabatic_type > SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence;
        typedef SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence::iterator SimSlab_Ceiling_InterzoneCeilingAdiabatic_iterator;
        typedef SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence::const_iterator SimSlab_Ceiling_InterzoneCeilingAdiabatic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Ceiling_InterzoneCeilingAdiabatic_type, char > SimSlab_Ceiling_InterzoneCeilingAdiabatic_traits;

        const SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence&
        SimSlab_Ceiling_InterzoneCeilingAdiabatic () const;

        SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence&
        SimSlab_Ceiling_InterzoneCeilingAdiabatic ();

        void
        SimSlab_Ceiling_InterzoneCeilingAdiabatic (const SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence& s);

        // SimSlab_Ceiling_InterzoneCeilingDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Ceiling_InterzoneCeilingDetailed SimSlab_Ceiling_InterzoneCeilingDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Ceiling_InterzoneCeilingDetailed_type > SimSlab_Ceiling_InterzoneCeilingDetailed_sequence;
        typedef SimSlab_Ceiling_InterzoneCeilingDetailed_sequence::iterator SimSlab_Ceiling_InterzoneCeilingDetailed_iterator;
        typedef SimSlab_Ceiling_InterzoneCeilingDetailed_sequence::const_iterator SimSlab_Ceiling_InterzoneCeilingDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Ceiling_InterzoneCeilingDetailed_type, char > SimSlab_Ceiling_InterzoneCeilingDetailed_traits;

        const SimSlab_Ceiling_InterzoneCeilingDetailed_sequence&
        SimSlab_Ceiling_InterzoneCeilingDetailed () const;

        SimSlab_Ceiling_InterzoneCeilingDetailed_sequence&
        SimSlab_Ceiling_InterzoneCeilingDetailed ();

        void
        SimSlab_Ceiling_InterzoneCeilingDetailed (const SimSlab_Ceiling_InterzoneCeilingDetailed_sequence& s);

        // SimSlab_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Default_Default SimSlab_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Default_Default_type > SimSlab_Default_Default_sequence;
        typedef SimSlab_Default_Default_sequence::iterator SimSlab_Default_Default_iterator;
        typedef SimSlab_Default_Default_sequence::const_iterator SimSlab_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Default_Default_type, char > SimSlab_Default_Default_traits;

        const SimSlab_Default_Default_sequence&
        SimSlab_Default_Default () const;

        SimSlab_Default_Default_sequence&
        SimSlab_Default_Default ();

        void
        SimSlab_Default_Default (const SimSlab_Default_Default_sequence& s);

        // SimSlab_Floor_Adiabatic
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_Adiabatic SimSlab_Floor_Adiabatic_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_Adiabatic_type > SimSlab_Floor_Adiabatic_sequence;
        typedef SimSlab_Floor_Adiabatic_sequence::iterator SimSlab_Floor_Adiabatic_iterator;
        typedef SimSlab_Floor_Adiabatic_sequence::const_iterator SimSlab_Floor_Adiabatic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_Adiabatic_type, char > SimSlab_Floor_Adiabatic_traits;

        const SimSlab_Floor_Adiabatic_sequence&
        SimSlab_Floor_Adiabatic () const;

        SimSlab_Floor_Adiabatic_sequence&
        SimSlab_Floor_Adiabatic ();

        void
        SimSlab_Floor_Adiabatic (const SimSlab_Floor_Adiabatic_sequence& s);

        // SimSlab_Floor_FloorOverAir
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_FloorOverAir SimSlab_Floor_FloorOverAir_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_FloorOverAir_type > SimSlab_Floor_FloorOverAir_sequence;
        typedef SimSlab_Floor_FloorOverAir_sequence::iterator SimSlab_Floor_FloorOverAir_iterator;
        typedef SimSlab_Floor_FloorOverAir_sequence::const_iterator SimSlab_Floor_FloorOverAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_FloorOverAir_type, char > SimSlab_Floor_FloorOverAir_traits;

        const SimSlab_Floor_FloorOverAir_sequence&
        SimSlab_Floor_FloorOverAir () const;

        SimSlab_Floor_FloorOverAir_sequence&
        SimSlab_Floor_FloorOverAir ();

        void
        SimSlab_Floor_FloorOverAir (const SimSlab_Floor_FloorOverAir_sequence& s);

        // SimSlab_Floor_FloorOverAirDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_FloorOverAirDetailed SimSlab_Floor_FloorOverAirDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_FloorOverAirDetailed_type > SimSlab_Floor_FloorOverAirDetailed_sequence;
        typedef SimSlab_Floor_FloorOverAirDetailed_sequence::iterator SimSlab_Floor_FloorOverAirDetailed_iterator;
        typedef SimSlab_Floor_FloorOverAirDetailed_sequence::const_iterator SimSlab_Floor_FloorOverAirDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_FloorOverAirDetailed_type, char > SimSlab_Floor_FloorOverAirDetailed_traits;

        const SimSlab_Floor_FloorOverAirDetailed_sequence&
        SimSlab_Floor_FloorOverAirDetailed () const;

        SimSlab_Floor_FloorOverAirDetailed_sequence&
        SimSlab_Floor_FloorOverAirDetailed ();

        void
        SimSlab_Floor_FloorOverAirDetailed (const SimSlab_Floor_FloorOverAirDetailed_sequence& s);

        // SimSlab_Floor_FloorOverEarth
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_FloorOverEarth SimSlab_Floor_FloorOverEarth_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_FloorOverEarth_type > SimSlab_Floor_FloorOverEarth_sequence;
        typedef SimSlab_Floor_FloorOverEarth_sequence::iterator SimSlab_Floor_FloorOverEarth_iterator;
        typedef SimSlab_Floor_FloorOverEarth_sequence::const_iterator SimSlab_Floor_FloorOverEarth_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_FloorOverEarth_type, char > SimSlab_Floor_FloorOverEarth_traits;

        const SimSlab_Floor_FloorOverEarth_sequence&
        SimSlab_Floor_FloorOverEarth () const;

        SimSlab_Floor_FloorOverEarth_sequence&
        SimSlab_Floor_FloorOverEarth ();

        void
        SimSlab_Floor_FloorOverEarth (const SimSlab_Floor_FloorOverEarth_sequence& s);

        // SimSlab_Floor_FloorOverEarthDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_FloorOverEarthDetailed SimSlab_Floor_FloorOverEarthDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_FloorOverEarthDetailed_type > SimSlab_Floor_FloorOverEarthDetailed_sequence;
        typedef SimSlab_Floor_FloorOverEarthDetailed_sequence::iterator SimSlab_Floor_FloorOverEarthDetailed_iterator;
        typedef SimSlab_Floor_FloorOverEarthDetailed_sequence::const_iterator SimSlab_Floor_FloorOverEarthDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_FloorOverEarthDetailed_type, char > SimSlab_Floor_FloorOverEarthDetailed_traits;

        const SimSlab_Floor_FloorOverEarthDetailed_sequence&
        SimSlab_Floor_FloorOverEarthDetailed () const;

        SimSlab_Floor_FloorOverEarthDetailed_sequence&
        SimSlab_Floor_FloorOverEarthDetailed ();

        void
        SimSlab_Floor_FloorOverEarthDetailed (const SimSlab_Floor_FloorOverEarthDetailed_sequence& s);

        // SimSlab_Floor_InterzoneFloor
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_InterzoneFloor SimSlab_Floor_InterzoneFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_InterzoneFloor_type > SimSlab_Floor_InterzoneFloor_sequence;
        typedef SimSlab_Floor_InterzoneFloor_sequence::iterator SimSlab_Floor_InterzoneFloor_iterator;
        typedef SimSlab_Floor_InterzoneFloor_sequence::const_iterator SimSlab_Floor_InterzoneFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_InterzoneFloor_type, char > SimSlab_Floor_InterzoneFloor_traits;

        const SimSlab_Floor_InterzoneFloor_sequence&
        SimSlab_Floor_InterzoneFloor () const;

        SimSlab_Floor_InterzoneFloor_sequence&
        SimSlab_Floor_InterzoneFloor ();

        void
        SimSlab_Floor_InterzoneFloor (const SimSlab_Floor_InterzoneFloor_sequence& s);

        // SimSlab_Floor_InterzoneFloorDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_InterzoneFloorDetailed SimSlab_Floor_InterzoneFloorDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_InterzoneFloorDetailed_type > SimSlab_Floor_InterzoneFloorDetailed_sequence;
        typedef SimSlab_Floor_InterzoneFloorDetailed_sequence::iterator SimSlab_Floor_InterzoneFloorDetailed_iterator;
        typedef SimSlab_Floor_InterzoneFloorDetailed_sequence::const_iterator SimSlab_Floor_InterzoneFloorDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_InterzoneFloorDetailed_type, char > SimSlab_Floor_InterzoneFloorDetailed_traits;

        const SimSlab_Floor_InterzoneFloorDetailed_sequence&
        SimSlab_Floor_InterzoneFloorDetailed () const;

        SimSlab_Floor_InterzoneFloorDetailed_sequence&
        SimSlab_Floor_InterzoneFloorDetailed ();

        void
        SimSlab_Floor_InterzoneFloorDetailed (const SimSlab_Floor_InterzoneFloorDetailed_sequence& s);

        // SimSlab_Floor_RaisedFloor
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Floor_RaisedFloor SimSlab_Floor_RaisedFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Floor_RaisedFloor_type > SimSlab_Floor_RaisedFloor_sequence;
        typedef SimSlab_Floor_RaisedFloor_sequence::iterator SimSlab_Floor_RaisedFloor_iterator;
        typedef SimSlab_Floor_RaisedFloor_sequence::const_iterator SimSlab_Floor_RaisedFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Floor_RaisedFloor_type, char > SimSlab_Floor_RaisedFloor_traits;

        const SimSlab_Floor_RaisedFloor_sequence&
        SimSlab_Floor_RaisedFloor () const;

        SimSlab_Floor_RaisedFloor_sequence&
        SimSlab_Floor_RaisedFloor ();

        void
        SimSlab_Floor_RaisedFloor (const SimSlab_Floor_RaisedFloor_sequence& s);

        // SimSlab_Landing_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_Landing_Default SimSlab_Landing_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_Landing_Default_type > SimSlab_Landing_Default_sequence;
        typedef SimSlab_Landing_Default_sequence::iterator SimSlab_Landing_Default_iterator;
        typedef SimSlab_Landing_Default_sequence::const_iterator SimSlab_Landing_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_Landing_Default_type, char > SimSlab_Landing_Default_traits;

        const SimSlab_Landing_Default_sequence&
        SimSlab_Landing_Default () const;

        SimSlab_Landing_Default_sequence&
        SimSlab_Landing_Default ();

        void
        SimSlab_Landing_Default (const SimSlab_Landing_Default_sequence& s);

        // SimSlab_OtherSideCoefficients_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideCoefficients_Default SimSlab_OtherSideCoefficients_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideCoefficients_Default_type > SimSlab_OtherSideCoefficients_Default_sequence;
        typedef SimSlab_OtherSideCoefficients_Default_sequence::iterator SimSlab_OtherSideCoefficients_Default_iterator;
        typedef SimSlab_OtherSideCoefficients_Default_sequence::const_iterator SimSlab_OtherSideCoefficients_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideCoefficients_Default_type, char > SimSlab_OtherSideCoefficients_Default_traits;

        const SimSlab_OtherSideCoefficients_Default_sequence&
        SimSlab_OtherSideCoefficients_Default () const;

        SimSlab_OtherSideCoefficients_Default_sequence&
        SimSlab_OtherSideCoefficients_Default ();

        void
        SimSlab_OtherSideCoefficients_Default (const SimSlab_OtherSideCoefficients_Default_sequence& s);

        // SimSlab_OtherSideCoefficients_Detailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideCoefficients_Detailed SimSlab_OtherSideCoefficients_Detailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideCoefficients_Detailed_type > SimSlab_OtherSideCoefficients_Detailed_sequence;
        typedef SimSlab_OtherSideCoefficients_Detailed_sequence::iterator SimSlab_OtherSideCoefficients_Detailed_iterator;
        typedef SimSlab_OtherSideCoefficients_Detailed_sequence::const_iterator SimSlab_OtherSideCoefficients_Detailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideCoefficients_Detailed_type, char > SimSlab_OtherSideCoefficients_Detailed_traits;

        const SimSlab_OtherSideCoefficients_Detailed_sequence&
        SimSlab_OtherSideCoefficients_Detailed () const;

        SimSlab_OtherSideCoefficients_Detailed_sequence&
        SimSlab_OtherSideCoefficients_Detailed ();

        void
        SimSlab_OtherSideCoefficients_Detailed (const SimSlab_OtherSideCoefficients_Detailed_sequence& s);

        // SimSlab_OtherSideCoefficients_DetailedFloor
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideCoefficients_DetailedFloor SimSlab_OtherSideCoefficients_DetailedFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideCoefficients_DetailedFloor_type > SimSlab_OtherSideCoefficients_DetailedFloor_sequence;
        typedef SimSlab_OtherSideCoefficients_DetailedFloor_sequence::iterator SimSlab_OtherSideCoefficients_DetailedFloor_iterator;
        typedef SimSlab_OtherSideCoefficients_DetailedFloor_sequence::const_iterator SimSlab_OtherSideCoefficients_DetailedFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideCoefficients_DetailedFloor_type, char > SimSlab_OtherSideCoefficients_DetailedFloor_traits;

        const SimSlab_OtherSideCoefficients_DetailedFloor_sequence&
        SimSlab_OtherSideCoefficients_DetailedFloor () const;

        SimSlab_OtherSideCoefficients_DetailedFloor_sequence&
        SimSlab_OtherSideCoefficients_DetailedFloor ();

        void
        SimSlab_OtherSideCoefficients_DetailedFloor (const SimSlab_OtherSideCoefficients_DetailedFloor_sequence& s);

        // SimSlab_OtherSideCoefficients_DetailedRoofCeiling
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideCoefficients_DetailedRoofCeiling SimSlab_OtherSideCoefficients_DetailedRoofCeiling_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideCoefficients_DetailedRoofCeiling_type > SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence;
        typedef SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence::iterator SimSlab_OtherSideCoefficients_DetailedRoofCeiling_iterator;
        typedef SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence::const_iterator SimSlab_OtherSideCoefficients_DetailedRoofCeiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideCoefficients_DetailedRoofCeiling_type, char > SimSlab_OtherSideCoefficients_DetailedRoofCeiling_traits;

        const SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence&
        SimSlab_OtherSideCoefficients_DetailedRoofCeiling () const;

        SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence&
        SimSlab_OtherSideCoefficients_DetailedRoofCeiling ();

        void
        SimSlab_OtherSideCoefficients_DetailedRoofCeiling (const SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence& s);

        // SimSlab_OtherSideConditionsModel_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideConditionsModel_Default SimSlab_OtherSideConditionsModel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideConditionsModel_Default_type > SimSlab_OtherSideConditionsModel_Default_sequence;
        typedef SimSlab_OtherSideConditionsModel_Default_sequence::iterator SimSlab_OtherSideConditionsModel_Default_iterator;
        typedef SimSlab_OtherSideConditionsModel_Default_sequence::const_iterator SimSlab_OtherSideConditionsModel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideConditionsModel_Default_type, char > SimSlab_OtherSideConditionsModel_Default_traits;

        const SimSlab_OtherSideConditionsModel_Default_sequence&
        SimSlab_OtherSideConditionsModel_Default () const;

        SimSlab_OtherSideConditionsModel_Default_sequence&
        SimSlab_OtherSideConditionsModel_Default ();

        void
        SimSlab_OtherSideConditionsModel_Default (const SimSlab_OtherSideConditionsModel_Default_sequence& s);

        // SimSlab_OtherSideConditionsModel_Detailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideConditionsModel_Detailed SimSlab_OtherSideConditionsModel_Detailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideConditionsModel_Detailed_type > SimSlab_OtherSideConditionsModel_Detailed_sequence;
        typedef SimSlab_OtherSideConditionsModel_Detailed_sequence::iterator SimSlab_OtherSideConditionsModel_Detailed_iterator;
        typedef SimSlab_OtherSideConditionsModel_Detailed_sequence::const_iterator SimSlab_OtherSideConditionsModel_Detailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideConditionsModel_Detailed_type, char > SimSlab_OtherSideConditionsModel_Detailed_traits;

        const SimSlab_OtherSideConditionsModel_Detailed_sequence&
        SimSlab_OtherSideConditionsModel_Detailed () const;

        SimSlab_OtherSideConditionsModel_Detailed_sequence&
        SimSlab_OtherSideConditionsModel_Detailed ();

        void
        SimSlab_OtherSideConditionsModel_Detailed (const SimSlab_OtherSideConditionsModel_Detailed_sequence& s);

        // SimSlab_OtherSideConditionsModel_DetailedFloor
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideConditionsModel_DetailedFloor SimSlab_OtherSideConditionsModel_DetailedFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideConditionsModel_DetailedFloor_type > SimSlab_OtherSideConditionsModel_DetailedFloor_sequence;
        typedef SimSlab_OtherSideConditionsModel_DetailedFloor_sequence::iterator SimSlab_OtherSideConditionsModel_DetailedFloor_iterator;
        typedef SimSlab_OtherSideConditionsModel_DetailedFloor_sequence::const_iterator SimSlab_OtherSideConditionsModel_DetailedFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideConditionsModel_DetailedFloor_type, char > SimSlab_OtherSideConditionsModel_DetailedFloor_traits;

        const SimSlab_OtherSideConditionsModel_DetailedFloor_sequence&
        SimSlab_OtherSideConditionsModel_DetailedFloor () const;

        SimSlab_OtherSideConditionsModel_DetailedFloor_sequence&
        SimSlab_OtherSideConditionsModel_DetailedFloor ();

        void
        SimSlab_OtherSideConditionsModel_DetailedFloor (const SimSlab_OtherSideConditionsModel_DetailedFloor_sequence& s);

        // SimSlab_OtherSideConditionsModel_DetailedRoofCeiling
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_OtherSideConditionsModel_DetailedRoofCeiling SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_type > SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence;
        typedef SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence::iterator SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_iterator;
        typedef SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence::const_iterator SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_type, char > SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_traits;

        const SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence&
        SimSlab_OtherSideConditionsModel_DetailedRoofCeiling () const;

        SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence&
        SimSlab_OtherSideConditionsModel_DetailedRoofCeiling ();

        void
        SimSlab_OtherSideConditionsModel_DetailedRoofCeiling (const SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence& s);

        // SimSlab_RoofSlab_RoofUnderAir
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_RoofSlab_RoofUnderAir SimSlab_RoofSlab_RoofUnderAir_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_RoofSlab_RoofUnderAir_type > SimSlab_RoofSlab_RoofUnderAir_sequence;
        typedef SimSlab_RoofSlab_RoofUnderAir_sequence::iterator SimSlab_RoofSlab_RoofUnderAir_iterator;
        typedef SimSlab_RoofSlab_RoofUnderAir_sequence::const_iterator SimSlab_RoofSlab_RoofUnderAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_RoofSlab_RoofUnderAir_type, char > SimSlab_RoofSlab_RoofUnderAir_traits;

        const SimSlab_RoofSlab_RoofUnderAir_sequence&
        SimSlab_RoofSlab_RoofUnderAir () const;

        SimSlab_RoofSlab_RoofUnderAir_sequence&
        SimSlab_RoofSlab_RoofUnderAir ();

        void
        SimSlab_RoofSlab_RoofUnderAir (const SimSlab_RoofSlab_RoofUnderAir_sequence& s);

        // SimSlab_RoofSlab_RoofUnderAirDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_RoofSlab_RoofUnderAirDetailed SimSlab_RoofSlab_RoofUnderAirDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_RoofSlab_RoofUnderAirDetailed_type > SimSlab_RoofSlab_RoofUnderAirDetailed_sequence;
        typedef SimSlab_RoofSlab_RoofUnderAirDetailed_sequence::iterator SimSlab_RoofSlab_RoofUnderAirDetailed_iterator;
        typedef SimSlab_RoofSlab_RoofUnderAirDetailed_sequence::const_iterator SimSlab_RoofSlab_RoofUnderAirDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_RoofSlab_RoofUnderAirDetailed_type, char > SimSlab_RoofSlab_RoofUnderAirDetailed_traits;

        const SimSlab_RoofSlab_RoofUnderAirDetailed_sequence&
        SimSlab_RoofSlab_RoofUnderAirDetailed () const;

        SimSlab_RoofSlab_RoofUnderAirDetailed_sequence&
        SimSlab_RoofSlab_RoofUnderAirDetailed ();

        void
        SimSlab_RoofSlab_RoofUnderAirDetailed (const SimSlab_RoofSlab_RoofUnderAirDetailed_sequence& s);

        // SimSlab_RoofSlab_RoofUnderEarth
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_RoofSlab_RoofUnderEarth SimSlab_RoofSlab_RoofUnderEarth_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_RoofSlab_RoofUnderEarth_type > SimSlab_RoofSlab_RoofUnderEarth_sequence;
        typedef SimSlab_RoofSlab_RoofUnderEarth_sequence::iterator SimSlab_RoofSlab_RoofUnderEarth_iterator;
        typedef SimSlab_RoofSlab_RoofUnderEarth_sequence::const_iterator SimSlab_RoofSlab_RoofUnderEarth_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_RoofSlab_RoofUnderEarth_type, char > SimSlab_RoofSlab_RoofUnderEarth_traits;

        const SimSlab_RoofSlab_RoofUnderEarth_sequence&
        SimSlab_RoofSlab_RoofUnderEarth () const;

        SimSlab_RoofSlab_RoofUnderEarth_sequence&
        SimSlab_RoofSlab_RoofUnderEarth ();

        void
        SimSlab_RoofSlab_RoofUnderEarth (const SimSlab_RoofSlab_RoofUnderEarth_sequence& s);

        // SimSlab_RoofSlab_RoofUnderEarthDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlab_RoofSlab_RoofUnderEarthDetailed SimSlab_RoofSlab_RoofUnderEarthDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimSlab_RoofSlab_RoofUnderEarthDetailed_type > SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence;
        typedef SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence::iterator SimSlab_RoofSlab_RoofUnderEarthDetailed_iterator;
        typedef SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence::const_iterator SimSlab_RoofSlab_RoofUnderEarthDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlab_RoofSlab_RoofUnderEarthDetailed_type, char > SimSlab_RoofSlab_RoofUnderEarthDetailed_traits;

        const SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence&
        SimSlab_RoofSlab_RoofUnderEarthDetailed () const;

        SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence&
        SimSlab_RoofSlab_RoofUnderEarthDetailed ();

        void
        SimSlab_RoofSlab_RoofUnderEarthDetailed (const SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence& s);

        // SimSlabParams_Slab_Ceiling
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSlabParams_Slab_Ceiling SimSlabParams_Slab_Ceiling_type;
        typedef ::xsd::cxx::tree::sequence< SimSlabParams_Slab_Ceiling_type > SimSlabParams_Slab_Ceiling_sequence;
        typedef SimSlabParams_Slab_Ceiling_sequence::iterator SimSlabParams_Slab_Ceiling_iterator;
        typedef SimSlabParams_Slab_Ceiling_sequence::const_iterator SimSlabParams_Slab_Ceiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlabParams_Slab_Ceiling_type, char > SimSlabParams_Slab_Ceiling_traits;

        const SimSlabParams_Slab_Ceiling_sequence&
        SimSlabParams_Slab_Ceiling () const;

        SimSlabParams_Slab_Ceiling_sequence&
        SimSlabParams_Slab_Ceiling ();

        void
        SimSlabParams_Slab_Ceiling (const SimSlabParams_Slab_Ceiling_sequence& s);

        // SimSlabParams_Slab_Floor
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSlabParams_Slab_Floor SimSlabParams_Slab_Floor_type;
        typedef ::xsd::cxx::tree::sequence< SimSlabParams_Slab_Floor_type > SimSlabParams_Slab_Floor_sequence;
        typedef SimSlabParams_Slab_Floor_sequence::iterator SimSlabParams_Slab_Floor_iterator;
        typedef SimSlabParams_Slab_Floor_sequence::const_iterator SimSlabParams_Slab_Floor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlabParams_Slab_Floor_type, char > SimSlabParams_Slab_Floor_traits;

        const SimSlabParams_Slab_Floor_sequence&
        SimSlabParams_Slab_Floor () const;

        SimSlabParams_Slab_Floor_sequence&
        SimSlabParams_Slab_Floor ();

        void
        SimSlabParams_Slab_Floor (const SimSlabParams_Slab_Floor_sequence& s);

        // SimSlabParams_Slab_Landing
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSlabParams_Slab_Landing SimSlabParams_Slab_Landing_type;
        typedef ::xsd::cxx::tree::sequence< SimSlabParams_Slab_Landing_type > SimSlabParams_Slab_Landing_sequence;
        typedef SimSlabParams_Slab_Landing_sequence::iterator SimSlabParams_Slab_Landing_iterator;
        typedef SimSlabParams_Slab_Landing_sequence::const_iterator SimSlabParams_Slab_Landing_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlabParams_Slab_Landing_type, char > SimSlabParams_Slab_Landing_traits;

        const SimSlabParams_Slab_Landing_sequence&
        SimSlabParams_Slab_Landing () const;

        SimSlabParams_Slab_Landing_sequence&
        SimSlabParams_Slab_Landing ();

        void
        SimSlabParams_Slab_Landing (const SimSlabParams_Slab_Landing_sequence& s);

        // SimSlabParams_Slab_Roof
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSlabParams_Slab_Roof SimSlabParams_Slab_Roof_type;
        typedef ::xsd::cxx::tree::sequence< SimSlabParams_Slab_Roof_type > SimSlabParams_Slab_Roof_sequence;
        typedef SimSlabParams_Slab_Roof_sequence::iterator SimSlabParams_Slab_Roof_iterator;
        typedef SimSlabParams_Slab_Roof_sequence::const_iterator SimSlabParams_Slab_Roof_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlabParams_Slab_Roof_type, char > SimSlabParams_Slab_Roof_traits;

        const SimSlabParams_Slab_Roof_sequence&
        SimSlabParams_Slab_Roof () const;

        SimSlabParams_Slab_Roof_sequence&
        SimSlabParams_Slab_Roof ();

        void
        SimSlabParams_Slab_Roof (const SimSlabParams_Slab_Roof_sequence& s);

        // SimSlabType_Slab_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSlabType_Slab_Default SimSlabType_Slab_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSlabType_Slab_Default_type > SimSlabType_Slab_Default_sequence;
        typedef SimSlabType_Slab_Default_sequence::iterator SimSlabType_Slab_Default_iterator;
        typedef SimSlabType_Slab_Default_sequence::const_iterator SimSlabType_Slab_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSlabType_Slab_Default_type, char > SimSlabType_Slab_Default_traits;

        const SimSlabType_Slab_Default_sequence&
        SimSlabType_Slab_Default () const;

        SimSlabType_Slab_Default_sequence&
        SimSlabType_Slab_Default ();

        void
        SimSlabType_Slab_Default (const SimSlabType_Slab_Default_sequence& s);

        // SimSoftwareApplication_Default_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSoftwareApplication_Default_Default SimSoftwareApplication_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSoftwareApplication_Default_Default_type > SimSoftwareApplication_Default_Default_sequence;
        typedef SimSoftwareApplication_Default_Default_sequence::iterator SimSoftwareApplication_Default_Default_iterator;
        typedef SimSoftwareApplication_Default_Default_sequence::const_iterator SimSoftwareApplication_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSoftwareApplication_Default_Default_type, char > SimSoftwareApplication_Default_Default_traits;

        const SimSoftwareApplication_Default_Default_sequence&
        SimSoftwareApplication_Default_Default () const;

        SimSoftwareApplication_Default_Default_sequence&
        SimSoftwareApplication_Default_Default ();

        void
        SimSoftwareApplication_Default_Default (const SimSoftwareApplication_Default_Default_sequence& s);

        // SimSolarObsParams_SolarObstruction_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSolarObsParams_SolarObstruction_Default SimSolarObsParams_SolarObstruction_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarObsParams_SolarObstruction_Default_type > SimSolarObsParams_SolarObstruction_Default_sequence;
        typedef SimSolarObsParams_SolarObstruction_Default_sequence::iterator SimSolarObsParams_SolarObstruction_Default_iterator;
        typedef SimSolarObsParams_SolarObstruction_Default_sequence::const_iterator SimSolarObsParams_SolarObstruction_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarObsParams_SolarObstruction_Default_type, char > SimSolarObsParams_SolarObstruction_Default_traits;

        const SimSolarObsParams_SolarObstruction_Default_sequence&
        SimSolarObsParams_SolarObstruction_Default () const;

        SimSolarObsParams_SolarObstruction_Default_sequence&
        SimSolarObsParams_SolarObstruction_Default ();

        void
        SimSolarObsParams_SolarObstruction_Default (const SimSolarObsParams_SolarObstruction_Default_sequence& s);

        // SimSolarShade_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_Default_Default SimSolarShade_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_Default_Default_type > SimSolarShade_Default_Default_sequence;
        typedef SimSolarShade_Default_Default_sequence::iterator SimSolarShade_Default_Default_iterator;
        typedef SimSolarShade_Default_Default_sequence::const_iterator SimSolarShade_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_Default_Default_type, char > SimSolarShade_Default_Default_traits;

        const SimSolarShade_Default_Default_sequence&
        SimSolarShade_Default_Default () const;

        SimSolarShade_Default_Default_sequence&
        SimSolarShade_Default_Default ();

        void
        SimSolarShade_Default_Default (const SimSolarShade_Default_Default_sequence& s);

        // SimSolarShade_Fin_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_Fin_Default SimSolarShade_Fin_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_Fin_Default_type > SimSolarShade_Fin_Default_sequence;
        typedef SimSolarShade_Fin_Default_sequence::iterator SimSolarShade_Fin_Default_iterator;
        typedef SimSolarShade_Fin_Default_sequence::const_iterator SimSolarShade_Fin_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_Fin_Default_type, char > SimSolarShade_Fin_Default_traits;

        const SimSolarShade_Fin_Default_sequence&
        SimSolarShade_Fin_Default () const;

        SimSolarShade_Fin_Default_sequence&
        SimSolarShade_Fin_Default ();

        void
        SimSolarShade_Fin_Default (const SimSolarShade_Fin_Default_sequence& s);

        // SimSolarShade_Fin_Projection
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_Fin_Projection SimSolarShade_Fin_Projection_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_Fin_Projection_type > SimSolarShade_Fin_Projection_sequence;
        typedef SimSolarShade_Fin_Projection_sequence::iterator SimSolarShade_Fin_Projection_iterator;
        typedef SimSolarShade_Fin_Projection_sequence::const_iterator SimSolarShade_Fin_Projection_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_Fin_Projection_type, char > SimSolarShade_Fin_Projection_traits;

        const SimSolarShade_Fin_Projection_sequence&
        SimSolarShade_Fin_Projection () const;

        SimSolarShade_Fin_Projection_sequence&
        SimSolarShade_Fin_Projection ();

        void
        SimSolarShade_Fin_Projection (const SimSolarShade_Fin_Projection_sequence& s);

        // SimSolarShade_Overhang_Continuous
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_Overhang_Continuous SimSolarShade_Overhang_Continuous_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_Overhang_Continuous_type > SimSolarShade_Overhang_Continuous_sequence;
        typedef SimSolarShade_Overhang_Continuous_sequence::iterator SimSolarShade_Overhang_Continuous_iterator;
        typedef SimSolarShade_Overhang_Continuous_sequence::const_iterator SimSolarShade_Overhang_Continuous_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_Overhang_Continuous_type, char > SimSolarShade_Overhang_Continuous_traits;

        const SimSolarShade_Overhang_Continuous_sequence&
        SimSolarShade_Overhang_Continuous () const;

        SimSolarShade_Overhang_Continuous_sequence&
        SimSolarShade_Overhang_Continuous ();

        void
        SimSolarShade_Overhang_Continuous (const SimSolarShade_Overhang_Continuous_sequence& s);

        // SimSolarShade_Overhang_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_Overhang_Default SimSolarShade_Overhang_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_Overhang_Default_type > SimSolarShade_Overhang_Default_sequence;
        typedef SimSolarShade_Overhang_Default_sequence::iterator SimSolarShade_Overhang_Default_iterator;
        typedef SimSolarShade_Overhang_Default_sequence::const_iterator SimSolarShade_Overhang_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_Overhang_Default_type, char > SimSolarShade_Overhang_Default_traits;

        const SimSolarShade_Overhang_Default_sequence&
        SimSolarShade_Overhang_Default () const;

        SimSolarShade_Overhang_Default_sequence&
        SimSolarShade_Overhang_Default ();

        void
        SimSolarShade_Overhang_Default (const SimSolarShade_Overhang_Default_sequence& s);

        // SimSolarShade_Overhang_Projection
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_Overhang_Projection SimSolarShade_Overhang_Projection_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_Overhang_Projection_type > SimSolarShade_Overhang_Projection_sequence;
        typedef SimSolarShade_Overhang_Projection_sequence::iterator SimSolarShade_Overhang_Projection_iterator;
        typedef SimSolarShade_Overhang_Projection_sequence::const_iterator SimSolarShade_Overhang_Projection_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_Overhang_Projection_type, char > SimSolarShade_Overhang_Projection_traits;

        const SimSolarShade_Overhang_Projection_sequence&
        SimSolarShade_Overhang_Projection () const;

        SimSolarShade_Overhang_Projection_sequence&
        SimSolarShade_Overhang_Projection ();

        void
        SimSolarShade_Overhang_Projection (const SimSolarShade_Overhang_Projection_sequence& s);

        // SimSolarShade_ZoneDetailed_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShade_ZoneDetailed_Default SimSolarShade_ZoneDetailed_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShade_ZoneDetailed_Default_type > SimSolarShade_ZoneDetailed_Default_sequence;
        typedef SimSolarShade_ZoneDetailed_Default_sequence::iterator SimSolarShade_ZoneDetailed_Default_iterator;
        typedef SimSolarShade_ZoneDetailed_Default_sequence::const_iterator SimSolarShade_ZoneDetailed_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShade_ZoneDetailed_Default_type, char > SimSolarShade_ZoneDetailed_Default_traits;

        const SimSolarShade_ZoneDetailed_Default_sequence&
        SimSolarShade_ZoneDetailed_Default () const;

        SimSolarShade_ZoneDetailed_Default_sequence&
        SimSolarShade_ZoneDetailed_Default ();

        void
        SimSolarShade_ZoneDetailed_Default (const SimSolarShade_ZoneDetailed_Default_sequence& s);

        // SimSolarShadeArrayParams_SolarShadeArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSolarShadeArrayParams_SolarShadeArray_Default SimSolarShadeArrayParams_SolarShadeArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShadeArrayParams_SolarShadeArray_Default_type > SimSolarShadeArrayParams_SolarShadeArray_Default_sequence;
        typedef SimSolarShadeArrayParams_SolarShadeArray_Default_sequence::iterator SimSolarShadeArrayParams_SolarShadeArray_Default_iterator;
        typedef SimSolarShadeArrayParams_SolarShadeArray_Default_sequence::const_iterator SimSolarShadeArrayParams_SolarShadeArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShadeArrayParams_SolarShadeArray_Default_type, char > SimSolarShadeArrayParams_SolarShadeArray_Default_traits;

        const SimSolarShadeArrayParams_SolarShadeArray_Default_sequence&
        SimSolarShadeArrayParams_SolarShadeArray_Default () const;

        SimSolarShadeArrayParams_SolarShadeArray_Default_sequence&
        SimSolarShadeArrayParams_SolarShadeArray_Default ();

        void
        SimSolarShadeArrayParams_SolarShadeArray_Default (const SimSolarShadeArrayParams_SolarShadeArray_Default_sequence& s);

        // SimSolarShadePanelParams_Panel_SolarShading
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSolarShadePanelParams_Panel_SolarShading SimSolarShadePanelParams_Panel_SolarShading_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShadePanelParams_Panel_SolarShading_type > SimSolarShadePanelParams_Panel_SolarShading_sequence;
        typedef SimSolarShadePanelParams_Panel_SolarShading_sequence::iterator SimSolarShadePanelParams_Panel_SolarShading_iterator;
        typedef SimSolarShadePanelParams_Panel_SolarShading_sequence::const_iterator SimSolarShadePanelParams_Panel_SolarShading_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShadePanelParams_Panel_SolarShading_type, char > SimSolarShadePanelParams_Panel_SolarShading_traits;

        const SimSolarShadePanelParams_Panel_SolarShading_sequence&
        SimSolarShadePanelParams_Panel_SolarShading () const;

        SimSolarShadePanelParams_Panel_SolarShading_sequence&
        SimSolarShadePanelParams_Panel_SolarShading ();

        void
        SimSolarShadePanelParams_Panel_SolarShading (const SimSolarShadePanelParams_Panel_SolarShading_sequence& s);

        // SimSolarShadeType_SolarShade_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSolarShadeType_SolarShade_Default SimSolarShadeType_SolarShade_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSolarShadeType_SolarShade_Default_type > SimSolarShadeType_SolarShade_Default_sequence;
        typedef SimSolarShadeType_SolarShade_Default_sequence::iterator SimSolarShadeType_SolarShade_Default_iterator;
        typedef SimSolarShadeType_SolarShade_Default_sequence::const_iterator SimSolarShadeType_SolarShade_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSolarShadeType_SolarShade_Default_type, char > SimSolarShadeType_SolarShade_Default_traits;

        const SimSolarShadeType_SolarShade_Default_sequence&
        SimSolarShadeType_SolarShade_Default () const;

        SimSolarShadeType_SolarShade_Default_sequence&
        SimSolarShadeType_SolarShade_Default ();

        void
        SimSolarShadeType_SolarShade_Default (const SimSolarShadeType_SolarShade_Default_sequence& s);

        // SimSpace_Occupied_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Occupied_Default SimSpace_Occupied_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Occupied_Default_type > SimSpace_Occupied_Default_sequence;
        typedef SimSpace_Occupied_Default_sequence::iterator SimSpace_Occupied_Default_iterator;
        typedef SimSpace_Occupied_Default_sequence::const_iterator SimSpace_Occupied_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Occupied_Default_type, char > SimSpace_Occupied_Default_traits;

        const SimSpace_Occupied_Default_sequence&
        SimSpace_Occupied_Default () const;

        SimSpace_Occupied_Default_sequence&
        SimSpace_Occupied_Default ();

        void
        SimSpace_Occupied_Default (const SimSpace_Occupied_Default_sequence& s);

        // SimSpace_Unoccupied_CeilingPlenum
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_CeilingPlenum SimSpace_Unoccupied_CeilingPlenum_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_CeilingPlenum_type > SimSpace_Unoccupied_CeilingPlenum_sequence;
        typedef SimSpace_Unoccupied_CeilingPlenum_sequence::iterator SimSpace_Unoccupied_CeilingPlenum_iterator;
        typedef SimSpace_Unoccupied_CeilingPlenum_sequence::const_iterator SimSpace_Unoccupied_CeilingPlenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_CeilingPlenum_type, char > SimSpace_Unoccupied_CeilingPlenum_traits;

        const SimSpace_Unoccupied_CeilingPlenum_sequence&
        SimSpace_Unoccupied_CeilingPlenum () const;

        SimSpace_Unoccupied_CeilingPlenum_sequence&
        SimSpace_Unoccupied_CeilingPlenum ();

        void
        SimSpace_Unoccupied_CeilingPlenum (const SimSpace_Unoccupied_CeilingPlenum_sequence& s);

        // SimSpace_Unoccupied_CeilingVoid
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_CeilingVoid SimSpace_Unoccupied_CeilingVoid_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_CeilingVoid_type > SimSpace_Unoccupied_CeilingVoid_sequence;
        typedef SimSpace_Unoccupied_CeilingVoid_sequence::iterator SimSpace_Unoccupied_CeilingVoid_iterator;
        typedef SimSpace_Unoccupied_CeilingVoid_sequence::const_iterator SimSpace_Unoccupied_CeilingVoid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_CeilingVoid_type, char > SimSpace_Unoccupied_CeilingVoid_traits;

        const SimSpace_Unoccupied_CeilingVoid_sequence&
        SimSpace_Unoccupied_CeilingVoid () const;

        SimSpace_Unoccupied_CeilingVoid_sequence&
        SimSpace_Unoccupied_CeilingVoid ();

        void
        SimSpace_Unoccupied_CeilingVoid (const SimSpace_Unoccupied_CeilingVoid_sequence& s);

        // SimSpace_Unoccupied_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_Default SimSpace_Unoccupied_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_Default_type > SimSpace_Unoccupied_Default_sequence;
        typedef SimSpace_Unoccupied_Default_sequence::iterator SimSpace_Unoccupied_Default_iterator;
        typedef SimSpace_Unoccupied_Default_sequence::const_iterator SimSpace_Unoccupied_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_Default_type, char > SimSpace_Unoccupied_Default_traits;

        const SimSpace_Unoccupied_Default_sequence&
        SimSpace_Unoccupied_Default () const;

        SimSpace_Unoccupied_Default_sequence&
        SimSpace_Unoccupied_Default ();

        void
        SimSpace_Unoccupied_Default (const SimSpace_Unoccupied_Default_sequence& s);

        // SimSpace_Unoccupied_FloorPlenum
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_FloorPlenum SimSpace_Unoccupied_FloorPlenum_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_FloorPlenum_type > SimSpace_Unoccupied_FloorPlenum_sequence;
        typedef SimSpace_Unoccupied_FloorPlenum_sequence::iterator SimSpace_Unoccupied_FloorPlenum_iterator;
        typedef SimSpace_Unoccupied_FloorPlenum_sequence::const_iterator SimSpace_Unoccupied_FloorPlenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_FloorPlenum_type, char > SimSpace_Unoccupied_FloorPlenum_traits;

        const SimSpace_Unoccupied_FloorPlenum_sequence&
        SimSpace_Unoccupied_FloorPlenum () const;

        SimSpace_Unoccupied_FloorPlenum_sequence&
        SimSpace_Unoccupied_FloorPlenum ();

        void
        SimSpace_Unoccupied_FloorPlenum (const SimSpace_Unoccupied_FloorPlenum_sequence& s);

        // SimSpace_Unoccupied_FloorVoid
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_FloorVoid SimSpace_Unoccupied_FloorVoid_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_FloorVoid_type > SimSpace_Unoccupied_FloorVoid_sequence;
        typedef SimSpace_Unoccupied_FloorVoid_sequence::iterator SimSpace_Unoccupied_FloorVoid_iterator;
        typedef SimSpace_Unoccupied_FloorVoid_sequence::const_iterator SimSpace_Unoccupied_FloorVoid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_FloorVoid_type, char > SimSpace_Unoccupied_FloorVoid_traits;

        const SimSpace_Unoccupied_FloorVoid_sequence&
        SimSpace_Unoccupied_FloorVoid () const;

        SimSpace_Unoccupied_FloorVoid_sequence&
        SimSpace_Unoccupied_FloorVoid ();

        void
        SimSpace_Unoccupied_FloorVoid (const SimSpace_Unoccupied_FloorVoid_sequence& s);

        // SimSpace_Unoccupied_Plenum
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_Plenum SimSpace_Unoccupied_Plenum_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_Plenum_type > SimSpace_Unoccupied_Plenum_sequence;
        typedef SimSpace_Unoccupied_Plenum_sequence::iterator SimSpace_Unoccupied_Plenum_iterator;
        typedef SimSpace_Unoccupied_Plenum_sequence::const_iterator SimSpace_Unoccupied_Plenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_Plenum_type, char > SimSpace_Unoccupied_Plenum_traits;

        const SimSpace_Unoccupied_Plenum_sequence&
        SimSpace_Unoccupied_Plenum () const;

        SimSpace_Unoccupied_Plenum_sequence&
        SimSpace_Unoccupied_Plenum ();

        void
        SimSpace_Unoccupied_Plenum (const SimSpace_Unoccupied_Plenum_sequence& s);

        // SimSpace_Unoccupied_SlabOpeningVoid
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_SlabOpeningVoid SimSpace_Unoccupied_SlabOpeningVoid_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_SlabOpeningVoid_type > SimSpace_Unoccupied_SlabOpeningVoid_sequence;
        typedef SimSpace_Unoccupied_SlabOpeningVoid_sequence::iterator SimSpace_Unoccupied_SlabOpeningVoid_iterator;
        typedef SimSpace_Unoccupied_SlabOpeningVoid_sequence::const_iterator SimSpace_Unoccupied_SlabOpeningVoid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_SlabOpeningVoid_type, char > SimSpace_Unoccupied_SlabOpeningVoid_traits;

        const SimSpace_Unoccupied_SlabOpeningVoid_sequence&
        SimSpace_Unoccupied_SlabOpeningVoid () const;

        SimSpace_Unoccupied_SlabOpeningVoid_sequence&
        SimSpace_Unoccupied_SlabOpeningVoid ();

        void
        SimSpace_Unoccupied_SlabOpeningVoid (const SimSpace_Unoccupied_SlabOpeningVoid_sequence& s);

        // SimSpace_Unoccupied_WallOpeningVoid
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpace_Unoccupied_WallOpeningVoid SimSpace_Unoccupied_WallOpeningVoid_type;
        typedef ::xsd::cxx::tree::sequence< SimSpace_Unoccupied_WallOpeningVoid_type > SimSpace_Unoccupied_WallOpeningVoid_sequence;
        typedef SimSpace_Unoccupied_WallOpeningVoid_sequence::iterator SimSpace_Unoccupied_WallOpeningVoid_iterator;
        typedef SimSpace_Unoccupied_WallOpeningVoid_sequence::const_iterator SimSpace_Unoccupied_WallOpeningVoid_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpace_Unoccupied_WallOpeningVoid_type, char > SimSpace_Unoccupied_WallOpeningVoid_traits;

        const SimSpace_Unoccupied_WallOpeningVoid_sequence&
        SimSpace_Unoccupied_WallOpeningVoid () const;

        SimSpace_Unoccupied_WallOpeningVoid_sequence&
        SimSpace_Unoccupied_WallOpeningVoid ();

        void
        SimSpace_Unoccupied_WallOpeningVoid (const SimSpace_Unoccupied_WallOpeningVoid_sequence& s);

        // SimSpaceBoundary_FirstLevel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceBoundary_FirstLevel_Default SimSpaceBoundary_FirstLevel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceBoundary_FirstLevel_Default_type > SimSpaceBoundary_FirstLevel_Default_sequence;
        typedef SimSpaceBoundary_FirstLevel_Default_sequence::iterator SimSpaceBoundary_FirstLevel_Default_iterator;
        typedef SimSpaceBoundary_FirstLevel_Default_sequence::const_iterator SimSpaceBoundary_FirstLevel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceBoundary_FirstLevel_Default_type, char > SimSpaceBoundary_FirstLevel_Default_traits;

        const SimSpaceBoundary_FirstLevel_Default_sequence&
        SimSpaceBoundary_FirstLevel_Default () const;

        SimSpaceBoundary_FirstLevel_Default_sequence&
        SimSpaceBoundary_FirstLevel_Default ();

        void
        SimSpaceBoundary_FirstLevel_Default (const SimSpaceBoundary_FirstLevel_Default_sequence& s);

        // SimSpaceBoundary_SecondLevel_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceBoundary_SecondLevel_Default SimSpaceBoundary_SecondLevel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceBoundary_SecondLevel_Default_type > SimSpaceBoundary_SecondLevel_Default_sequence;
        typedef SimSpaceBoundary_SecondLevel_Default_sequence::iterator SimSpaceBoundary_SecondLevel_Default_iterator;
        typedef SimSpaceBoundary_SecondLevel_Default_sequence::const_iterator SimSpaceBoundary_SecondLevel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceBoundary_SecondLevel_Default_type, char > SimSpaceBoundary_SecondLevel_Default_traits;

        const SimSpaceBoundary_SecondLevel_Default_sequence&
        SimSpaceBoundary_SecondLevel_Default () const;

        SimSpaceBoundary_SecondLevel_Default_sequence&
        SimSpaceBoundary_SecondLevel_Default ();

        void
        SimSpaceBoundary_SecondLevel_Default (const SimSpaceBoundary_SecondLevel_Default_sequence& s);

        // SimSpaceBoundary_SecondLevel_SubTypeA
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceBoundary_SecondLevel_SubTypeA SimSpaceBoundary_SecondLevel_SubTypeA_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceBoundary_SecondLevel_SubTypeA_type > SimSpaceBoundary_SecondLevel_SubTypeA_sequence;
        typedef SimSpaceBoundary_SecondLevel_SubTypeA_sequence::iterator SimSpaceBoundary_SecondLevel_SubTypeA_iterator;
        typedef SimSpaceBoundary_SecondLevel_SubTypeA_sequence::const_iterator SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceBoundary_SecondLevel_SubTypeA_type, char > SimSpaceBoundary_SecondLevel_SubTypeA_traits;

        const SimSpaceBoundary_SecondLevel_SubTypeA_sequence&
        SimSpaceBoundary_SecondLevel_SubTypeA () const;

        SimSpaceBoundary_SecondLevel_SubTypeA_sequence&
        SimSpaceBoundary_SecondLevel_SubTypeA ();

        void
        SimSpaceBoundary_SecondLevel_SubTypeA (const SimSpaceBoundary_SecondLevel_SubTypeA_sequence& s);

        // SimSpaceBoundary_SecondLevel_SubTypeB
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceBoundary_SecondLevel_SubTypeB SimSpaceBoundary_SecondLevel_SubTypeB_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceBoundary_SecondLevel_SubTypeB_type > SimSpaceBoundary_SecondLevel_SubTypeB_sequence;
        typedef SimSpaceBoundary_SecondLevel_SubTypeB_sequence::iterator SimSpaceBoundary_SecondLevel_SubTypeB_iterator;
        typedef SimSpaceBoundary_SecondLevel_SubTypeB_sequence::const_iterator SimSpaceBoundary_SecondLevel_SubTypeB_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceBoundary_SecondLevel_SubTypeB_type, char > SimSpaceBoundary_SecondLevel_SubTypeB_traits;

        const SimSpaceBoundary_SecondLevel_SubTypeB_sequence&
        SimSpaceBoundary_SecondLevel_SubTypeB () const;

        SimSpaceBoundary_SecondLevel_SubTypeB_sequence&
        SimSpaceBoundary_SecondLevel_SubTypeB ();

        void
        SimSpaceBoundary_SecondLevel_SubTypeB (const SimSpaceBoundary_SecondLevel_SubTypeB_sequence& s);

        // SimSpaceBoundary_SecondLevel_SubTypeC
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceBoundary_SecondLevel_SubTypeC SimSpaceBoundary_SecondLevel_SubTypeC_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceBoundary_SecondLevel_SubTypeC_type > SimSpaceBoundary_SecondLevel_SubTypeC_sequence;
        typedef SimSpaceBoundary_SecondLevel_SubTypeC_sequence::iterator SimSpaceBoundary_SecondLevel_SubTypeC_iterator;
        typedef SimSpaceBoundary_SecondLevel_SubTypeC_sequence::const_iterator SimSpaceBoundary_SecondLevel_SubTypeC_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceBoundary_SecondLevel_SubTypeC_type, char > SimSpaceBoundary_SecondLevel_SubTypeC_traits;

        const SimSpaceBoundary_SecondLevel_SubTypeC_sequence&
        SimSpaceBoundary_SecondLevel_SubTypeC () const;

        SimSpaceBoundary_SecondLevel_SubTypeC_sequence&
        SimSpaceBoundary_SecondLevel_SubTypeC ();

        void
        SimSpaceBoundary_SecondLevel_SubTypeC (const SimSpaceBoundary_SecondLevel_SubTypeC_sequence& s);

        // SimSpaceOccupant_Actor_SpaceOccupant
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceOccupant_Actor_SpaceOccupant SimSpaceOccupant_Actor_SpaceOccupant_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceOccupant_Actor_SpaceOccupant_type > SimSpaceOccupant_Actor_SpaceOccupant_sequence;
        typedef SimSpaceOccupant_Actor_SpaceOccupant_sequence::iterator SimSpaceOccupant_Actor_SpaceOccupant_iterator;
        typedef SimSpaceOccupant_Actor_SpaceOccupant_sequence::const_iterator SimSpaceOccupant_Actor_SpaceOccupant_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceOccupant_Actor_SpaceOccupant_type, char > SimSpaceOccupant_Actor_SpaceOccupant_traits;

        const SimSpaceOccupant_Actor_SpaceOccupant_sequence&
        SimSpaceOccupant_Actor_SpaceOccupant () const;

        SimSpaceOccupant_Actor_SpaceOccupant_sequence&
        SimSpaceOccupant_Actor_SpaceOccupant ();

        void
        SimSpaceOccupant_Actor_SpaceOccupant (const SimSpaceOccupant_Actor_SpaceOccupant_sequence& s);

        // SimSpaceParams_Space_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimSpaceParams_Space_Default SimSpaceParams_Space_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceParams_Space_Default_type > SimSpaceParams_Space_Default_sequence;
        typedef SimSpaceParams_Space_Default_sequence::iterator SimSpaceParams_Space_Default_iterator;
        typedef SimSpaceParams_Space_Default_sequence::const_iterator SimSpaceParams_Space_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceParams_Space_Default_type, char > SimSpaceParams_Space_Default_traits;

        const SimSpaceParams_Space_Default_sequence&
        SimSpaceParams_Space_Default () const;

        SimSpaceParams_Space_Default_sequence&
        SimSpaceParams_Space_Default ();

        void
        SimSpaceParams_Space_Default (const SimSpaceParams_Space_Default_sequence& s);

        // SimSpaceType_Space_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpaceType_Space_Default SimSpaceType_Space_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpaceType_Space_Default_type > SimSpaceType_Space_Default_sequence;
        typedef SimSpaceType_Space_Default_sequence::iterator SimSpaceType_Space_Default_iterator;
        typedef SimSpaceType_Space_Default_sequence::const_iterator SimSpaceType_Space_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpaceType_Space_Default_type, char > SimSpaceType_Space_Default_traits;

        const SimSpaceType_Space_Default_sequence&
        SimSpaceType_Space_Default () const;

        SimSpaceType_Space_Default_sequence&
        SimSpaceType_Space_Default ();

        void
        SimSpaceType_Space_Default (const SimSpaceType_Space_Default_sequence& s);

        // SimSpatialZone_OutdoorAir_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_OutdoorAir_Default SimSpatialZone_OutdoorAir_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_OutdoorAir_Default_type > SimSpatialZone_OutdoorAir_Default_sequence;
        typedef SimSpatialZone_OutdoorAir_Default_sequence::iterator SimSpatialZone_OutdoorAir_Default_iterator;
        typedef SimSpatialZone_OutdoorAir_Default_sequence::const_iterator SimSpatialZone_OutdoorAir_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_OutdoorAir_Default_type, char > SimSpatialZone_OutdoorAir_Default_traits;

        const SimSpatialZone_OutdoorAir_Default_sequence&
        SimSpatialZone_OutdoorAir_Default () const;

        SimSpatialZone_OutdoorAir_Default_sequence&
        SimSpatialZone_OutdoorAir_Default ();

        void
        SimSpatialZone_OutdoorAir_Default (const SimSpatialZone_OutdoorAir_Default_sequence& s);

        // SimSpatialZone_Plenum_CeilingPlenum
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_Plenum_CeilingPlenum SimSpatialZone_Plenum_CeilingPlenum_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_Plenum_CeilingPlenum_type > SimSpatialZone_Plenum_CeilingPlenum_sequence;
        typedef SimSpatialZone_Plenum_CeilingPlenum_sequence::iterator SimSpatialZone_Plenum_CeilingPlenum_iterator;
        typedef SimSpatialZone_Plenum_CeilingPlenum_sequence::const_iterator SimSpatialZone_Plenum_CeilingPlenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_Plenum_CeilingPlenum_type, char > SimSpatialZone_Plenum_CeilingPlenum_traits;

        const SimSpatialZone_Plenum_CeilingPlenum_sequence&
        SimSpatialZone_Plenum_CeilingPlenum () const;

        SimSpatialZone_Plenum_CeilingPlenum_sequence&
        SimSpatialZone_Plenum_CeilingPlenum ();

        void
        SimSpatialZone_Plenum_CeilingPlenum (const SimSpatialZone_Plenum_CeilingPlenum_sequence& s);

        // SimSpatialZone_Plenum_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_Plenum_Default SimSpatialZone_Plenum_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_Plenum_Default_type > SimSpatialZone_Plenum_Default_sequence;
        typedef SimSpatialZone_Plenum_Default_sequence::iterator SimSpatialZone_Plenum_Default_iterator;
        typedef SimSpatialZone_Plenum_Default_sequence::const_iterator SimSpatialZone_Plenum_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_Plenum_Default_type, char > SimSpatialZone_Plenum_Default_traits;

        const SimSpatialZone_Plenum_Default_sequence&
        SimSpatialZone_Plenum_Default () const;

        SimSpatialZone_Plenum_Default_sequence&
        SimSpatialZone_Plenum_Default ();

        void
        SimSpatialZone_Plenum_Default (const SimSpatialZone_Plenum_Default_sequence& s);

        // SimSpatialZone_Plenum_FloorPlenum
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_Plenum_FloorPlenum SimSpatialZone_Plenum_FloorPlenum_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_Plenum_FloorPlenum_type > SimSpatialZone_Plenum_FloorPlenum_sequence;
        typedef SimSpatialZone_Plenum_FloorPlenum_sequence::iterator SimSpatialZone_Plenum_FloorPlenum_iterator;
        typedef SimSpatialZone_Plenum_FloorPlenum_sequence::const_iterator SimSpatialZone_Plenum_FloorPlenum_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_Plenum_FloorPlenum_type, char > SimSpatialZone_Plenum_FloorPlenum_traits;

        const SimSpatialZone_Plenum_FloorPlenum_sequence&
        SimSpatialZone_Plenum_FloorPlenum () const;

        SimSpatialZone_Plenum_FloorPlenum_sequence&
        SimSpatialZone_Plenum_FloorPlenum ();

        void
        SimSpatialZone_Plenum_FloorPlenum (const SimSpatialZone_Plenum_FloorPlenum_sequence& s);

        // SimSpatialZone_SecurityZone_Public
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_SecurityZone_Public SimSpatialZone_SecurityZone_Public_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_SecurityZone_Public_type > SimSpatialZone_SecurityZone_Public_sequence;
        typedef SimSpatialZone_SecurityZone_Public_sequence::iterator SimSpatialZone_SecurityZone_Public_iterator;
        typedef SimSpatialZone_SecurityZone_Public_sequence::const_iterator SimSpatialZone_SecurityZone_Public_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_SecurityZone_Public_type, char > SimSpatialZone_SecurityZone_Public_traits;

        const SimSpatialZone_SecurityZone_Public_sequence&
        SimSpatialZone_SecurityZone_Public () const;

        SimSpatialZone_SecurityZone_Public_sequence&
        SimSpatialZone_SecurityZone_Public ();

        void
        SimSpatialZone_SecurityZone_Public (const SimSpatialZone_SecurityZone_Public_sequence& s);

        // SimSpatialZone_SecurityZone_Security
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_SecurityZone_Security SimSpatialZone_SecurityZone_Security_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_SecurityZone_Security_type > SimSpatialZone_SecurityZone_Security_sequence;
        typedef SimSpatialZone_SecurityZone_Security_sequence::iterator SimSpatialZone_SecurityZone_Security_iterator;
        typedef SimSpatialZone_SecurityZone_Security_sequence::const_iterator SimSpatialZone_SecurityZone_Security_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_SecurityZone_Security_type, char > SimSpatialZone_SecurityZone_Security_traits;

        const SimSpatialZone_SecurityZone_Security_sequence&
        SimSpatialZone_SecurityZone_Security () const;

        SimSpatialZone_SecurityZone_Security_sequence&
        SimSpatialZone_SecurityZone_Security ();

        void
        SimSpatialZone_SecurityZone_Security (const SimSpatialZone_SecurityZone_Security_sequence& s);

        // SimSpatialZone_SecurityZone_StaffOnly
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_SecurityZone_StaffOnly SimSpatialZone_SecurityZone_StaffOnly_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_SecurityZone_StaffOnly_type > SimSpatialZone_SecurityZone_StaffOnly_sequence;
        typedef SimSpatialZone_SecurityZone_StaffOnly_sequence::iterator SimSpatialZone_SecurityZone_StaffOnly_iterator;
        typedef SimSpatialZone_SecurityZone_StaffOnly_sequence::const_iterator SimSpatialZone_SecurityZone_StaffOnly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_SecurityZone_StaffOnly_type, char > SimSpatialZone_SecurityZone_StaffOnly_traits;

        const SimSpatialZone_SecurityZone_StaffOnly_sequence&
        SimSpatialZone_SecurityZone_StaffOnly () const;

        SimSpatialZone_SecurityZone_StaffOnly_sequence&
        SimSpatialZone_SecurityZone_StaffOnly ();

        void
        SimSpatialZone_SecurityZone_StaffOnly (const SimSpatialZone_SecurityZone_StaffOnly_sequence& s);

        // SimSpatialZone_ThermalZone_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSpatialZone_ThermalZone_Default SimSpatialZone_ThermalZone_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSpatialZone_ThermalZone_Default_type > SimSpatialZone_ThermalZone_Default_sequence;
        typedef SimSpatialZone_ThermalZone_Default_sequence::iterator SimSpatialZone_ThermalZone_Default_iterator;
        typedef SimSpatialZone_ThermalZone_Default_sequence::const_iterator SimSpatialZone_ThermalZone_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSpatialZone_ThermalZone_Default_type, char > SimSpatialZone_ThermalZone_Default_traits;

        const SimSpatialZone_ThermalZone_Default_sequence&
        SimSpatialZone_ThermalZone_Default () const;

        SimSpatialZone_ThermalZone_Default_sequence&
        SimSpatialZone_ThermalZone_Default ();

        void
        SimSpatialZone_ThermalZone_Default (const SimSpatialZone_ThermalZone_Default_sequence& s);

        // SimStair_Stair_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimStair_Stair_Default SimStair_Stair_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimStair_Stair_Default_type > SimStair_Stair_Default_sequence;
        typedef SimStair_Stair_Default_sequence::iterator SimStair_Stair_Default_iterator;
        typedef SimStair_Stair_Default_sequence::const_iterator SimStair_Stair_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimStair_Stair_Default_type, char > SimStair_Stair_Default_traits;

        const SimStair_Stair_Default_sequence&
        SimStair_Stair_Default () const;

        SimStair_Stair_Default_sequence&
        SimStair_Stair_Default ();

        void
        SimStair_Stair_Default (const SimStair_Stair_Default_sequence& s);

        // SimStairFlight_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimStairFlight_Default_Default SimStairFlight_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimStairFlight_Default_Default_type > SimStairFlight_Default_Default_sequence;
        typedef SimStairFlight_Default_Default_sequence::iterator SimStairFlight_Default_Default_iterator;
        typedef SimStairFlight_Default_Default_sequence::const_iterator SimStairFlight_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimStairFlight_Default_Default_type, char > SimStairFlight_Default_Default_traits;

        const SimStairFlight_Default_Default_sequence&
        SimStairFlight_Default_Default () const;

        SimStairFlight_Default_Default_sequence&
        SimStairFlight_Default_Default ();

        void
        SimStairFlight_Default_Default (const SimStairFlight_Default_Default_sequence& s);

        // SimStairFlightParams_StairFlight_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimStairFlightParams_StairFlight_Default SimStairFlightParams_StairFlight_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimStairFlightParams_StairFlight_Default_type > SimStairFlightParams_StairFlight_Default_sequence;
        typedef SimStairFlightParams_StairFlight_Default_sequence::iterator SimStairFlightParams_StairFlight_Default_iterator;
        typedef SimStairFlightParams_StairFlight_Default_sequence::const_iterator SimStairFlightParams_StairFlight_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimStairFlightParams_StairFlight_Default_type, char > SimStairFlightParams_StairFlight_Default_traits;

        const SimStairFlightParams_StairFlight_Default_sequence&
        SimStairFlightParams_StairFlight_Default () const;

        SimStairFlightParams_StairFlight_Default_sequence&
        SimStairFlightParams_StairFlight_Default ();

        void
        SimStairFlightParams_StairFlight_Default (const SimStairFlightParams_StairFlight_Default_sequence& s);

        // SimStairParams_Stair_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimStairParams_Stair_Default SimStairParams_Stair_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimStairParams_Stair_Default_type > SimStairParams_Stair_Default_sequence;
        typedef SimStairParams_Stair_Default_sequence::iterator SimStairParams_Stair_Default_iterator;
        typedef SimStairParams_Stair_Default_sequence::const_iterator SimStairParams_Stair_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimStairParams_Stair_Default_type, char > SimStairParams_Stair_Default_traits;

        const SimStairParams_Stair_Default_sequence&
        SimStairParams_Stair_Default () const;

        SimStairParams_Stair_Default_sequence&
        SimStairParams_Stair_Default ();

        void
        SimStairParams_Stair_Default (const SimStairParams_Stair_Default_sequence& s);

        // SimSystem_AirFlowNetwork_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_AirFlowNetwork_Default SimSystem_AirFlowNetwork_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_AirFlowNetwork_Default_type > SimSystem_AirFlowNetwork_Default_sequence;
        typedef SimSystem_AirFlowNetwork_Default_sequence::iterator SimSystem_AirFlowNetwork_Default_iterator;
        typedef SimSystem_AirFlowNetwork_Default_sequence::const_iterator SimSystem_AirFlowNetwork_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_AirFlowNetwork_Default_type, char > SimSystem_AirFlowNetwork_Default_traits;

        const SimSystem_AirFlowNetwork_Default_sequence&
        SimSystem_AirFlowNetwork_Default () const;

        SimSystem_AirFlowNetwork_Default_sequence&
        SimSystem_AirFlowNetwork_Default ();

        void
        SimSystem_AirFlowNetwork_Default (const SimSystem_AirFlowNetwork_Default_sequence& s);

        // SimSystem_Electrical_SystemsContainer
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Electrical_SystemsContainer SimSystem_Electrical_SystemsContainer_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Electrical_SystemsContainer_type > SimSystem_Electrical_SystemsContainer_sequence;
        typedef SimSystem_Electrical_SystemsContainer_sequence::iterator SimSystem_Electrical_SystemsContainer_iterator;
        typedef SimSystem_Electrical_SystemsContainer_sequence::const_iterator SimSystem_Electrical_SystemsContainer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Electrical_SystemsContainer_type, char > SimSystem_Electrical_SystemsContainer_traits;

        const SimSystem_Electrical_SystemsContainer_sequence&
        SimSystem_Electrical_SystemsContainer () const;

        SimSystem_Electrical_SystemsContainer_sequence&
        SimSystem_Electrical_SystemsContainer ();

        void
        SimSystem_Electrical_SystemsContainer (const SimSystem_Electrical_SystemsContainer_sequence& s);

        // SimSystem_ElectricalLighting_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ElectricalLighting_FullSystem SimSystem_ElectricalLighting_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ElectricalLighting_FullSystem_type > SimSystem_ElectricalLighting_FullSystem_sequence;
        typedef SimSystem_ElectricalLighting_FullSystem_sequence::iterator SimSystem_ElectricalLighting_FullSystem_iterator;
        typedef SimSystem_ElectricalLighting_FullSystem_sequence::const_iterator SimSystem_ElectricalLighting_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ElectricalLighting_FullSystem_type, char > SimSystem_ElectricalLighting_FullSystem_traits;

        const SimSystem_ElectricalLighting_FullSystem_sequence&
        SimSystem_ElectricalLighting_FullSystem () const;

        SimSystem_ElectricalLighting_FullSystem_sequence&
        SimSystem_ElectricalLighting_FullSystem ();

        void
        SimSystem_ElectricalLighting_FullSystem (const SimSystem_ElectricalLighting_FullSystem_sequence& s);

        // SimSystem_ElectricalLighting_LightingCircuit
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ElectricalLighting_LightingCircuit SimSystem_ElectricalLighting_LightingCircuit_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ElectricalLighting_LightingCircuit_type > SimSystem_ElectricalLighting_LightingCircuit_sequence;
        typedef SimSystem_ElectricalLighting_LightingCircuit_sequence::iterator SimSystem_ElectricalLighting_LightingCircuit_iterator;
        typedef SimSystem_ElectricalLighting_LightingCircuit_sequence::const_iterator SimSystem_ElectricalLighting_LightingCircuit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ElectricalLighting_LightingCircuit_type, char > SimSystem_ElectricalLighting_LightingCircuit_traits;

        const SimSystem_ElectricalLighting_LightingCircuit_sequence&
        SimSystem_ElectricalLighting_LightingCircuit () const;

        SimSystem_ElectricalLighting_LightingCircuit_sequence&
        SimSystem_ElectricalLighting_LightingCircuit ();

        void
        SimSystem_ElectricalLighting_LightingCircuit (const SimSystem_ElectricalLighting_LightingCircuit_sequence& s);

        // SimSystem_ElectricalPower_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ElectricalPower_FullSystem SimSystem_ElectricalPower_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ElectricalPower_FullSystem_type > SimSystem_ElectricalPower_FullSystem_sequence;
        typedef SimSystem_ElectricalPower_FullSystem_sequence::iterator SimSystem_ElectricalPower_FullSystem_iterator;
        typedef SimSystem_ElectricalPower_FullSystem_sequence::const_iterator SimSystem_ElectricalPower_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ElectricalPower_FullSystem_type, char > SimSystem_ElectricalPower_FullSystem_traits;

        const SimSystem_ElectricalPower_FullSystem_sequence&
        SimSystem_ElectricalPower_FullSystem () const;

        SimSystem_ElectricalPower_FullSystem_sequence&
        SimSystem_ElectricalPower_FullSystem ();

        void
        SimSystem_ElectricalPower_FullSystem (const SimSystem_ElectricalPower_FullSystem_sequence& s);

        // SimSystem_ElectroMechanical_PV_SolarThermal
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ElectroMechanical_PV_SolarThermal SimSystem_ElectroMechanical_PV_SolarThermal_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ElectroMechanical_PV_SolarThermal_type > SimSystem_ElectroMechanical_PV_SolarThermal_sequence;
        typedef SimSystem_ElectroMechanical_PV_SolarThermal_sequence::iterator SimSystem_ElectroMechanical_PV_SolarThermal_iterator;
        typedef SimSystem_ElectroMechanical_PV_SolarThermal_sequence::const_iterator SimSystem_ElectroMechanical_PV_SolarThermal_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ElectroMechanical_PV_SolarThermal_type, char > SimSystem_ElectroMechanical_PV_SolarThermal_traits;

        const SimSystem_ElectroMechanical_PV_SolarThermal_sequence&
        SimSystem_ElectroMechanical_PV_SolarThermal () const;

        SimSystem_ElectroMechanical_PV_SolarThermal_sequence&
        SimSystem_ElectroMechanical_PV_SolarThermal ();

        void
        SimSystem_ElectroMechanical_PV_SolarThermal (const SimSystem_ElectroMechanical_PV_SolarThermal_sequence& s);

        // SimSystem_Hvac_SystemsContainer
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Hvac_SystemsContainer SimSystem_Hvac_SystemsContainer_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Hvac_SystemsContainer_type > SimSystem_Hvac_SystemsContainer_sequence;
        typedef SimSystem_Hvac_SystemsContainer_sequence::iterator SimSystem_Hvac_SystemsContainer_iterator;
        typedef SimSystem_Hvac_SystemsContainer_sequence::const_iterator SimSystem_Hvac_SystemsContainer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Hvac_SystemsContainer_type, char > SimSystem_Hvac_SystemsContainer_traits;

        const SimSystem_Hvac_SystemsContainer_sequence&
        SimSystem_Hvac_SystemsContainer () const;

        SimSystem_Hvac_SystemsContainer_sequence&
        SimSystem_Hvac_SystemsContainer ();

        void
        SimSystem_Hvac_SystemsContainer (const SimSystem_Hvac_SystemsContainer_sequence& s);

        // SimSystem_HvacAir_AirBranch
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_AirBranch SimSystem_HvacAir_AirBranch_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_AirBranch_type > SimSystem_HvacAir_AirBranch_sequence;
        typedef SimSystem_HvacAir_AirBranch_sequence::iterator SimSystem_HvacAir_AirBranch_iterator;
        typedef SimSystem_HvacAir_AirBranch_sequence::const_iterator SimSystem_HvacAir_AirBranch_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_AirBranch_type, char > SimSystem_HvacAir_AirBranch_traits;

        const SimSystem_HvacAir_AirBranch_sequence&
        SimSystem_HvacAir_AirBranch () const;

        SimSystem_HvacAir_AirBranch_sequence&
        SimSystem_HvacAir_AirBranch ();

        void
        SimSystem_HvacAir_AirBranch (const SimSystem_HvacAir_AirBranch_sequence& s);

        // SimSystem_HvacAir_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_Control SimSystem_HvacAir_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_Control_type > SimSystem_HvacAir_Control_sequence;
        typedef SimSystem_HvacAir_Control_sequence::iterator SimSystem_HvacAir_Control_iterator;
        typedef SimSystem_HvacAir_Control_sequence::const_iterator SimSystem_HvacAir_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_Control_type, char > SimSystem_HvacAir_Control_traits;

        const SimSystem_HvacAir_Control_sequence&
        SimSystem_HvacAir_Control () const;

        SimSystem_HvacAir_Control_sequence&
        SimSystem_HvacAir_Control ();

        void
        SimSystem_HvacAir_Control (const SimSystem_HvacAir_Control_sequence& s);

        // SimSystem_HvacAir_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_ControlDemand SimSystem_HvacAir_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_ControlDemand_type > SimSystem_HvacAir_ControlDemand_sequence;
        typedef SimSystem_HvacAir_ControlDemand_sequence::iterator SimSystem_HvacAir_ControlDemand_iterator;
        typedef SimSystem_HvacAir_ControlDemand_sequence::const_iterator SimSystem_HvacAir_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_ControlDemand_type, char > SimSystem_HvacAir_ControlDemand_traits;

        const SimSystem_HvacAir_ControlDemand_sequence&
        SimSystem_HvacAir_ControlDemand () const;

        SimSystem_HvacAir_ControlDemand_sequence&
        SimSystem_HvacAir_ControlDemand ();

        void
        SimSystem_HvacAir_ControlDemand (const SimSystem_HvacAir_ControlDemand_sequence& s);

        // SimSystem_HvacAir_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_ControlSupply SimSystem_HvacAir_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_ControlSupply_type > SimSystem_HvacAir_ControlSupply_sequence;
        typedef SimSystem_HvacAir_ControlSupply_sequence::iterator SimSystem_HvacAir_ControlSupply_iterator;
        typedef SimSystem_HvacAir_ControlSupply_sequence::const_iterator SimSystem_HvacAir_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_ControlSupply_type, char > SimSystem_HvacAir_ControlSupply_traits;

        const SimSystem_HvacAir_ControlSupply_sequence&
        SimSystem_HvacAir_ControlSupply () const;

        SimSystem_HvacAir_ControlSupply_sequence&
        SimSystem_HvacAir_ControlSupply ();

        void
        SimSystem_HvacAir_ControlSupply (const SimSystem_HvacAir_ControlSupply_sequence& s);

        // SimSystem_HvacAir_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_Demand SimSystem_HvacAir_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_Demand_type > SimSystem_HvacAir_Demand_sequence;
        typedef SimSystem_HvacAir_Demand_sequence::iterator SimSystem_HvacAir_Demand_iterator;
        typedef SimSystem_HvacAir_Demand_sequence::const_iterator SimSystem_HvacAir_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_Demand_type, char > SimSystem_HvacAir_Demand_traits;

        const SimSystem_HvacAir_Demand_sequence&
        SimSystem_HvacAir_Demand () const;

        SimSystem_HvacAir_Demand_sequence&
        SimSystem_HvacAir_Demand ();

        void
        SimSystem_HvacAir_Demand (const SimSystem_HvacAir_Demand_sequence& s);

        // SimSystem_HvacAir_DemandSideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_DemandSideReturnPath SimSystem_HvacAir_DemandSideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_DemandSideReturnPath_type > SimSystem_HvacAir_DemandSideReturnPath_sequence;
        typedef SimSystem_HvacAir_DemandSideReturnPath_sequence::iterator SimSystem_HvacAir_DemandSideReturnPath_iterator;
        typedef SimSystem_HvacAir_DemandSideReturnPath_sequence::const_iterator SimSystem_HvacAir_DemandSideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_DemandSideReturnPath_type, char > SimSystem_HvacAir_DemandSideReturnPath_traits;

        const SimSystem_HvacAir_DemandSideReturnPath_sequence&
        SimSystem_HvacAir_DemandSideReturnPath () const;

        SimSystem_HvacAir_DemandSideReturnPath_sequence&
        SimSystem_HvacAir_DemandSideReturnPath ();

        void
        SimSystem_HvacAir_DemandSideReturnPath (const SimSystem_HvacAir_DemandSideReturnPath_sequence& s);

        // SimSystem_HvacAir_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_DemandSideSupplyPath SimSystem_HvacAir_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_DemandSideSupplyPath_type > SimSystem_HvacAir_DemandSideSupplyPath_sequence;
        typedef SimSystem_HvacAir_DemandSideSupplyPath_sequence::iterator SimSystem_HvacAir_DemandSideSupplyPath_iterator;
        typedef SimSystem_HvacAir_DemandSideSupplyPath_sequence::const_iterator SimSystem_HvacAir_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_DemandSideSupplyPath_type, char > SimSystem_HvacAir_DemandSideSupplyPath_traits;

        const SimSystem_HvacAir_DemandSideSupplyPath_sequence&
        SimSystem_HvacAir_DemandSideSupplyPath () const;

        SimSystem_HvacAir_DemandSideSupplyPath_sequence&
        SimSystem_HvacAir_DemandSideSupplyPath ();

        void
        SimSystem_HvacAir_DemandSideSupplyPath (const SimSystem_HvacAir_DemandSideSupplyPath_sequence& s);

        // SimSystem_HvacAir_DemandSideZoneHvac
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_DemandSideZoneHvac SimSystem_HvacAir_DemandSideZoneHvac_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_DemandSideZoneHvac_type > SimSystem_HvacAir_DemandSideZoneHvac_sequence;
        typedef SimSystem_HvacAir_DemandSideZoneHvac_sequence::iterator SimSystem_HvacAir_DemandSideZoneHvac_iterator;
        typedef SimSystem_HvacAir_DemandSideZoneHvac_sequence::const_iterator SimSystem_HvacAir_DemandSideZoneHvac_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_DemandSideZoneHvac_type, char > SimSystem_HvacAir_DemandSideZoneHvac_traits;

        const SimSystem_HvacAir_DemandSideZoneHvac_sequence&
        SimSystem_HvacAir_DemandSideZoneHvac () const;

        SimSystem_HvacAir_DemandSideZoneHvac_sequence&
        SimSystem_HvacAir_DemandSideZoneHvac ();

        void
        SimSystem_HvacAir_DemandSideZoneHvac (const SimSystem_HvacAir_DemandSideZoneHvac_sequence& s);

        // SimSystem_HvacAir_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_FullSystem SimSystem_HvacAir_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_FullSystem_type > SimSystem_HvacAir_FullSystem_sequence;
        typedef SimSystem_HvacAir_FullSystem_sequence::iterator SimSystem_HvacAir_FullSystem_iterator;
        typedef SimSystem_HvacAir_FullSystem_sequence::const_iterator SimSystem_HvacAir_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_FullSystem_type, char > SimSystem_HvacAir_FullSystem_traits;

        const SimSystem_HvacAir_FullSystem_sequence&
        SimSystem_HvacAir_FullSystem () const;

        SimSystem_HvacAir_FullSystem_sequence&
        SimSystem_HvacAir_FullSystem ();

        void
        SimSystem_HvacAir_FullSystem (const SimSystem_HvacAir_FullSystem_sequence& s);

        // SimSystem_HvacAir_OutdoorAir
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_OutdoorAir SimSystem_HvacAir_OutdoorAir_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_OutdoorAir_type > SimSystem_HvacAir_OutdoorAir_sequence;
        typedef SimSystem_HvacAir_OutdoorAir_sequence::iterator SimSystem_HvacAir_OutdoorAir_iterator;
        typedef SimSystem_HvacAir_OutdoorAir_sequence::const_iterator SimSystem_HvacAir_OutdoorAir_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_OutdoorAir_type, char > SimSystem_HvacAir_OutdoorAir_traits;

        const SimSystem_HvacAir_OutdoorAir_sequence&
        SimSystem_HvacAir_OutdoorAir () const;

        SimSystem_HvacAir_OutdoorAir_sequence&
        SimSystem_HvacAir_OutdoorAir ();

        void
        SimSystem_HvacAir_OutdoorAir (const SimSystem_HvacAir_OutdoorAir_sequence& s);

        // SimSystem_HvacAir_OutdoorAirExhaust
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_OutdoorAirExhaust SimSystem_HvacAir_OutdoorAirExhaust_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_OutdoorAirExhaust_type > SimSystem_HvacAir_OutdoorAirExhaust_sequence;
        typedef SimSystem_HvacAir_OutdoorAirExhaust_sequence::iterator SimSystem_HvacAir_OutdoorAirExhaust_iterator;
        typedef SimSystem_HvacAir_OutdoorAirExhaust_sequence::const_iterator SimSystem_HvacAir_OutdoorAirExhaust_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_OutdoorAirExhaust_type, char > SimSystem_HvacAir_OutdoorAirExhaust_traits;

        const SimSystem_HvacAir_OutdoorAirExhaust_sequence&
        SimSystem_HvacAir_OutdoorAirExhaust () const;

        SimSystem_HvacAir_OutdoorAirExhaust_sequence&
        SimSystem_HvacAir_OutdoorAirExhaust ();

        void
        SimSystem_HvacAir_OutdoorAirExhaust (const SimSystem_HvacAir_OutdoorAirExhaust_sequence& s);

        // SimSystem_HvacAir_OutdoorAirSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_OutdoorAirSupply SimSystem_HvacAir_OutdoorAirSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_OutdoorAirSupply_type > SimSystem_HvacAir_OutdoorAirSupply_sequence;
        typedef SimSystem_HvacAir_OutdoorAirSupply_sequence::iterator SimSystem_HvacAir_OutdoorAirSupply_iterator;
        typedef SimSystem_HvacAir_OutdoorAirSupply_sequence::const_iterator SimSystem_HvacAir_OutdoorAirSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_OutdoorAirSupply_type, char > SimSystem_HvacAir_OutdoorAirSupply_traits;

        const SimSystem_HvacAir_OutdoorAirSupply_sequence&
        SimSystem_HvacAir_OutdoorAirSupply () const;

        SimSystem_HvacAir_OutdoorAirSupply_sequence&
        SimSystem_HvacAir_OutdoorAirSupply ();

        void
        SimSystem_HvacAir_OutdoorAirSupply (const SimSystem_HvacAir_OutdoorAirSupply_sequence& s);

        // SimSystem_HvacAir_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_Supply SimSystem_HvacAir_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_Supply_type > SimSystem_HvacAir_Supply_sequence;
        typedef SimSystem_HvacAir_Supply_sequence::iterator SimSystem_HvacAir_Supply_iterator;
        typedef SimSystem_HvacAir_Supply_sequence::const_iterator SimSystem_HvacAir_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_Supply_type, char > SimSystem_HvacAir_Supply_traits;

        const SimSystem_HvacAir_Supply_sequence&
        SimSystem_HvacAir_Supply () const;

        SimSystem_HvacAir_Supply_sequence&
        SimSystem_HvacAir_Supply ();

        void
        SimSystem_HvacAir_Supply (const SimSystem_HvacAir_Supply_sequence& s);

        // SimSystem_HvacAir_SupplySideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_SupplySideReturnPath SimSystem_HvacAir_SupplySideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_SupplySideReturnPath_type > SimSystem_HvacAir_SupplySideReturnPath_sequence;
        typedef SimSystem_HvacAir_SupplySideReturnPath_sequence::iterator SimSystem_HvacAir_SupplySideReturnPath_iterator;
        typedef SimSystem_HvacAir_SupplySideReturnPath_sequence::const_iterator SimSystem_HvacAir_SupplySideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_SupplySideReturnPath_type, char > SimSystem_HvacAir_SupplySideReturnPath_traits;

        const SimSystem_HvacAir_SupplySideReturnPath_sequence&
        SimSystem_HvacAir_SupplySideReturnPath () const;

        SimSystem_HvacAir_SupplySideReturnPath_sequence&
        SimSystem_HvacAir_SupplySideReturnPath ();

        void
        SimSystem_HvacAir_SupplySideReturnPath (const SimSystem_HvacAir_SupplySideReturnPath_sequence& s);

        // SimSystem_HvacAir_SupplySideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacAir_SupplySideSupplyPath SimSystem_HvacAir_SupplySideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacAir_SupplySideSupplyPath_type > SimSystem_HvacAir_SupplySideSupplyPath_sequence;
        typedef SimSystem_HvacAir_SupplySideSupplyPath_sequence::iterator SimSystem_HvacAir_SupplySideSupplyPath_iterator;
        typedef SimSystem_HvacAir_SupplySideSupplyPath_sequence::const_iterator SimSystem_HvacAir_SupplySideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacAir_SupplySideSupplyPath_type, char > SimSystem_HvacAir_SupplySideSupplyPath_traits;

        const SimSystem_HvacAir_SupplySideSupplyPath_sequence&
        SimSystem_HvacAir_SupplySideSupplyPath () const;

        SimSystem_HvacAir_SupplySideSupplyPath_sequence&
        SimSystem_HvacAir_SupplySideSupplyPath ();

        void
        SimSystem_HvacAir_SupplySideSupplyPath (const SimSystem_HvacAir_SupplySideSupplyPath_sequence& s);

        // SimSystem_HvacChilledWater_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_Control SimSystem_HvacChilledWater_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_Control_type > SimSystem_HvacChilledWater_Control_sequence;
        typedef SimSystem_HvacChilledWater_Control_sequence::iterator SimSystem_HvacChilledWater_Control_iterator;
        typedef SimSystem_HvacChilledWater_Control_sequence::const_iterator SimSystem_HvacChilledWater_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_Control_type, char > SimSystem_HvacChilledWater_Control_traits;

        const SimSystem_HvacChilledWater_Control_sequence&
        SimSystem_HvacChilledWater_Control () const;

        SimSystem_HvacChilledWater_Control_sequence&
        SimSystem_HvacChilledWater_Control ();

        void
        SimSystem_HvacChilledWater_Control (const SimSystem_HvacChilledWater_Control_sequence& s);

        // SimSystem_HvacChilledWater_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_ControlDemand SimSystem_HvacChilledWater_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_ControlDemand_type > SimSystem_HvacChilledWater_ControlDemand_sequence;
        typedef SimSystem_HvacChilledWater_ControlDemand_sequence::iterator SimSystem_HvacChilledWater_ControlDemand_iterator;
        typedef SimSystem_HvacChilledWater_ControlDemand_sequence::const_iterator SimSystem_HvacChilledWater_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_ControlDemand_type, char > SimSystem_HvacChilledWater_ControlDemand_traits;

        const SimSystem_HvacChilledWater_ControlDemand_sequence&
        SimSystem_HvacChilledWater_ControlDemand () const;

        SimSystem_HvacChilledWater_ControlDemand_sequence&
        SimSystem_HvacChilledWater_ControlDemand ();

        void
        SimSystem_HvacChilledWater_ControlDemand (const SimSystem_HvacChilledWater_ControlDemand_sequence& s);

        // SimSystem_HvacChilledWater_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_ControlSupply SimSystem_HvacChilledWater_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_ControlSupply_type > SimSystem_HvacChilledWater_ControlSupply_sequence;
        typedef SimSystem_HvacChilledWater_ControlSupply_sequence::iterator SimSystem_HvacChilledWater_ControlSupply_iterator;
        typedef SimSystem_HvacChilledWater_ControlSupply_sequence::const_iterator SimSystem_HvacChilledWater_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_ControlSupply_type, char > SimSystem_HvacChilledWater_ControlSupply_traits;

        const SimSystem_HvacChilledWater_ControlSupply_sequence&
        SimSystem_HvacChilledWater_ControlSupply () const;

        SimSystem_HvacChilledWater_ControlSupply_sequence&
        SimSystem_HvacChilledWater_ControlSupply ();

        void
        SimSystem_HvacChilledWater_ControlSupply (const SimSystem_HvacChilledWater_ControlSupply_sequence& s);

        // SimSystem_HvacChilledWater_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_Demand SimSystem_HvacChilledWater_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_Demand_type > SimSystem_HvacChilledWater_Demand_sequence;
        typedef SimSystem_HvacChilledWater_Demand_sequence::iterator SimSystem_HvacChilledWater_Demand_iterator;
        typedef SimSystem_HvacChilledWater_Demand_sequence::const_iterator SimSystem_HvacChilledWater_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_Demand_type, char > SimSystem_HvacChilledWater_Demand_traits;

        const SimSystem_HvacChilledWater_Demand_sequence&
        SimSystem_HvacChilledWater_Demand () const;

        SimSystem_HvacChilledWater_Demand_sequence&
        SimSystem_HvacChilledWater_Demand ();

        void
        SimSystem_HvacChilledWater_Demand (const SimSystem_HvacChilledWater_Demand_sequence& s);

        // SimSystem_HvacChilledWater_DemandSideDemandComponents
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_DemandSideDemandComponents SimSystem_HvacChilledWater_DemandSideDemandComponents_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_DemandSideDemandComponents_type > SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence;
        typedef SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence::iterator SimSystem_HvacChilledWater_DemandSideDemandComponents_iterator;
        typedef SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence::const_iterator SimSystem_HvacChilledWater_DemandSideDemandComponents_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_DemandSideDemandComponents_type, char > SimSystem_HvacChilledWater_DemandSideDemandComponents_traits;

        const SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence&
        SimSystem_HvacChilledWater_DemandSideDemandComponents () const;

        SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence&
        SimSystem_HvacChilledWater_DemandSideDemandComponents ();

        void
        SimSystem_HvacChilledWater_DemandSideDemandComponents (const SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence& s);

        // SimSystem_HvacChilledWater_DemandSideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_DemandSideReturnPath SimSystem_HvacChilledWater_DemandSideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_DemandSideReturnPath_type > SimSystem_HvacChilledWater_DemandSideReturnPath_sequence;
        typedef SimSystem_HvacChilledWater_DemandSideReturnPath_sequence::iterator SimSystem_HvacChilledWater_DemandSideReturnPath_iterator;
        typedef SimSystem_HvacChilledWater_DemandSideReturnPath_sequence::const_iterator SimSystem_HvacChilledWater_DemandSideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_DemandSideReturnPath_type, char > SimSystem_HvacChilledWater_DemandSideReturnPath_traits;

        const SimSystem_HvacChilledWater_DemandSideReturnPath_sequence&
        SimSystem_HvacChilledWater_DemandSideReturnPath () const;

        SimSystem_HvacChilledWater_DemandSideReturnPath_sequence&
        SimSystem_HvacChilledWater_DemandSideReturnPath ();

        void
        SimSystem_HvacChilledWater_DemandSideReturnPath (const SimSystem_HvacChilledWater_DemandSideReturnPath_sequence& s);

        // SimSystem_HvacChilledWater_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_DemandSideSupplyPath SimSystem_HvacChilledWater_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_DemandSideSupplyPath_type > SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence;
        typedef SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence::iterator SimSystem_HvacChilledWater_DemandSideSupplyPath_iterator;
        typedef SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence::const_iterator SimSystem_HvacChilledWater_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_DemandSideSupplyPath_type, char > SimSystem_HvacChilledWater_DemandSideSupplyPath_traits;

        const SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence&
        SimSystem_HvacChilledWater_DemandSideSupplyPath () const;

        SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence&
        SimSystem_HvacChilledWater_DemandSideSupplyPath ();

        void
        SimSystem_HvacChilledWater_DemandSideSupplyPath (const SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence& s);

        // SimSystem_HvacChilledWater_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_FullSystem SimSystem_HvacChilledWater_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_FullSystem_type > SimSystem_HvacChilledWater_FullSystem_sequence;
        typedef SimSystem_HvacChilledWater_FullSystem_sequence::iterator SimSystem_HvacChilledWater_FullSystem_iterator;
        typedef SimSystem_HvacChilledWater_FullSystem_sequence::const_iterator SimSystem_HvacChilledWater_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_FullSystem_type, char > SimSystem_HvacChilledWater_FullSystem_traits;

        const SimSystem_HvacChilledWater_FullSystem_sequence&
        SimSystem_HvacChilledWater_FullSystem () const;

        SimSystem_HvacChilledWater_FullSystem_sequence&
        SimSystem_HvacChilledWater_FullSystem ();

        void
        SimSystem_HvacChilledWater_FullSystem (const SimSystem_HvacChilledWater_FullSystem_sequence& s);

        // SimSystem_HvacChilledWater_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_Supply SimSystem_HvacChilledWater_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_Supply_type > SimSystem_HvacChilledWater_Supply_sequence;
        typedef SimSystem_HvacChilledWater_Supply_sequence::iterator SimSystem_HvacChilledWater_Supply_iterator;
        typedef SimSystem_HvacChilledWater_Supply_sequence::const_iterator SimSystem_HvacChilledWater_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_Supply_type, char > SimSystem_HvacChilledWater_Supply_traits;

        const SimSystem_HvacChilledWater_Supply_sequence&
        SimSystem_HvacChilledWater_Supply () const;

        SimSystem_HvacChilledWater_Supply_sequence&
        SimSystem_HvacChilledWater_Supply ();

        void
        SimSystem_HvacChilledWater_Supply (const SimSystem_HvacChilledWater_Supply_sequence& s);

        // SimSystem_HvacChilledWater_WaterBranch
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacChilledWater_WaterBranch SimSystem_HvacChilledWater_WaterBranch_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacChilledWater_WaterBranch_type > SimSystem_HvacChilledWater_WaterBranch_sequence;
        typedef SimSystem_HvacChilledWater_WaterBranch_sequence::iterator SimSystem_HvacChilledWater_WaterBranch_iterator;
        typedef SimSystem_HvacChilledWater_WaterBranch_sequence::const_iterator SimSystem_HvacChilledWater_WaterBranch_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacChilledWater_WaterBranch_type, char > SimSystem_HvacChilledWater_WaterBranch_traits;

        const SimSystem_HvacChilledWater_WaterBranch_sequence&
        SimSystem_HvacChilledWater_WaterBranch () const;

        SimSystem_HvacChilledWater_WaterBranch_sequence&
        SimSystem_HvacChilledWater_WaterBranch ();

        void
        SimSystem_HvacChilledWater_WaterBranch (const SimSystem_HvacChilledWater_WaterBranch_sequence& s);

        // SimSystem_HvacCondenser_CondenserBranch
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_CondenserBranch SimSystem_HvacCondenser_CondenserBranch_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_CondenserBranch_type > SimSystem_HvacCondenser_CondenserBranch_sequence;
        typedef SimSystem_HvacCondenser_CondenserBranch_sequence::iterator SimSystem_HvacCondenser_CondenserBranch_iterator;
        typedef SimSystem_HvacCondenser_CondenserBranch_sequence::const_iterator SimSystem_HvacCondenser_CondenserBranch_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_CondenserBranch_type, char > SimSystem_HvacCondenser_CondenserBranch_traits;

        const SimSystem_HvacCondenser_CondenserBranch_sequence&
        SimSystem_HvacCondenser_CondenserBranch () const;

        SimSystem_HvacCondenser_CondenserBranch_sequence&
        SimSystem_HvacCondenser_CondenserBranch ();

        void
        SimSystem_HvacCondenser_CondenserBranch (const SimSystem_HvacCondenser_CondenserBranch_sequence& s);

        // SimSystem_HvacCondenser_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_Control SimSystem_HvacCondenser_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_Control_type > SimSystem_HvacCondenser_Control_sequence;
        typedef SimSystem_HvacCondenser_Control_sequence::iterator SimSystem_HvacCondenser_Control_iterator;
        typedef SimSystem_HvacCondenser_Control_sequence::const_iterator SimSystem_HvacCondenser_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_Control_type, char > SimSystem_HvacCondenser_Control_traits;

        const SimSystem_HvacCondenser_Control_sequence&
        SimSystem_HvacCondenser_Control () const;

        SimSystem_HvacCondenser_Control_sequence&
        SimSystem_HvacCondenser_Control ();

        void
        SimSystem_HvacCondenser_Control (const SimSystem_HvacCondenser_Control_sequence& s);

        // SimSystem_HvacCondenser_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_ControlDemand SimSystem_HvacCondenser_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_ControlDemand_type > SimSystem_HvacCondenser_ControlDemand_sequence;
        typedef SimSystem_HvacCondenser_ControlDemand_sequence::iterator SimSystem_HvacCondenser_ControlDemand_iterator;
        typedef SimSystem_HvacCondenser_ControlDemand_sequence::const_iterator SimSystem_HvacCondenser_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_ControlDemand_type, char > SimSystem_HvacCondenser_ControlDemand_traits;

        const SimSystem_HvacCondenser_ControlDemand_sequence&
        SimSystem_HvacCondenser_ControlDemand () const;

        SimSystem_HvacCondenser_ControlDemand_sequence&
        SimSystem_HvacCondenser_ControlDemand ();

        void
        SimSystem_HvacCondenser_ControlDemand (const SimSystem_HvacCondenser_ControlDemand_sequence& s);

        // SimSystem_HvacCondenser_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_ControlSupply SimSystem_HvacCondenser_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_ControlSupply_type > SimSystem_HvacCondenser_ControlSupply_sequence;
        typedef SimSystem_HvacCondenser_ControlSupply_sequence::iterator SimSystem_HvacCondenser_ControlSupply_iterator;
        typedef SimSystem_HvacCondenser_ControlSupply_sequence::const_iterator SimSystem_HvacCondenser_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_ControlSupply_type, char > SimSystem_HvacCondenser_ControlSupply_traits;

        const SimSystem_HvacCondenser_ControlSupply_sequence&
        SimSystem_HvacCondenser_ControlSupply () const;

        SimSystem_HvacCondenser_ControlSupply_sequence&
        SimSystem_HvacCondenser_ControlSupply ();

        void
        SimSystem_HvacCondenser_ControlSupply (const SimSystem_HvacCondenser_ControlSupply_sequence& s);

        // SimSystem_HvacCondenser_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_Demand SimSystem_HvacCondenser_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_Demand_type > SimSystem_HvacCondenser_Demand_sequence;
        typedef SimSystem_HvacCondenser_Demand_sequence::iterator SimSystem_HvacCondenser_Demand_iterator;
        typedef SimSystem_HvacCondenser_Demand_sequence::const_iterator SimSystem_HvacCondenser_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_Demand_type, char > SimSystem_HvacCondenser_Demand_traits;

        const SimSystem_HvacCondenser_Demand_sequence&
        SimSystem_HvacCondenser_Demand () const;

        SimSystem_HvacCondenser_Demand_sequence&
        SimSystem_HvacCondenser_Demand ();

        void
        SimSystem_HvacCondenser_Demand (const SimSystem_HvacCondenser_Demand_sequence& s);

        // SimSystem_HvacCondenser_DemandSideDemandComponents
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_DemandSideDemandComponents SimSystem_HvacCondenser_DemandSideDemandComponents_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_DemandSideDemandComponents_type > SimSystem_HvacCondenser_DemandSideDemandComponents_sequence;
        typedef SimSystem_HvacCondenser_DemandSideDemandComponents_sequence::iterator SimSystem_HvacCondenser_DemandSideDemandComponents_iterator;
        typedef SimSystem_HvacCondenser_DemandSideDemandComponents_sequence::const_iterator SimSystem_HvacCondenser_DemandSideDemandComponents_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_DemandSideDemandComponents_type, char > SimSystem_HvacCondenser_DemandSideDemandComponents_traits;

        const SimSystem_HvacCondenser_DemandSideDemandComponents_sequence&
        SimSystem_HvacCondenser_DemandSideDemandComponents () const;

        SimSystem_HvacCondenser_DemandSideDemandComponents_sequence&
        SimSystem_HvacCondenser_DemandSideDemandComponents ();

        void
        SimSystem_HvacCondenser_DemandSideDemandComponents (const SimSystem_HvacCondenser_DemandSideDemandComponents_sequence& s);

        // SimSystem_HvacCondenser_DemandSideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_DemandSideReturnPath SimSystem_HvacCondenser_DemandSideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_DemandSideReturnPath_type > SimSystem_HvacCondenser_DemandSideReturnPath_sequence;
        typedef SimSystem_HvacCondenser_DemandSideReturnPath_sequence::iterator SimSystem_HvacCondenser_DemandSideReturnPath_iterator;
        typedef SimSystem_HvacCondenser_DemandSideReturnPath_sequence::const_iterator SimSystem_HvacCondenser_DemandSideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_DemandSideReturnPath_type, char > SimSystem_HvacCondenser_DemandSideReturnPath_traits;

        const SimSystem_HvacCondenser_DemandSideReturnPath_sequence&
        SimSystem_HvacCondenser_DemandSideReturnPath () const;

        SimSystem_HvacCondenser_DemandSideReturnPath_sequence&
        SimSystem_HvacCondenser_DemandSideReturnPath ();

        void
        SimSystem_HvacCondenser_DemandSideReturnPath (const SimSystem_HvacCondenser_DemandSideReturnPath_sequence& s);

        // SimSystem_HvacCondenser_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_DemandSideSupplyPath SimSystem_HvacCondenser_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_DemandSideSupplyPath_type > SimSystem_HvacCondenser_DemandSideSupplyPath_sequence;
        typedef SimSystem_HvacCondenser_DemandSideSupplyPath_sequence::iterator SimSystem_HvacCondenser_DemandSideSupplyPath_iterator;
        typedef SimSystem_HvacCondenser_DemandSideSupplyPath_sequence::const_iterator SimSystem_HvacCondenser_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_DemandSideSupplyPath_type, char > SimSystem_HvacCondenser_DemandSideSupplyPath_traits;

        const SimSystem_HvacCondenser_DemandSideSupplyPath_sequence&
        SimSystem_HvacCondenser_DemandSideSupplyPath () const;

        SimSystem_HvacCondenser_DemandSideSupplyPath_sequence&
        SimSystem_HvacCondenser_DemandSideSupplyPath ();

        void
        SimSystem_HvacCondenser_DemandSideSupplyPath (const SimSystem_HvacCondenser_DemandSideSupplyPath_sequence& s);

        // SimSystem_HvacCondenser_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_FullSystem SimSystem_HvacCondenser_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_FullSystem_type > SimSystem_HvacCondenser_FullSystem_sequence;
        typedef SimSystem_HvacCondenser_FullSystem_sequence::iterator SimSystem_HvacCondenser_FullSystem_iterator;
        typedef SimSystem_HvacCondenser_FullSystem_sequence::const_iterator SimSystem_HvacCondenser_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_FullSystem_type, char > SimSystem_HvacCondenser_FullSystem_traits;

        const SimSystem_HvacCondenser_FullSystem_sequence&
        SimSystem_HvacCondenser_FullSystem () const;

        SimSystem_HvacCondenser_FullSystem_sequence&
        SimSystem_HvacCondenser_FullSystem ();

        void
        SimSystem_HvacCondenser_FullSystem (const SimSystem_HvacCondenser_FullSystem_sequence& s);

        // SimSystem_HvacCondenser_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacCondenser_Supply SimSystem_HvacCondenser_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacCondenser_Supply_type > SimSystem_HvacCondenser_Supply_sequence;
        typedef SimSystem_HvacCondenser_Supply_sequence::iterator SimSystem_HvacCondenser_Supply_iterator;
        typedef SimSystem_HvacCondenser_Supply_sequence::const_iterator SimSystem_HvacCondenser_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacCondenser_Supply_type, char > SimSystem_HvacCondenser_Supply_traits;

        const SimSystem_HvacCondenser_Supply_sequence&
        SimSystem_HvacCondenser_Supply () const;

        SimSystem_HvacCondenser_Supply_sequence&
        SimSystem_HvacCondenser_Supply ();

        void
        SimSystem_HvacCondenser_Supply (const SimSystem_HvacCondenser_Supply_sequence& s);

        // SimSystem_HvacHotWater_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_Control SimSystem_HvacHotWater_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_Control_type > SimSystem_HvacHotWater_Control_sequence;
        typedef SimSystem_HvacHotWater_Control_sequence::iterator SimSystem_HvacHotWater_Control_iterator;
        typedef SimSystem_HvacHotWater_Control_sequence::const_iterator SimSystem_HvacHotWater_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_Control_type, char > SimSystem_HvacHotWater_Control_traits;

        const SimSystem_HvacHotWater_Control_sequence&
        SimSystem_HvacHotWater_Control () const;

        SimSystem_HvacHotWater_Control_sequence&
        SimSystem_HvacHotWater_Control ();

        void
        SimSystem_HvacHotWater_Control (const SimSystem_HvacHotWater_Control_sequence& s);

        // SimSystem_HvacHotWater_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_ControlDemand SimSystem_HvacHotWater_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_ControlDemand_type > SimSystem_HvacHotWater_ControlDemand_sequence;
        typedef SimSystem_HvacHotWater_ControlDemand_sequence::iterator SimSystem_HvacHotWater_ControlDemand_iterator;
        typedef SimSystem_HvacHotWater_ControlDemand_sequence::const_iterator SimSystem_HvacHotWater_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_ControlDemand_type, char > SimSystem_HvacHotWater_ControlDemand_traits;

        const SimSystem_HvacHotWater_ControlDemand_sequence&
        SimSystem_HvacHotWater_ControlDemand () const;

        SimSystem_HvacHotWater_ControlDemand_sequence&
        SimSystem_HvacHotWater_ControlDemand ();

        void
        SimSystem_HvacHotWater_ControlDemand (const SimSystem_HvacHotWater_ControlDemand_sequence& s);

        // SimSystem_HvacHotWater_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_ControlSupply SimSystem_HvacHotWater_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_ControlSupply_type > SimSystem_HvacHotWater_ControlSupply_sequence;
        typedef SimSystem_HvacHotWater_ControlSupply_sequence::iterator SimSystem_HvacHotWater_ControlSupply_iterator;
        typedef SimSystem_HvacHotWater_ControlSupply_sequence::const_iterator SimSystem_HvacHotWater_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_ControlSupply_type, char > SimSystem_HvacHotWater_ControlSupply_traits;

        const SimSystem_HvacHotWater_ControlSupply_sequence&
        SimSystem_HvacHotWater_ControlSupply () const;

        SimSystem_HvacHotWater_ControlSupply_sequence&
        SimSystem_HvacHotWater_ControlSupply ();

        void
        SimSystem_HvacHotWater_ControlSupply (const SimSystem_HvacHotWater_ControlSupply_sequence& s);

        // SimSystem_HvacHotWater_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_Demand SimSystem_HvacHotWater_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_Demand_type > SimSystem_HvacHotWater_Demand_sequence;
        typedef SimSystem_HvacHotWater_Demand_sequence::iterator SimSystem_HvacHotWater_Demand_iterator;
        typedef SimSystem_HvacHotWater_Demand_sequence::const_iterator SimSystem_HvacHotWater_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_Demand_type, char > SimSystem_HvacHotWater_Demand_traits;

        const SimSystem_HvacHotWater_Demand_sequence&
        SimSystem_HvacHotWater_Demand () const;

        SimSystem_HvacHotWater_Demand_sequence&
        SimSystem_HvacHotWater_Demand ();

        void
        SimSystem_HvacHotWater_Demand (const SimSystem_HvacHotWater_Demand_sequence& s);

        // SimSystem_HvacHotWater_DemandSideDemandComponents
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_DemandSideDemandComponents SimSystem_HvacHotWater_DemandSideDemandComponents_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_DemandSideDemandComponents_type > SimSystem_HvacHotWater_DemandSideDemandComponents_sequence;
        typedef SimSystem_HvacHotWater_DemandSideDemandComponents_sequence::iterator SimSystem_HvacHotWater_DemandSideDemandComponents_iterator;
        typedef SimSystem_HvacHotWater_DemandSideDemandComponents_sequence::const_iterator SimSystem_HvacHotWater_DemandSideDemandComponents_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_DemandSideDemandComponents_type, char > SimSystem_HvacHotWater_DemandSideDemandComponents_traits;

        const SimSystem_HvacHotWater_DemandSideDemandComponents_sequence&
        SimSystem_HvacHotWater_DemandSideDemandComponents () const;

        SimSystem_HvacHotWater_DemandSideDemandComponents_sequence&
        SimSystem_HvacHotWater_DemandSideDemandComponents ();

        void
        SimSystem_HvacHotWater_DemandSideDemandComponents (const SimSystem_HvacHotWater_DemandSideDemandComponents_sequence& s);

        // SimSystem_HvacHotWater_DemandSideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_DemandSideReturnPath SimSystem_HvacHotWater_DemandSideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_DemandSideReturnPath_type > SimSystem_HvacHotWater_DemandSideReturnPath_sequence;
        typedef SimSystem_HvacHotWater_DemandSideReturnPath_sequence::iterator SimSystem_HvacHotWater_DemandSideReturnPath_iterator;
        typedef SimSystem_HvacHotWater_DemandSideReturnPath_sequence::const_iterator SimSystem_HvacHotWater_DemandSideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_DemandSideReturnPath_type, char > SimSystem_HvacHotWater_DemandSideReturnPath_traits;

        const SimSystem_HvacHotWater_DemandSideReturnPath_sequence&
        SimSystem_HvacHotWater_DemandSideReturnPath () const;

        SimSystem_HvacHotWater_DemandSideReturnPath_sequence&
        SimSystem_HvacHotWater_DemandSideReturnPath ();

        void
        SimSystem_HvacHotWater_DemandSideReturnPath (const SimSystem_HvacHotWater_DemandSideReturnPath_sequence& s);

        // SimSystem_HvacHotWater_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_DemandSideSupplyPath SimSystem_HvacHotWater_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_DemandSideSupplyPath_type > SimSystem_HvacHotWater_DemandSideSupplyPath_sequence;
        typedef SimSystem_HvacHotWater_DemandSideSupplyPath_sequence::iterator SimSystem_HvacHotWater_DemandSideSupplyPath_iterator;
        typedef SimSystem_HvacHotWater_DemandSideSupplyPath_sequence::const_iterator SimSystem_HvacHotWater_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_DemandSideSupplyPath_type, char > SimSystem_HvacHotWater_DemandSideSupplyPath_traits;

        const SimSystem_HvacHotWater_DemandSideSupplyPath_sequence&
        SimSystem_HvacHotWater_DemandSideSupplyPath () const;

        SimSystem_HvacHotWater_DemandSideSupplyPath_sequence&
        SimSystem_HvacHotWater_DemandSideSupplyPath ();

        void
        SimSystem_HvacHotWater_DemandSideSupplyPath (const SimSystem_HvacHotWater_DemandSideSupplyPath_sequence& s);

        // SimSystem_HvacHotWater_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_FullSystem SimSystem_HvacHotWater_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_FullSystem_type > SimSystem_HvacHotWater_FullSystem_sequence;
        typedef SimSystem_HvacHotWater_FullSystem_sequence::iterator SimSystem_HvacHotWater_FullSystem_iterator;
        typedef SimSystem_HvacHotWater_FullSystem_sequence::const_iterator SimSystem_HvacHotWater_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_FullSystem_type, char > SimSystem_HvacHotWater_FullSystem_traits;

        const SimSystem_HvacHotWater_FullSystem_sequence&
        SimSystem_HvacHotWater_FullSystem () const;

        SimSystem_HvacHotWater_FullSystem_sequence&
        SimSystem_HvacHotWater_FullSystem ();

        void
        SimSystem_HvacHotWater_FullSystem (const SimSystem_HvacHotWater_FullSystem_sequence& s);

        // SimSystem_HvacHotWater_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_Supply SimSystem_HvacHotWater_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_Supply_type > SimSystem_HvacHotWater_Supply_sequence;
        typedef SimSystem_HvacHotWater_Supply_sequence::iterator SimSystem_HvacHotWater_Supply_iterator;
        typedef SimSystem_HvacHotWater_Supply_sequence::const_iterator SimSystem_HvacHotWater_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_Supply_type, char > SimSystem_HvacHotWater_Supply_traits;

        const SimSystem_HvacHotWater_Supply_sequence&
        SimSystem_HvacHotWater_Supply () const;

        SimSystem_HvacHotWater_Supply_sequence&
        SimSystem_HvacHotWater_Supply ();

        void
        SimSystem_HvacHotWater_Supply (const SimSystem_HvacHotWater_Supply_sequence& s);

        // SimSystem_HvacHotWater_WaterBranch
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacHotWater_WaterBranch SimSystem_HvacHotWater_WaterBranch_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacHotWater_WaterBranch_type > SimSystem_HvacHotWater_WaterBranch_sequence;
        typedef SimSystem_HvacHotWater_WaterBranch_sequence::iterator SimSystem_HvacHotWater_WaterBranch_iterator;
        typedef SimSystem_HvacHotWater_WaterBranch_sequence::const_iterator SimSystem_HvacHotWater_WaterBranch_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacHotWater_WaterBranch_type, char > SimSystem_HvacHotWater_WaterBranch_traits;

        const SimSystem_HvacHotWater_WaterBranch_sequence&
        SimSystem_HvacHotWater_WaterBranch () const;

        SimSystem_HvacHotWater_WaterBranch_sequence&
        SimSystem_HvacHotWater_WaterBranch ();

        void
        SimSystem_HvacHotWater_WaterBranch (const SimSystem_HvacHotWater_WaterBranch_sequence& s);

        // SimSystem_HvacMixedWater_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_Control SimSystem_HvacMixedWater_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_Control_type > SimSystem_HvacMixedWater_Control_sequence;
        typedef SimSystem_HvacMixedWater_Control_sequence::iterator SimSystem_HvacMixedWater_Control_iterator;
        typedef SimSystem_HvacMixedWater_Control_sequence::const_iterator SimSystem_HvacMixedWater_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_Control_type, char > SimSystem_HvacMixedWater_Control_traits;

        const SimSystem_HvacMixedWater_Control_sequence&
        SimSystem_HvacMixedWater_Control () const;

        SimSystem_HvacMixedWater_Control_sequence&
        SimSystem_HvacMixedWater_Control ();

        void
        SimSystem_HvacMixedWater_Control (const SimSystem_HvacMixedWater_Control_sequence& s);

        // SimSystem_HvacMixedWater_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_ControlDemand SimSystem_HvacMixedWater_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_ControlDemand_type > SimSystem_HvacMixedWater_ControlDemand_sequence;
        typedef SimSystem_HvacMixedWater_ControlDemand_sequence::iterator SimSystem_HvacMixedWater_ControlDemand_iterator;
        typedef SimSystem_HvacMixedWater_ControlDemand_sequence::const_iterator SimSystem_HvacMixedWater_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_ControlDemand_type, char > SimSystem_HvacMixedWater_ControlDemand_traits;

        const SimSystem_HvacMixedWater_ControlDemand_sequence&
        SimSystem_HvacMixedWater_ControlDemand () const;

        SimSystem_HvacMixedWater_ControlDemand_sequence&
        SimSystem_HvacMixedWater_ControlDemand ();

        void
        SimSystem_HvacMixedWater_ControlDemand (const SimSystem_HvacMixedWater_ControlDemand_sequence& s);

        // SimSystem_HvacMixedWater_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_ControlSupply SimSystem_HvacMixedWater_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_ControlSupply_type > SimSystem_HvacMixedWater_ControlSupply_sequence;
        typedef SimSystem_HvacMixedWater_ControlSupply_sequence::iterator SimSystem_HvacMixedWater_ControlSupply_iterator;
        typedef SimSystem_HvacMixedWater_ControlSupply_sequence::const_iterator SimSystem_HvacMixedWater_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_ControlSupply_type, char > SimSystem_HvacMixedWater_ControlSupply_traits;

        const SimSystem_HvacMixedWater_ControlSupply_sequence&
        SimSystem_HvacMixedWater_ControlSupply () const;

        SimSystem_HvacMixedWater_ControlSupply_sequence&
        SimSystem_HvacMixedWater_ControlSupply ();

        void
        SimSystem_HvacMixedWater_ControlSupply (const SimSystem_HvacMixedWater_ControlSupply_sequence& s);

        // SimSystem_HvacMixedWater_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_Demand SimSystem_HvacMixedWater_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_Demand_type > SimSystem_HvacMixedWater_Demand_sequence;
        typedef SimSystem_HvacMixedWater_Demand_sequence::iterator SimSystem_HvacMixedWater_Demand_iterator;
        typedef SimSystem_HvacMixedWater_Demand_sequence::const_iterator SimSystem_HvacMixedWater_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_Demand_type, char > SimSystem_HvacMixedWater_Demand_traits;

        const SimSystem_HvacMixedWater_Demand_sequence&
        SimSystem_HvacMixedWater_Demand () const;

        SimSystem_HvacMixedWater_Demand_sequence&
        SimSystem_HvacMixedWater_Demand ();

        void
        SimSystem_HvacMixedWater_Demand (const SimSystem_HvacMixedWater_Demand_sequence& s);

        // SimSystem_HvacMixedWater_DemandSideDemandComponents
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_DemandSideDemandComponents SimSystem_HvacMixedWater_DemandSideDemandComponents_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_DemandSideDemandComponents_type > SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence;
        typedef SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence::iterator SimSystem_HvacMixedWater_DemandSideDemandComponents_iterator;
        typedef SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence::const_iterator SimSystem_HvacMixedWater_DemandSideDemandComponents_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_DemandSideDemandComponents_type, char > SimSystem_HvacMixedWater_DemandSideDemandComponents_traits;

        const SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence&
        SimSystem_HvacMixedWater_DemandSideDemandComponents () const;

        SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence&
        SimSystem_HvacMixedWater_DemandSideDemandComponents ();

        void
        SimSystem_HvacMixedWater_DemandSideDemandComponents (const SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence& s);

        // SimSystem_HvacMixedWater_DemandSideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_DemandSideReturnPath SimSystem_HvacMixedWater_DemandSideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_DemandSideReturnPath_type > SimSystem_HvacMixedWater_DemandSideReturnPath_sequence;
        typedef SimSystem_HvacMixedWater_DemandSideReturnPath_sequence::iterator SimSystem_HvacMixedWater_DemandSideReturnPath_iterator;
        typedef SimSystem_HvacMixedWater_DemandSideReturnPath_sequence::const_iterator SimSystem_HvacMixedWater_DemandSideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_DemandSideReturnPath_type, char > SimSystem_HvacMixedWater_DemandSideReturnPath_traits;

        const SimSystem_HvacMixedWater_DemandSideReturnPath_sequence&
        SimSystem_HvacMixedWater_DemandSideReturnPath () const;

        SimSystem_HvacMixedWater_DemandSideReturnPath_sequence&
        SimSystem_HvacMixedWater_DemandSideReturnPath ();

        void
        SimSystem_HvacMixedWater_DemandSideReturnPath (const SimSystem_HvacMixedWater_DemandSideReturnPath_sequence& s);

        // SimSystem_HvacMixedWater_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_DemandSideSupplyPath SimSystem_HvacMixedWater_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_DemandSideSupplyPath_type > SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence;
        typedef SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence::iterator SimSystem_HvacMixedWater_DemandSideSupplyPath_iterator;
        typedef SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence::const_iterator SimSystem_HvacMixedWater_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_DemandSideSupplyPath_type, char > SimSystem_HvacMixedWater_DemandSideSupplyPath_traits;

        const SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence&
        SimSystem_HvacMixedWater_DemandSideSupplyPath () const;

        SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence&
        SimSystem_HvacMixedWater_DemandSideSupplyPath ();

        void
        SimSystem_HvacMixedWater_DemandSideSupplyPath (const SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence& s);

        // SimSystem_HvacMixedWater_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_FullSystem SimSystem_HvacMixedWater_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_FullSystem_type > SimSystem_HvacMixedWater_FullSystem_sequence;
        typedef SimSystem_HvacMixedWater_FullSystem_sequence::iterator SimSystem_HvacMixedWater_FullSystem_iterator;
        typedef SimSystem_HvacMixedWater_FullSystem_sequence::const_iterator SimSystem_HvacMixedWater_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_FullSystem_type, char > SimSystem_HvacMixedWater_FullSystem_traits;

        const SimSystem_HvacMixedWater_FullSystem_sequence&
        SimSystem_HvacMixedWater_FullSystem () const;

        SimSystem_HvacMixedWater_FullSystem_sequence&
        SimSystem_HvacMixedWater_FullSystem ();

        void
        SimSystem_HvacMixedWater_FullSystem (const SimSystem_HvacMixedWater_FullSystem_sequence& s);

        // SimSystem_HvacMixedWater_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_Supply SimSystem_HvacMixedWater_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_Supply_type > SimSystem_HvacMixedWater_Supply_sequence;
        typedef SimSystem_HvacMixedWater_Supply_sequence::iterator SimSystem_HvacMixedWater_Supply_iterator;
        typedef SimSystem_HvacMixedWater_Supply_sequence::const_iterator SimSystem_HvacMixedWater_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_Supply_type, char > SimSystem_HvacMixedWater_Supply_traits;

        const SimSystem_HvacMixedWater_Supply_sequence&
        SimSystem_HvacMixedWater_Supply () const;

        SimSystem_HvacMixedWater_Supply_sequence&
        SimSystem_HvacMixedWater_Supply ();

        void
        SimSystem_HvacMixedWater_Supply (const SimSystem_HvacMixedWater_Supply_sequence& s);

        // SimSystem_HvacMixedWater_WaterBranch
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacMixedWater_WaterBranch SimSystem_HvacMixedWater_WaterBranch_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacMixedWater_WaterBranch_type > SimSystem_HvacMixedWater_WaterBranch_sequence;
        typedef SimSystem_HvacMixedWater_WaterBranch_sequence::iterator SimSystem_HvacMixedWater_WaterBranch_iterator;
        typedef SimSystem_HvacMixedWater_WaterBranch_sequence::const_iterator SimSystem_HvacMixedWater_WaterBranch_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacMixedWater_WaterBranch_type, char > SimSystem_HvacMixedWater_WaterBranch_traits;

        const SimSystem_HvacMixedWater_WaterBranch_sequence&
        SimSystem_HvacMixedWater_WaterBranch () const;

        SimSystem_HvacMixedWater_WaterBranch_sequence&
        SimSystem_HvacMixedWater_WaterBranch ();

        void
        SimSystem_HvacMixedWater_WaterBranch (const SimSystem_HvacMixedWater_WaterBranch_sequence& s);

        // SimSystem_HvacSteam_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_Control SimSystem_HvacSteam_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_Control_type > SimSystem_HvacSteam_Control_sequence;
        typedef SimSystem_HvacSteam_Control_sequence::iterator SimSystem_HvacSteam_Control_iterator;
        typedef SimSystem_HvacSteam_Control_sequence::const_iterator SimSystem_HvacSteam_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_Control_type, char > SimSystem_HvacSteam_Control_traits;

        const SimSystem_HvacSteam_Control_sequence&
        SimSystem_HvacSteam_Control () const;

        SimSystem_HvacSteam_Control_sequence&
        SimSystem_HvacSteam_Control ();

        void
        SimSystem_HvacSteam_Control (const SimSystem_HvacSteam_Control_sequence& s);

        // SimSystem_HvacSteam_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_ControlDemand SimSystem_HvacSteam_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_ControlDemand_type > SimSystem_HvacSteam_ControlDemand_sequence;
        typedef SimSystem_HvacSteam_ControlDemand_sequence::iterator SimSystem_HvacSteam_ControlDemand_iterator;
        typedef SimSystem_HvacSteam_ControlDemand_sequence::const_iterator SimSystem_HvacSteam_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_ControlDemand_type, char > SimSystem_HvacSteam_ControlDemand_traits;

        const SimSystem_HvacSteam_ControlDemand_sequence&
        SimSystem_HvacSteam_ControlDemand () const;

        SimSystem_HvacSteam_ControlDemand_sequence&
        SimSystem_HvacSteam_ControlDemand ();

        void
        SimSystem_HvacSteam_ControlDemand (const SimSystem_HvacSteam_ControlDemand_sequence& s);

        // SimSystem_HvacSteam_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_ControlSupply SimSystem_HvacSteam_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_ControlSupply_type > SimSystem_HvacSteam_ControlSupply_sequence;
        typedef SimSystem_HvacSteam_ControlSupply_sequence::iterator SimSystem_HvacSteam_ControlSupply_iterator;
        typedef SimSystem_HvacSteam_ControlSupply_sequence::const_iterator SimSystem_HvacSteam_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_ControlSupply_type, char > SimSystem_HvacSteam_ControlSupply_traits;

        const SimSystem_HvacSteam_ControlSupply_sequence&
        SimSystem_HvacSteam_ControlSupply () const;

        SimSystem_HvacSteam_ControlSupply_sequence&
        SimSystem_HvacSteam_ControlSupply ();

        void
        SimSystem_HvacSteam_ControlSupply (const SimSystem_HvacSteam_ControlSupply_sequence& s);

        // SimSystem_HvacSteam_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_Demand SimSystem_HvacSteam_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_Demand_type > SimSystem_HvacSteam_Demand_sequence;
        typedef SimSystem_HvacSteam_Demand_sequence::iterator SimSystem_HvacSteam_Demand_iterator;
        typedef SimSystem_HvacSteam_Demand_sequence::const_iterator SimSystem_HvacSteam_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_Demand_type, char > SimSystem_HvacSteam_Demand_traits;

        const SimSystem_HvacSteam_Demand_sequence&
        SimSystem_HvacSteam_Demand () const;

        SimSystem_HvacSteam_Demand_sequence&
        SimSystem_HvacSteam_Demand ();

        void
        SimSystem_HvacSteam_Demand (const SimSystem_HvacSteam_Demand_sequence& s);

        // SimSystem_HvacSteam_DemandSideDemandComponents
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_DemandSideDemandComponents SimSystem_HvacSteam_DemandSideDemandComponents_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_DemandSideDemandComponents_type > SimSystem_HvacSteam_DemandSideDemandComponents_sequence;
        typedef SimSystem_HvacSteam_DemandSideDemandComponents_sequence::iterator SimSystem_HvacSteam_DemandSideDemandComponents_iterator;
        typedef SimSystem_HvacSteam_DemandSideDemandComponents_sequence::const_iterator SimSystem_HvacSteam_DemandSideDemandComponents_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_DemandSideDemandComponents_type, char > SimSystem_HvacSteam_DemandSideDemandComponents_traits;

        const SimSystem_HvacSteam_DemandSideDemandComponents_sequence&
        SimSystem_HvacSteam_DemandSideDemandComponents () const;

        SimSystem_HvacSteam_DemandSideDemandComponents_sequence&
        SimSystem_HvacSteam_DemandSideDemandComponents ();

        void
        SimSystem_HvacSteam_DemandSideDemandComponents (const SimSystem_HvacSteam_DemandSideDemandComponents_sequence& s);

        // SimSystem_HvacSteam_DemandSideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_DemandSideReturnPath SimSystem_HvacSteam_DemandSideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_DemandSideReturnPath_type > SimSystem_HvacSteam_DemandSideReturnPath_sequence;
        typedef SimSystem_HvacSteam_DemandSideReturnPath_sequence::iterator SimSystem_HvacSteam_DemandSideReturnPath_iterator;
        typedef SimSystem_HvacSteam_DemandSideReturnPath_sequence::const_iterator SimSystem_HvacSteam_DemandSideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_DemandSideReturnPath_type, char > SimSystem_HvacSteam_DemandSideReturnPath_traits;

        const SimSystem_HvacSteam_DemandSideReturnPath_sequence&
        SimSystem_HvacSteam_DemandSideReturnPath () const;

        SimSystem_HvacSteam_DemandSideReturnPath_sequence&
        SimSystem_HvacSteam_DemandSideReturnPath ();

        void
        SimSystem_HvacSteam_DemandSideReturnPath (const SimSystem_HvacSteam_DemandSideReturnPath_sequence& s);

        // SimSystem_HvacSteam_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_DemandSideSupplyPath SimSystem_HvacSteam_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_DemandSideSupplyPath_type > SimSystem_HvacSteam_DemandSideSupplyPath_sequence;
        typedef SimSystem_HvacSteam_DemandSideSupplyPath_sequence::iterator SimSystem_HvacSteam_DemandSideSupplyPath_iterator;
        typedef SimSystem_HvacSteam_DemandSideSupplyPath_sequence::const_iterator SimSystem_HvacSteam_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_DemandSideSupplyPath_type, char > SimSystem_HvacSteam_DemandSideSupplyPath_traits;

        const SimSystem_HvacSteam_DemandSideSupplyPath_sequence&
        SimSystem_HvacSteam_DemandSideSupplyPath () const;

        SimSystem_HvacSteam_DemandSideSupplyPath_sequence&
        SimSystem_HvacSteam_DemandSideSupplyPath ();

        void
        SimSystem_HvacSteam_DemandSideSupplyPath (const SimSystem_HvacSteam_DemandSideSupplyPath_sequence& s);

        // SimSystem_HvacSteam_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_FullSystem SimSystem_HvacSteam_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_FullSystem_type > SimSystem_HvacSteam_FullSystem_sequence;
        typedef SimSystem_HvacSteam_FullSystem_sequence::iterator SimSystem_HvacSteam_FullSystem_iterator;
        typedef SimSystem_HvacSteam_FullSystem_sequence::const_iterator SimSystem_HvacSteam_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_FullSystem_type, char > SimSystem_HvacSteam_FullSystem_traits;

        const SimSystem_HvacSteam_FullSystem_sequence&
        SimSystem_HvacSteam_FullSystem () const;

        SimSystem_HvacSteam_FullSystem_sequence&
        SimSystem_HvacSteam_FullSystem ();

        void
        SimSystem_HvacSteam_FullSystem (const SimSystem_HvacSteam_FullSystem_sequence& s);

        // SimSystem_HvacSteam_SteamBranch
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_SteamBranch SimSystem_HvacSteam_SteamBranch_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_SteamBranch_type > SimSystem_HvacSteam_SteamBranch_sequence;
        typedef SimSystem_HvacSteam_SteamBranch_sequence::iterator SimSystem_HvacSteam_SteamBranch_iterator;
        typedef SimSystem_HvacSteam_SteamBranch_sequence::const_iterator SimSystem_HvacSteam_SteamBranch_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_SteamBranch_type, char > SimSystem_HvacSteam_SteamBranch_traits;

        const SimSystem_HvacSteam_SteamBranch_sequence&
        SimSystem_HvacSteam_SteamBranch () const;

        SimSystem_HvacSteam_SteamBranch_sequence&
        SimSystem_HvacSteam_SteamBranch ();

        void
        SimSystem_HvacSteam_SteamBranch (const SimSystem_HvacSteam_SteamBranch_sequence& s);

        // SimSystem_HvacSteam_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_HvacSteam_Supply SimSystem_HvacSteam_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_HvacSteam_Supply_type > SimSystem_HvacSteam_Supply_sequence;
        typedef SimSystem_HvacSteam_Supply_sequence::iterator SimSystem_HvacSteam_Supply_iterator;
        typedef SimSystem_HvacSteam_Supply_sequence::const_iterator SimSystem_HvacSteam_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_HvacSteam_Supply_type, char > SimSystem_HvacSteam_Supply_traits;

        const SimSystem_HvacSteam_Supply_sequence&
        SimSystem_HvacSteam_Supply () const;

        SimSystem_HvacSteam_Supply_sequence&
        SimSystem_HvacSteam_Supply ();

        void
        SimSystem_HvacSteam_Supply (const SimSystem_HvacSteam_Supply_sequence& s);

        // SimSystem_Mechanical_SystemsContainer
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Mechanical_SystemsContainer SimSystem_Mechanical_SystemsContainer_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Mechanical_SystemsContainer_type > SimSystem_Mechanical_SystemsContainer_sequence;
        typedef SimSystem_Mechanical_SystemsContainer_sequence::iterator SimSystem_Mechanical_SystemsContainer_iterator;
        typedef SimSystem_Mechanical_SystemsContainer_sequence::const_iterator SimSystem_Mechanical_SystemsContainer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Mechanical_SystemsContainer_type, char > SimSystem_Mechanical_SystemsContainer_traits;

        const SimSystem_Mechanical_SystemsContainer_sequence&
        SimSystem_Mechanical_SystemsContainer () const;

        SimSystem_Mechanical_SystemsContainer_sequence&
        SimSystem_Mechanical_SystemsContainer ();

        void
        SimSystem_Mechanical_SystemsContainer (const SimSystem_Mechanical_SystemsContainer_sequence& s);

        // SimSystem_Plumbing_ColdWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_ColdWater SimSystem_Plumbing_ColdWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_ColdWater_type > SimSystem_Plumbing_ColdWater_sequence;
        typedef SimSystem_Plumbing_ColdWater_sequence::iterator SimSystem_Plumbing_ColdWater_iterator;
        typedef SimSystem_Plumbing_ColdWater_sequence::const_iterator SimSystem_Plumbing_ColdWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_ColdWater_type, char > SimSystem_Plumbing_ColdWater_traits;

        const SimSystem_Plumbing_ColdWater_sequence&
        SimSystem_Plumbing_ColdWater () const;

        SimSystem_Plumbing_ColdWater_sequence&
        SimSystem_Plumbing_ColdWater ();

        void
        SimSystem_Plumbing_ColdWater (const SimSystem_Plumbing_ColdWater_sequence& s);

        // SimSystem_Plumbing_GrayWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_GrayWater SimSystem_Plumbing_GrayWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_GrayWater_type > SimSystem_Plumbing_GrayWater_sequence;
        typedef SimSystem_Plumbing_GrayWater_sequence::iterator SimSystem_Plumbing_GrayWater_iterator;
        typedef SimSystem_Plumbing_GrayWater_sequence::const_iterator SimSystem_Plumbing_GrayWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_GrayWater_type, char > SimSystem_Plumbing_GrayWater_traits;

        const SimSystem_Plumbing_GrayWater_sequence&
        SimSystem_Plumbing_GrayWater () const;

        SimSystem_Plumbing_GrayWater_sequence&
        SimSystem_Plumbing_GrayWater ();

        void
        SimSystem_Plumbing_GrayWater (const SimSystem_Plumbing_GrayWater_sequence& s);

        // SimSystem_Plumbing_HotWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_HotWater SimSystem_Plumbing_HotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_HotWater_type > SimSystem_Plumbing_HotWater_sequence;
        typedef SimSystem_Plumbing_HotWater_sequence::iterator SimSystem_Plumbing_HotWater_iterator;
        typedef SimSystem_Plumbing_HotWater_sequence::const_iterator SimSystem_Plumbing_HotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_HotWater_type, char > SimSystem_Plumbing_HotWater_traits;

        const SimSystem_Plumbing_HotWater_sequence&
        SimSystem_Plumbing_HotWater () const;

        SimSystem_Plumbing_HotWater_sequence&
        SimSystem_Plumbing_HotWater ();

        void
        SimSystem_Plumbing_HotWater (const SimSystem_Plumbing_HotWater_sequence& s);

        // SimSystem_Plumbing_PotableWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_PotableWater SimSystem_Plumbing_PotableWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_PotableWater_type > SimSystem_Plumbing_PotableWater_sequence;
        typedef SimSystem_Plumbing_PotableWater_sequence::iterator SimSystem_Plumbing_PotableWater_iterator;
        typedef SimSystem_Plumbing_PotableWater_sequence::const_iterator SimSystem_Plumbing_PotableWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_PotableWater_type, char > SimSystem_Plumbing_PotableWater_traits;

        const SimSystem_Plumbing_PotableWater_sequence&
        SimSystem_Plumbing_PotableWater () const;

        SimSystem_Plumbing_PotableWater_sequence&
        SimSystem_Plumbing_PotableWater ();

        void
        SimSystem_Plumbing_PotableWater (const SimSystem_Plumbing_PotableWater_sequence& s);

        // SimSystem_Plumbing_SystemsContainer
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_SystemsContainer SimSystem_Plumbing_SystemsContainer_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_SystemsContainer_type > SimSystem_Plumbing_SystemsContainer_sequence;
        typedef SimSystem_Plumbing_SystemsContainer_sequence::iterator SimSystem_Plumbing_SystemsContainer_iterator;
        typedef SimSystem_Plumbing_SystemsContainer_sequence::const_iterator SimSystem_Plumbing_SystemsContainer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_SystemsContainer_type, char > SimSystem_Plumbing_SystemsContainer_traits;

        const SimSystem_Plumbing_SystemsContainer_sequence&
        SimSystem_Plumbing_SystemsContainer () const;

        SimSystem_Plumbing_SystemsContainer_sequence&
        SimSystem_Plumbing_SystemsContainer ();

        void
        SimSystem_Plumbing_SystemsContainer (const SimSystem_Plumbing_SystemsContainer_sequence& s);

        // SimSystem_Plumbing_UndergroundPipingCircuit
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_UndergroundPipingCircuit SimSystem_Plumbing_UndergroundPipingCircuit_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_UndergroundPipingCircuit_type > SimSystem_Plumbing_UndergroundPipingCircuit_sequence;
        typedef SimSystem_Plumbing_UndergroundPipingCircuit_sequence::iterator SimSystem_Plumbing_UndergroundPipingCircuit_iterator;
        typedef SimSystem_Plumbing_UndergroundPipingCircuit_sequence::const_iterator SimSystem_Plumbing_UndergroundPipingCircuit_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_UndergroundPipingCircuit_type, char > SimSystem_Plumbing_UndergroundPipingCircuit_traits;

        const SimSystem_Plumbing_UndergroundPipingCircuit_sequence&
        SimSystem_Plumbing_UndergroundPipingCircuit () const;

        SimSystem_Plumbing_UndergroundPipingCircuit_sequence&
        SimSystem_Plumbing_UndergroundPipingCircuit ();

        void
        SimSystem_Plumbing_UndergroundPipingCircuit (const SimSystem_Plumbing_UndergroundPipingCircuit_sequence& s);

        // SimSystem_Plumbing_WasteWater
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_WasteWater SimSystem_Plumbing_WasteWater_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_WasteWater_type > SimSystem_Plumbing_WasteWater_sequence;
        typedef SimSystem_Plumbing_WasteWater_sequence::iterator SimSystem_Plumbing_WasteWater_iterator;
        typedef SimSystem_Plumbing_WasteWater_sequence::const_iterator SimSystem_Plumbing_WasteWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_WasteWater_type, char > SimSystem_Plumbing_WasteWater_traits;

        const SimSystem_Plumbing_WasteWater_sequence&
        SimSystem_Plumbing_WasteWater () const;

        SimSystem_Plumbing_WasteWater_sequence&
        SimSystem_Plumbing_WasteWater ();

        void
        SimSystem_Plumbing_WasteWater (const SimSystem_Plumbing_WasteWater_sequence& s);

        // SimSystem_Plumbing_WaterUseSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_WaterUseSystem SimSystem_Plumbing_WaterUseSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_WaterUseSystem_type > SimSystem_Plumbing_WaterUseSystem_sequence;
        typedef SimSystem_Plumbing_WaterUseSystem_sequence::iterator SimSystem_Plumbing_WaterUseSystem_iterator;
        typedef SimSystem_Plumbing_WaterUseSystem_sequence::const_iterator SimSystem_Plumbing_WaterUseSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_WaterUseSystem_type, char > SimSystem_Plumbing_WaterUseSystem_traits;

        const SimSystem_Plumbing_WaterUseSystem_sequence&
        SimSystem_Plumbing_WaterUseSystem () const;

        SimSystem_Plumbing_WaterUseSystem_sequence&
        SimSystem_Plumbing_WaterUseSystem ();

        void
        SimSystem_Plumbing_WaterUseSystem (const SimSystem_Plumbing_WaterUseSystem_sequence& s);

        // SimSystem_Plumbing_WaterUseWell
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Plumbing_WaterUseWell SimSystem_Plumbing_WaterUseWell_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Plumbing_WaterUseWell_type > SimSystem_Plumbing_WaterUseWell_sequence;
        typedef SimSystem_Plumbing_WaterUseWell_sequence::iterator SimSystem_Plumbing_WaterUseWell_iterator;
        typedef SimSystem_Plumbing_WaterUseWell_sequence::const_iterator SimSystem_Plumbing_WaterUseWell_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Plumbing_WaterUseWell_type, char > SimSystem_Plumbing_WaterUseWell_traits;

        const SimSystem_Plumbing_WaterUseWell_sequence&
        SimSystem_Plumbing_WaterUseWell () const;

        SimSystem_Plumbing_WaterUseWell_sequence&
        SimSystem_Plumbing_WaterUseWell ();

        void
        SimSystem_Plumbing_WaterUseWell (const SimSystem_Plumbing_WaterUseWell_sequence& s);

        // SimSystem_RefrigerationPrimary_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationPrimary_Control SimSystem_RefrigerationPrimary_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationPrimary_Control_type > SimSystem_RefrigerationPrimary_Control_sequence;
        typedef SimSystem_RefrigerationPrimary_Control_sequence::iterator SimSystem_RefrigerationPrimary_Control_iterator;
        typedef SimSystem_RefrigerationPrimary_Control_sequence::const_iterator SimSystem_RefrigerationPrimary_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationPrimary_Control_type, char > SimSystem_RefrigerationPrimary_Control_traits;

        const SimSystem_RefrigerationPrimary_Control_sequence&
        SimSystem_RefrigerationPrimary_Control () const;

        SimSystem_RefrigerationPrimary_Control_sequence&
        SimSystem_RefrigerationPrimary_Control ();

        void
        SimSystem_RefrigerationPrimary_Control (const SimSystem_RefrigerationPrimary_Control_sequence& s);

        // SimSystem_RefrigerationPrimary_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationPrimary_Demand SimSystem_RefrigerationPrimary_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationPrimary_Demand_type > SimSystem_RefrigerationPrimary_Demand_sequence;
        typedef SimSystem_RefrigerationPrimary_Demand_sequence::iterator SimSystem_RefrigerationPrimary_Demand_iterator;
        typedef SimSystem_RefrigerationPrimary_Demand_sequence::const_iterator SimSystem_RefrigerationPrimary_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationPrimary_Demand_type, char > SimSystem_RefrigerationPrimary_Demand_traits;

        const SimSystem_RefrigerationPrimary_Demand_sequence&
        SimSystem_RefrigerationPrimary_Demand () const;

        SimSystem_RefrigerationPrimary_Demand_sequence&
        SimSystem_RefrigerationPrimary_Demand ();

        void
        SimSystem_RefrigerationPrimary_Demand (const SimSystem_RefrigerationPrimary_Demand_sequence& s);

        // SimSystem_RefrigerationPrimary_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationPrimary_FullSystem SimSystem_RefrigerationPrimary_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationPrimary_FullSystem_type > SimSystem_RefrigerationPrimary_FullSystem_sequence;
        typedef SimSystem_RefrigerationPrimary_FullSystem_sequence::iterator SimSystem_RefrigerationPrimary_FullSystem_iterator;
        typedef SimSystem_RefrigerationPrimary_FullSystem_sequence::const_iterator SimSystem_RefrigerationPrimary_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationPrimary_FullSystem_type, char > SimSystem_RefrigerationPrimary_FullSystem_traits;

        const SimSystem_RefrigerationPrimary_FullSystem_sequence&
        SimSystem_RefrigerationPrimary_FullSystem () const;

        SimSystem_RefrigerationPrimary_FullSystem_sequence&
        SimSystem_RefrigerationPrimary_FullSystem ();

        void
        SimSystem_RefrigerationPrimary_FullSystem (const SimSystem_RefrigerationPrimary_FullSystem_sequence& s);

        // SimSystem_RefrigerationPrimary_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationPrimary_Supply SimSystem_RefrigerationPrimary_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationPrimary_Supply_type > SimSystem_RefrigerationPrimary_Supply_sequence;
        typedef SimSystem_RefrigerationPrimary_Supply_sequence::iterator SimSystem_RefrigerationPrimary_Supply_iterator;
        typedef SimSystem_RefrigerationPrimary_Supply_sequence::const_iterator SimSystem_RefrigerationPrimary_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationPrimary_Supply_type, char > SimSystem_RefrigerationPrimary_Supply_traits;

        const SimSystem_RefrigerationPrimary_Supply_sequence&
        SimSystem_RefrigerationPrimary_Supply () const;

        SimSystem_RefrigerationPrimary_Supply_sequence&
        SimSystem_RefrigerationPrimary_Supply ();

        void
        SimSystem_RefrigerationPrimary_Supply (const SimSystem_RefrigerationPrimary_Supply_sequence& s);

        // SimSystem_RefrigerationSecondary_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationSecondary_Control SimSystem_RefrigerationSecondary_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationSecondary_Control_type > SimSystem_RefrigerationSecondary_Control_sequence;
        typedef SimSystem_RefrigerationSecondary_Control_sequence::iterator SimSystem_RefrigerationSecondary_Control_iterator;
        typedef SimSystem_RefrigerationSecondary_Control_sequence::const_iterator SimSystem_RefrigerationSecondary_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationSecondary_Control_type, char > SimSystem_RefrigerationSecondary_Control_traits;

        const SimSystem_RefrigerationSecondary_Control_sequence&
        SimSystem_RefrigerationSecondary_Control () const;

        SimSystem_RefrigerationSecondary_Control_sequence&
        SimSystem_RefrigerationSecondary_Control ();

        void
        SimSystem_RefrigerationSecondary_Control (const SimSystem_RefrigerationSecondary_Control_sequence& s);

        // SimSystem_RefrigerationSecondary_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationSecondary_Demand SimSystem_RefrigerationSecondary_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationSecondary_Demand_type > SimSystem_RefrigerationSecondary_Demand_sequence;
        typedef SimSystem_RefrigerationSecondary_Demand_sequence::iterator SimSystem_RefrigerationSecondary_Demand_iterator;
        typedef SimSystem_RefrigerationSecondary_Demand_sequence::const_iterator SimSystem_RefrigerationSecondary_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationSecondary_Demand_type, char > SimSystem_RefrigerationSecondary_Demand_traits;

        const SimSystem_RefrigerationSecondary_Demand_sequence&
        SimSystem_RefrigerationSecondary_Demand () const;

        SimSystem_RefrigerationSecondary_Demand_sequence&
        SimSystem_RefrigerationSecondary_Demand ();

        void
        SimSystem_RefrigerationSecondary_Demand (const SimSystem_RefrigerationSecondary_Demand_sequence& s);

        // SimSystem_RefrigerationSecondary_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationSecondary_FullSystem SimSystem_RefrigerationSecondary_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationSecondary_FullSystem_type > SimSystem_RefrigerationSecondary_FullSystem_sequence;
        typedef SimSystem_RefrigerationSecondary_FullSystem_sequence::iterator SimSystem_RefrigerationSecondary_FullSystem_iterator;
        typedef SimSystem_RefrigerationSecondary_FullSystem_sequence::const_iterator SimSystem_RefrigerationSecondary_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationSecondary_FullSystem_type, char > SimSystem_RefrigerationSecondary_FullSystem_traits;

        const SimSystem_RefrigerationSecondary_FullSystem_sequence&
        SimSystem_RefrigerationSecondary_FullSystem () const;

        SimSystem_RefrigerationSecondary_FullSystem_sequence&
        SimSystem_RefrigerationSecondary_FullSystem ();

        void
        SimSystem_RefrigerationSecondary_FullSystem (const SimSystem_RefrigerationSecondary_FullSystem_sequence& s);

        // SimSystem_RefrigerationSecondary_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationSecondary_Supply SimSystem_RefrigerationSecondary_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationSecondary_Supply_type > SimSystem_RefrigerationSecondary_Supply_sequence;
        typedef SimSystem_RefrigerationSecondary_Supply_sequence::iterator SimSystem_RefrigerationSecondary_Supply_iterator;
        typedef SimSystem_RefrigerationSecondary_Supply_sequence::const_iterator SimSystem_RefrigerationSecondary_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationSecondary_Supply_type, char > SimSystem_RefrigerationSecondary_Supply_traits;

        const SimSystem_RefrigerationSecondary_Supply_sequence&
        SimSystem_RefrigerationSecondary_Supply () const;

        SimSystem_RefrigerationSecondary_Supply_sequence&
        SimSystem_RefrigerationSecondary_Supply ();

        void
        SimSystem_RefrigerationSecondary_Supply (const SimSystem_RefrigerationSecondary_Supply_sequence& s);

        // SimSystem_RefrigerationTranscritical_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationTranscritical_Control SimSystem_RefrigerationTranscritical_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationTranscritical_Control_type > SimSystem_RefrigerationTranscritical_Control_sequence;
        typedef SimSystem_RefrigerationTranscritical_Control_sequence::iterator SimSystem_RefrigerationTranscritical_Control_iterator;
        typedef SimSystem_RefrigerationTranscritical_Control_sequence::const_iterator SimSystem_RefrigerationTranscritical_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationTranscritical_Control_type, char > SimSystem_RefrigerationTranscritical_Control_traits;

        const SimSystem_RefrigerationTranscritical_Control_sequence&
        SimSystem_RefrigerationTranscritical_Control () const;

        SimSystem_RefrigerationTranscritical_Control_sequence&
        SimSystem_RefrigerationTranscritical_Control ();

        void
        SimSystem_RefrigerationTranscritical_Control (const SimSystem_RefrigerationTranscritical_Control_sequence& s);

        // SimSystem_RefrigerationTranscritical_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationTranscritical_Demand SimSystem_RefrigerationTranscritical_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationTranscritical_Demand_type > SimSystem_RefrigerationTranscritical_Demand_sequence;
        typedef SimSystem_RefrigerationTranscritical_Demand_sequence::iterator SimSystem_RefrigerationTranscritical_Demand_iterator;
        typedef SimSystem_RefrigerationTranscritical_Demand_sequence::const_iterator SimSystem_RefrigerationTranscritical_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationTranscritical_Demand_type, char > SimSystem_RefrigerationTranscritical_Demand_traits;

        const SimSystem_RefrigerationTranscritical_Demand_sequence&
        SimSystem_RefrigerationTranscritical_Demand () const;

        SimSystem_RefrigerationTranscritical_Demand_sequence&
        SimSystem_RefrigerationTranscritical_Demand ();

        void
        SimSystem_RefrigerationTranscritical_Demand (const SimSystem_RefrigerationTranscritical_Demand_sequence& s);

        // SimSystem_RefrigerationTranscritical_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationTranscritical_FullSystem SimSystem_RefrigerationTranscritical_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationTranscritical_FullSystem_type > SimSystem_RefrigerationTranscritical_FullSystem_sequence;
        typedef SimSystem_RefrigerationTranscritical_FullSystem_sequence::iterator SimSystem_RefrigerationTranscritical_FullSystem_iterator;
        typedef SimSystem_RefrigerationTranscritical_FullSystem_sequence::const_iterator SimSystem_RefrigerationTranscritical_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationTranscritical_FullSystem_type, char > SimSystem_RefrigerationTranscritical_FullSystem_traits;

        const SimSystem_RefrigerationTranscritical_FullSystem_sequence&
        SimSystem_RefrigerationTranscritical_FullSystem () const;

        SimSystem_RefrigerationTranscritical_FullSystem_sequence&
        SimSystem_RefrigerationTranscritical_FullSystem ();

        void
        SimSystem_RefrigerationTranscritical_FullSystem (const SimSystem_RefrigerationTranscritical_FullSystem_sequence& s);

        // SimSystem_RefrigerationTranscritical_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_RefrigerationTranscritical_Supply SimSystem_RefrigerationTranscritical_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_RefrigerationTranscritical_Supply_type > SimSystem_RefrigerationTranscritical_Supply_sequence;
        typedef SimSystem_RefrigerationTranscritical_Supply_sequence::iterator SimSystem_RefrigerationTranscritical_Supply_iterator;
        typedef SimSystem_RefrigerationTranscritical_Supply_sequence::const_iterator SimSystem_RefrigerationTranscritical_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_RefrigerationTranscritical_Supply_type, char > SimSystem_RefrigerationTranscritical_Supply_traits;

        const SimSystem_RefrigerationTranscritical_Supply_sequence&
        SimSystem_RefrigerationTranscritical_Supply () const;

        SimSystem_RefrigerationTranscritical_Supply_sequence&
        SimSystem_RefrigerationTranscritical_Supply ();

        void
        SimSystem_RefrigerationTranscritical_Supply (const SimSystem_RefrigerationTranscritical_Supply_sequence& s);

        // SimSystem_SitePowerDemand_ElectricityConsuming
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_SitePowerDemand_ElectricityConsuming SimSystem_SitePowerDemand_ElectricityConsuming_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_SitePowerDemand_ElectricityConsuming_type > SimSystem_SitePowerDemand_ElectricityConsuming_sequence;
        typedef SimSystem_SitePowerDemand_ElectricityConsuming_sequence::iterator SimSystem_SitePowerDemand_ElectricityConsuming_iterator;
        typedef SimSystem_SitePowerDemand_ElectricityConsuming_sequence::const_iterator SimSystem_SitePowerDemand_ElectricityConsuming_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_SitePowerDemand_ElectricityConsuming_type, char > SimSystem_SitePowerDemand_ElectricityConsuming_traits;

        const SimSystem_SitePowerDemand_ElectricityConsuming_sequence&
        SimSystem_SitePowerDemand_ElectricityConsuming () const;

        SimSystem_SitePowerDemand_ElectricityConsuming_sequence&
        SimSystem_SitePowerDemand_ElectricityConsuming ();

        void
        SimSystem_SitePowerDemand_ElectricityConsuming (const SimSystem_SitePowerDemand_ElectricityConsuming_sequence& s);

        // SimSystem_SitePowerDemand_FuelConsuming
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_SitePowerDemand_FuelConsuming SimSystem_SitePowerDemand_FuelConsuming_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_SitePowerDemand_FuelConsuming_type > SimSystem_SitePowerDemand_FuelConsuming_sequence;
        typedef SimSystem_SitePowerDemand_FuelConsuming_sequence::iterator SimSystem_SitePowerDemand_FuelConsuming_iterator;
        typedef SimSystem_SitePowerDemand_FuelConsuming_sequence::const_iterator SimSystem_SitePowerDemand_FuelConsuming_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_SitePowerDemand_FuelConsuming_type, char > SimSystem_SitePowerDemand_FuelConsuming_traits;

        const SimSystem_SitePowerDemand_FuelConsuming_sequence&
        SimSystem_SitePowerDemand_FuelConsuming () const;

        SimSystem_SitePowerDemand_FuelConsuming_sequence&
        SimSystem_SitePowerDemand_FuelConsuming ();

        void
        SimSystem_SitePowerDemand_FuelConsuming (const SimSystem_SitePowerDemand_FuelConsuming_sequence& s);

        // SimSystem_SitePowerDemand_WaterConsuming
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_SitePowerDemand_WaterConsuming SimSystem_SitePowerDemand_WaterConsuming_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_SitePowerDemand_WaterConsuming_type > SimSystem_SitePowerDemand_WaterConsuming_sequence;
        typedef SimSystem_SitePowerDemand_WaterConsuming_sequence::iterator SimSystem_SitePowerDemand_WaterConsuming_iterator;
        typedef SimSystem_SitePowerDemand_WaterConsuming_sequence::const_iterator SimSystem_SitePowerDemand_WaterConsuming_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_SitePowerDemand_WaterConsuming_type, char > SimSystem_SitePowerDemand_WaterConsuming_traits;

        const SimSystem_SitePowerDemand_WaterConsuming_sequence&
        SimSystem_SitePowerDemand_WaterConsuming () const;

        SimSystem_SitePowerDemand_WaterConsuming_sequence&
        SimSystem_SitePowerDemand_WaterConsuming ();

        void
        SimSystem_SitePowerDemand_WaterConsuming (const SimSystem_SitePowerDemand_WaterConsuming_sequence& s);

        // SimSystem_SitePowerGeneration_Other
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_SitePowerGeneration_Other SimSystem_SitePowerGeneration_Other_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_SitePowerGeneration_Other_type > SimSystem_SitePowerGeneration_Other_sequence;
        typedef SimSystem_SitePowerGeneration_Other_sequence::iterator SimSystem_SitePowerGeneration_Other_iterator;
        typedef SimSystem_SitePowerGeneration_Other_sequence::const_iterator SimSystem_SitePowerGeneration_Other_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_SitePowerGeneration_Other_type, char > SimSystem_SitePowerGeneration_Other_traits;

        const SimSystem_SitePowerGeneration_Other_sequence&
        SimSystem_SitePowerGeneration_Other () const;

        SimSystem_SitePowerGeneration_Other_sequence&
        SimSystem_SitePowerGeneration_Other ();

        void
        SimSystem_SitePowerGeneration_Other (const SimSystem_SitePowerGeneration_Other_sequence& s);

        // SimSystem_SitePowerGeneration_Photovoltaic
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_SitePowerGeneration_Photovoltaic SimSystem_SitePowerGeneration_Photovoltaic_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_SitePowerGeneration_Photovoltaic_type > SimSystem_SitePowerGeneration_Photovoltaic_sequence;
        typedef SimSystem_SitePowerGeneration_Photovoltaic_sequence::iterator SimSystem_SitePowerGeneration_Photovoltaic_iterator;
        typedef SimSystem_SitePowerGeneration_Photovoltaic_sequence::const_iterator SimSystem_SitePowerGeneration_Photovoltaic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_SitePowerGeneration_Photovoltaic_type, char > SimSystem_SitePowerGeneration_Photovoltaic_traits;

        const SimSystem_SitePowerGeneration_Photovoltaic_sequence&
        SimSystem_SitePowerGeneration_Photovoltaic () const;

        SimSystem_SitePowerGeneration_Photovoltaic_sequence&
        SimSystem_SitePowerGeneration_Photovoltaic ();

        void
        SimSystem_SitePowerGeneration_Photovoltaic (const SimSystem_SitePowerGeneration_Photovoltaic_sequence& s);

        // SimSystem_SitePowerGeneration_WindTurbine
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_SitePowerGeneration_WindTurbine SimSystem_SitePowerGeneration_WindTurbine_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_SitePowerGeneration_WindTurbine_type > SimSystem_SitePowerGeneration_WindTurbine_sequence;
        typedef SimSystem_SitePowerGeneration_WindTurbine_sequence::iterator SimSystem_SitePowerGeneration_WindTurbine_iterator;
        typedef SimSystem_SitePowerGeneration_WindTurbine_sequence::const_iterator SimSystem_SitePowerGeneration_WindTurbine_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_SitePowerGeneration_WindTurbine_type, char > SimSystem_SitePowerGeneration_WindTurbine_traits;

        const SimSystem_SitePowerGeneration_WindTurbine_sequence&
        SimSystem_SitePowerGeneration_WindTurbine () const;

        SimSystem_SitePowerGeneration_WindTurbine_sequence&
        SimSystem_SitePowerGeneration_WindTurbine ();

        void
        SimSystem_SitePowerGeneration_WindTurbine (const SimSystem_SitePowerGeneration_WindTurbine_sequence& s);

        // SimSystem_Transport_Elevator
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Transport_Elevator SimSystem_Transport_Elevator_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Transport_Elevator_type > SimSystem_Transport_Elevator_sequence;
        typedef SimSystem_Transport_Elevator_sequence::iterator SimSystem_Transport_Elevator_iterator;
        typedef SimSystem_Transport_Elevator_sequence::const_iterator SimSystem_Transport_Elevator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Transport_Elevator_type, char > SimSystem_Transport_Elevator_traits;

        const SimSystem_Transport_Elevator_sequence&
        SimSystem_Transport_Elevator () const;

        SimSystem_Transport_Elevator_sequence&
        SimSystem_Transport_Elevator ();

        void
        SimSystem_Transport_Elevator (const SimSystem_Transport_Elevator_sequence& s);

        // SimSystem_Transport_Escalator
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Transport_Escalator SimSystem_Transport_Escalator_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Transport_Escalator_type > SimSystem_Transport_Escalator_sequence;
        typedef SimSystem_Transport_Escalator_sequence::iterator SimSystem_Transport_Escalator_iterator;
        typedef SimSystem_Transport_Escalator_sequence::const_iterator SimSystem_Transport_Escalator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Transport_Escalator_type, char > SimSystem_Transport_Escalator_traits;

        const SimSystem_Transport_Escalator_sequence&
        SimSystem_Transport_Escalator () const;

        SimSystem_Transport_Escalator_sequence&
        SimSystem_Transport_Escalator ();

        void
        SimSystem_Transport_Escalator (const SimSystem_Transport_Escalator_sequence& s);

        // SimSystem_Transport_MovingWalkway
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Transport_MovingWalkway SimSystem_Transport_MovingWalkway_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Transport_MovingWalkway_type > SimSystem_Transport_MovingWalkway_sequence;
        typedef SimSystem_Transport_MovingWalkway_sequence::iterator SimSystem_Transport_MovingWalkway_iterator;
        typedef SimSystem_Transport_MovingWalkway_sequence::const_iterator SimSystem_Transport_MovingWalkway_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Transport_MovingWalkway_type, char > SimSystem_Transport_MovingWalkway_traits;

        const SimSystem_Transport_MovingWalkway_sequence&
        SimSystem_Transport_MovingWalkway () const;

        SimSystem_Transport_MovingWalkway_sequence&
        SimSystem_Transport_MovingWalkway ();

        void
        SimSystem_Transport_MovingWalkway (const SimSystem_Transport_MovingWalkway_sequence& s);

        // SimSystem_Transport_SystemsContainer
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_Transport_SystemsContainer SimSystem_Transport_SystemsContainer_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_Transport_SystemsContainer_type > SimSystem_Transport_SystemsContainer_sequence;
        typedef SimSystem_Transport_SystemsContainer_sequence::iterator SimSystem_Transport_SystemsContainer_iterator;
        typedef SimSystem_Transport_SystemsContainer_sequence::const_iterator SimSystem_Transport_SystemsContainer_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_Transport_SystemsContainer_type, char > SimSystem_Transport_SystemsContainer_traits;

        const SimSystem_Transport_SystemsContainer_sequence&
        SimSystem_Transport_SystemsContainer () const;

        SimSystem_Transport_SystemsContainer_sequence&
        SimSystem_Transport_SystemsContainer ();

        void
        SimSystem_Transport_SystemsContainer (const SimSystem_Transport_SystemsContainer_sequence& s);

        // SimSystem_VariableRefrigerantFlow_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_VariableRefrigerantFlow_Control SimSystem_VariableRefrigerantFlow_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_VariableRefrigerantFlow_Control_type > SimSystem_VariableRefrigerantFlow_Control_sequence;
        typedef SimSystem_VariableRefrigerantFlow_Control_sequence::iterator SimSystem_VariableRefrigerantFlow_Control_iterator;
        typedef SimSystem_VariableRefrigerantFlow_Control_sequence::const_iterator SimSystem_VariableRefrigerantFlow_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_VariableRefrigerantFlow_Control_type, char > SimSystem_VariableRefrigerantFlow_Control_traits;

        const SimSystem_VariableRefrigerantFlow_Control_sequence&
        SimSystem_VariableRefrigerantFlow_Control () const;

        SimSystem_VariableRefrigerantFlow_Control_sequence&
        SimSystem_VariableRefrigerantFlow_Control ();

        void
        SimSystem_VariableRefrigerantFlow_Control (const SimSystem_VariableRefrigerantFlow_Control_sequence& s);

        // SimSystem_VariableRefrigerantFlow_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_VariableRefrigerantFlow_Demand SimSystem_VariableRefrigerantFlow_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_VariableRefrigerantFlow_Demand_type > SimSystem_VariableRefrigerantFlow_Demand_sequence;
        typedef SimSystem_VariableRefrigerantFlow_Demand_sequence::iterator SimSystem_VariableRefrigerantFlow_Demand_iterator;
        typedef SimSystem_VariableRefrigerantFlow_Demand_sequence::const_iterator SimSystem_VariableRefrigerantFlow_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_VariableRefrigerantFlow_Demand_type, char > SimSystem_VariableRefrigerantFlow_Demand_traits;

        const SimSystem_VariableRefrigerantFlow_Demand_sequence&
        SimSystem_VariableRefrigerantFlow_Demand () const;

        SimSystem_VariableRefrigerantFlow_Demand_sequence&
        SimSystem_VariableRefrigerantFlow_Demand ();

        void
        SimSystem_VariableRefrigerantFlow_Demand (const SimSystem_VariableRefrigerantFlow_Demand_sequence& s);

        // SimSystem_VariableRefrigerantFlow_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_VariableRefrigerantFlow_FullSystem SimSystem_VariableRefrigerantFlow_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_VariableRefrigerantFlow_FullSystem_type > SimSystem_VariableRefrigerantFlow_FullSystem_sequence;
        typedef SimSystem_VariableRefrigerantFlow_FullSystem_sequence::iterator SimSystem_VariableRefrigerantFlow_FullSystem_iterator;
        typedef SimSystem_VariableRefrigerantFlow_FullSystem_sequence::const_iterator SimSystem_VariableRefrigerantFlow_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_VariableRefrigerantFlow_FullSystem_type, char > SimSystem_VariableRefrigerantFlow_FullSystem_traits;

        const SimSystem_VariableRefrigerantFlow_FullSystem_sequence&
        SimSystem_VariableRefrigerantFlow_FullSystem () const;

        SimSystem_VariableRefrigerantFlow_FullSystem_sequence&
        SimSystem_VariableRefrigerantFlow_FullSystem ();

        void
        SimSystem_VariableRefrigerantFlow_FullSystem (const SimSystem_VariableRefrigerantFlow_FullSystem_sequence& s);

        // SimSystem_VariableRefrigerantFlow_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_VariableRefrigerantFlow_Supply SimSystem_VariableRefrigerantFlow_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_VariableRefrigerantFlow_Supply_type > SimSystem_VariableRefrigerantFlow_Supply_sequence;
        typedef SimSystem_VariableRefrigerantFlow_Supply_sequence::iterator SimSystem_VariableRefrigerantFlow_Supply_iterator;
        typedef SimSystem_VariableRefrigerantFlow_Supply_sequence::const_iterator SimSystem_VariableRefrigerantFlow_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_VariableRefrigerantFlow_Supply_type, char > SimSystem_VariableRefrigerantFlow_Supply_traits;

        const SimSystem_VariableRefrigerantFlow_Supply_sequence&
        SimSystem_VariableRefrigerantFlow_Supply () const;

        SimSystem_VariableRefrigerantFlow_Supply_sequence&
        SimSystem_VariableRefrigerantFlow_Supply ();

        void
        SimSystem_VariableRefrigerantFlow_Supply (const SimSystem_VariableRefrigerantFlow_Supply_sequence& s);

        // SimSystem_ZoneHvacGroup_Control
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_Control SimSystem_ZoneHvacGroup_Control_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_Control_type > SimSystem_ZoneHvacGroup_Control_sequence;
        typedef SimSystem_ZoneHvacGroup_Control_sequence::iterator SimSystem_ZoneHvacGroup_Control_iterator;
        typedef SimSystem_ZoneHvacGroup_Control_sequence::const_iterator SimSystem_ZoneHvacGroup_Control_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_Control_type, char > SimSystem_ZoneHvacGroup_Control_traits;

        const SimSystem_ZoneHvacGroup_Control_sequence&
        SimSystem_ZoneHvacGroup_Control () const;

        SimSystem_ZoneHvacGroup_Control_sequence&
        SimSystem_ZoneHvacGroup_Control ();

        void
        SimSystem_ZoneHvacGroup_Control (const SimSystem_ZoneHvacGroup_Control_sequence& s);

        // SimSystem_ZoneHvacGroup_ControlDemand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_ControlDemand SimSystem_ZoneHvacGroup_ControlDemand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_ControlDemand_type > SimSystem_ZoneHvacGroup_ControlDemand_sequence;
        typedef SimSystem_ZoneHvacGroup_ControlDemand_sequence::iterator SimSystem_ZoneHvacGroup_ControlDemand_iterator;
        typedef SimSystem_ZoneHvacGroup_ControlDemand_sequence::const_iterator SimSystem_ZoneHvacGroup_ControlDemand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_ControlDemand_type, char > SimSystem_ZoneHvacGroup_ControlDemand_traits;

        const SimSystem_ZoneHvacGroup_ControlDemand_sequence&
        SimSystem_ZoneHvacGroup_ControlDemand () const;

        SimSystem_ZoneHvacGroup_ControlDemand_sequence&
        SimSystem_ZoneHvacGroup_ControlDemand ();

        void
        SimSystem_ZoneHvacGroup_ControlDemand (const SimSystem_ZoneHvacGroup_ControlDemand_sequence& s);

        // SimSystem_ZoneHvacGroup_ControlSupply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_ControlSupply SimSystem_ZoneHvacGroup_ControlSupply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_ControlSupply_type > SimSystem_ZoneHvacGroup_ControlSupply_sequence;
        typedef SimSystem_ZoneHvacGroup_ControlSupply_sequence::iterator SimSystem_ZoneHvacGroup_ControlSupply_iterator;
        typedef SimSystem_ZoneHvacGroup_ControlSupply_sequence::const_iterator SimSystem_ZoneHvacGroup_ControlSupply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_ControlSupply_type, char > SimSystem_ZoneHvacGroup_ControlSupply_traits;

        const SimSystem_ZoneHvacGroup_ControlSupply_sequence&
        SimSystem_ZoneHvacGroup_ControlSupply () const;

        SimSystem_ZoneHvacGroup_ControlSupply_sequence&
        SimSystem_ZoneHvacGroup_ControlSupply ();

        void
        SimSystem_ZoneHvacGroup_ControlSupply (const SimSystem_ZoneHvacGroup_ControlSupply_sequence& s);

        // SimSystem_ZoneHvacGroup_Demand
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_Demand SimSystem_ZoneHvacGroup_Demand_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_Demand_type > SimSystem_ZoneHvacGroup_Demand_sequence;
        typedef SimSystem_ZoneHvacGroup_Demand_sequence::iterator SimSystem_ZoneHvacGroup_Demand_iterator;
        typedef SimSystem_ZoneHvacGroup_Demand_sequence::const_iterator SimSystem_ZoneHvacGroup_Demand_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_Demand_type, char > SimSystem_ZoneHvacGroup_Demand_traits;

        const SimSystem_ZoneHvacGroup_Demand_sequence&
        SimSystem_ZoneHvacGroup_Demand () const;

        SimSystem_ZoneHvacGroup_Demand_sequence&
        SimSystem_ZoneHvacGroup_Demand ();

        void
        SimSystem_ZoneHvacGroup_Demand (const SimSystem_ZoneHvacGroup_Demand_sequence& s);

        // SimSystem_ZoneHvacGroup_DemandSideSupplyPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_DemandSideSupplyPath SimSystem_ZoneHvacGroup_DemandSideSupplyPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_DemandSideSupplyPath_type > SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence;
        typedef SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence::iterator SimSystem_ZoneHvacGroup_DemandSideSupplyPath_iterator;
        typedef SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence::const_iterator SimSystem_ZoneHvacGroup_DemandSideSupplyPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_DemandSideSupplyPath_type, char > SimSystem_ZoneHvacGroup_DemandSideSupplyPath_traits;

        const SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence&
        SimSystem_ZoneHvacGroup_DemandSideSupplyPath () const;

        SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence&
        SimSystem_ZoneHvacGroup_DemandSideSupplyPath ();

        void
        SimSystem_ZoneHvacGroup_DemandSideSupplyPath (const SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence& s);

        // SimSystem_ZoneHvacGroup_DemandSideZoneHvac
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_DemandSideZoneHvac SimSystem_ZoneHvacGroup_DemandSideZoneHvac_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_DemandSideZoneHvac_type > SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence;
        typedef SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence::iterator SimSystem_ZoneHvacGroup_DemandSideZoneHvac_iterator;
        typedef SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence::const_iterator SimSystem_ZoneHvacGroup_DemandSideZoneHvac_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_DemandSideZoneHvac_type, char > SimSystem_ZoneHvacGroup_DemandSideZoneHvac_traits;

        const SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence&
        SimSystem_ZoneHvacGroup_DemandSideZoneHvac () const;

        SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence&
        SimSystem_ZoneHvacGroup_DemandSideZoneHvac ();

        void
        SimSystem_ZoneHvacGroup_DemandSideZoneHvac (const SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence& s);

        // SimSystem_ZoneHvacGroup_FullSystem
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_FullSystem SimSystem_ZoneHvacGroup_FullSystem_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_FullSystem_type > SimSystem_ZoneHvacGroup_FullSystem_sequence;
        typedef SimSystem_ZoneHvacGroup_FullSystem_sequence::iterator SimSystem_ZoneHvacGroup_FullSystem_iterator;
        typedef SimSystem_ZoneHvacGroup_FullSystem_sequence::const_iterator SimSystem_ZoneHvacGroup_FullSystem_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_FullSystem_type, char > SimSystem_ZoneHvacGroup_FullSystem_traits;

        const SimSystem_ZoneHvacGroup_FullSystem_sequence&
        SimSystem_ZoneHvacGroup_FullSystem () const;

        SimSystem_ZoneHvacGroup_FullSystem_sequence&
        SimSystem_ZoneHvacGroup_FullSystem ();

        void
        SimSystem_ZoneHvacGroup_FullSystem (const SimSystem_ZoneHvacGroup_FullSystem_sequence& s);

        // SimSystem_ZoneHvacGroup_Supply
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_Supply SimSystem_ZoneHvacGroup_Supply_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_Supply_type > SimSystem_ZoneHvacGroup_Supply_sequence;
        typedef SimSystem_ZoneHvacGroup_Supply_sequence::iterator SimSystem_ZoneHvacGroup_Supply_iterator;
        typedef SimSystem_ZoneHvacGroup_Supply_sequence::const_iterator SimSystem_ZoneHvacGroup_Supply_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_Supply_type, char > SimSystem_ZoneHvacGroup_Supply_traits;

        const SimSystem_ZoneHvacGroup_Supply_sequence&
        SimSystem_ZoneHvacGroup_Supply () const;

        SimSystem_ZoneHvacGroup_Supply_sequence&
        SimSystem_ZoneHvacGroup_Supply ();

        void
        SimSystem_ZoneHvacGroup_Supply (const SimSystem_ZoneHvacGroup_Supply_sequence& s);

        // SimSystem_ZoneHvacGroup_SupplySideReturnPath
        //
        typedef ::namespaces::Sim::BuildingModel::SimSystem_ZoneHvacGroup_SupplySideReturnPath SimSystem_ZoneHvacGroup_SupplySideReturnPath_type;
        typedef ::xsd::cxx::tree::sequence< SimSystem_ZoneHvacGroup_SupplySideReturnPath_type > SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence;
        typedef SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence::iterator SimSystem_ZoneHvacGroup_SupplySideReturnPath_iterator;
        typedef SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence::const_iterator SimSystem_ZoneHvacGroup_SupplySideReturnPath_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimSystem_ZoneHvacGroup_SupplySideReturnPath_type, char > SimSystem_ZoneHvacGroup_SupplySideReturnPath_traits;

        const SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence&
        SimSystem_ZoneHvacGroup_SupplySideReturnPath () const;

        SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence&
        SimSystem_ZoneHvacGroup_SupplySideReturnPath ();

        void
        SimSystem_ZoneHvacGroup_SupplySideReturnPath (const SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence& s);

        // SimTemplateConstructions_Constructions_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateConstructions_Constructions_Default SimTemplateConstructions_Constructions_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateConstructions_Constructions_Default_type > SimTemplateConstructions_Constructions_Default_sequence;
        typedef SimTemplateConstructions_Constructions_Default_sequence::iterator SimTemplateConstructions_Constructions_Default_iterator;
        typedef SimTemplateConstructions_Constructions_Default_sequence::const_iterator SimTemplateConstructions_Constructions_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateConstructions_Constructions_Default_type, char > SimTemplateConstructions_Constructions_Default_traits;

        const SimTemplateConstructions_Constructions_Default_sequence&
        SimTemplateConstructions_Constructions_Default () const;

        SimTemplateConstructions_Constructions_Default_sequence&
        SimTemplateConstructions_Constructions_Default ();

        void
        SimTemplateConstructions_Constructions_Default (const SimTemplateConstructions_Constructions_Default_sequence& s);

        // SimTemplateDaylighting_Daylighting_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateDaylighting_Daylighting_Default SimTemplateDaylighting_Daylighting_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateDaylighting_Daylighting_Default_type > SimTemplateDaylighting_Daylighting_Default_sequence;
        typedef SimTemplateDaylighting_Daylighting_Default_sequence::iterator SimTemplateDaylighting_Daylighting_Default_iterator;
        typedef SimTemplateDaylighting_Daylighting_Default_sequence::const_iterator SimTemplateDaylighting_Daylighting_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateDaylighting_Daylighting_Default_type, char > SimTemplateDaylighting_Daylighting_Default_traits;

        const SimTemplateDaylighting_Daylighting_Default_sequence&
        SimTemplateDaylighting_Daylighting_Default () const;

        SimTemplateDaylighting_Daylighting_Default_sequence&
        SimTemplateDaylighting_Daylighting_Default ();

        void
        SimTemplateDaylighting_Daylighting_Default (const SimTemplateDaylighting_Daylighting_Default_sequence& s);

        // SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_type > SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence;
        typedef SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence::iterator SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_iterator;
        typedef SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence::const_iterator SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_type, char > SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_traits;

        const SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence&
        SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default () const;

        SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence&
        SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default ();

        void
        SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default (const SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence& s);

        // SimTemplateLocation_Location_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateLocation_Location_Default SimTemplateLocation_Location_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateLocation_Location_Default_type > SimTemplateLocation_Location_Default_sequence;
        typedef SimTemplateLocation_Location_Default_sequence::iterator SimTemplateLocation_Location_Default_iterator;
        typedef SimTemplateLocation_Location_Default_sequence::const_iterator SimTemplateLocation_Location_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateLocation_Location_Default_type, char > SimTemplateLocation_Location_Default_traits;

        const SimTemplateLocation_Location_Default_sequence&
        SimTemplateLocation_Location_Default () const;

        SimTemplateLocation_Location_Default_sequence&
        SimTemplateLocation_Location_Default ();

        void
        SimTemplateLocation_Location_Default (const SimTemplateLocation_Location_Default_sequence& s);

        // SimTemplateNaturalVentilation_NaturalVentilation_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateNaturalVentilation_NaturalVentilation_Default SimTemplateNaturalVentilation_NaturalVentilation_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateNaturalVentilation_NaturalVentilation_Default_type > SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence;
        typedef SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence::iterator SimTemplateNaturalVentilation_NaturalVentilation_Default_iterator;
        typedef SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence::const_iterator SimTemplateNaturalVentilation_NaturalVentilation_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateNaturalVentilation_NaturalVentilation_Default_type, char > SimTemplateNaturalVentilation_NaturalVentilation_Default_traits;

        const SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence&
        SimTemplateNaturalVentilation_NaturalVentilation_Default () const;

        SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence&
        SimTemplateNaturalVentilation_NaturalVentilation_Default ();

        void
        SimTemplateNaturalVentilation_NaturalVentilation_Default (const SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence& s);

        // SimTemplateOutputFormatSet_OutputFormatSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateOutputFormatSet_OutputFormatSet_Default SimTemplateOutputFormatSet_OutputFormatSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateOutputFormatSet_OutputFormatSet_Default_type > SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence;
        typedef SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence::iterator SimTemplateOutputFormatSet_OutputFormatSet_Default_iterator;
        typedef SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence::const_iterator SimTemplateOutputFormatSet_OutputFormatSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateOutputFormatSet_OutputFormatSet_Default_type, char > SimTemplateOutputFormatSet_OutputFormatSet_Default_traits;

        const SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence&
        SimTemplateOutputFormatSet_OutputFormatSet_Default () const;

        SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence&
        SimTemplateOutputFormatSet_OutputFormatSet_Default ();

        void
        SimTemplateOutputFormatSet_OutputFormatSet_Default (const SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence& s);

        // SimTemplateOutputRequestSet_OutputRequestSet_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateOutputRequestSet_OutputRequestSet_Default SimTemplateOutputRequestSet_OutputRequestSet_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateOutputRequestSet_OutputRequestSet_Default_type > SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence;
        typedef SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence::iterator SimTemplateOutputRequestSet_OutputRequestSet_Default_iterator;
        typedef SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence::const_iterator SimTemplateOutputRequestSet_OutputRequestSet_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateOutputRequestSet_OutputRequestSet_Default_type, char > SimTemplateOutputRequestSet_OutputRequestSet_Default_traits;

        const SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence&
        SimTemplateOutputRequestSet_OutputRequestSet_Default () const;

        SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence&
        SimTemplateOutputRequestSet_OutputRequestSet_Default ();

        void
        SimTemplateOutputRequestSet_OutputRequestSet_Default (const SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence& s);

        // SimTemplateSimulationParameters_SimulationParameters_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateSimulationParameters_SimulationParameters_Default SimTemplateSimulationParameters_SimulationParameters_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateSimulationParameters_SimulationParameters_Default_type > SimTemplateSimulationParameters_SimulationParameters_Default_sequence;
        typedef SimTemplateSimulationParameters_SimulationParameters_Default_sequence::iterator SimTemplateSimulationParameters_SimulationParameters_Default_iterator;
        typedef SimTemplateSimulationParameters_SimulationParameters_Default_sequence::const_iterator SimTemplateSimulationParameters_SimulationParameters_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateSimulationParameters_SimulationParameters_Default_type, char > SimTemplateSimulationParameters_SimulationParameters_Default_traits;

        const SimTemplateSimulationParameters_SimulationParameters_Default_sequence&
        SimTemplateSimulationParameters_SimulationParameters_Default () const;

        SimTemplateSimulationParameters_SimulationParameters_Default_sequence&
        SimTemplateSimulationParameters_SimulationParameters_Default ();

        void
        SimTemplateSimulationParameters_SimulationParameters_Default (const SimTemplateSimulationParameters_SimulationParameters_Default_sequence& s);

        // SimTemplateZoneConditions_ZoneConditions_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateZoneConditions_ZoneConditions_Default SimTemplateZoneConditions_ZoneConditions_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateZoneConditions_ZoneConditions_Default_type > SimTemplateZoneConditions_ZoneConditions_Default_sequence;
        typedef SimTemplateZoneConditions_ZoneConditions_Default_sequence::iterator SimTemplateZoneConditions_ZoneConditions_Default_iterator;
        typedef SimTemplateZoneConditions_ZoneConditions_Default_sequence::const_iterator SimTemplateZoneConditions_ZoneConditions_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateZoneConditions_ZoneConditions_Default_type, char > SimTemplateZoneConditions_ZoneConditions_Default_traits;

        const SimTemplateZoneConditions_ZoneConditions_Default_sequence&
        SimTemplateZoneConditions_ZoneConditions_Default () const;

        SimTemplateZoneConditions_ZoneConditions_Default_sequence&
        SimTemplateZoneConditions_ZoneConditions_Default ();

        void
        SimTemplateZoneConditions_ZoneConditions_Default (const SimTemplateZoneConditions_ZoneConditions_Default_sequence& s);

        // SimTemplateZoneLoads_ZoneLoads_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTemplateZoneLoads_ZoneLoads_Default SimTemplateZoneLoads_ZoneLoads_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTemplateZoneLoads_ZoneLoads_Default_type > SimTemplateZoneLoads_ZoneLoads_Default_sequence;
        typedef SimTemplateZoneLoads_ZoneLoads_Default_sequence::iterator SimTemplateZoneLoads_ZoneLoads_Default_iterator;
        typedef SimTemplateZoneLoads_ZoneLoads_Default_sequence::const_iterator SimTemplateZoneLoads_ZoneLoads_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTemplateZoneLoads_ZoneLoads_Default_type, char > SimTemplateZoneLoads_ZoneLoads_Default_traits;

        const SimTemplateZoneLoads_ZoneLoads_Default_sequence&
        SimTemplateZoneLoads_ZoneLoads_Default () const;

        SimTemplateZoneLoads_ZoneLoads_Default_sequence&
        SimTemplateZoneLoads_ZoneLoads_Default ();

        void
        SimTemplateZoneLoads_ZoneLoads_Default (const SimTemplateZoneLoads_ZoneLoads_Default_sequence& s);

        // SimTimeSeriesSchedule_Calendar_Configuration
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Calendar_Configuration SimTimeSeriesSchedule_Calendar_Configuration_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Calendar_Configuration_type > SimTimeSeriesSchedule_Calendar_Configuration_sequence;
        typedef SimTimeSeriesSchedule_Calendar_Configuration_sequence::iterator SimTimeSeriesSchedule_Calendar_Configuration_iterator;
        typedef SimTimeSeriesSchedule_Calendar_Configuration_sequence::const_iterator SimTimeSeriesSchedule_Calendar_Configuration_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Calendar_Configuration_type, char > SimTimeSeriesSchedule_Calendar_Configuration_traits;

        const SimTimeSeriesSchedule_Calendar_Configuration_sequence&
        SimTimeSeriesSchedule_Calendar_Configuration () const;

        SimTimeSeriesSchedule_Calendar_Configuration_sequence&
        SimTimeSeriesSchedule_Calendar_Configuration ();

        void
        SimTimeSeriesSchedule_Calendar_Configuration (const SimTimeSeriesSchedule_Calendar_Configuration_sequence& s);

        // SimTimeSeriesSchedule_Calendar_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Calendar_Default SimTimeSeriesSchedule_Calendar_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Calendar_Default_type > SimTimeSeriesSchedule_Calendar_Default_sequence;
        typedef SimTimeSeriesSchedule_Calendar_Default_sequence::iterator SimTimeSeriesSchedule_Calendar_Default_iterator;
        typedef SimTimeSeriesSchedule_Calendar_Default_sequence::const_iterator SimTimeSeriesSchedule_Calendar_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Calendar_Default_type, char > SimTimeSeriesSchedule_Calendar_Default_traits;

        const SimTimeSeriesSchedule_Calendar_Default_sequence&
        SimTimeSeriesSchedule_Calendar_Default () const;

        SimTimeSeriesSchedule_Calendar_Default_sequence&
        SimTimeSeriesSchedule_Calendar_Default ();

        void
        SimTimeSeriesSchedule_Calendar_Default (const SimTimeSeriesSchedule_Calendar_Default_sequence& s);

        // SimTimeSeriesSchedule_Calendar_SpecialDays
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Calendar_SpecialDays SimTimeSeriesSchedule_Calendar_SpecialDays_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Calendar_SpecialDays_type > SimTimeSeriesSchedule_Calendar_SpecialDays_sequence;
        typedef SimTimeSeriesSchedule_Calendar_SpecialDays_sequence::iterator SimTimeSeriesSchedule_Calendar_SpecialDays_iterator;
        typedef SimTimeSeriesSchedule_Calendar_SpecialDays_sequence::const_iterator SimTimeSeriesSchedule_Calendar_SpecialDays_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Calendar_SpecialDays_type, char > SimTimeSeriesSchedule_Calendar_SpecialDays_traits;

        const SimTimeSeriesSchedule_Calendar_SpecialDays_sequence&
        SimTimeSeriesSchedule_Calendar_SpecialDays () const;

        SimTimeSeriesSchedule_Calendar_SpecialDays_sequence&
        SimTimeSeriesSchedule_Calendar_SpecialDays ();

        void
        SimTimeSeriesSchedule_Calendar_SpecialDays (const SimTimeSeriesSchedule_Calendar_SpecialDays_sequence& s);

        // SimTimeSeriesSchedule_Compact_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Compact_Default SimTimeSeriesSchedule_Compact_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Compact_Default_type > SimTimeSeriesSchedule_Compact_Default_sequence;
        typedef SimTimeSeriesSchedule_Compact_Default_sequence::iterator SimTimeSeriesSchedule_Compact_Default_iterator;
        typedef SimTimeSeriesSchedule_Compact_Default_sequence::const_iterator SimTimeSeriesSchedule_Compact_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Compact_Default_type, char > SimTimeSeriesSchedule_Compact_Default_traits;

        const SimTimeSeriesSchedule_Compact_Default_sequence&
        SimTimeSeriesSchedule_Compact_Default () const;

        SimTimeSeriesSchedule_Compact_Default_sequence&
        SimTimeSeriesSchedule_Compact_Default ();

        void
        SimTimeSeriesSchedule_Compact_Default (const SimTimeSeriesSchedule_Compact_Default_sequence& s);

        // SimTimeSeriesSchedule_Constant_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Constant_Default SimTimeSeriesSchedule_Constant_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Constant_Default_type > SimTimeSeriesSchedule_Constant_Default_sequence;
        typedef SimTimeSeriesSchedule_Constant_Default_sequence::iterator SimTimeSeriesSchedule_Constant_Default_iterator;
        typedef SimTimeSeriesSchedule_Constant_Default_sequence::const_iterator SimTimeSeriesSchedule_Constant_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Constant_Default_type, char > SimTimeSeriesSchedule_Constant_Default_traits;

        const SimTimeSeriesSchedule_Constant_Default_sequence&
        SimTimeSeriesSchedule_Constant_Default () const;

        SimTimeSeriesSchedule_Constant_Default_sequence&
        SimTimeSeriesSchedule_Constant_Default ();

        void
        SimTimeSeriesSchedule_Constant_Default (const SimTimeSeriesSchedule_Constant_Default_sequence& s);

        // SimTimeSeriesSchedule_Day_Hourly
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Day_Hourly SimTimeSeriesSchedule_Day_Hourly_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Day_Hourly_type > SimTimeSeriesSchedule_Day_Hourly_sequence;
        typedef SimTimeSeriesSchedule_Day_Hourly_sequence::iterator SimTimeSeriesSchedule_Day_Hourly_iterator;
        typedef SimTimeSeriesSchedule_Day_Hourly_sequence::const_iterator SimTimeSeriesSchedule_Day_Hourly_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Day_Hourly_type, char > SimTimeSeriesSchedule_Day_Hourly_traits;

        const SimTimeSeriesSchedule_Day_Hourly_sequence&
        SimTimeSeriesSchedule_Day_Hourly () const;

        SimTimeSeriesSchedule_Day_Hourly_sequence&
        SimTimeSeriesSchedule_Day_Hourly ();

        void
        SimTimeSeriesSchedule_Day_Hourly (const SimTimeSeriesSchedule_Day_Hourly_sequence& s);

        // SimTimeSeriesSchedule_Day_Interval
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Day_Interval SimTimeSeriesSchedule_Day_Interval_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Day_Interval_type > SimTimeSeriesSchedule_Day_Interval_sequence;
        typedef SimTimeSeriesSchedule_Day_Interval_sequence::iterator SimTimeSeriesSchedule_Day_Interval_iterator;
        typedef SimTimeSeriesSchedule_Day_Interval_sequence::const_iterator SimTimeSeriesSchedule_Day_Interval_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Day_Interval_type, char > SimTimeSeriesSchedule_Day_Interval_traits;

        const SimTimeSeriesSchedule_Day_Interval_sequence&
        SimTimeSeriesSchedule_Day_Interval () const;

        SimTimeSeriesSchedule_Day_Interval_sequence&
        SimTimeSeriesSchedule_Day_Interval ();

        void
        SimTimeSeriesSchedule_Day_Interval (const SimTimeSeriesSchedule_Day_Interval_sequence& s);

        // SimTimeSeriesSchedule_Day_List
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Day_List SimTimeSeriesSchedule_Day_List_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Day_List_type > SimTimeSeriesSchedule_Day_List_sequence;
        typedef SimTimeSeriesSchedule_Day_List_sequence::iterator SimTimeSeriesSchedule_Day_List_iterator;
        typedef SimTimeSeriesSchedule_Day_List_sequence::const_iterator SimTimeSeriesSchedule_Day_List_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Day_List_type, char > SimTimeSeriesSchedule_Day_List_traits;

        const SimTimeSeriesSchedule_Day_List_sequence&
        SimTimeSeriesSchedule_Day_List () const;

        SimTimeSeriesSchedule_Day_List_sequence&
        SimTimeSeriesSchedule_Day_List ();

        void
        SimTimeSeriesSchedule_Day_List (const SimTimeSeriesSchedule_Day_List_sequence& s);

        // SimTimeSeriesSchedule_File_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_File_Default SimTimeSeriesSchedule_File_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_File_Default_type > SimTimeSeriesSchedule_File_Default_sequence;
        typedef SimTimeSeriesSchedule_File_Default_sequence::iterator SimTimeSeriesSchedule_File_Default_iterator;
        typedef SimTimeSeriesSchedule_File_Default_sequence::const_iterator SimTimeSeriesSchedule_File_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_File_Default_type, char > SimTimeSeriesSchedule_File_Default_traits;

        const SimTimeSeriesSchedule_File_Default_sequence&
        SimTimeSeriesSchedule_File_Default () const;

        SimTimeSeriesSchedule_File_Default_sequence&
        SimTimeSeriesSchedule_File_Default ();

        void
        SimTimeSeriesSchedule_File_Default (const SimTimeSeriesSchedule_File_Default_sequence& s);

        // SimTimeSeriesSchedule_Limits_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Limits_Default SimTimeSeriesSchedule_Limits_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Limits_Default_type > SimTimeSeriesSchedule_Limits_Default_sequence;
        typedef SimTimeSeriesSchedule_Limits_Default_sequence::iterator SimTimeSeriesSchedule_Limits_Default_iterator;
        typedef SimTimeSeriesSchedule_Limits_Default_sequence::const_iterator SimTimeSeriesSchedule_Limits_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Limits_Default_type, char > SimTimeSeriesSchedule_Limits_Default_traits;

        const SimTimeSeriesSchedule_Limits_Default_sequence&
        SimTimeSeriesSchedule_Limits_Default () const;

        SimTimeSeriesSchedule_Limits_Default_sequence&
        SimTimeSeriesSchedule_Limits_Default ();

        void
        SimTimeSeriesSchedule_Limits_Default (const SimTimeSeriesSchedule_Limits_Default_sequence& s);

        // SimTimeSeriesSchedule_TimeSeries_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_TimeSeries_Default SimTimeSeriesSchedule_TimeSeries_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_TimeSeries_Default_type > SimTimeSeriesSchedule_TimeSeries_Default_sequence;
        typedef SimTimeSeriesSchedule_TimeSeries_Default_sequence::iterator SimTimeSeriesSchedule_TimeSeries_Default_iterator;
        typedef SimTimeSeriesSchedule_TimeSeries_Default_sequence::const_iterator SimTimeSeriesSchedule_TimeSeries_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_TimeSeries_Default_type, char > SimTimeSeriesSchedule_TimeSeries_Default_traits;

        const SimTimeSeriesSchedule_TimeSeries_Default_sequence&
        SimTimeSeriesSchedule_TimeSeries_Default () const;

        SimTimeSeriesSchedule_TimeSeries_Default_sequence&
        SimTimeSeriesSchedule_TimeSeries_Default ();

        void
        SimTimeSeriesSchedule_TimeSeries_Default (const SimTimeSeriesSchedule_TimeSeries_Default_sequence& s);

        // SimTimeSeriesSchedule_Week_Compact
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Week_Compact SimTimeSeriesSchedule_Week_Compact_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Week_Compact_type > SimTimeSeriesSchedule_Week_Compact_sequence;
        typedef SimTimeSeriesSchedule_Week_Compact_sequence::iterator SimTimeSeriesSchedule_Week_Compact_iterator;
        typedef SimTimeSeriesSchedule_Week_Compact_sequence::const_iterator SimTimeSeriesSchedule_Week_Compact_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Week_Compact_type, char > SimTimeSeriesSchedule_Week_Compact_traits;

        const SimTimeSeriesSchedule_Week_Compact_sequence&
        SimTimeSeriesSchedule_Week_Compact () const;

        SimTimeSeriesSchedule_Week_Compact_sequence&
        SimTimeSeriesSchedule_Week_Compact ();

        void
        SimTimeSeriesSchedule_Week_Compact (const SimTimeSeriesSchedule_Week_Compact_sequence& s);

        // SimTimeSeriesSchedule_Week_Daily
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Week_Daily SimTimeSeriesSchedule_Week_Daily_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Week_Daily_type > SimTimeSeriesSchedule_Week_Daily_sequence;
        typedef SimTimeSeriesSchedule_Week_Daily_sequence::iterator SimTimeSeriesSchedule_Week_Daily_iterator;
        typedef SimTimeSeriesSchedule_Week_Daily_sequence::const_iterator SimTimeSeriesSchedule_Week_Daily_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Week_Daily_type, char > SimTimeSeriesSchedule_Week_Daily_traits;

        const SimTimeSeriesSchedule_Week_Daily_sequence&
        SimTimeSeriesSchedule_Week_Daily () const;

        SimTimeSeriesSchedule_Week_Daily_sequence&
        SimTimeSeriesSchedule_Week_Daily ();

        void
        SimTimeSeriesSchedule_Week_Daily (const SimTimeSeriesSchedule_Week_Daily_sequence& s);

        // SimTimeSeriesSchedule_Year_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesSchedule_Year_Default SimTimeSeriesSchedule_Year_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesSchedule_Year_Default_type > SimTimeSeriesSchedule_Year_Default_sequence;
        typedef SimTimeSeriesSchedule_Year_Default_sequence::iterator SimTimeSeriesSchedule_Year_Default_iterator;
        typedef SimTimeSeriesSchedule_Year_Default_sequence::const_iterator SimTimeSeriesSchedule_Year_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesSchedule_Year_Default_type, char > SimTimeSeriesSchedule_Year_Default_traits;

        const SimTimeSeriesSchedule_Year_Default_sequence&
        SimTimeSeriesSchedule_Year_Default () const;

        SimTimeSeriesSchedule_Year_Default_sequence&
        SimTimeSeriesSchedule_Year_Default ();

        void
        SimTimeSeriesSchedule_Year_Default (const SimTimeSeriesSchedule_Year_Default_sequence& s);

        // SimTimeSeriesValue_TimeSeries_Irregular
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesValue_TimeSeries_Irregular SimTimeSeriesValue_TimeSeries_Irregular_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesValue_TimeSeries_Irregular_type > SimTimeSeriesValue_TimeSeries_Irregular_sequence;
        typedef SimTimeSeriesValue_TimeSeries_Irregular_sequence::iterator SimTimeSeriesValue_TimeSeries_Irregular_iterator;
        typedef SimTimeSeriesValue_TimeSeries_Irregular_sequence::const_iterator SimTimeSeriesValue_TimeSeries_Irregular_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesValue_TimeSeries_Irregular_type, char > SimTimeSeriesValue_TimeSeries_Irregular_traits;

        const SimTimeSeriesValue_TimeSeries_Irregular_sequence&
        SimTimeSeriesValue_TimeSeries_Irregular () const;

        SimTimeSeriesValue_TimeSeries_Irregular_sequence&
        SimTimeSeriesValue_TimeSeries_Irregular ();

        void
        SimTimeSeriesValue_TimeSeries_Irregular (const SimTimeSeriesValue_TimeSeries_Irregular_sequence& s);

        // SimTimeSeriesValue_TimeSeries_Regular
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimTimeSeriesValue_TimeSeries_Regular SimTimeSeriesValue_TimeSeries_Regular_type;
        typedef ::xsd::cxx::tree::sequence< SimTimeSeriesValue_TimeSeries_Regular_type > SimTimeSeriesValue_TimeSeries_Regular_sequence;
        typedef SimTimeSeriesValue_TimeSeries_Regular_sequence::iterator SimTimeSeriesValue_TimeSeries_Regular_iterator;
        typedef SimTimeSeriesValue_TimeSeries_Regular_sequence::const_iterator SimTimeSeriesValue_TimeSeries_Regular_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTimeSeriesValue_TimeSeries_Regular_type, char > SimTimeSeriesValue_TimeSeries_Regular_traits;

        const SimTimeSeriesValue_TimeSeries_Regular_sequence&
        SimTimeSeriesValue_TimeSeries_Regular () const;

        SimTimeSeriesValue_TimeSeries_Regular_sequence&
        SimTimeSeriesValue_TimeSeries_Regular ();

        void
        SimTimeSeriesValue_TimeSeries_Regular (const SimTimeSeriesValue_TimeSeries_Regular_sequence& s);

        // SimToplogicalRepresentation_TopologicalRepresentation_Default
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimToplogicalRepresentation_TopologicalRepresentation_Default SimToplogicalRepresentation_TopologicalRepresentation_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimToplogicalRepresentation_TopologicalRepresentation_Default_type > SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence;
        typedef SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence::iterator SimToplogicalRepresentation_TopologicalRepresentation_Default_iterator;
        typedef SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence::const_iterator SimToplogicalRepresentation_TopologicalRepresentation_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimToplogicalRepresentation_TopologicalRepresentation_Default_type, char > SimToplogicalRepresentation_TopologicalRepresentation_Default_traits;

        const SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence&
        SimToplogicalRepresentation_TopologicalRepresentation_Default () const;

        SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence&
        SimToplogicalRepresentation_TopologicalRepresentation_Default ();

        void
        SimToplogicalRepresentation_TopologicalRepresentation_Default (const SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence& s);

        // SimTransportSysAssembly_TransportSysAssembly_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimTransportSysAssembly_TransportSysAssembly_Default SimTransportSysAssembly_TransportSysAssembly_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimTransportSysAssembly_TransportSysAssembly_Default_type > SimTransportSysAssembly_TransportSysAssembly_Default_sequence;
        typedef SimTransportSysAssembly_TransportSysAssembly_Default_sequence::iterator SimTransportSysAssembly_TransportSysAssembly_Default_iterator;
        typedef SimTransportSysAssembly_TransportSysAssembly_Default_sequence::const_iterator SimTransportSysAssembly_TransportSysAssembly_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTransportSysAssembly_TransportSysAssembly_Default_type, char > SimTransportSysAssembly_TransportSysAssembly_Default_traits;

        const SimTransportSysAssembly_TransportSysAssembly_Default_sequence&
        SimTransportSysAssembly_TransportSysAssembly_Default () const;

        SimTransportSysAssembly_TransportSysAssembly_Default_sequence&
        SimTransportSysAssembly_TransportSysAssembly_Default ();

        void
        SimTransportSysAssembly_TransportSysAssembly_Default (const SimTransportSysAssembly_TransportSysAssembly_Default_sequence& s);

        // SimTransportSysAssembly_TransportSysAssembly_Elevator
        //
        typedef ::namespaces::Sim::BuildingModel::SimTransportSysAssembly_TransportSysAssembly_Elevator SimTransportSysAssembly_TransportSysAssembly_Elevator_type;
        typedef ::xsd::cxx::tree::sequence< SimTransportSysAssembly_TransportSysAssembly_Elevator_type > SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence;
        typedef SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence::iterator SimTransportSysAssembly_TransportSysAssembly_Elevator_iterator;
        typedef SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence::const_iterator SimTransportSysAssembly_TransportSysAssembly_Elevator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTransportSysAssembly_TransportSysAssembly_Elevator_type, char > SimTransportSysAssembly_TransportSysAssembly_Elevator_traits;

        const SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence&
        SimTransportSysAssembly_TransportSysAssembly_Elevator () const;

        SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence&
        SimTransportSysAssembly_TransportSysAssembly_Elevator ();

        void
        SimTransportSysAssembly_TransportSysAssembly_Elevator (const SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence& s);

        // SimTransportSysAssembly_TransportSysAssembly_Escalator
        //
        typedef ::namespaces::Sim::BuildingModel::SimTransportSysAssembly_TransportSysAssembly_Escalator SimTransportSysAssembly_TransportSysAssembly_Escalator_type;
        typedef ::xsd::cxx::tree::sequence< SimTransportSysAssembly_TransportSysAssembly_Escalator_type > SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence;
        typedef SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence::iterator SimTransportSysAssembly_TransportSysAssembly_Escalator_iterator;
        typedef SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence::const_iterator SimTransportSysAssembly_TransportSysAssembly_Escalator_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTransportSysAssembly_TransportSysAssembly_Escalator_type, char > SimTransportSysAssembly_TransportSysAssembly_Escalator_traits;

        const SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence&
        SimTransportSysAssembly_TransportSysAssembly_Escalator () const;

        SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence&
        SimTransportSysAssembly_TransportSysAssembly_Escalator ();

        void
        SimTransportSysAssembly_TransportSysAssembly_Escalator (const SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence& s);

        // SimTransportSysAssembly_TransportSysAssembly_MovingWalkway
        //
        typedef ::namespaces::Sim::BuildingModel::SimTransportSysAssembly_TransportSysAssembly_MovingWalkway SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_type;
        typedef ::xsd::cxx::tree::sequence< SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_type > SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence;
        typedef SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence::iterator SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_iterator;
        typedef SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence::const_iterator SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_type, char > SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_traits;

        const SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence&
        SimTransportSysAssembly_TransportSysAssembly_MovingWalkway () const;

        SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence&
        SimTransportSysAssembly_TransportSysAssembly_MovingWalkway ();

        void
        SimTransportSysAssembly_TransportSysAssembly_MovingWalkway (const SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence& s);

        // SimValidationResultsAir_AirLoop_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimValidationResultsAir_AirLoop_Default SimValidationResultsAir_AirLoop_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimValidationResultsAir_AirLoop_Default_type > SimValidationResultsAir_AirLoop_Default_sequence;
        typedef SimValidationResultsAir_AirLoop_Default_sequence::iterator SimValidationResultsAir_AirLoop_Default_iterator;
        typedef SimValidationResultsAir_AirLoop_Default_sequence::const_iterator SimValidationResultsAir_AirLoop_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimValidationResultsAir_AirLoop_Default_type, char > SimValidationResultsAir_AirLoop_Default_traits;

        const SimValidationResultsAir_AirLoop_Default_sequence&
        SimValidationResultsAir_AirLoop_Default () const;

        SimValidationResultsAir_AirLoop_Default_sequence&
        SimValidationResultsAir_AirLoop_Default ();

        void
        SimValidationResultsAir_AirLoop_Default (const SimValidationResultsAir_AirLoop_Default_sequence& s);

        // SimValidationResultsWater_WaterLoop_ChilledWater
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimValidationResultsWater_WaterLoop_ChilledWater SimValidationResultsWater_WaterLoop_ChilledWater_type;
        typedef ::xsd::cxx::tree::sequence< SimValidationResultsWater_WaterLoop_ChilledWater_type > SimValidationResultsWater_WaterLoop_ChilledWater_sequence;
        typedef SimValidationResultsWater_WaterLoop_ChilledWater_sequence::iterator SimValidationResultsWater_WaterLoop_ChilledWater_iterator;
        typedef SimValidationResultsWater_WaterLoop_ChilledWater_sequence::const_iterator SimValidationResultsWater_WaterLoop_ChilledWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimValidationResultsWater_WaterLoop_ChilledWater_type, char > SimValidationResultsWater_WaterLoop_ChilledWater_traits;

        const SimValidationResultsWater_WaterLoop_ChilledWater_sequence&
        SimValidationResultsWater_WaterLoop_ChilledWater () const;

        SimValidationResultsWater_WaterLoop_ChilledWater_sequence&
        SimValidationResultsWater_WaterLoop_ChilledWater ();

        void
        SimValidationResultsWater_WaterLoop_ChilledWater (const SimValidationResultsWater_WaterLoop_ChilledWater_sequence& s);

        // SimValidationResultsWater_WaterLoop_Condenser
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimValidationResultsWater_WaterLoop_Condenser SimValidationResultsWater_WaterLoop_Condenser_type;
        typedef ::xsd::cxx::tree::sequence< SimValidationResultsWater_WaterLoop_Condenser_type > SimValidationResultsWater_WaterLoop_Condenser_sequence;
        typedef SimValidationResultsWater_WaterLoop_Condenser_sequence::iterator SimValidationResultsWater_WaterLoop_Condenser_iterator;
        typedef SimValidationResultsWater_WaterLoop_Condenser_sequence::const_iterator SimValidationResultsWater_WaterLoop_Condenser_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimValidationResultsWater_WaterLoop_Condenser_type, char > SimValidationResultsWater_WaterLoop_Condenser_traits;

        const SimValidationResultsWater_WaterLoop_Condenser_sequence&
        SimValidationResultsWater_WaterLoop_Condenser () const;

        SimValidationResultsWater_WaterLoop_Condenser_sequence&
        SimValidationResultsWater_WaterLoop_Condenser ();

        void
        SimValidationResultsWater_WaterLoop_Condenser (const SimValidationResultsWater_WaterLoop_Condenser_sequence& s);

        // SimValidationResultsWater_WaterLoop_HotWater
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimValidationResultsWater_WaterLoop_HotWater SimValidationResultsWater_WaterLoop_HotWater_type;
        typedef ::xsd::cxx::tree::sequence< SimValidationResultsWater_WaterLoop_HotWater_type > SimValidationResultsWater_WaterLoop_HotWater_sequence;
        typedef SimValidationResultsWater_WaterLoop_HotWater_sequence::iterator SimValidationResultsWater_WaterLoop_HotWater_iterator;
        typedef SimValidationResultsWater_WaterLoop_HotWater_sequence::const_iterator SimValidationResultsWater_WaterLoop_HotWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimValidationResultsWater_WaterLoop_HotWater_type, char > SimValidationResultsWater_WaterLoop_HotWater_traits;

        const SimValidationResultsWater_WaterLoop_HotWater_sequence&
        SimValidationResultsWater_WaterLoop_HotWater () const;

        SimValidationResultsWater_WaterLoop_HotWater_sequence&
        SimValidationResultsWater_WaterLoop_HotWater ();

        void
        SimValidationResultsWater_WaterLoop_HotWater (const SimValidationResultsWater_WaterLoop_HotWater_sequence& s);

        // SimValidationResultsWater_WaterLoop_MixedWater
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimValidationResultsWater_WaterLoop_MixedWater SimValidationResultsWater_WaterLoop_MixedWater_type;
        typedef ::xsd::cxx::tree::sequence< SimValidationResultsWater_WaterLoop_MixedWater_type > SimValidationResultsWater_WaterLoop_MixedWater_sequence;
        typedef SimValidationResultsWater_WaterLoop_MixedWater_sequence::iterator SimValidationResultsWater_WaterLoop_MixedWater_iterator;
        typedef SimValidationResultsWater_WaterLoop_MixedWater_sequence::const_iterator SimValidationResultsWater_WaterLoop_MixedWater_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimValidationResultsWater_WaterLoop_MixedWater_type, char > SimValidationResultsWater_WaterLoop_MixedWater_traits;

        const SimValidationResultsWater_WaterLoop_MixedWater_sequence&
        SimValidationResultsWater_WaterLoop_MixedWater () const;

        SimValidationResultsWater_WaterLoop_MixedWater_sequence&
        SimValidationResultsWater_WaterLoop_MixedWater ();

        void
        SimValidationResultsWater_WaterLoop_MixedWater (const SimValidationResultsWater_WaterLoop_MixedWater_sequence& s);

        // SimVentilationAssembly_VentilationAssembly_CoolTower_Shower
        //
        typedef ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly_CoolTower_Shower SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_type;
        typedef ::xsd::cxx::tree::sequence< SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_type > SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence;
        typedef SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence::iterator SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_iterator;
        typedef SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence::const_iterator SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_type, char > SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_traits;

        const SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence&
        SimVentilationAssembly_VentilationAssembly_CoolTower_Shower () const;

        SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence&
        SimVentilationAssembly_VentilationAssembly_CoolTower_Shower ();

        void
        SimVentilationAssembly_VentilationAssembly_CoolTower_Shower (const SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence& s);

        // SimVentilationAssembly_VentilationAssembly_EarthTube
        //
        typedef ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly_EarthTube SimVentilationAssembly_VentilationAssembly_EarthTube_type;
        typedef ::xsd::cxx::tree::sequence< SimVentilationAssembly_VentilationAssembly_EarthTube_type > SimVentilationAssembly_VentilationAssembly_EarthTube_sequence;
        typedef SimVentilationAssembly_VentilationAssembly_EarthTube_sequence::iterator SimVentilationAssembly_VentilationAssembly_EarthTube_iterator;
        typedef SimVentilationAssembly_VentilationAssembly_EarthTube_sequence::const_iterator SimVentilationAssembly_VentilationAssembly_EarthTube_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVentilationAssembly_VentilationAssembly_EarthTube_type, char > SimVentilationAssembly_VentilationAssembly_EarthTube_traits;

        const SimVentilationAssembly_VentilationAssembly_EarthTube_sequence&
        SimVentilationAssembly_VentilationAssembly_EarthTube () const;

        SimVentilationAssembly_VentilationAssembly_EarthTube_sequence&
        SimVentilationAssembly_VentilationAssembly_EarthTube ();

        void
        SimVentilationAssembly_VentilationAssembly_EarthTube (const SimVentilationAssembly_VentilationAssembly_EarthTube_sequence& s);

        // SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity
        //
        typedef ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_type;
        typedef ::xsd::cxx::tree::sequence< SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_type > SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence;
        typedef SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence::iterator SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_iterator;
        typedef SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence::const_iterator SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_type, char > SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_traits;

        const SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence&
        SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity () const;

        SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence&
        SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity ();

        void
        SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity (const SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence& s);

        // SimVentilationAssembly_VentilationAssembly_RefrigerationDoor
        //
        typedef ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly_RefrigerationDoor SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_type;
        typedef ::xsd::cxx::tree::sequence< SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_type > SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence;
        typedef SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence::iterator SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_iterator;
        typedef SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence::const_iterator SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_type, char > SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_traits;

        const SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence&
        SimVentilationAssembly_VentilationAssembly_RefrigerationDoor () const;

        SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence&
        SimVentilationAssembly_VentilationAssembly_RefrigerationDoor ();

        void
        SimVentilationAssembly_VentilationAssembly_RefrigerationDoor (const SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence& s);

        // SimVentilationAssembly_VentilationAssembly_ThermalChimney
        //
        typedef ::namespaces::Sim::BuildingModel::SimVentilationAssembly_VentilationAssembly_ThermalChimney SimVentilationAssembly_VentilationAssembly_ThermalChimney_type;
        typedef ::xsd::cxx::tree::sequence< SimVentilationAssembly_VentilationAssembly_ThermalChimney_type > SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence;
        typedef SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence::iterator SimVentilationAssembly_VentilationAssembly_ThermalChimney_iterator;
        typedef SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence::const_iterator SimVentilationAssembly_VentilationAssembly_ThermalChimney_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVentilationAssembly_VentilationAssembly_ThermalChimney_type, char > SimVentilationAssembly_VentilationAssembly_ThermalChimney_traits;

        const SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence&
        SimVentilationAssembly_VentilationAssembly_ThermalChimney () const;

        SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence&
        SimVentilationAssembly_VentilationAssembly_ThermalChimney ();

        void
        SimVentilationAssembly_VentilationAssembly_ThermalChimney (const SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence& s);

        // SimVertex_Vertex_Point
        //
        typedef ::namespaces::Sim::ResourcesGeometry::SimVertex_Vertex_Point SimVertex_Vertex_Point_type;
        typedef ::xsd::cxx::tree::sequence< SimVertex_Vertex_Point_type > SimVertex_Vertex_Point_sequence;
        typedef SimVertex_Vertex_Point_sequence::iterator SimVertex_Vertex_Point_iterator;
        typedef SimVertex_Vertex_Point_sequence::const_iterator SimVertex_Vertex_Point_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVertex_Vertex_Point_type, char > SimVertex_Vertex_Point_traits;

        const SimVertex_Vertex_Point_sequence&
        SimVertex_Vertex_Point () const;

        SimVertex_Vertex_Point_sequence&
        SimVertex_Vertex_Point ();

        void
        SimVertex_Vertex_Point (const SimVertex_Vertex_Point_sequence& s);

        // SimVirtualElement_Default_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Default_Default SimVirtualElement_Default_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Default_Default_type > SimVirtualElement_Default_Default_sequence;
        typedef SimVirtualElement_Default_Default_sequence::iterator SimVirtualElement_Default_Default_iterator;
        typedef SimVirtualElement_Default_Default_sequence::const_iterator SimVirtualElement_Default_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Default_Default_type, char > SimVirtualElement_Default_Default_traits;

        const SimVirtualElement_Default_Default_sequence&
        SimVirtualElement_Default_Default () const;

        SimVirtualElement_Default_Default_sequence&
        SimVirtualElement_Default_Default ();

        void
        SimVirtualElement_Default_Default (const SimVirtualElement_Default_Default_sequence& s);

        // SimVirtualElement_Slab_Ceiling
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Slab_Ceiling SimVirtualElement_Slab_Ceiling_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Slab_Ceiling_type > SimVirtualElement_Slab_Ceiling_sequence;
        typedef SimVirtualElement_Slab_Ceiling_sequence::iterator SimVirtualElement_Slab_Ceiling_iterator;
        typedef SimVirtualElement_Slab_Ceiling_sequence::const_iterator SimVirtualElement_Slab_Ceiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Slab_Ceiling_type, char > SimVirtualElement_Slab_Ceiling_traits;

        const SimVirtualElement_Slab_Ceiling_sequence&
        SimVirtualElement_Slab_Ceiling () const;

        SimVirtualElement_Slab_Ceiling_sequence&
        SimVirtualElement_Slab_Ceiling ();

        void
        SimVirtualElement_Slab_Ceiling (const SimVirtualElement_Slab_Ceiling_sequence& s);

        // SimVirtualElement_Slab_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Slab_Default SimVirtualElement_Slab_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Slab_Default_type > SimVirtualElement_Slab_Default_sequence;
        typedef SimVirtualElement_Slab_Default_sequence::iterator SimVirtualElement_Slab_Default_iterator;
        typedef SimVirtualElement_Slab_Default_sequence::const_iterator SimVirtualElement_Slab_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Slab_Default_type, char > SimVirtualElement_Slab_Default_traits;

        const SimVirtualElement_Slab_Default_sequence&
        SimVirtualElement_Slab_Default () const;

        SimVirtualElement_Slab_Default_sequence&
        SimVirtualElement_Slab_Default ();

        void
        SimVirtualElement_Slab_Default (const SimVirtualElement_Slab_Default_sequence& s);

        // SimVirtualElement_Slab_Floor
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Slab_Floor SimVirtualElement_Slab_Floor_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Slab_Floor_type > SimVirtualElement_Slab_Floor_sequence;
        typedef SimVirtualElement_Slab_Floor_sequence::iterator SimVirtualElement_Slab_Floor_iterator;
        typedef SimVirtualElement_Slab_Floor_sequence::const_iterator SimVirtualElement_Slab_Floor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Slab_Floor_type, char > SimVirtualElement_Slab_Floor_traits;

        const SimVirtualElement_Slab_Floor_sequence&
        SimVirtualElement_Slab_Floor () const;

        SimVirtualElement_Slab_Floor_sequence&
        SimVirtualElement_Slab_Floor ();

        void
        SimVirtualElement_Slab_Floor (const SimVirtualElement_Slab_Floor_sequence& s);

        // SimVirtualElement_Slab_OpeningFiller
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Slab_OpeningFiller SimVirtualElement_Slab_OpeningFiller_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Slab_OpeningFiller_type > SimVirtualElement_Slab_OpeningFiller_sequence;
        typedef SimVirtualElement_Slab_OpeningFiller_sequence::iterator SimVirtualElement_Slab_OpeningFiller_iterator;
        typedef SimVirtualElement_Slab_OpeningFiller_sequence::const_iterator SimVirtualElement_Slab_OpeningFiller_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Slab_OpeningFiller_type, char > SimVirtualElement_Slab_OpeningFiller_traits;

        const SimVirtualElement_Slab_OpeningFiller_sequence&
        SimVirtualElement_Slab_OpeningFiller () const;

        SimVirtualElement_Slab_OpeningFiller_sequence&
        SimVirtualElement_Slab_OpeningFiller ();

        void
        SimVirtualElement_Slab_OpeningFiller (const SimVirtualElement_Slab_OpeningFiller_sequence& s);

        // SimVirtualElement_Wall_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Wall_Default SimVirtualElement_Wall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Wall_Default_type > SimVirtualElement_Wall_Default_sequence;
        typedef SimVirtualElement_Wall_Default_sequence::iterator SimVirtualElement_Wall_Default_iterator;
        typedef SimVirtualElement_Wall_Default_sequence::const_iterator SimVirtualElement_Wall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Wall_Default_type, char > SimVirtualElement_Wall_Default_traits;

        const SimVirtualElement_Wall_Default_sequence&
        SimVirtualElement_Wall_Default () const;

        SimVirtualElement_Wall_Default_sequence&
        SimVirtualElement_Wall_Default ();

        void
        SimVirtualElement_Wall_Default (const SimVirtualElement_Wall_Default_sequence& s);

        // SimVirtualElement_Wall_OpeningFiller
        //
        typedef ::namespaces::Sim::BuildingModel::SimVirtualElement_Wall_OpeningFiller SimVirtualElement_Wall_OpeningFiller_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualElement_Wall_OpeningFiller_type > SimVirtualElement_Wall_OpeningFiller_sequence;
        typedef SimVirtualElement_Wall_OpeningFiller_sequence::iterator SimVirtualElement_Wall_OpeningFiller_iterator;
        typedef SimVirtualElement_Wall_OpeningFiller_sequence::const_iterator SimVirtualElement_Wall_OpeningFiller_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualElement_Wall_OpeningFiller_type, char > SimVirtualElement_Wall_OpeningFiller_traits;

        const SimVirtualElement_Wall_OpeningFiller_sequence&
        SimVirtualElement_Wall_OpeningFiller () const;

        SimVirtualElement_Wall_OpeningFiller_sequence&
        SimVirtualElement_Wall_OpeningFiller ();

        void
        SimVirtualElement_Wall_OpeningFiller (const SimVirtualElement_Wall_OpeningFiller_sequence& s);

        // SimVirtualGridIntersection_VirtualGridIntersection_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimVirtualGridIntersection_VirtualGridIntersection_Default SimVirtualGridIntersection_VirtualGridIntersection_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimVirtualGridIntersection_VirtualGridIntersection_Default_type > SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence;
        typedef SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence::iterator SimVirtualGridIntersection_VirtualGridIntersection_Default_iterator;
        typedef SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence::const_iterator SimVirtualGridIntersection_VirtualGridIntersection_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimVirtualGridIntersection_VirtualGridIntersection_Default_type, char > SimVirtualGridIntersection_VirtualGridIntersection_Default_traits;

        const SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence&
        SimVirtualGridIntersection_VirtualGridIntersection_Default () const;

        SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence&
        SimVirtualGridIntersection_VirtualGridIntersection_Default ();

        void
        SimVirtualGridIntersection_VirtualGridIntersection_Default (const SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence& s);

        // SimWall_OtherSideCoefficients_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideCoefficients_Default SimWall_OtherSideCoefficients_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideCoefficients_Default_type > SimWall_OtherSideCoefficients_Default_sequence;
        typedef SimWall_OtherSideCoefficients_Default_sequence::iterator SimWall_OtherSideCoefficients_Default_iterator;
        typedef SimWall_OtherSideCoefficients_Default_sequence::const_iterator SimWall_OtherSideCoefficients_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideCoefficients_Default_type, char > SimWall_OtherSideCoefficients_Default_traits;

        const SimWall_OtherSideCoefficients_Default_sequence&
        SimWall_OtherSideCoefficients_Default () const;

        SimWall_OtherSideCoefficients_Default_sequence&
        SimWall_OtherSideCoefficients_Default ();

        void
        SimWall_OtherSideCoefficients_Default (const SimWall_OtherSideCoefficients_Default_sequence& s);

        // SimWall_OtherSideCoefficients_Detailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideCoefficients_Detailed SimWall_OtherSideCoefficients_Detailed_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideCoefficients_Detailed_type > SimWall_OtherSideCoefficients_Detailed_sequence;
        typedef SimWall_OtherSideCoefficients_Detailed_sequence::iterator SimWall_OtherSideCoefficients_Detailed_iterator;
        typedef SimWall_OtherSideCoefficients_Detailed_sequence::const_iterator SimWall_OtherSideCoefficients_Detailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideCoefficients_Detailed_type, char > SimWall_OtherSideCoefficients_Detailed_traits;

        const SimWall_OtherSideCoefficients_Detailed_sequence&
        SimWall_OtherSideCoefficients_Detailed () const;

        SimWall_OtherSideCoefficients_Detailed_sequence&
        SimWall_OtherSideCoefficients_Detailed ();

        void
        SimWall_OtherSideCoefficients_Detailed (const SimWall_OtherSideCoefficients_Detailed_sequence& s);

        // SimWall_OtherSideCoefficients_DetailedFloor
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideCoefficients_DetailedFloor SimWall_OtherSideCoefficients_DetailedFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideCoefficients_DetailedFloor_type > SimWall_OtherSideCoefficients_DetailedFloor_sequence;
        typedef SimWall_OtherSideCoefficients_DetailedFloor_sequence::iterator SimWall_OtherSideCoefficients_DetailedFloor_iterator;
        typedef SimWall_OtherSideCoefficients_DetailedFloor_sequence::const_iterator SimWall_OtherSideCoefficients_DetailedFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideCoefficients_DetailedFloor_type, char > SimWall_OtherSideCoefficients_DetailedFloor_traits;

        const SimWall_OtherSideCoefficients_DetailedFloor_sequence&
        SimWall_OtherSideCoefficients_DetailedFloor () const;

        SimWall_OtherSideCoefficients_DetailedFloor_sequence&
        SimWall_OtherSideCoefficients_DetailedFloor ();

        void
        SimWall_OtherSideCoefficients_DetailedFloor (const SimWall_OtherSideCoefficients_DetailedFloor_sequence& s);

        // SimWall_OtherSideCoefficients_DetailedRoofCeiling
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideCoefficients_DetailedRoofCeiling SimWall_OtherSideCoefficients_DetailedRoofCeiling_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideCoefficients_DetailedRoofCeiling_type > SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence;
        typedef SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence::iterator SimWall_OtherSideCoefficients_DetailedRoofCeiling_iterator;
        typedef SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence::const_iterator SimWall_OtherSideCoefficients_DetailedRoofCeiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideCoefficients_DetailedRoofCeiling_type, char > SimWall_OtherSideCoefficients_DetailedRoofCeiling_traits;

        const SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence&
        SimWall_OtherSideCoefficients_DetailedRoofCeiling () const;

        SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence&
        SimWall_OtherSideCoefficients_DetailedRoofCeiling ();

        void
        SimWall_OtherSideCoefficients_DetailedRoofCeiling (const SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence& s);

        // SimWall_OtherSideConditionsModel_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideConditionsModel_Default SimWall_OtherSideConditionsModel_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideConditionsModel_Default_type > SimWall_OtherSideConditionsModel_Default_sequence;
        typedef SimWall_OtherSideConditionsModel_Default_sequence::iterator SimWall_OtherSideConditionsModel_Default_iterator;
        typedef SimWall_OtherSideConditionsModel_Default_sequence::const_iterator SimWall_OtherSideConditionsModel_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideConditionsModel_Default_type, char > SimWall_OtherSideConditionsModel_Default_traits;

        const SimWall_OtherSideConditionsModel_Default_sequence&
        SimWall_OtherSideConditionsModel_Default () const;

        SimWall_OtherSideConditionsModel_Default_sequence&
        SimWall_OtherSideConditionsModel_Default ();

        void
        SimWall_OtherSideConditionsModel_Default (const SimWall_OtherSideConditionsModel_Default_sequence& s);

        // SimWall_OtherSideConditionsModel_Detailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideConditionsModel_Detailed SimWall_OtherSideConditionsModel_Detailed_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideConditionsModel_Detailed_type > SimWall_OtherSideConditionsModel_Detailed_sequence;
        typedef SimWall_OtherSideConditionsModel_Detailed_sequence::iterator SimWall_OtherSideConditionsModel_Detailed_iterator;
        typedef SimWall_OtherSideConditionsModel_Detailed_sequence::const_iterator SimWall_OtherSideConditionsModel_Detailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideConditionsModel_Detailed_type, char > SimWall_OtherSideConditionsModel_Detailed_traits;

        const SimWall_OtherSideConditionsModel_Detailed_sequence&
        SimWall_OtherSideConditionsModel_Detailed () const;

        SimWall_OtherSideConditionsModel_Detailed_sequence&
        SimWall_OtherSideConditionsModel_Detailed ();

        void
        SimWall_OtherSideConditionsModel_Detailed (const SimWall_OtherSideConditionsModel_Detailed_sequence& s);

        // SimWall_OtherSideConditionsModel_DetailedFloor
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideConditionsModel_DetailedFloor SimWall_OtherSideConditionsModel_DetailedFloor_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideConditionsModel_DetailedFloor_type > SimWall_OtherSideConditionsModel_DetailedFloor_sequence;
        typedef SimWall_OtherSideConditionsModel_DetailedFloor_sequence::iterator SimWall_OtherSideConditionsModel_DetailedFloor_iterator;
        typedef SimWall_OtherSideConditionsModel_DetailedFloor_sequence::const_iterator SimWall_OtherSideConditionsModel_DetailedFloor_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideConditionsModel_DetailedFloor_type, char > SimWall_OtherSideConditionsModel_DetailedFloor_traits;

        const SimWall_OtherSideConditionsModel_DetailedFloor_sequence&
        SimWall_OtherSideConditionsModel_DetailedFloor () const;

        SimWall_OtherSideConditionsModel_DetailedFloor_sequence&
        SimWall_OtherSideConditionsModel_DetailedFloor ();

        void
        SimWall_OtherSideConditionsModel_DetailedFloor (const SimWall_OtherSideConditionsModel_DetailedFloor_sequence& s);

        // SimWall_OtherSideConditionsModel_DetailedRoofCeiling
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_OtherSideConditionsModel_DetailedRoofCeiling SimWall_OtherSideConditionsModel_DetailedRoofCeiling_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_OtherSideConditionsModel_DetailedRoofCeiling_type > SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence;
        typedef SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence::iterator SimWall_OtherSideConditionsModel_DetailedRoofCeiling_iterator;
        typedef SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence::const_iterator SimWall_OtherSideConditionsModel_DetailedRoofCeiling_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_OtherSideConditionsModel_DetailedRoofCeiling_type, char > SimWall_OtherSideConditionsModel_DetailedRoofCeiling_traits;

        const SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence&
        SimWall_OtherSideConditionsModel_DetailedRoofCeiling () const;

        SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence&
        SimWall_OtherSideConditionsModel_DetailedRoofCeiling ();

        void
        SimWall_OtherSideConditionsModel_DetailedRoofCeiling (const SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence& s);

        // SimWall_TypicalWall_Adiabatic
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_Adiabatic SimWall_TypicalWall_Adiabatic_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_Adiabatic_type > SimWall_TypicalWall_Adiabatic_sequence;
        typedef SimWall_TypicalWall_Adiabatic_sequence::iterator SimWall_TypicalWall_Adiabatic_iterator;
        typedef SimWall_TypicalWall_Adiabatic_sequence::const_iterator SimWall_TypicalWall_Adiabatic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_Adiabatic_type, char > SimWall_TypicalWall_Adiabatic_traits;

        const SimWall_TypicalWall_Adiabatic_sequence&
        SimWall_TypicalWall_Adiabatic () const;

        SimWall_TypicalWall_Adiabatic_sequence&
        SimWall_TypicalWall_Adiabatic ();

        void
        SimWall_TypicalWall_Adiabatic (const SimWall_TypicalWall_Adiabatic_sequence& s);

        // SimWall_TypicalWall_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_Default SimWall_TypicalWall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_Default_type > SimWall_TypicalWall_Default_sequence;
        typedef SimWall_TypicalWall_Default_sequence::iterator SimWall_TypicalWall_Default_iterator;
        typedef SimWall_TypicalWall_Default_sequence::const_iterator SimWall_TypicalWall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_Default_type, char > SimWall_TypicalWall_Default_traits;

        const SimWall_TypicalWall_Default_sequence&
        SimWall_TypicalWall_Default () const;

        SimWall_TypicalWall_Default_sequence&
        SimWall_TypicalWall_Default ();

        void
        SimWall_TypicalWall_Default (const SimWall_TypicalWall_Default_sequence& s);

        // SimWall_TypicalWall_ExteriorAboveGrade
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_ExteriorAboveGrade SimWall_TypicalWall_ExteriorAboveGrade_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_ExteriorAboveGrade_type > SimWall_TypicalWall_ExteriorAboveGrade_sequence;
        typedef SimWall_TypicalWall_ExteriorAboveGrade_sequence::iterator SimWall_TypicalWall_ExteriorAboveGrade_iterator;
        typedef SimWall_TypicalWall_ExteriorAboveGrade_sequence::const_iterator SimWall_TypicalWall_ExteriorAboveGrade_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_ExteriorAboveGrade_type, char > SimWall_TypicalWall_ExteriorAboveGrade_traits;

        const SimWall_TypicalWall_ExteriorAboveGrade_sequence&
        SimWall_TypicalWall_ExteriorAboveGrade () const;

        SimWall_TypicalWall_ExteriorAboveGrade_sequence&
        SimWall_TypicalWall_ExteriorAboveGrade ();

        void
        SimWall_TypicalWall_ExteriorAboveGrade (const SimWall_TypicalWall_ExteriorAboveGrade_sequence& s);

        // SimWall_TypicalWall_ExteriorAboveGradeDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_ExteriorAboveGradeDetailed SimWall_TypicalWall_ExteriorAboveGradeDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_ExteriorAboveGradeDetailed_type > SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence;
        typedef SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence::iterator SimWall_TypicalWall_ExteriorAboveGradeDetailed_iterator;
        typedef SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence::const_iterator SimWall_TypicalWall_ExteriorAboveGradeDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_ExteriorAboveGradeDetailed_type, char > SimWall_TypicalWall_ExteriorAboveGradeDetailed_traits;

        const SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence&
        SimWall_TypicalWall_ExteriorAboveGradeDetailed () const;

        SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence&
        SimWall_TypicalWall_ExteriorAboveGradeDetailed ();

        void
        SimWall_TypicalWall_ExteriorAboveGradeDetailed (const SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence& s);

        // SimWall_TypicalWall_ExteriorAboveGradeStandard
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_ExteriorAboveGradeStandard SimWall_TypicalWall_ExteriorAboveGradeStandard_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_ExteriorAboveGradeStandard_type > SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence;
        typedef SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence::iterator SimWall_TypicalWall_ExteriorAboveGradeStandard_iterator;
        typedef SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence::const_iterator SimWall_TypicalWall_ExteriorAboveGradeStandard_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_ExteriorAboveGradeStandard_type, char > SimWall_TypicalWall_ExteriorAboveGradeStandard_traits;

        const SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence&
        SimWall_TypicalWall_ExteriorAboveGradeStandard () const;

        SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence&
        SimWall_TypicalWall_ExteriorAboveGradeStandard ();

        void
        SimWall_TypicalWall_ExteriorAboveGradeStandard (const SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence& s);

        // SimWall_TypicalWall_ExteriorBelowGrade
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_ExteriorBelowGrade SimWall_TypicalWall_ExteriorBelowGrade_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_ExteriorBelowGrade_type > SimWall_TypicalWall_ExteriorBelowGrade_sequence;
        typedef SimWall_TypicalWall_ExteriorBelowGrade_sequence::iterator SimWall_TypicalWall_ExteriorBelowGrade_iterator;
        typedef SimWall_TypicalWall_ExteriorBelowGrade_sequence::const_iterator SimWall_TypicalWall_ExteriorBelowGrade_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_ExteriorBelowGrade_type, char > SimWall_TypicalWall_ExteriorBelowGrade_traits;

        const SimWall_TypicalWall_ExteriorBelowGrade_sequence&
        SimWall_TypicalWall_ExteriorBelowGrade () const;

        SimWall_TypicalWall_ExteriorBelowGrade_sequence&
        SimWall_TypicalWall_ExteriorBelowGrade ();

        void
        SimWall_TypicalWall_ExteriorBelowGrade (const SimWall_TypicalWall_ExteriorBelowGrade_sequence& s);

        // SimWall_TypicalWall_ExteriorBelowGradeDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_ExteriorBelowGradeDetailed SimWall_TypicalWall_ExteriorBelowGradeDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_ExteriorBelowGradeDetailed_type > SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence;
        typedef SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence::iterator SimWall_TypicalWall_ExteriorBelowGradeDetailed_iterator;
        typedef SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence::const_iterator SimWall_TypicalWall_ExteriorBelowGradeDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_ExteriorBelowGradeDetailed_type, char > SimWall_TypicalWall_ExteriorBelowGradeDetailed_traits;

        const SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence&
        SimWall_TypicalWall_ExteriorBelowGradeDetailed () const;

        SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence&
        SimWall_TypicalWall_ExteriorBelowGradeDetailed ();

        void
        SimWall_TypicalWall_ExteriorBelowGradeDetailed (const SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence& s);

        // SimWall_TypicalWall_ExteriorBelowGradeStandard
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_ExteriorBelowGradeStandard SimWall_TypicalWall_ExteriorBelowGradeStandard_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_ExteriorBelowGradeStandard_type > SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence;
        typedef SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence::iterator SimWall_TypicalWall_ExteriorBelowGradeStandard_iterator;
        typedef SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence::const_iterator SimWall_TypicalWall_ExteriorBelowGradeStandard_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_ExteriorBelowGradeStandard_type, char > SimWall_TypicalWall_ExteriorBelowGradeStandard_traits;

        const SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence&
        SimWall_TypicalWall_ExteriorBelowGradeStandard () const;

        SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence&
        SimWall_TypicalWall_ExteriorBelowGradeStandard ();

        void
        SimWall_TypicalWall_ExteriorBelowGradeStandard (const SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence& s);

        // SimWall_TypicalWall_Interior
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_Interior SimWall_TypicalWall_Interior_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_Interior_type > SimWall_TypicalWall_Interior_sequence;
        typedef SimWall_TypicalWall_Interior_sequence::iterator SimWall_TypicalWall_Interior_iterator;
        typedef SimWall_TypicalWall_Interior_sequence::const_iterator SimWall_TypicalWall_Interior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_Interior_type, char > SimWall_TypicalWall_Interior_traits;

        const SimWall_TypicalWall_Interior_sequence&
        SimWall_TypicalWall_Interior () const;

        SimWall_TypicalWall_Interior_sequence&
        SimWall_TypicalWall_Interior ();

        void
        SimWall_TypicalWall_Interior (const SimWall_TypicalWall_Interior_sequence& s);

        // SimWall_TypicalWall_InteriorDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_InteriorDetailed SimWall_TypicalWall_InteriorDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_InteriorDetailed_type > SimWall_TypicalWall_InteriorDetailed_sequence;
        typedef SimWall_TypicalWall_InteriorDetailed_sequence::iterator SimWall_TypicalWall_InteriorDetailed_iterator;
        typedef SimWall_TypicalWall_InteriorDetailed_sequence::const_iterator SimWall_TypicalWall_InteriorDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_InteriorDetailed_type, char > SimWall_TypicalWall_InteriorDetailed_traits;

        const SimWall_TypicalWall_InteriorDetailed_sequence&
        SimWall_TypicalWall_InteriorDetailed () const;

        SimWall_TypicalWall_InteriorDetailed_sequence&
        SimWall_TypicalWall_InteriorDetailed ();

        void
        SimWall_TypicalWall_InteriorDetailed (const SimWall_TypicalWall_InteriorDetailed_sequence& s);

        // SimWall_TypicalWall_InteriorStandard
        //
        typedef ::namespaces::Sim::BuildingModel::SimWall_TypicalWall_InteriorStandard SimWall_TypicalWall_InteriorStandard_type;
        typedef ::xsd::cxx::tree::sequence< SimWall_TypicalWall_InteriorStandard_type > SimWall_TypicalWall_InteriorStandard_sequence;
        typedef SimWall_TypicalWall_InteriorStandard_sequence::iterator SimWall_TypicalWall_InteriorStandard_iterator;
        typedef SimWall_TypicalWall_InteriorStandard_sequence::const_iterator SimWall_TypicalWall_InteriorStandard_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWall_TypicalWall_InteriorStandard_type, char > SimWall_TypicalWall_InteriorStandard_traits;

        const SimWall_TypicalWall_InteriorStandard_sequence&
        SimWall_TypicalWall_InteriorStandard () const;

        SimWall_TypicalWall_InteriorStandard_sequence&
        SimWall_TypicalWall_InteriorStandard ();

        void
        SimWall_TypicalWall_InteriorStandard (const SimWall_TypicalWall_InteriorStandard_sequence& s);

        // SimWallParams_Wall_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimWallParams_Wall_Default SimWallParams_Wall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWallParams_Wall_Default_type > SimWallParams_Wall_Default_sequence;
        typedef SimWallParams_Wall_Default_sequence::iterator SimWallParams_Wall_Default_iterator;
        typedef SimWallParams_Wall_Default_sequence::const_iterator SimWallParams_Wall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWallParams_Wall_Default_type, char > SimWallParams_Wall_Default_traits;

        const SimWallParams_Wall_Default_sequence&
        SimWallParams_Wall_Default () const;

        SimWallParams_Wall_Default_sequence&
        SimWallParams_Wall_Default ();

        void
        SimWallParams_Wall_Default (const SimWallParams_Wall_Default_sequence& s);

        // SimWallType_Wall_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimWallType_Wall_Default SimWallType_Wall_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWallType_Wall_Default_type > SimWallType_Wall_Default_sequence;
        typedef SimWallType_Wall_Default_sequence::iterator SimWallType_Wall_Default_iterator;
        typedef SimWallType_Wall_Default_sequence::const_iterator SimWallType_Wall_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWallType_Wall_Default_type, char > SimWallType_Wall_Default_traits;

        const SimWallType_Wall_Default_sequence&
        SimWallType_Wall_Default () const;

        SimWallType_Wall_Default_sequence&
        SimWallType_Wall_Default ();

        void
        SimWallType_Wall_Default (const SimWallType_Wall_Default_sequence& s);

        // SimWindow_ComplexFenestration_ThermoChromic
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindow_ComplexFenestration_ThermoChromic SimWindow_ComplexFenestration_ThermoChromic_type;
        typedef ::xsd::cxx::tree::sequence< SimWindow_ComplexFenestration_ThermoChromic_type > SimWindow_ComplexFenestration_ThermoChromic_sequence;
        typedef SimWindow_ComplexFenestration_ThermoChromic_sequence::iterator SimWindow_ComplexFenestration_ThermoChromic_iterator;
        typedef SimWindow_ComplexFenestration_ThermoChromic_sequence::const_iterator SimWindow_ComplexFenestration_ThermoChromic_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindow_ComplexFenestration_ThermoChromic_type, char > SimWindow_ComplexFenestration_ThermoChromic_traits;

        const SimWindow_ComplexFenestration_ThermoChromic_sequence&
        SimWindow_ComplexFenestration_ThermoChromic () const;

        SimWindow_ComplexFenestration_ThermoChromic_sequence&
        SimWindow_ComplexFenestration_ThermoChromic ();

        void
        SimWindow_ComplexFenestration_ThermoChromic (const SimWindow_ComplexFenestration_ThermoChromic_sequence& s);

        // SimWindow_TypicalWindow_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindow_TypicalWindow_Default SimWindow_TypicalWindow_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWindow_TypicalWindow_Default_type > SimWindow_TypicalWindow_Default_sequence;
        typedef SimWindow_TypicalWindow_Default_sequence::iterator SimWindow_TypicalWindow_Default_iterator;
        typedef SimWindow_TypicalWindow_Default_sequence::const_iterator SimWindow_TypicalWindow_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindow_TypicalWindow_Default_type, char > SimWindow_TypicalWindow_Default_traits;

        const SimWindow_TypicalWindow_Default_sequence&
        SimWindow_TypicalWindow_Default () const;

        SimWindow_TypicalWindow_Default_sequence&
        SimWindow_TypicalWindow_Default ();

        void
        SimWindow_TypicalWindow_Default (const SimWindow_TypicalWindow_Default_sequence& s);

        // SimWindow_TypicalWindow_Exterior
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindow_TypicalWindow_Exterior SimWindow_TypicalWindow_Exterior_type;
        typedef ::xsd::cxx::tree::sequence< SimWindow_TypicalWindow_Exterior_type > SimWindow_TypicalWindow_Exterior_sequence;
        typedef SimWindow_TypicalWindow_Exterior_sequence::iterator SimWindow_TypicalWindow_Exterior_iterator;
        typedef SimWindow_TypicalWindow_Exterior_sequence::const_iterator SimWindow_TypicalWindow_Exterior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindow_TypicalWindow_Exterior_type, char > SimWindow_TypicalWindow_Exterior_traits;

        const SimWindow_TypicalWindow_Exterior_sequence&
        SimWindow_TypicalWindow_Exterior () const;

        SimWindow_TypicalWindow_Exterior_sequence&
        SimWindow_TypicalWindow_Exterior ();

        void
        SimWindow_TypicalWindow_Exterior (const SimWindow_TypicalWindow_Exterior_sequence& s);

        // SimWindow_TypicalWindow_ExteriorDetailed
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindow_TypicalWindow_ExteriorDetailed SimWindow_TypicalWindow_ExteriorDetailed_type;
        typedef ::xsd::cxx::tree::sequence< SimWindow_TypicalWindow_ExteriorDetailed_type > SimWindow_TypicalWindow_ExteriorDetailed_sequence;
        typedef SimWindow_TypicalWindow_ExteriorDetailed_sequence::iterator SimWindow_TypicalWindow_ExteriorDetailed_iterator;
        typedef SimWindow_TypicalWindow_ExteriorDetailed_sequence::const_iterator SimWindow_TypicalWindow_ExteriorDetailed_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindow_TypicalWindow_ExteriorDetailed_type, char > SimWindow_TypicalWindow_ExteriorDetailed_traits;

        const SimWindow_TypicalWindow_ExteriorDetailed_sequence&
        SimWindow_TypicalWindow_ExteriorDetailed () const;

        SimWindow_TypicalWindow_ExteriorDetailed_sequence&
        SimWindow_TypicalWindow_ExteriorDetailed ();

        void
        SimWindow_TypicalWindow_ExteriorDetailed (const SimWindow_TypicalWindow_ExteriorDetailed_sequence& s);

        // SimWindow_TypicalWindow_FrameAndDivider
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindow_TypicalWindow_FrameAndDivider SimWindow_TypicalWindow_FrameAndDivider_type;
        typedef ::xsd::cxx::tree::sequence< SimWindow_TypicalWindow_FrameAndDivider_type > SimWindow_TypicalWindow_FrameAndDivider_sequence;
        typedef SimWindow_TypicalWindow_FrameAndDivider_sequence::iterator SimWindow_TypicalWindow_FrameAndDivider_iterator;
        typedef SimWindow_TypicalWindow_FrameAndDivider_sequence::const_iterator SimWindow_TypicalWindow_FrameAndDivider_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindow_TypicalWindow_FrameAndDivider_type, char > SimWindow_TypicalWindow_FrameAndDivider_traits;

        const SimWindow_TypicalWindow_FrameAndDivider_sequence&
        SimWindow_TypicalWindow_FrameAndDivider () const;

        SimWindow_TypicalWindow_FrameAndDivider_sequence&
        SimWindow_TypicalWindow_FrameAndDivider ();

        void
        SimWindow_TypicalWindow_FrameAndDivider (const SimWindow_TypicalWindow_FrameAndDivider_sequence& s);

        // SimWindow_TypicalWindow_Interior
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindow_TypicalWindow_Interior SimWindow_TypicalWindow_Interior_type;
        typedef ::xsd::cxx::tree::sequence< SimWindow_TypicalWindow_Interior_type > SimWindow_TypicalWindow_Interior_sequence;
        typedef SimWindow_TypicalWindow_Interior_sequence::iterator SimWindow_TypicalWindow_Interior_iterator;
        typedef SimWindow_TypicalWindow_Interior_sequence::const_iterator SimWindow_TypicalWindow_Interior_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindow_TypicalWindow_Interior_type, char > SimWindow_TypicalWindow_Interior_traits;

        const SimWindow_TypicalWindow_Interior_sequence&
        SimWindow_TypicalWindow_Interior () const;

        SimWindow_TypicalWindow_Interior_sequence&
        SimWindow_TypicalWindow_Interior ();

        void
        SimWindow_TypicalWindow_Interior (const SimWindow_TypicalWindow_Interior_sequence& s);

        // SimWindowArrayParams_WindowArray_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimWindowArrayParams_WindowArray_Default SimWindowArrayParams_WindowArray_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWindowArrayParams_WindowArray_Default_type > SimWindowArrayParams_WindowArray_Default_sequence;
        typedef SimWindowArrayParams_WindowArray_Default_sequence::iterator SimWindowArrayParams_WindowArray_Default_iterator;
        typedef SimWindowArrayParams_WindowArray_Default_sequence::const_iterator SimWindowArrayParams_WindowArray_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindowArrayParams_WindowArray_Default_type, char > SimWindowArrayParams_WindowArray_Default_traits;

        const SimWindowArrayParams_WindowArray_Default_sequence&
        SimWindowArrayParams_WindowArray_Default () const;

        SimWindowArrayParams_WindowArray_Default_sequence&
        SimWindowArrayParams_WindowArray_Default ();

        void
        SimWindowArrayParams_WindowArray_Default (const SimWindowArrayParams_WindowArray_Default_sequence& s);

        // SimWindowLiningProps_WindowLiningProps_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimWindowLiningProps_WindowLiningProps_Default SimWindowLiningProps_WindowLiningProps_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWindowLiningProps_WindowLiningProps_Default_type > SimWindowLiningProps_WindowLiningProps_Default_sequence;
        typedef SimWindowLiningProps_WindowLiningProps_Default_sequence::iterator SimWindowLiningProps_WindowLiningProps_Default_iterator;
        typedef SimWindowLiningProps_WindowLiningProps_Default_sequence::const_iterator SimWindowLiningProps_WindowLiningProps_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindowLiningProps_WindowLiningProps_Default_type, char > SimWindowLiningProps_WindowLiningProps_Default_traits;

        const SimWindowLiningProps_WindowLiningProps_Default_sequence&
        SimWindowLiningProps_WindowLiningProps_Default () const;

        SimWindowLiningProps_WindowLiningProps_Default_sequence&
        SimWindowLiningProps_WindowLiningProps_Default ();

        void
        SimWindowLiningProps_WindowLiningProps_Default (const SimWindowLiningProps_WindowLiningProps_Default_sequence& s);

        // SimWindowPanelProps_WindowPanelProps_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimWindowPanelProps_WindowPanelProps_Default SimWindowPanelProps_WindowPanelProps_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWindowPanelProps_WindowPanelProps_Default_type > SimWindowPanelProps_WindowPanelProps_Default_sequence;
        typedef SimWindowPanelProps_WindowPanelProps_Default_sequence::iterator SimWindowPanelProps_WindowPanelProps_Default_iterator;
        typedef SimWindowPanelProps_WindowPanelProps_Default_sequence::const_iterator SimWindowPanelProps_WindowPanelProps_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindowPanelProps_WindowPanelProps_Default_type, char > SimWindowPanelProps_WindowPanelProps_Default_traits;

        const SimWindowPanelProps_WindowPanelProps_Default_sequence&
        SimWindowPanelProps_WindowPanelProps_Default () const;

        SimWindowPanelProps_WindowPanelProps_Default_sequence&
        SimWindowPanelProps_WindowPanelProps_Default ();

        void
        SimWindowPanelProps_WindowPanelProps_Default (const SimWindowPanelProps_WindowPanelProps_Default_sequence& s);

        // SimWindowParams_Window_Default
        //
        typedef ::namespaces::Sim::ResourcesGeneral::SimWindowParams_Window_Default SimWindowParams_Window_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWindowParams_Window_Default_type > SimWindowParams_Window_Default_sequence;
        typedef SimWindowParams_Window_Default_sequence::iterator SimWindowParams_Window_Default_iterator;
        typedef SimWindowParams_Window_Default_sequence::const_iterator SimWindowParams_Window_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindowParams_Window_Default_type, char > SimWindowParams_Window_Default_traits;

        const SimWindowParams_Window_Default_sequence&
        SimWindowParams_Window_Default () const;

        SimWindowParams_Window_Default_sequence&
        SimWindowParams_Window_Default ();

        void
        SimWindowParams_Window_Default (const SimWindowParams_Window_Default_sequence& s);

        // SimWindowType_Window_Default
        //
        typedef ::namespaces::Sim::BuildingModel::SimWindowType_Window_Default SimWindowType_Window_Default_type;
        typedef ::xsd::cxx::tree::sequence< SimWindowType_Window_Default_type > SimWindowType_Window_Default_sequence;
        typedef SimWindowType_Window_Default_sequence::iterator SimWindowType_Window_Default_iterator;
        typedef SimWindowType_Window_Default_sequence::const_iterator SimWindowType_Window_Default_const_iterator;
        typedef ::xsd::cxx::tree::traits< SimWindowType_Window_Default_type, char > SimWindowType_Window_Default_traits;

        const SimWindowType_Window_Default_sequence&
        SimWindowType_Window_Default () const;

        SimWindowType_Window_Default_sequence&
        SimWindowType_Window_Default ();

        void
        SimWindowType_Window_Default (const SimWindowType_Window_Default_sequence& s);

        // Constructors.
        //
        SimModel ();

        SimModel (const ::xercesc::DOMElement& e,
                  ::xml_schema::flags f = 0,
                  ::xml_schema::container* c = 0);

        SimModel (const SimModel& x,
                  ::xml_schema::flags f = 0,
                  ::xml_schema::container* c = 0);

        virtual SimModel*
        _clone (::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0) const;

        SimModel&
        operator= (const SimModel& x);

        virtual 
        ~SimModel ();

        // Implementation.
        //
        protected:
        void
        parse (::xsd::cxx::xml::dom::parser< char >&,
               ::xml_schema::flags);

        protected:
        SimActor_Actor_Default_sequence SimActor_Actor_Default_;
        SimActor_Actor_SpaceOccupant_sequence SimActor_Actor_SpaceOccupant_;
        SimActuator_DamperActuator_Default_sequence SimActuator_DamperActuator_Default_;
        SimActuator_Default_Default_sequence SimActuator_Default_Default_;
        SimActuator_ElectricalRotor_Default_sequence SimActuator_ElectricalRotor_Default_;
        SimActuator_ValveActuator_Default_sequence SimActuator_ValveActuator_Default_;
        SimActuator_VirtualActuator_EmsActuator_sequence SimActuator_VirtualActuator_EmsActuator_;
        SimAddress_Postal_Default_sequence SimAddress_Postal_Default_;
        SimAddress_Telecom_Default_sequence SimAddress_Telecom_Default_;
        SimAdjacentSiteParams_AdjacentSite_Default_sequence SimAdjacentSiteParams_AdjacentSite_Default_;
        SimAnalyticalRepresentation_AnalyticalRepresentation_Default_sequence SimAnalyticalRepresentation_AnalyticalRepresentation_Default_;
        SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_sequence SimAppLibraryDefault_AppLibraryDefault_EnterpriseLibrary_;
        SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_;
        SimAppLibraryDefault_AppLibraryDefault_UserLibrary_sequence SimAppLibraryDefault_AppLibraryDefault_UserLibrary_;
        SimAppObjNameDefault_ObjName_DistributionSystem_Default_sequence SimAppObjNameDefault_ObjName_DistributionSystem_Default_;
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_HvacAirLoop_;
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_HvacChilledWaterLoop_;
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_HvacCondenserLoop_;
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_HvacHotWaterLoop_;
        SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_HvacSteamLoop_;
        SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_MixedWaterLoop_;
        SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_sequence SimAppObjNameDefault_ObjName_DistributionSystem_RefrigerationLoop_;
        SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_sequence SimAppObjNameDefault_ObjName_OtherObject_AdjacentSite_;
        SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_sequence SimAppObjNameDefault_ObjName_OtherObject_SolarObstruction_;
        SimAppObjNameDefault_ObjName_OtherSystem_Default_sequence SimAppObjNameDefault_ObjName_OtherSystem_Default_;
        SimAppObjNameDefault_ObjName_Space_CeilingPlenum_sequence SimAppObjNameDefault_ObjName_Space_CeilingPlenum_;
        SimAppObjNameDefault_ObjName_Space_FloorPlenum_sequence SimAppObjNameDefault_ObjName_Space_FloorPlenum_;
        SimAppObjNameDefault_ObjName_Space_Space_sequence SimAppObjNameDefault_ObjName_Space_Space_;
        SimAppObjNameDefault_ObjName_SpatialContainer_Building_sequence SimAppObjNameDefault_ObjName_SpatialContainer_Building_;
        SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_sequence SimAppObjNameDefault_ObjName_SpatialContainer_BuildingStory_;
        SimAppObjNameDefault_ObjName_SpatialContainer_Project_sequence SimAppObjNameDefault_ObjName_SpatialContainer_Project_;
        SimAppObjNameDefault_ObjName_SpatialContainer_Site_sequence SimAppObjNameDefault_ObjName_SpatialContainer_Site_;
        SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_sequence SimAppObjNameDefault_ObjName_SpatialZone_CeilingPlenumZone_;
        SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_sequence SimAppObjNameDefault_ObjName_SpatialZone_FloorPlenumZone_;
        SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_sequence SimAppObjNameDefault_ObjName_SpatialZone_PlenumZone_;
        SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_sequence SimAppObjNameDefault_ObjName_SpatialZone_ThermalZone_;
        SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_sequence SimAppObjNameDefault_ObjName_ZoneGroup_HvacEquipmentGroup_;
        SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_sequence SimAppObjNameDefault_ObjName_ZoneGroup_PlenumZoneGroup_;
        SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_sequence SimAppObjNameDefault_ObjName_ZoneGroup_ThermalZoneGroup_;
        SimAppPreferences_AppPreferences_AutoSave_sequence SimAppPreferences_AppPreferences_AutoSave_;
        SimAppPreferences_AppPreferences_AutoSaveInterval_sequence SimAppPreferences_AppPreferences_AutoSaveInterval_;
        SimAppPreferences_AppPreferences_EPlusInstalPath_sequence SimAppPreferences_AppPreferences_EPlusInstalPath_;
        SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence SimAppPreferences_AppPreferences_EPlusInstalVersion_;
        SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence SimAppPreferences_AppPreferences_MinMonthlyChargeType_;
        SimAppPreferences_AppPreferences_MonthlyChargeType_sequence SimAppPreferences_AppPreferences_MonthlyChargeType_;
        SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence SimAppUnitDefault_AppUnitDefault_DatabaseDefault_;
        SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_sequence SimAppUnitDefault_AppUnitDefault_UserDisplayPreference_;
        SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence SimArbitraryProfileDef_ArbitraryProfile_Closed_;
        SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_sequence SimArbitraryProfileDef_ArbitraryProfile_ClosedWithVoids_;
        SimArbitraryProfileDef_ArbitraryProfile_Open_sequence SimArbitraryProfileDef_ArbitraryProfile_Open_;
        SimArrayParams_Array_Default_sequence SimArrayParams_Array_Default_;
        SimArrayParams_BldgElementArray_Beam_sequence SimArrayParams_BldgElementArray_Beam_;
        SimArrayParams_BldgElementArray_Column_sequence SimArrayParams_BldgElementArray_Column_;
        SimArrayParams_BldgElementArray_Default_sequence SimArrayParams_BldgElementArray_Default_;
        SimArrayParams_DoorArray_Default_sequence SimArrayParams_DoorArray_Default_;
        SimArrayParams_PanelArray_Default_sequence SimArrayParams_PanelArray_Default_;
        SimArrayParams_SolarShadeArray_Default_sequence SimArrayParams_SolarShadeArray_Default_;
        SimArrayParams_WindowArray_Default_sequence SimArrayParams_WindowArray_Default_;
        SimBeam_Default_Default_sequence SimBeam_Default_Default_;
        SimBeamParams_Beam_Default_sequence SimBeamParams_Beam_Default_;
        SimBeamType_Beam_Default_sequence SimBeamType_Beam_Default_;
        SimBldgElementArrayParams_BldgElementArray_Beam_sequence SimBldgElementArrayParams_BldgElementArray_Beam_;
        SimBldgElementArrayParams_BldgElementArray_Column_sequence SimBldgElementArrayParams_BldgElementArray_Column_;
        SimBldgElementArrayParams_BldgElementArray_Default_sequence SimBldgElementArrayParams_BldgElementArray_Default_;
        SimBldgElementType_BldgElementProxy_Default_sequence SimBldgElementType_BldgElementProxy_Default_;
        SimBldgElementType_Default_Default_sequence SimBldgElementType_Default_Default_;
        SimBldgElementType_ElectricalTerminal_Default_sequence SimBldgElementType_ElectricalTerminal_Default_;
        SimBldgElementType_HumanTransport_Default_sequence SimBldgElementType_HumanTransport_Default_;
        SimBldgElementType_PlumbingFixture_Default_sequence SimBldgElementType_PlumbingFixture_Default_;
        SimBldgElementType_Railing_Default_sequence SimBldgElementType_Railing_Default_;
        SimBldgElementType_Ramp_Default_sequence SimBldgElementType_Ramp_Default_;
        SimBldgElementType_RampFlight_Default_sequence SimBldgElementType_RampFlight_Default_;
        SimBldgElementType_Stair_Default_sequence SimBldgElementType_Stair_Default_;
        SimBldgElementType_StairFlight_Default_sequence SimBldgElementType_StairFlight_Default_;
        SimBldgElementType_VirtualElement_Default_sequence SimBldgElementType_VirtualElement_Default_;
        SimBldgParams_Building_Default_sequence SimBldgParams_Building_Default_;
        SimBldgSiteParams_BuildingSite_Default_sequence SimBldgSiteParams_BuildingSite_Default_;
        SimBldgStoryParams_BuildingStory_Default_sequence SimBldgStoryParams_BuildingStory_Default_;
        SimBldgStoryType_BuildingStory_Default_sequence SimBldgStoryType_BuildingStory_Default_;
        SimBuilding_AdjacentBuilding_Default_sequence SimBuilding_AdjacentBuilding_Default_;
        SimBuilding_Building_Default_sequence SimBuilding_Building_Default_;
        SimBuildingElementProxy_Default_Default_sequence SimBuildingElementProxy_Default_Default_;
        SimBuildingElementProxy_SiteContextElement_BuildingShading_sequence SimBuildingElementProxy_SiteContextElement_BuildingShading_;
        SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_sequence SimBuildingElementProxy_SiteContextElement_BuildingShadingDetailed_;
        SimBuildingElementProxy_SiteContextElement_Default_sequence SimBuildingElementProxy_SiteContextElement_Default_;
        SimBuildingElementProxy_SiteContextElement_GroundPlane_sequence SimBuildingElementProxy_SiteContextElement_GroundPlane_;
        SimBuildingElementProxy_SiteContextElement_SiteShading_sequence SimBuildingElementProxy_SiteContextElement_SiteShading_;
        SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_sequence SimBuildingElementProxy_SiteContextElement_SiteShadingDetailed_;
        SimBuildingElementProxy_ThermalMass_Default_sequence SimBuildingElementProxy_ThermalMass_Default_;
        SimBuildingStory_BuildingStory_Default_sequence SimBuildingStory_BuildingStory_Default_;
        SimBuildingType_Building_Default_sequence SimBuildingType_Building_Default_;
        SimCalendarDate_Default_Default_sequence SimCalendarDate_Default_Default_;
        SimCartesianTransformOperator_2D_NonUniform_sequence SimCartesianTransformOperator_2D_NonUniform_;
        SimCartesianTransformOperator_2D_Uniform_sequence SimCartesianTransformOperator_2D_Uniform_;
        SimCartesianTransformOperator_3D_NonUniform_sequence SimCartesianTransformOperator_3D_NonUniform_;
        SimCartesianTransformOperator_3D_Uniform_sequence SimCartesianTransformOperator_3D_Uniform_;
        SimClassification_ClassificationReference_BuildingElementClassification_sequence SimClassification_ClassificationReference_BuildingElementClassification_;
        SimClassification_ClassificationReference_ConstructionEntityByFunction_sequence SimClassification_ClassificationReference_ConstructionEntityByFunction_;
        SimClassification_ClassificationReference_Default_sequence SimClassification_ClassificationReference_Default_;
        SimClassification_ClassificationReference_OrganizationalBillingID_sequence SimClassification_ClassificationReference_OrganizationalBillingID_;
        SimClassification_ClassificationReference_OrganizationalID_sequence SimClassification_ClassificationReference_OrganizationalID_;
        SimClassification_ClassificationReference_SpaceByFunction_sequence SimClassification_ClassificationReference_SpaceByFunction_;
        SimClassification_ClassificationReference_SpaceCategoryBoma_sequence SimClassification_ClassificationReference_SpaceCategoryBoma_;
        SimClassification_ClassificationReference_SpaceCategoryOwner_sequence SimClassification_ClassificationReference_SpaceCategoryOwner_;
        SimClassification_ClassificationReference_SpaceTypeOwner_sequence SimClassification_ClassificationReference_SpaceTypeOwner_;
        SimClassification_ClassificationReference_SpatialZoneEnergyType_sequence SimClassification_ClassificationReference_SpatialZoneEnergyType_;
        SimClassification_ClassificationReference_SpatialZoneSecurityLevel_sequence SimClassification_ClassificationReference_SpatialZoneSecurityLevel_;
        SimClassification_ClassificationReference_SpatialZoneType_sequence SimClassification_ClassificationReference_SpatialZoneType_;
        SimClassification_ClassificationReference_SubOrganizationalID_sequence SimClassification_ClassificationReference_SubOrganizationalID_;
        SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_sequence SimClassification_ClassificationSystem_BomaSpaceCategoryClassification_;
        SimClassification_ClassificationSystem_Default_sequence SimClassification_ClassificationSystem_Default_;
        SimClassification_ClassificationSystem_MasterFormat_sequence SimClassification_ClassificationSystem_MasterFormat_;
        SimClassification_ClassificationSystem_OmniClass_sequence SimClassification_ClassificationSystem_OmniClass_;
        SimClassification_ClassificationSystem_OwnerOrganizationalClassification_sequence SimClassification_ClassificationSystem_OwnerOrganizationalClassification_;
        SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_sequence SimClassification_ClassificationSystem_OwnerSecurityLevelClassification_;
        SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_sequence SimClassification_ClassificationSystem_OwnerSelectedEnergyAnalysisClassification_;
        SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_sequence SimClassification_ClassificationSystem_OwnerSpaceCategoryClassification_;
        SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_sequence SimClassification_ClassificationSystem_OwnerSpaceTypeClassification_;
        SimClassification_ClassificationSystem_OwnerZoneTypeClassification_sequence SimClassification_ClassificationSystem_OwnerZoneTypeClassification_;
        SimClassification_ClassificationSystem_Uniformat_sequence SimClassification_ClassificationSystem_Uniformat_;
        SimColumn_Embedded_Default_sequence SimColumn_Embedded_Default_;
        SimColumn_Freestanding_Default_sequence SimColumn_Freestanding_Default_;
        SimColumnParams_Column_Default_sequence SimColumnParams_Column_Default_;
        SimColumnType_Column_Default_sequence SimColumnType_Column_Default_;
        SimComplexProperty_ComplexProp_Default_sequence SimComplexProperty_ComplexProp_Default_;
        SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_sequence SimComplianceRefModel_ASHRAE90_1_Appdx_G_Default_;
        SimCompositeProfileDef_CompositeProfile_Default_sequence SimCompositeProfileDef_CompositeProfile_Default_;
        SimConnectCurveGeom_Curve_Default_sequence SimConnectCurveGeom_Curve_Default_;
        SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_;
        SimConnectedFaceSet_ConnectedFaceSet_Default_sequence SimConnectedFaceSet_ConnectedFaceSet_Default_;
        SimConnectedFaceSet_ConnectedFaceSet_OpenShell_sequence SimConnectedFaceSet_ConnectedFaceSet_OpenShell_;
        SimConnection_AirFlow_CrossSystem_sequence SimConnection_AirFlow_CrossSystem_;
        SimConnection_AirFlow_Default_sequence SimConnection_AirFlow_Default_;
        SimConnection_AirFlow_Linkage_sequence SimConnection_AirFlow_Linkage_;
        SimConnection_AirFlowNetwork_Default_sequence SimConnection_AirFlowNetwork_Default_;
        SimConnection_ChilledWaterFlow_CrossSystem_sequence SimConnection_ChilledWaterFlow_CrossSystem_;
        SimConnection_ChilledWaterFlow_Default_sequence SimConnection_ChilledWaterFlow_Default_;
        SimConnection_CondenserFlow_CrossSystem_sequence SimConnection_CondenserFlow_CrossSystem_;
        SimConnection_CondenserFlow_Default_sequence SimConnection_CondenserFlow_Default_;
        SimConnection_Default_Default_sequence SimConnection_Default_Default_;
        SimConnection_DigitalControl_Default_sequence SimConnection_DigitalControl_Default_;
        SimConnection_Docking_Default_sequence SimConnection_Docking_Default_;
        SimConnection_ElectricalPowerFlow_Default_sequence SimConnection_ElectricalPowerFlow_Default_;
        SimConnection_HotWaterFlow_CrossSystem_sequence SimConnection_HotWaterFlow_CrossSystem_;
        SimConnection_HotWaterFlow_Default_sequence SimConnection_HotWaterFlow_Default_;
        SimConnection_MixedWaterFlow_CrossSystem_sequence SimConnection_MixedWaterFlow_CrossSystem_;
        SimConnection_MixedWaterFlow_Default_sequence SimConnection_MixedWaterFlow_Default_;
        SimConnection_RefrigerantFlow_Default_sequence SimConnection_RefrigerantFlow_Default_;
        SimConnection_SteamFlow_CrossSystem_sequence SimConnection_SteamFlow_CrossSystem_;
        SimConnection_SteamFlow_Default_sequence SimConnection_SteamFlow_Default_;
        SimConnection_ZoneAirFlow_Default_sequence SimConnection_ZoneAirFlow_Default_;
        SimConnection_ZoneAirFlow_ZoneCrossMixing_sequence SimConnection_ZoneAirFlow_ZoneCrossMixing_;
        SimConnection_ZoneAirFlow_ZoneMixing_sequence SimConnection_ZoneAirFlow_ZoneMixing_;
        SimConnectPointGeom_Point_Default_sequence SimConnectPointGeom_Point_Default_;
        SimConnectPortGeom_Port_Default_sequence SimConnectPortGeom_Port_Default_;
        SimConnectSurfaceGeom_Surface_Default_sequence SimConnectSurfaceGeom_Surface_Default_;
        SimController_AvailabilityManager_AirLoop_sequence SimController_AvailabilityManager_AirLoop_;
        SimController_AvailabilityManager_PlantLoop_sequence SimController_AvailabilityManager_PlantLoop_;
        SimController_Daylighting_DELight_sequence SimController_Daylighting_DELight_;
        SimController_Daylighting_Standard_sequence SimController_Daylighting_Standard_;
        SimController_Default_Default_sequence SimController_Default_Default_;
        SimController_DemandManager_AirLoop_sequence SimController_DemandManager_AirLoop_;
        SimController_LightingControl_Continuous_sequence SimController_LightingControl_Continuous_;
        SimController_LightingControl_ContinuousOff_sequence SimController_LightingControl_ContinuousOff_;
        SimController_LightingControl_MotionSensor_sequence SimController_LightingControl_MotionSensor_;
        SimController_LightingControl_On_Off_sequence SimController_LightingControl_On_Off_;
        SimController_LightingControl_Stepped_sequence SimController_LightingControl_Stepped_;
        SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_sequence SimController_MechanicalVentilation_EconomizerWithDemandControlledVentilation_;
        SimController_OperationManager_CondenserLoop_sequence SimController_OperationManager_CondenserLoop_;
        SimController_OperationManager_PlantLoop_sequence SimController_OperationManager_PlantLoop_;
        SimController_OutdoorAir_EconomizerControl_sequence SimController_OutdoorAir_EconomizerControl_;
        SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_sequence SimController_OutdoorAir_EconomizerWithDemandControlledVentilation_;
        SimController_OutdoorAir_OutdoorAirPreconditioningController_sequence SimController_OutdoorAir_OutdoorAirPreconditioningController_;
        SimController_Programmable_Default_sequence SimController_Programmable_Default_;
        SimController_ShadingControl_Heating_CoolingLoads_sequence SimController_ShadingControl_Heating_CoolingLoads_;
        SimController_ShadingControl_On_Off_sequence SimController_ShadingControl_On_Off_;
        SimController_ShadingControl_WindowTemp_Solar_sequence SimController_ShadingControl_WindowTemp_Solar_;
        SimController_SupplyAir_Humidity_sequence SimController_SupplyAir_Humidity_;
        SimController_SupplyAir_Temperature_sequence SimController_SupplyAir_Temperature_;
        SimController_SupplyWater_Temperature_sequence SimController_SupplyWater_Temperature_;
        SimController_ThermalStorage_ThermalEnergyStorageTank_sequence SimController_ThermalStorage_ThermalEnergyStorageTank_;
        SimController_Ventilation_ContaminantControl_sequence SimController_Ventilation_ContaminantControl_;
        SimController_WaterCoil_Default_sequence SimController_WaterCoil_Default_;
        SimController_ZoneControlHumidity_Humidistat_sequence SimController_ZoneControlHumidity_Humidistat_;
        SimController_ZoneControlHumidity_Humidistat1Zone_sequence SimController_ZoneControlHumidity_Humidistat1Zone_;
        SimController_ZoneControlTemperature_Thermostat_sequence SimController_ZoneControlTemperature_Thermostat_;
        SimController_ZoneControlTemperature_Thermostat1Zone_sequence SimController_ZoneControlTemperature_Thermostat1Zone_;
        SimController_ZoneControlTemperature_ThermostatThermalComfort_sequence SimController_ZoneControlTemperature_ThermostatThermalComfort_;
        SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_sequence SimController_ZoneControlTemperature_ThermostatThermalComfort1Zone_;
        SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_sequence SimControlScheme_AvailabilityManagerScheme_DifferentialThermostat_;
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_sequence SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOff_;
        SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_sequence SimControlScheme_AvailabilityManagerScheme_HighTemperatureTurnOn_;
        SimControlScheme_AvailabilityManagerScheme_HybridVentilation_sequence SimControlScheme_AvailabilityManagerScheme_HybridVentilation_;
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_sequence SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOff_;
        SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_sequence SimControlScheme_AvailabilityManagerScheme_LowTemperatureTurnOn_;
        SimControlScheme_AvailabilityManagerScheme_NightCycle_sequence SimControlScheme_AvailabilityManagerScheme_NightCycle_;
        SimControlScheme_AvailabilityManagerScheme_NightVentilation_sequence SimControlScheme_AvailabilityManagerScheme_NightVentilation_;
        SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence SimControlScheme_AvailabilityManagerScheme_Scheduled_;
        SimControlScheme_AvailabilityManagerScheme_ScheduledOff_sequence SimControlScheme_AvailabilityManagerScheme_ScheduledOff_;
        SimControlScheme_AvailabilityManagerScheme_ScheduledOn_sequence SimControlScheme_AvailabilityManagerScheme_ScheduledOn_;
        SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_sequence SimControlScheme_ControlAndSequencingScheme_ComponentSetpoint_;
        SimControlScheme_ControlAndSequencingScheme_CoolingLoad_sequence SimControlScheme_ControlAndSequencingScheme_CoolingLoad_;
        SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_sequence SimControlScheme_ControlAndSequencingScheme_ElectricLoadCenter_;
        SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence SimControlScheme_ControlAndSequencingScheme_HeatingLoad_;
        SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_sequence SimControlScheme_ControlAndSequencingScheme_OurdoorRelativeHumidity_;
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_sequence SimControlScheme_ControlAndSequencingScheme_OutdoorDewpoint_;
        SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_sequence SimControlScheme_ControlAndSequencingScheme_OutdoorDewpointDifference_;
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_sequence SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulb_;
        SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_sequence SimControlScheme_ControlAndSequencingScheme_OutdoorDryBulbDifference_;
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_sequence SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulb_;
        SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_sequence SimControlScheme_ControlAndSequencingScheme_OutdoorWetBulbDifference_;
        SimControlScheme_ControlAndSequencingScheme_Uncontrolled_sequence SimControlScheme_ControlAndSequencingScheme_Uncontrolled_;
        SimControlScheme_DemandManagerScheme_ElectricEquipment_sequence SimControlScheme_DemandManagerScheme_ElectricEquipment_;
        SimControlScheme_DemandManagerScheme_ExteriorLights_sequence SimControlScheme_DemandManagerScheme_ExteriorLights_;
        SimControlScheme_DemandManagerScheme_Lights_sequence SimControlScheme_DemandManagerScheme_Lights_;
        SimControlScheme_DemandManagerScheme_Thermostats_sequence SimControlScheme_DemandManagerScheme_Thermostats_;
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_sequence SimControlScheme_EnergyManagementScheme_EnergyMgmtSysConstructionIndexVariable_;
        SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_sequence SimControlScheme_EnergyManagementScheme_EnergyMgmtSysCurveOrTableIndexVariable_;
        SimControlScheme_EnergyManagementScheme_GlobalVairable_sequence SimControlScheme_EnergyManagementScheme_GlobalVairable_;
        SimControlScheme_EnergyManagementScheme_InternalVariable_sequence SimControlScheme_EnergyManagementScheme_InternalVariable_;
        SimControlScheme_EnergyManagementScheme_OutputVariable_sequence SimControlScheme_EnergyManagementScheme_OutputVariable_;
        SimControlScheme_EnergyManagementScheme_Program_sequence SimControlScheme_EnergyManagementScheme_Program_;
        SimControlScheme_EnergyManagementScheme_ProgramCallingManager_sequence SimControlScheme_EnergyManagementScheme_ProgramCallingManager_;
        SimControlScheme_EnergyManagementScheme_Subroutine_sequence SimControlScheme_EnergyManagementScheme_Subroutine_;
        SimControlScheme_EnergyManagementScheme_TrendVariable_sequence SimControlScheme_EnergyManagementScheme_TrendVariable_;
        SimControlScheme_ExternalInterface_Default_sequence SimControlScheme_ExternalInterface_Default_;
        SimControlScheme_ExternalInterface_FunctionalMockupUnit_sequence SimControlScheme_ExternalInterface_FunctionalMockupUnit_;
        SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_sequence SimControlScheme_OperatingScheme_CoolingLoadBasedOperationScheme_;
        SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_sequence SimControlScheme_OperatingScheme_HeatingLoadBasedOperationShceme_;
        SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorDewPointBasedOperationScheme_;
        SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorDewPointBulbDifferenceOperationScheme_;
        SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorDryBulbBasedOperationScheme_;
        SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorDryBulbDifferenceOperationScheme_;
        SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorRelativeHumidityBasedOperationScheme_;
        SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorWetBulbBasedOperationScheme_;
        SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_sequence SimControlScheme_OperatingScheme_OutdoorWetBulbDifferenceOperationScheme_;
        SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_sequence SimControlScheme_OperatingScheme_PlantEquipmentOperationComponentSetpoint_;
        SimControlScheme_OperatingScheme_UncontrolledOperationScheme_sequence SimControlScheme_OperatingScheme_UncontrolledOperationScheme_;
        SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_sequence SimControlScheme_SetpointManagerScheme_AveragedMaximumZoneHumidity_;
        SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_sequence SimControlScheme_SetpointManagerScheme_AveragedMinimumZoneHumidity_;
        SimControlScheme_SetpointManagerScheme_ColdestZoneReset_sequence SimControlScheme_SetpointManagerScheme_ColdestZoneReset_;
        SimControlScheme_SetpointManagerScheme_DuctStaticPressure_sequence SimControlScheme_SetpointManagerScheme_DuctStaticPressure_;
        SimControlScheme_SetpointManagerScheme_EnteringReset_sequence SimControlScheme_SetpointManagerScheme_EnteringReset_;
        SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_sequence SimControlScheme_SetpointManagerScheme_EnteringResetIdeal_;
        SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_sequence SimControlScheme_SetpointManagerScheme_FollowGroundTemperature_;
        SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_sequence SimControlScheme_SetpointManagerScheme_FollowOutdoorAirTemperature_;
        SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_sequence SimControlScheme_SetpointManagerScheme_FollowSystemNodeTemperature_;
        SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_sequence SimControlScheme_SetpointManagerScheme_LeastHumidZoneReset_;
        SimControlScheme_SetpointManagerScheme_MixedAir_sequence SimControlScheme_SetpointManagerScheme_MixedAir_;
        SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_sequence SimControlScheme_SetpointManagerScheme_MostHumidZoneReset_;
        SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_sequence SimControlScheme_SetpointManagerScheme_OutdoorAirPretreat_;
        SimControlScheme_SetpointManagerScheme_OutdoorAirReset_sequence SimControlScheme_SetpointManagerScheme_OutdoorAirReset_;
        SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_sequence SimControlScheme_SetpointManagerScheme_ReturnAirBypassFlow_;
        SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_sequence SimControlScheme_SetpointManagerScheme_ScheduledDualSetpoint_;
        SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_;
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_sequence SimControlScheme_SetpointManagerScheme_SetpointManagerScheduled_;
        SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_sequence SimControlScheme_SetpointManagerScheme_SetpointManagerScheduledDualSetpoint_;
        SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_sequence SimControlScheme_SetpointManagerScheme_SingleZone_Cooling_;
        SimControlScheme_SetpointManagerScheme_SingleZone_Heating_sequence SimControlScheme_SetpointManagerScheme_SingleZone_Heating_;
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_sequence SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Maximum_;
        SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_sequence SimControlScheme_SetpointManagerScheme_SingleZone_Humidity_Minimum_;
        SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_sequence SimControlScheme_SetpointManagerScheme_SingleZone_Reheat_;
        SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_sequence SimControlScheme_SetpointManagerScheme_WarmestTemperatureFlow_;
        SimControlScheme_SetpointManagerScheme_WarmestZoneReset_sequence SimControlScheme_SetpointManagerScheme_WarmestZoneReset_;
        SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_sequence SimControlScheme_SetpointManagerScheme_ZoneAverageCoolingLoadReset_;
        SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_sequence SimControlScheme_SetpointManagerScheme_ZoneAverageHeatingLoadReset_;
        SimControlScheme_SetpointScheme_DualSetpoint_sequence SimControlScheme_SetpointScheme_DualSetpoint_;
        SimControlScheme_SetpointScheme_SingleCooling_sequence SimControlScheme_SetpointScheme_SingleCooling_;
        SimControlScheme_SetpointScheme_SingleHeating_sequence SimControlScheme_SetpointScheme_SingleHeating_;
        SimControlScheme_SetpointScheme_SingleHeatingOrCooling_sequence SimControlScheme_SetpointScheme_SingleHeatingOrCooling_;
        SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_sequence SimControlScheme_SetpointScheme_ThermalComfortFangerDualSetpoint_;
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_sequence SimControlScheme_SetpointScheme_ThermalComfortFangerSingleCooling_;
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_sequence SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeating_;
        SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_sequence SimControlScheme_SetpointScheme_ThermalComfortFangerSingleHeatingOrCooling_;
        SimCost_ComponentCost_Adjustments_sequence SimCost_ComponentCost_Adjustments_;
        SimCost_ComponentCost_LineItem_sequence SimCost_ComponentCost_LineItem_;
        SimCost_ComponentCost_Reference_sequence SimCost_ComponentCost_Reference_;
        SimCost_Default_Default_sequence SimCost_Default_Default_;
        SimCost_LifeCycleCost_NonrecurringCost_sequence SimCost_LifeCycleCost_NonrecurringCost_;
        SimCost_LifeCycleCost_Parameters_sequence SimCost_LifeCycleCost_Parameters_;
        SimCost_LifeCycleCost_RecurringCosts_sequence SimCost_LifeCycleCost_RecurringCosts_;
        SimCost_LifeCycleCost_UseAdjustment_sequence SimCost_LifeCycleCost_UseAdjustment_;
        SimCost_LifeCycleCost_UsePriceEscalation_sequence SimCost_LifeCycleCost_UsePriceEscalation_;
        SimCost_UtilityCost_ChargeBlock_sequence SimCost_UtilityCost_ChargeBlock_;
        SimCost_UtilityCost_ChargeSimple_sequence SimCost_UtilityCost_ChargeSimple_;
        SimCost_UtilityCost_CostRatchet_sequence SimCost_UtilityCost_CostRatchet_;
        SimCost_UtilityCost_CostVariable_sequence SimCost_UtilityCost_CostVariable_;
        SimCost_UtilityCost_Qualify_sequence SimCost_UtilityCost_Qualify_;
        SimCost_UtilityCost_Tariff_sequence SimCost_UtilityCost_Tariff_;
        SimCurtainWall_CurtainWall_Default_sequence SimCurtainWall_CurtainWall_Default_;
        SimCurtainWallParams_CurtainWall_Default_sequence SimCurtainWallParams_CurtainWall_Default_;
        SimCurtainWallType_CurtainWall_Default_sequence SimCurtainWallType_CurtainWall_Default_;
        SimCurveStyle_CurveStyle_Default_sequence SimCurveStyle_CurveStyle_Default_;
        SimCurveStyle_CurveStyle_Font_sequence SimCurveStyle_CurveStyle_Font_;
        SimCurveStyle_CurveStyle_FontAndScaling_sequence SimCurveStyle_CurveStyle_FontAndScaling_;
        SimCurveStyle_CurveStyle_FontPattern_sequence SimCurveStyle_CurveStyle_FontPattern_;
        SimDaylightingAssembly_DaylightingAssembly_LightShelf_sequence SimDaylightingAssembly_DaylightingAssembly_LightShelf_;
        SimDaylightingAssembly_DaylightingAssembly_LightTube_sequence SimDaylightingAssembly_DaylightingAssembly_LightTube_;
        SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_sequence SimDaylightingAssembly_DaylightingAssembly_LightTubeFenSurface_;
        SimDaylightingAssembly_DaylightingAssembly_LightWell_sequence SimDaylightingAssembly_DaylightingAssembly_LightWell_;
        SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_sequence SimDaylightingAssembly_DaylightingAssembly_LightWellFenSurface_;
        SimDerivedUnitType_DerivedUnit_Default_sequence SimDerivedUnitType_DerivedUnit_Default_;
        SimDistributionPort_AirFlowPort_Air_In_sequence SimDistributionPort_AirFlowPort_Air_In_;
        SimDistributionPort_AirFlowPort_Air_InOrOut_sequence SimDistributionPort_AirFlowPort_Air_InOrOut_;
        SimDistributionPort_AirFlowPort_Air_Out_sequence SimDistributionPort_AirFlowPort_Air_Out_;
        SimDistributionPort_AirFlowPort_Default_sequence SimDistributionPort_AirFlowPort_Default_;
        SimDistributionPort_AirFlowPort_ExhaustAir_Out_sequence SimDistributionPort_AirFlowPort_ExhaustAir_Out_;
        SimDistributionPort_AirFlowPort_OutdoorAir_In_sequence SimDistributionPort_AirFlowPort_OutdoorAir_In_;
        SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_sequence SimDistributionPort_ChilledWaterFlowPort_CondensedWaterOut_;
        SimDistributionPort_ChilledWaterFlowPort_Default_sequence SimDistributionPort_ChilledWaterFlowPort_Default_;
        SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence SimDistributionPort_ChilledWaterFlowPort_EvaporativeWaterIn_;
        SimDistributionPort_ChilledWaterFlowPort_Water_In_sequence SimDistributionPort_ChilledWaterFlowPort_Water_In_;
        SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_sequence SimDistributionPort_ChilledWaterFlowPort_Water_InOrOut_;
        SimDistributionPort_ChilledWaterFlowPort_Water_Out_sequence SimDistributionPort_ChilledWaterFlowPort_Water_Out_;
        SimDistributionPort_CondenserFlowPort_CondenserFlow_In_sequence SimDistributionPort_CondenserFlowPort_CondenserFlow_In_;
        SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence SimDistributionPort_CondenserFlowPort_CondenserFlow_InOrOut_;
        SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_sequence SimDistributionPort_CondenserFlowPort_CondenserFlow_Out_;
        SimDistributionPort_CondenserFlowPort_Default_sequence SimDistributionPort_CondenserFlowPort_Default_;
        SimDistributionPort_DigitalControl_AirLoop_Default_sequence SimDistributionPort_DigitalControl_AirLoop_Default_;
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_AirLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControl_CHWLoop_Default_sequence SimDistributionPort_DigitalControl_CHWLoop_Default_;
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_CHWLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControl_CWLoop_Default_sequence SimDistributionPort_DigitalControl_CWLoop_Default_;
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_CWLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControl_HWLoop_Default_sequence SimDistributionPort_DigitalControl_HWLoop_Default_;
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_HWLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControl_MxWLoop_Default_sequence SimDistributionPort_DigitalControl_MxWLoop_Default_;
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_MxWLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControl_RFGLoop_Default_sequence SimDistributionPort_DigitalControl_RFGLoop_Default_;
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_RFGLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControl_STMLoop_Default_sequence SimDistributionPort_DigitalControl_STMLoop_Default_;
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_sequence SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_In_;
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence SimDistributionPort_DigitalControl_STMLoop_DigitalSignal_Out_;
        SimDistributionPort_DigitalControlPort_Default_sequence SimDistributionPort_DigitalControlPort_Default_;
        SimDistributionPort_DigitalControlPort_DigitalSignal_In_sequence SimDistributionPort_DigitalControlPort_DigitalSignal_In_;
        SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_sequence SimDistributionPort_DigitalControlPort_DigitalSignal_InOrOut_;
        SimDistributionPort_DigitalControlPort_DigitalSignal_Out_sequence SimDistributionPort_DigitalControlPort_DigitalSignal_Out_;
        SimDistributionPort_DigitalControlPort_DigitalVirtual_sequence SimDistributionPort_DigitalControlPort_DigitalVirtual_;
        SimDistributionPort_DistributionPort_Default_sequence SimDistributionPort_DistributionPort_Default_;
        SimDistributionPort_ElectricalFlowPort_Default_sequence SimDistributionPort_ElectricalFlowPort_Default_;
        SimDistributionPort_ElectricalFlowPort_Electrical_In_sequence SimDistributionPort_ElectricalFlowPort_Electrical_In_;
        SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_sequence SimDistributionPort_ElectricalFlowPort_Electrical_InOrOut_;
        SimDistributionPort_ElectricalFlowPort_Electrical_Out_sequence SimDistributionPort_ElectricalFlowPort_Electrical_Out_;
        SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_sequence SimDistributionPort_HotWaterFlowPort_CondensedWaterOut_;
        SimDistributionPort_HotWaterFlowPort_Default_sequence SimDistributionPort_HotWaterFlowPort_Default_;
        SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_sequence SimDistributionPort_HotWaterFlowPort_EvaporativeWaterIn_;
        SimDistributionPort_HotWaterFlowPort_Water_In_sequence SimDistributionPort_HotWaterFlowPort_Water_In_;
        SimDistributionPort_HotWaterFlowPort_Water_InOrOut_sequence SimDistributionPort_HotWaterFlowPort_Water_InOrOut_;
        SimDistributionPort_HotWaterFlowPort_Water_Out_sequence SimDistributionPort_HotWaterFlowPort_Water_Out_;
        SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_sequence SimDistributionPort_MixedWaterFlowPort_CondensedWaterOut_;
        SimDistributionPort_MixedWaterFlowPort_Default_sequence SimDistributionPort_MixedWaterFlowPort_Default_;
        SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence SimDistributionPort_MixedWaterFlowPort_EvaporativeWaterIn_;
        SimDistributionPort_MixedWaterFlowPort_Water_In_sequence SimDistributionPort_MixedWaterFlowPort_Water_In_;
        SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_sequence SimDistributionPort_MixedWaterFlowPort_Water_InOrOut_;
        SimDistributionPort_MixedWaterFlowPort_Water_Out_sequence SimDistributionPort_MixedWaterFlowPort_Water_Out_;
        SimDistributionPort_RefrigerationFlowPort_Default_sequence SimDistributionPort_RefrigerationFlowPort_Default_;
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_sequence SimDistributionPort_RefrigerationFlowPort_Refrigeration_In_;
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence SimDistributionPort_RefrigerationFlowPort_Refrigeration_InOrOut_;
        SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_sequence SimDistributionPort_RefrigerationFlowPort_Refrigeration_Out_;
        SimDistributionPort_SteamFlowPort_Default_sequence SimDistributionPort_SteamFlowPort_Default_;
        SimDistributionPort_SteamFlowPort_Steam_In_sequence SimDistributionPort_SteamFlowPort_Steam_In_;
        SimDistributionPort_SteamFlowPort_Steam_InOrOut_sequence SimDistributionPort_SteamFlowPort_Steam_InOrOut_;
        SimDistributionPort_SteamFlowPort_Steam_Out_sequence SimDistributionPort_SteamFlowPort_Steam_Out_;
        SimDistributionPort_ZoneAirFlowPort_Air_In_sequence SimDistributionPort_ZoneAirFlowPort_Air_In_;
        SimDistributionPort_ZoneAirFlowPort_Air_Out_sequence SimDistributionPort_ZoneAirFlowPort_Air_Out_;
        SimDoor_Default_Default_sequence SimDoor_Default_Default_;
        SimDoor_GlazedDoor_Exterior_sequence SimDoor_GlazedDoor_Exterior_;
        SimDoor_GlazedDoor_ExteriorDetailed_sequence SimDoor_GlazedDoor_ExteriorDetailed_;
        SimDoor_GlazedDoor_FrameAndDivider_sequence SimDoor_GlazedDoor_FrameAndDivider_;
        SimDoor_GlazedDoor_Interior_sequence SimDoor_GlazedDoor_Interior_;
        SimDoor_OpaqueDoor_Exterior_sequence SimDoor_OpaqueDoor_Exterior_;
        SimDoor_OpaqueDoor_ExteriorDetailed_sequence SimDoor_OpaqueDoor_ExteriorDetailed_;
        SimDoor_OpaqueDoor_Interior_sequence SimDoor_OpaqueDoor_Interior_;
        SimDoorArrayParams_DoorArray_Default_sequence SimDoorArrayParams_DoorArray_Default_;
        SimDoorLiningProps_DoorLiningProps_Default_sequence SimDoorLiningProps_DoorLiningProps_Default_;
        SimDoorPanelProps_DoorPanelProps_Default_sequence SimDoorPanelProps_DoorPanelProps_Default_;
        SimDoorParams_Door_Default_sequence SimDoorParams_Door_Default_;
        SimDoorType_Door_Default_sequence SimDoorType_Door_Default_;
        SimDwgXrefParams_DwgXref_Default_sequence SimDwgXrefParams_DwgXref_Default_;
        SimEdge_Edge_EdgeCurve_sequence SimEdge_Edge_EdgeCurve_;
        SimEdge_Edge_OrientedEdge_sequence SimEdge_Edge_OrientedEdge_;
        SimEdge_Edge_Subedge_sequence SimEdge_Edge_Subedge_;
        SimElementQuantity_ElementQuantity_Default_sequence SimElementQuantity_ElementQuantity_Default_;
        SimExtendedMaterialProps_ExtendedMatlProps_Default_sequence SimExtendedMaterialProps_ExtendedMatlProps_Default_;
        SimExternalReference_Default_Default_sequence SimExternalReference_Default_Default_;
        SimExternalReference_DocumentReference_Default_sequence SimExternalReference_DocumentReference_Default_;
        SimExternalReference_ExternalReference_Default_sequence SimExternalReference_ExternalReference_Default_;
        SimExternalReference_LibraryReference_Default_sequence SimExternalReference_LibraryReference_Default_;
        SimExternalReference_PropertyReference_Default_sequence SimExternalReference_PropertyReference_Default_;
        SimFace_Face_Default_sequence SimFace_Face_Default_;
        SimFace_Face_FaceSurface_sequence SimFace_Face_FaceSurface_;
        SimFaceBound_FaceBound_Default_sequence SimFaceBound_FaceBound_Default_;
        SimFaceBound_FaceBound_FaceOuterBound_sequence SimFaceBound_FaceBound_FaceOuterBound_;
        SimFeatureAirFlowNetwork_Default_Default_sequence SimFeatureAirFlowNetwork_Default_Default_;
        SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_sequence SimFeatureAirFlowNetwork_EffectiveLeakageArea_Default_;
        SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_sequence SimFeatureAirFlowNetwork_Exhaust_ZoneExhaustFan_;
        SimFeatureAirFlowNetwork_Opening_Default_sequence SimFeatureAirFlowNetwork_Opening_Default_;
        SimFeatureAirFlowNetwork_Opening_Detailed_sequence SimFeatureAirFlowNetwork_Opening_Detailed_;
        SimFeatureAirFlowNetwork_Opening_Horizontal_sequence SimFeatureAirFlowNetwork_Opening_Horizontal_;
        SimFeatureAirFlowNetwork_Opening_Simple_sequence SimFeatureAirFlowNetwork_Opening_Simple_;
        SimFeatureAirFlowNetwork_Surface_Default_sequence SimFeatureAirFlowNetwork_Surface_Default_;
        SimFeatureAirFlowNetwork_SurfaceCrack_Default_sequence SimFeatureAirFlowNetwork_SurfaceCrack_Default_;
        SimFeatureAirFlowNetwork_Zone_Default_sequence SimFeatureAirFlowNetwork_Zone_Default_;
        SimFeatureElementAddition_ProjectionElement_Default_sequence SimFeatureElementAddition_ProjectionElement_Default_;
        SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_sequence SimFeatureElementSubtraction_EdgeFeature_ChamferedEdge_;
        SimFeatureElementSubtraction_EdgeFeature_Default_sequence SimFeatureElementSubtraction_EdgeFeature_Default_;
        SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_sequence SimFeatureElementSubtraction_EdgeFeature_RoundedEdge_;
        SimFeatureElementSubtraction_SlotFeature_Default_sequence SimFeatureElementSubtraction_SlotFeature_Default_;
        SimFeatureElementSubtraction_Void_Opening_sequence SimFeatureElementSubtraction_Void_Opening_;
        SimFlowCompoundEqmt_DistrictSupply_Cooling_sequence SimFlowCompoundEqmt_DistrictSupply_Cooling_;
        SimFlowCompoundEqmt_DistrictSupply_Heating_sequence SimFlowCompoundEqmt_DistrictSupply_Heating_;
        SimFlowCompoundEqmt_PurchasedSupply_Cooling_sequence SimFlowCompoundEqmt_PurchasedSupply_Cooling_;
        SimFlowCompoundEqmt_PurchasedSupply_Heating_sequence SimFlowCompoundEqmt_PurchasedSupply_Heating_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_CoolOnly_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatCool_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_FurnaceHeatOnly_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatCool_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_HeatOnly_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAir_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_AirToAirMultiSpeed_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_CW_;
        SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_sequence SimFlowCompoundEqmt_UnitaryLoopEqmt_HP_WaterToAir_MxW_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_AirConditionerWindow_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_DehumidifierDX_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_ForcedAirUserDefined_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_FourPipeFanCoil_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_CW_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_HP_WtrToAir_MxW_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_IdealLoadsAirSystem_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_OutdoorAirUnit_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_PTAC_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_PTHP_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitHeater_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_UnitVentialtor_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_WaterSystemLoadProfile_;
        SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_sequence SimFlowCompoundEqmt_UnitaryZoneEqmt_ZoneVentilationDesignFlowRate_;
        SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_sequence SimFlowCompoundEqmt_VavSubsystems_VAV_ChangeoverBypass_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_ChilledWaterLoop_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_DX_HeatExchangerAssisted_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemCoolingDX_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystemHeatingDX_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_HotWaterLoop_;
        SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_sequence SimFlowCompoundEqmt_VirtualSupplySubsystems_MixedWaterLoop_;
        SimFlowCompoundEqmt_WaterUse_Connections_sequence SimFlowCompoundEqmt_WaterUse_Connections_;
        SimFlowController_Damper_Default_sequence SimFlowController_Damper_Default_;
        SimFlowController_Damper_Exhaust_sequence SimFlowController_Damper_Exhaust_;
        SimFlowController_Damper_FaceBypass_sequence SimFlowController_Damper_FaceBypass_;
        SimFlowController_Damper_MixedAir_sequence SimFlowController_Damper_MixedAir_;
        SimFlowController_Damper_OutsideAir_sequence SimFlowController_Damper_OutsideAir_;
        SimFlowController_Damper_Recirculation_sequence SimFlowController_Damper_Recirculation_;
        SimFlowController_Damper_Relief_sequence SimFlowController_Damper_Relief_;
        SimFlowController_Default_Default_sequence SimFlowController_Default_Default_;
        SimFlowController_ElectricalSwitch_On_Off_sequence SimFlowController_ElectricalSwitch_On_Off_;
        SimFlowController_ElectricalSwitch_Variable_sequence SimFlowController_ElectricalSwitch_Variable_;
        SimFlowController_Valve_Default_sequence SimFlowController_Valve_Default_;
        SimFlowController_Valve_EMSValve_sequence SimFlowController_Valve_EMSValve_;
        SimFlowController_Valve_NonReturnValve_sequence SimFlowController_Valve_NonReturnValve_;
        SimFlowController_Valve_TemperingValve_sequence SimFlowController_Valve_TemperingValve_;
        SimFlowEnergyTransfer_ConvectiveHeater_Electric_sequence SimFlowEnergyTransfer_ConvectiveHeater_Electric_;
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_sequence SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Electric_;
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_sequence SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Steam_;
        SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_;
        SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence SimFlowEnergyTransfer_ConvectiveHeater_Water_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXDefaultCoolingCoil_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeed_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoSpeed_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXTwoStageWithHumidityControlMode_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDxVariableRefrigerantFlow_;
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_sequence SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXVariableSpeed_;
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_sequence SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry_;
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_sequence SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterSimple_;
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_sequence SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpEquationFit_;
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_sequence SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpParameterEstimation_;
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_sequence SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit_;
        SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_sequence SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterUserDefined_;
        SimFlowEnergyTransfer_Dehumidifier_Default_sequence SimFlowEnergyTransfer_Dehumidifier_Default_;
        SimFlowEnergyTransfer_Dehumidifier_NoFans_sequence SimFlowEnergyTransfer_Dehumidifier_NoFans_;
        SimFlowEnergyTransfer_Economizer_AirToAir_sequence SimFlowEnergyTransfer_Economizer_AirToAir_;
        SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_sequence SimFlowEnergyTransfer_Economizer_ChilledWaterToChilledWater_;
        SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_sequence SimFlowEnergyTransfer_Economizer_ChilledWaterToCondenser_;
        SimFlowEnergyTransfer_Economizer_CondenserToCondenser_sequence SimFlowEnergyTransfer_Economizer_CondenserToCondenser_;
        SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_sequence SimFlowEnergyTransfer_Economizer_HotWaterToCondenser_;
        SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_sequence SimFlowEnergyTransfer_Economizer_HotWaterToHotWater_;
        SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_sequence SimFlowEnergyTransfer_Economizer_MixedWaterToCondenser_;
        SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_sequence SimFlowEnergyTransfer_Economizer_MixedWaterToMixedWater_;
        SimFlowEnergyTransfer_Electrical_Transformer_sequence SimFlowEnergyTransfer_Electrical_Transformer_;
        SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_sequence SimFlowEnergyTransfer_ElectricalInverter_FunctionOfPower_;
        SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_sequence SimFlowEnergyTransfer_ElectricalInverter_LookUpTable_;
        SimFlowEnergyTransfer_ElectricalInverter_Simple_sequence SimFlowEnergyTransfer_ElectricalInverter_Simple_;
        SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_sequence SimFlowEnergyTransfer_EvaporativeCooler_DirectCelDekPad_;
        SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_sequence SimFlowEnergyTransfer_EvaporativeCooler_DirectResearchSpecial_;
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_sequence SimFlowEnergyTransfer_EvaporativeCooler_IndirectCelDekPad_;
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_sequence SimFlowEnergyTransfer_EvaporativeCooler_IndirectResearchSpecial_;
        SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_sequence SimFlowEnergyTransfer_EvaporativeCooler_IndirectWetCoil_;
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_sequence SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_CW_;
        SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_sequence SimFlowEnergyTransfer_FluidCooler_EvaporativeSingleSpeed_MxW_;
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_sequence SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_CW_;
        SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_sequence SimFlowEnergyTransfer_FluidCooler_EvaporativeTwoSpeed_MxW_;
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_sequence SimFlowEnergyTransfer_FluidCooler_SingleSpeed_CW_;
        SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_sequence SimFlowEnergyTransfer_FluidCooler_SingleSpeed_MxW_;
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_sequence SimFlowEnergyTransfer_FluidCooler_TwoSpeed_CW_;
        SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_sequence SimFlowEnergyTransfer_FluidCooler_TwoSpeed_MxW_;
        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_sequence SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow_;
        SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_sequence SimFlowEnergyTransfer_HeatExAirToAir_FlatPlate_;
        SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_sequence SimFlowEnergyTransfer_HeatExAirToAir_SensibleAndLatent_;
        SimFlowEnergyTransfer_HeatExEarthToWater_Surface_sequence SimFlowEnergyTransfer_HeatExEarthToWater_Surface_;
        SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_sequence SimFlowEnergyTransfer_HeatExEarthToWater_Vertical_;
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_sequence SimFlowEnergyTransfer_HeatExPlate_FlatPlate_CW_;
        SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_sequence SimFlowEnergyTransfer_HeatExPlate_FlatPlate_MxW_;
        SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_sequence SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic_;
        SimFlowEnergyTransfer_HeatExWaterToWater_Pond_sequence SimFlowEnergyTransfer_HeatExWaterToWater_Pond_;
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_sequence SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDesuperheater_;
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_sequence SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXMultiSpeed_;
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_sequence SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXSingleSpeed_;
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_sequence SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow_;
        SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_sequence SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed_;
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_sequence SimFlowEnergyTransfer_HeatingCoilElec_CoilAirHeatingElectric_;
        SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_sequence SimFlowEnergyTransfer_HeatingCoilElec_CoilAirPreHeatingElectric_;
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_sequence SimFlowEnergyTransfer_HeatingCoilGas_CoilAirHeatingGas_;
        SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_sequence SimFlowEnergyTransfer_HeatingCoilGas_CoilAirPreHeatingGas_;
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_sequence SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirHeatingSteam_;
        SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_sequence SimFlowEnergyTransfer_HeatingCoilSteam_CoilAirPreHeatSteam_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpEquationFit_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpParameterEstimation_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterToAirHeatPumpVariableSpeedEquationFit_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWaterUserDefined_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilAirPreHeatWater_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingAirToWaterHeatPump_;
        SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_sequence SimFlowEnergyTransfer_HeatingCoilWater_CoilWaterHeatingDesuperheater_;
        SimFlowEnergyTransfer_Humidifier_ElectricSteam_sequence SimFlowEnergyTransfer_Humidifier_ElectricSteam_;
        SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_sequence SimFlowEnergyTransfer_PipingSystem_EarthToWater_Underground_;
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_sequence SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempConstFlow_;
        SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_sequence SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow_;
        SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_sequence SimFlowEnergyTransfer_RadiantDevice_CeilingSlab_Ventilated_;
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_sequence SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow_;
        SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_sequence SimFlowEnergyTransfer_RadiantDevice_FloorLowTempVarFlow_;
        SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_sequence SimFlowEnergyTransfer_RadiantDevice_FloorSlab_Ventilated_;
        SimFlowEnergyTransfer_RadiantDevice_HighTemp_sequence SimFlowEnergyTransfer_RadiantDevice_HighTemp_;
        SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_sequence SimFlowEnergyTransfer_RadiantDevice_LowTemp_Electric_;
        SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_sequence SimFlowEnergyTransfer_RadiantDevice_RadiantBeam_;
        SimFlowEnergyTransfer_RadiantDevice_Slab_sequence SimFlowEnergyTransfer_RadiantDevice_Slab_;
        SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_sequence SimFlowEnergyTransfer_TerminalUnit_VariableRefrigerantFlow_;
        SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_sequence SimFlowEnergyTransferStorage_HotWaterTank_DomesticHotWater_;
        SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_sequence SimFlowEnergyTransferStorage_HotWaterTank_HeatPump_;
        SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence SimFlowEnergyTransferStorage_HotWaterTank_Mixed_;
        SimFlowEnergyTransferStorage_HotWaterTank_Stratified_sequence SimFlowEnergyTransferStorage_HotWaterTank_Stratified_;
        SimFlowFitting_Default_Default_sequence SimFlowFitting_Default_Default_;
        SimFlowFitting_Difusser_Default_sequence SimFlowFitting_Difusser_Default_;
        SimFlowFitting_Electrical_Transformer_sequence SimFlowFitting_Electrical_Transformer_;
        SimFlowFitting_FlowElementProxy_Default_sequence SimFlowFitting_FlowElementProxy_Default_;
        SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_sequence SimFlowFitting_FlowElementProxy_DemandProxy_AirLoop_;
        SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_sequence SimFlowFitting_FlowElementProxy_DemandProxy_WaterLoop_;
        SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_sequence SimFlowFitting_FlowElementProxy_SupplyProxy_AirLoop_;
        SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_sequence SimFlowFitting_FlowElementProxy_SupplyProxy_WaterLoop_;
        SimFlowFitting_Mixer_AirMixer_sequence SimFlowFitting_Mixer_AirMixer_;
        SimFlowFitting_Mixer_AirMixerOutdoor_sequence SimFlowFitting_Mixer_AirMixerOutdoor_;
        SimFlowFitting_Mixer_AirMixerZoneReturn_sequence SimFlowFitting_Mixer_AirMixerZoneReturn_;
        SimFlowFitting_Mixer_CondenserMixer_sequence SimFlowFitting_Mixer_CondenserMixer_;
        SimFlowFitting_Mixer_DemandProxyMixer_sequence SimFlowFitting_Mixer_DemandProxyMixer_;
        SimFlowFitting_Mixer_SteamMixer_sequence SimFlowFitting_Mixer_SteamMixer_;
        SimFlowFitting_Mixer_WaterMixer_sequence SimFlowFitting_Mixer_WaterMixer_;
        SimFlowFitting_Splitter_AirSplitter_sequence SimFlowFitting_Splitter_AirSplitter_;
        SimFlowFitting_Splitter_AirSplitterZoneSupply_sequence SimFlowFitting_Splitter_AirSplitterZoneSupply_;
        SimFlowFitting_Splitter_CondenserSplitter_sequence SimFlowFitting_Splitter_CondenserSplitter_;
        SimFlowFitting_Splitter_DemandProxySplitter_sequence SimFlowFitting_Splitter_DemandProxySplitter_;
        SimFlowFitting_Splitter_SteamSplitter_sequence SimFlowFitting_Splitter_SteamSplitter_;
        SimFlowFitting_Splitter_WaterSplitter_sequence SimFlowFitting_Splitter_WaterSplitter_;
        SimFlowMover_Default_Default_sequence SimFlowMover_Default_Default_;
        SimFlowMover_Fan_NightVentilation_sequence SimFlowMover_Fan_NightVentilation_;
        SimFlowMover_Fan_ZoneExhaust_sequence SimFlowMover_Fan_ZoneExhaust_;
        SimFlowMover_Pump_ConstantSpeedReturn_sequence SimFlowMover_Pump_ConstantSpeedReturn_;
        SimFlowMover_Pump_ConstantSpeedSupply_sequence SimFlowMover_Pump_ConstantSpeedSupply_;
        SimFlowMover_Pump_UserDefined_sequence SimFlowMover_Pump_UserDefined_;
        SimFlowMover_Pump_VariableSpeedReturn_sequence SimFlowMover_Pump_VariableSpeedReturn_;
        SimFlowMover_Pump_VariableSpeedSupply_sequence SimFlowMover_Pump_VariableSpeedSupply_;
        SimFlowMover_Pump_VarSpeedCondensateReturn_sequence SimFlowMover_Pump_VarSpeedCondensateReturn_;
        SimFlowMover_Pump_VarSpeedCondensateSupply_sequence SimFlowMover_Pump_VarSpeedCondensateSupply_;
        SimFlowMover_PumpSet_ConstantSpeed2_sequence SimFlowMover_PumpSet_ConstantSpeed2_;
        SimFlowMover_PumpSet_ConstantSpeed3_sequence SimFlowMover_PumpSet_ConstantSpeed3_;
        SimFlowMover_PumpSet_VariableSpeed2_sequence SimFlowMover_PumpSet_VariableSpeed2_;
        SimFlowMover_PumpSet_VariableSpeed3_sequence SimFlowMover_PumpSet_VariableSpeed3_;
        SimFlowMover_ReturnFan_ComponentModel_sequence SimFlowMover_ReturnFan_ComponentModel_;
        SimFlowMover_ReturnFan_ConstantVolume_sequence SimFlowMover_ReturnFan_ConstantVolume_;
        SimFlowMover_ReturnFan_OnOff_sequence SimFlowMover_ReturnFan_OnOff_;
        SimFlowMover_ReturnFan_VariableVolume_sequence SimFlowMover_ReturnFan_VariableVolume_;
        SimFlowMover_SupplyFan_ComponentModel_sequence SimFlowMover_SupplyFan_ComponentModel_;
        SimFlowMover_SupplyFan_ConstantVolume_sequence SimFlowMover_SupplyFan_ConstantVolume_;
        SimFlowMover_SupplyFan_OnOff_sequence SimFlowMover_SupplyFan_OnOff_;
        SimFlowMover_SupplyFan_VariableVolume_sequence SimFlowMover_SupplyFan_VariableVolume_;
        SimFlowPlant_Boiler_BoilerHotWater_sequence SimFlowPlant_Boiler_BoilerHotWater_;
        SimFlowPlant_Boiler_BoilerSteam_sequence SimFlowPlant_Boiler_BoilerSteam_;
        SimFlowPlant_Boiler_UserDefined_sequence SimFlowPlant_Boiler_UserDefined_;
        SimFlowPlant_Chiller_Absorption_sequence SimFlowPlant_Chiller_Absorption_;
        SimFlowPlant_Chiller_AbsorptionIndirect_sequence SimFlowPlant_Chiller_AbsorptionIndirect_;
        SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_sequence SimFlowPlant_Chiller_ChillerVaporCompressionCombustionTurbine_;
        SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_sequence SimFlowPlant_Chiller_ChillerVaporCompressionConstantCOP_;
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_sequence SimFlowPlant_Chiller_ChillerVaporCompressionElectric_;
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_sequence SimFlowPlant_Chiller_ChillerVaporCompressionElectric_EIR_;
        SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_sequence SimFlowPlant_Chiller_ChillerVaporCompressionElectric_ReformulatedEIR_;
        SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_sequence SimFlowPlant_Chiller_ChillerVaporCompressionEngineDriven_;
        SimFlowPlant_Chiller_UserDefined_sequence SimFlowPlant_Chiller_UserDefined_;
        SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_sequence SimFlowPlant_ChillerHeater_AbsorptionChillerDoubleEffect_;
        SimFlowPlant_ChillerHeater_AbsorptionDirectFired_sequence SimFlowPlant_ChillerHeater_AbsorptionDirectFired_;
        SimFlowPlant_CoolingTower_SingleSpeed_sequence SimFlowPlant_CoolingTower_SingleSpeed_;
        SimFlowPlant_CoolingTower_TwoSpeed_sequence SimFlowPlant_CoolingTower_TwoSpeed_;
        SimFlowPlant_CoolingTower_UserDefined_sequence SimFlowPlant_CoolingTower_UserDefined_;
        SimFlowPlant_CoolingTower_VariableSpeed_sequence SimFlowPlant_CoolingTower_VariableSpeed_;
        SimFlowPlant_ElectricalGenerator_CombustionTurbine_sequence SimFlowPlant_ElectricalGenerator_CombustionTurbine_;
        SimFlowPlant_ElectricalGenerator_DefaultGenerator_sequence SimFlowPlant_ElectricalGenerator_DefaultGenerator_;
        SimFlowPlant_ElectricalGenerator_FuelCell_sequence SimFlowPlant_ElectricalGenerator_FuelCell_;
        SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_sequence SimFlowPlant_ElectricalGenerator_FuelCellAirSupply_;
        SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_sequence SimFlowPlant_ElectricalGenerator_FuelCellAuxilaryHeater_;
        SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_sequence SimFlowPlant_ElectricalGenerator_FuelCellElectricalStorage_;
        SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_sequence SimFlowPlant_ElectricalGenerator_FuelCellExhaustGastoWaterHeatExchanger_;
        SimFlowPlant_ElectricalGenerator_FuelCellInverter_sequence SimFlowPlant_ElectricalGenerator_FuelCellInverter_;
        SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_sequence SimFlowPlant_ElectricalGenerator_FuelCellPowerModule_;
        SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_sequence SimFlowPlant_ElectricalGenerator_FuelCellStackCooler_;
        SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_sequence SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply_;
        SimFlowPlant_ElectricalGenerator_FuelEquipment_sequence SimFlowPlant_ElectricalGenerator_FuelEquipment_;
        SimFlowPlant_ElectricalGenerator_FuelSupply_sequence SimFlowPlant_ElectricalGenerator_FuelSupply_;
        SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_sequence SimFlowPlant_ElectricalGenerator_InternalCombustionEngine_;
        SimFlowPlant_ElectricalGenerator_MicroCHP_sequence SimFlowPlant_ElectricalGenerator_MicroCHP_;
        SimFlowPlant_ElectricalGenerator_MicroTurbine_sequence SimFlowPlant_ElectricalGenerator_MicroTurbine_;
        SimFlowPlant_ElectricalGenerator_Photovoltaic_sequence SimFlowPlant_ElectricalGenerator_Photovoltaic_;
        SimFlowPlant_ElectricalGenerator_WindTurbine_sequence SimFlowPlant_ElectricalGenerator_WindTurbine_;
        SimFlowPlant_HeatAndPower_Default_sequence SimFlowPlant_HeatAndPower_Default_;
        SimFlowPlant_HeatPump_AirToAir_sequence SimFlowPlant_HeatPump_AirToAir_;
        SimFlowPlant_HeatPump_AirToAir_MultiSpeed_sequence SimFlowPlant_HeatPump_AirToAir_MultiSpeed_;
        SimFlowPlant_HeatPump_GroundSource_sequence SimFlowPlant_HeatPump_GroundSource_;
        SimFlowPlant_HeatPump_WaterToAir_sequence SimFlowPlant_HeatPump_WaterToAir_;
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_sequence SimFlowPlant_HeatPump_WaterToWater_EquationFit_Cooling_;
        SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_sequence SimFlowPlant_HeatPump_WaterToWater_EquationFit_Heating_;
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_sequence SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Cooling_;
        SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_sequence SimFlowPlant_HeatPump_WaterToWater_ParameterEstimation_Heating_;
        SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_sequence SimFlowPlant_SolarDevice_SolarCollectorIntegralCollectorStorage_;
        SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_sequence SimFlowPlant_SolarDevice_SolarCollectorPerformanceIntegralCollectorStorage_;
        SimFlowPlant_SolarDevice_SolarPhotoVoltaic_sequence SimFlowPlant_SolarDevice_SolarPhotoVoltaic_;
        SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_sequence SimFlowPlant_SolarDevice_SolarPhotoVoltaicThermal_;
        SimFlowPlant_SolarDevice_SolarThermalAir_sequence SimFlowPlant_SolarDevice_SolarThermalAir_;
        SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_sequence SimFlowPlant_SolarDevice_SolarThermalAirMultiSystem_;
        SimFlowPlant_SolarDevice_SolarThermalWater_sequence SimFlowPlant_SolarDevice_SolarThermalWater_;
        SimFlowSegment_Default_Default_sequence SimFlowSegment_Default_Default_;
        SimFlowSegment_Duct_AirFlowNetworkDistribution_sequence SimFlowSegment_Duct_AirFlowNetworkDistribution_;
        SimFlowSegment_Duct_Default_sequence SimFlowSegment_Duct_Default_;
        SimFlowSegment_Filter_Bag_sequence SimFlowSegment_Filter_Bag_;
        SimFlowSegment_Filter_Default_sequence SimFlowSegment_Filter_Default_;
        SimFlowSegment_Filter_Electrostatic_sequence SimFlowSegment_Filter_Electrostatic_;
        SimFlowSegment_Filter_HEPA_sequence SimFlowSegment_Filter_HEPA_;
        SimFlowSegment_Filter_Panel_sequence SimFlowSegment_Filter_Panel_;
        SimFlowSegment_Grill_Return_sequence SimFlowSegment_Grill_Return_;
        SimFlowSegment_Grill_Supply_sequence SimFlowSegment_Grill_Supply_;
        SimFlowSegment_Louver_Default_sequence SimFlowSegment_Louver_Default_;
        SimFlowSegment_Louver_Exhaust_sequence SimFlowSegment_Louver_Exhaust_;
        SimFlowSegment_Louver_Intake_sequence SimFlowSegment_Louver_Intake_;
        SimFlowSegment_Louver_Safety_sequence SimFlowSegment_Louver_Safety_;
        SimFlowSegment_Louver_Ventilation_sequence SimFlowSegment_Louver_Ventilation_;
        SimFlowSegment_Pipe_Adiabatic_sequence SimFlowSegment_Pipe_Adiabatic_;
        SimFlowSegment_Pipe_Adiabatic_Steam_sequence SimFlowSegment_Pipe_Adiabatic_Steam_;
        SimFlowSegment_Pipe_Indoor_sequence SimFlowSegment_Pipe_Indoor_;
        SimFlowSegment_Pipe_Outdoor_sequence SimFlowSegment_Pipe_Outdoor_;
        SimFlowSegment_Pipe_Underground_sequence SimFlowSegment_Pipe_Underground_;
        SimFlowSegment_Pipe_UndergroundPipeSegment_sequence SimFlowSegment_Pipe_UndergroundPipeSegment_;
        SimFlowSegment_Plenum_DedicatedReturn_sequence SimFlowSegment_Plenum_DedicatedReturn_;
        SimFlowSegment_Plenum_DedicatedSupply_sequence SimFlowSegment_Plenum_DedicatedSupply_;
        SimFlowSegment_Plenum_SharedReturn_sequence SimFlowSegment_Plenum_SharedReturn_;
        SimFlowSegment_Plenum_SharedSupply_sequence SimFlowSegment_Plenum_SharedSupply_;
        SimFlowSegment_VirtualComponent_ConstantPressureDrop_sequence SimFlowSegment_VirtualComponent_ConstantPressureDrop_;
        SimFlowSegment_VirtualComponent_Leak_sequence SimFlowSegment_VirtualComponent_Leak_;
        SimFlowSegment_VirtualComponent_LeakageRatio_sequence SimFlowSegment_VirtualComponent_LeakageRatio_;
        SimFlowSegment_Wire_Default_sequence SimFlowSegment_Wire_Default_;
        SimFlowStorage_ElectricalStorage_BatteryBank_sequence SimFlowStorage_ElectricalStorage_BatteryBank_;
        SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_sequence SimFlowStorage_ElectricalStorage_DefaultElectricalStorage_;
        SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_sequence SimFlowStorage_ThermalStorage_ThermalStorageIceDetailed_;
        SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_sequence SimFlowStorage_ThermalStorage_ThermalStorageIceSimple_;
        SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_sequence SimFlowStorage_ThermalStorage_ThermalStorageWaterMixed_;
        SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_sequence SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified_;
        SimFlowStorage_WaterStorage_CleanWater_sequence SimFlowStorage_WaterStorage_CleanWater_;
        SimFlowStorage_WaterStorage_GrayWater_sequence SimFlowStorage_WaterStorage_GrayWater_;
        SimFlowStorage_WaterStorage_RainWater_sequence SimFlowStorage_WaterStorage_RainWater_;
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_sequence SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_ConstantVolume_;
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_sequence SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_VAV_;
        SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_sequence SimFlowTerminal_AirTerminal_AirTerminal_DualDuct_Vav_OutdoorAir_;
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_sequence SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_ConstantVolume_;
        SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_sequence SimFlowTerminal_AirTerminal_AirTerminal_TripleDuct_VAV_;
        SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_sequence SimFlowTerminal_AirTerminal_CAV_ActiveCooledBeam_;
        SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_sequence SimFlowTerminal_AirTerminal_CAV_ActiveFourPipeInduction_;
        SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_sequence SimFlowTerminal_AirTerminal_CAV_PassiveCooledBeam_;
        SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_sequence SimFlowTerminal_AirTerminal_CAV_PassiveFourPipeInduction_;
        SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_sequence SimFlowTerminal_AirTerminal_ConstantVolume_Reheat_;
        SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_sequence SimFlowTerminal_AirTerminal_ParallelPIU_Reheat_;
        SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_sequence SimFlowTerminal_AirTerminal_SeriesPIU_Reheat_;
        SimFlowTerminal_AirTerminal_SingleDuctUserDefined_sequence SimFlowTerminal_AirTerminal_SingleDuctUserDefined_;
        SimFlowTerminal_AirTerminal_Uncontrolled_sequence SimFlowTerminal_AirTerminal_Uncontrolled_;
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_sequence SimFlowTerminal_AirTerminal_VAV_HeatAndCool_NoReheat_;
        SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_sequence SimFlowTerminal_AirTerminal_VAV_HeatAndCool_Reheat_;
        SimFlowTerminal_AirTerminal_VAV_NoReheat_sequence SimFlowTerminal_AirTerminal_VAV_NoReheat_;
        SimFlowTerminal_AirTerminal_VAV_Reheat_sequence SimFlowTerminal_AirTerminal_VAV_Reheat_;
        SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_sequence SimFlowTerminal_AirTerminal_VAV_Reheat_VariableSpeedFan_;
        SimFlowTerminal_Default_Default_sequence SimFlowTerminal_Default_Default_;
        SimFlowTerminal_ElectricalTerminal_Default_sequence SimFlowTerminal_ElectricalTerminal_Default_;
        SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_sequence SimFlowTerminal_ElectricalTerminal_ElectricalOutlet_;
        SimFlowTerminal_ElectricalTerminal_LightingFixture_sequence SimFlowTerminal_ElectricalTerminal_LightingFixture_;
        SimFlowTerminal_PlumbingTerminal_DishWasher_sequence SimFlowTerminal_PlumbingTerminal_DishWasher_;
        SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_sequence SimFlowTerminal_PlumbingTerminal_HotWaterFixtures_;
        SimFlowTerminal_PlumbingTerminal_Shower_sequence SimFlowTerminal_PlumbingTerminal_Shower_;
        SimFlowTerminal_PlumbingTerminal_Sink_sequence SimFlowTerminal_PlumbingTerminal_Sink_;
        SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_sequence SimFlowTerminal_PlumbingTerminal_SiteWaterEquipment_;
        SimFlowTerminal_PlumbingTerminal_Toilet_sequence SimFlowTerminal_PlumbingTerminal_Toilet_;
        SimFlowTerminal_PlumbingTerminal_Urinal_sequence SimFlowTerminal_PlumbingTerminal_Urinal_;
        SimFluid_Concentration_Default_sequence SimFluid_Concentration_Default_;
        SimFluid_Default_Default_sequence SimFluid_Default_Default_;
        SimFluid_GlycolConcentration_Default_sequence SimFluid_GlycolConcentration_Default_;
        SimFluid_Name_Default_sequence SimFluid_Name_Default_;
        SimFluid_Saturated_Default_sequence SimFluid_Saturated_Default_;
        SimFluid_SuperHeated_Default_sequence SimFluid_SuperHeated_Default_;
        SimFluid_Temperatures_Default_sequence SimFluid_Temperatures_Default_;
        SimFurnishingElement_Default_Default_sequence SimFurnishingElement_Default_Default_;
        SimFurnishingElementType_Furnishing_Default_sequence SimFurnishingElementType_Furnishing_Default_;
        SimFurnishingElementType_Furniture_Default_sequence SimFurnishingElementType_Furniture_Default_;
        SimFurnitureType_Furniture_Default_sequence SimFurnitureType_Furniture_Default_;
        SimGeomBooleanResult_BooleanClippingResult_Default_sequence SimGeomBooleanResult_BooleanClippingResult_Default_;
        SimGeomBooleanResult_BooleanResult_Default_sequence SimGeomBooleanResult_BooleanResult_Default_;
        SimGeomBoundingBox_BoundingBox_Default_sequence SimGeomBoundingBox_BoundingBox_Default_;
        SimGeomCsgPrimative3D_CsgPrimative3D_Block_sequence SimGeomCsgPrimative3D_CsgPrimative3D_Block_;
        SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_sequence SimGeomCsgPrimative3D_CsgPrimative3D_RectangularPyramid_;
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_sequence SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCone_;
        SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_sequence SimGeomCsgPrimative3D_CsgPrimative3D_RightCircularCylinder_;
        SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_sequence SimGeomCsgPrimative3D_CsgPrimative3D_Sphere_;
        SimGeomCurve_2DCompositeCurve_Default_sequence SimGeomCurve_2DCompositeCurve_Default_;
        SimGeomCurve_BoundedCurve_Default_sequence SimGeomCurve_BoundedCurve_Default_;
        SimGeomCurve_Circle_Default_sequence SimGeomCurve_Circle_Default_;
        SimGeomCurve_CompositeCurve_Default_sequence SimGeomCurve_CompositeCurve_Default_;
        SimGeomCurve_CompositeCurveSegment_Default_sequence SimGeomCurve_CompositeCurveSegment_Default_;
        SimGeomCurve_Ellipse_Default_sequence SimGeomCurve_Ellipse_Default_;
        SimGeomCurve_Line_Default_sequence SimGeomCurve_Line_Default_;
        SimGeomCurve_OffsetCurve2D_Default_sequence SimGeomCurve_OffsetCurve2D_Default_;
        SimGeomCurve_OffsetCurve3D_Default_sequence SimGeomCurve_OffsetCurve3D_Default_;
        SimGeomCurve_Polyline_Default_sequence SimGeomCurve_Polyline_Default_;
        SimGeomCurve_TrimmedCurve_Default_sequence SimGeomCurve_TrimmedCurve_Default_;
        SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_sequence SimGeomHalfSpaceSolid_HalfSpaceSolid_BoxedHalfSpace_;
        SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_;
        SimGeomPoint_Point_CartesianPoint_sequence SimGeomPoint_Point_CartesianPoint_;
        SimGeomPoint_Point_PointOnCurve_sequence SimGeomPoint_Point_PointOnCurve_;
        SimGeomPoint_Point_PointOnSurface_sequence SimGeomPoint_Point_PointOnSurface_;
        SimGeomSet_GeometricCurveSet_Default_sequence SimGeomSet_GeometricCurveSet_Default_;
        SimGeomSet_GeometricSet_Default_sequence SimGeomSet_GeometricSet_Default_;
        SimGeomSolidModel_CSGSolid_Default_sequence SimGeomSolidModel_CSGSolid_Default_;
        SimGeomSolidModel_FacetedBrep_Default_sequence SimGeomSolidModel_FacetedBrep_Default_;
        SimGeomSolidModel_FacetedBrepWithVoids_Default_sequence SimGeomSolidModel_FacetedBrepWithVoids_Default_;
        SimGeomSolidModel_ManifoldSolidBrep_Default_sequence SimGeomSolidModel_ManifoldSolidBrep_Default_;
        SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_;
        SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_sequence SimGeomSolidModel_SweptAreaSolid_RevolvedAreaSolid_;
        SimGeomSolidModel_SweptDiskSolid_Default_sequence SimGeomSolidModel_SweptDiskSolid_Default_;
        SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence SimGeomSurface_BoundedSurface_CurveBoundedPlane_;
        SimGeomSurface_BoundedSurface_Default_sequence SimGeomSurface_BoundedSurface_Default_;
        SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_sequence SimGeomSurface_BoundedSurface_RectangularTrimmedSurface_;
        SimGeomSurface_Default_Default_sequence SimGeomSurface_Default_Default_;
        SimGeomSurface_ElementarySurface_Default_sequence SimGeomSurface_ElementarySurface_Default_;
        SimGeomSurface_ElementarySurface_Plane_sequence SimGeomSurface_ElementarySurface_Plane_;
        SimGeomSurface_SweptSurface_Default_sequence SimGeomSurface_SweptSurface_Default_;
        SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_sequence SimGeomSurface_SweptSurface_SurfaceOfLinearExtrusion_;
        SimGeomSurface_SweptSurface_SurfaceOfRevolution_sequence SimGeomSurface_SweptSurface_SurfaceOfRevolution_;
        SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_;
        SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_sequence SimGeomSurfaceModel_ShellBasedSurfaceModel_Default_;
        SimGeomVector_Vector_Default_sequence SimGeomVector_Vector_Default_;
        SimGeomVector_Vector_Direction_sequence SimGeomVector_Vector_Direction_;
        SimGlazingPanelParams_Panel_Glazing_sequence SimGlazingPanelParams_Panel_Glazing_;
        SimGridAxis_GridAxis_Default_sequence SimGridAxis_GridAxis_Default_;
        SimGridPlacement_GridPlacement_Default_sequence SimGridPlacement_GridPlacement_Default_;
        SimGroundHeatTransferBasement_BasementTransferModel_Default_sequence SimGroundHeatTransferBasement_BasementTransferModel_Default_;
        SimGroundHeatTransferSlab_SlabTransferModel_Default_sequence SimGroundHeatTransferSlab_SlabTransferModel_Default_;
        SimGroup_BldgCompGroup_AirTerminal_sequence SimGroup_BldgCompGroup_AirTerminal_;
        SimGroup_BldgCompGroup_Coil_sequence SimGroup_BldgCompGroup_Coil_;
        SimGroup_BldgCompGroup_Default_sequence SimGroup_BldgCompGroup_Default_;
        SimGroup_BldgCompGroup_Sensor_sequence SimGroup_BldgCompGroup_Sensor_;
        SimGroup_BldgCompGroup_ZoneController_sequence SimGroup_BldgCompGroup_ZoneController_;
        SimGroup_BldgCompGroup_ZoneEquipment_sequence SimGroup_BldgCompGroup_ZoneEquipment_;
        SimGroup_BldgElementGroup_Default_sequence SimGroup_BldgElementGroup_Default_;
        SimGroup_BuildingGroup_Default_sequence SimGroup_BuildingGroup_Default_;
        SimGroup_ConnectorList_AirConnections_sequence SimGroup_ConnectorList_AirConnections_;
        SimGroup_ConnectorList_ChilledWaterConnections_sequence SimGroup_ConnectorList_ChilledWaterConnections_;
        SimGroup_ConnectorList_CondenserConnections_sequence SimGroup_ConnectorList_CondenserConnections_;
        SimGroup_ConnectorList_ControllerConnections_sequence SimGroup_ConnectorList_ControllerConnections_;
        SimGroup_ConnectorList_HotWaterConnections_sequence SimGroup_ConnectorList_HotWaterConnections_;
        SimGroup_ConnectorList_SteamConnections_sequence SimGroup_ConnectorList_SteamConnections_;
        SimGroup_ControllerList_Default_sequence SimGroup_ControllerList_Default_;
        SimGroup_DefaultGroup_Default_sequence SimGroup_DefaultGroup_Default_;
        SimGroup_DefaultList_Default_sequence SimGroup_DefaultList_Default_;
        SimGroup_EquipmentList_CondenserEquipment_sequence SimGroup_EquipmentList_CondenserEquipment_;
        SimGroup_EquipmentList_ElectricalLoadCenter_sequence SimGroup_EquipmentList_ElectricalLoadCenter_;
        SimGroup_EquipmentList_OutdoorAirSystem_sequence SimGroup_EquipmentList_OutdoorAirSystem_;
        SimGroup_EquipmentList_OutdoorAirUnit_sequence SimGroup_EquipmentList_OutdoorAirUnit_;
        SimGroup_EquipmentList_PlantEquipment_sequence SimGroup_EquipmentList_PlantEquipment_;
        SimGroup_EquipmentList_RefrigerationCompressor_sequence SimGroup_EquipmentList_RefrigerationCompressor_;
        SimGroup_EquipmentList_RefrigerationEquipment_sequence SimGroup_EquipmentList_RefrigerationEquipment_;
        SimGroup_EquipmentList_RefrigerationLoadTransfer_sequence SimGroup_EquipmentList_RefrigerationLoadTransfer_;
        SimGroup_EquipmentList_ZoneHvac_sequence SimGroup_EquipmentList_ZoneHvac_;
        SimGroup_HvacDemandGroup_AirSystem_sequence SimGroup_HvacDemandGroup_AirSystem_;
        SimGroup_HvacDemandGroup_RefrigerationSystem_sequence SimGroup_HvacDemandGroup_RefrigerationSystem_;
        SimGroup_HvacDemandGroup_WaterSystem_sequence SimGroup_HvacDemandGroup_WaterSystem_;
        SimGroup_MaterialList_Default_sequence SimGroup_MaterialList_Default_;
        SimGroup_NodeList_Default_sequence SimGroup_NodeList_Default_;
        SimGroup_NodeList_OutdoorAir_sequence SimGroup_NodeList_OutdoorAir_;
        SimGroup_OutputRequestList_Daylighting_sequence SimGroup_OutputRequestList_Daylighting_;
        SimGroup_OutputRequestList_Environmental_sequence SimGroup_OutputRequestList_Environmental_;
        SimGroup_OutputRequestList_Fuel_sequence SimGroup_OutputRequestList_Fuel_;
        SimGroup_OutputRequestList_Geometry_sequence SimGroup_OutputRequestList_Geometry_;
        SimGroup_OutputRequestList_Meters_sequence SimGroup_OutputRequestList_Meters_;
        SimGroup_OutputRequestList_Reports_sequence SimGroup_OutputRequestList_Reports_;
        SimGroup_OutputRequestList_Variables_sequence SimGroup_OutputRequestList_Variables_;
        SimGroup_Refrigeration_ChillerSet_sequence SimGroup_Refrigeration_ChillerSet_;
        SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_sequence SimGroup_SchemeList_AirLoopAvailabilityMgrScheme_;
        SimGroup_SchemeList_AirTempControlScheme_sequence SimGroup_SchemeList_AirTempControlScheme_;
        SimGroup_SchemeList_CondenserOperatingScheme_sequence SimGroup_SchemeList_CondenserOperatingScheme_;
        SimGroup_SchemeList_DemandManagerScheme_sequence SimGroup_SchemeList_DemandManagerScheme_;
        SimGroup_SchemeList_MultiZoneHumidityScheme_sequence SimGroup_SchemeList_MultiZoneHumidityScheme_;
        SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_sequence SimGroup_SchemeList_PlantLoopAvailabilityMgrScheme_;
        SimGroup_SchemeList_PlantOperatingScheme_sequence SimGroup_SchemeList_PlantOperatingScheme_;
        SimGroup_SchemeList_SingleZoneHumidityScheme_sequence SimGroup_SchemeList_SingleZoneHumidityScheme_;
        SimGroup_SchemeList_WaterTempControlScheme_sequence SimGroup_SchemeList_WaterTempControlScheme_;
        SimGroup_SpatialZoneGroup_Daylighting_sequence SimGroup_SpatialZoneGroup_Daylighting_;
        SimGroup_SpatialZoneGroup_NaturalVentilation_sequence SimGroup_SpatialZoneGroup_NaturalVentilation_;
        SimGroup_SpatialZoneGroup_PlenumZoneGroup_sequence SimGroup_SpatialZoneGroup_PlenumZoneGroup_;
        SimGroup_SpatialZoneGroup_ZoneGroup_sequence SimGroup_SpatialZoneGroup_ZoneGroup_;
        SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence SimGroup_SpatialZoneGroup_ZoneHvacGroup_;
        SimGroup_SurfaceGroup_Default_sequence SimGroup_SurfaceGroup_Default_;
        SimGroup_SurfaceGroup_LowTempRadiant_sequence SimGroup_SurfaceGroup_LowTempRadiant_;
        SimGroup_SurfaceGroup_VentilatedSlab_sequence SimGroup_SurfaceGroup_VentilatedSlab_;
        SimGroup_TemplateOutputRequestList_Daylighting_sequence SimGroup_TemplateOutputRequestList_Daylighting_;
        SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_sequence SimGroup_TemplateOutputRequestList_FuelAndEnvironmental_;
        SimGroup_TemplateOutputRequestList_Geometry_sequence SimGroup_TemplateOutputRequestList_Geometry_;
        SimGroup_TemplateOutputRequestList_Meters_sequence SimGroup_TemplateOutputRequestList_Meters_;
        SimGroup_TemplateOutputRequestList_Reports_sequence SimGroup_TemplateOutputRequestList_Reports_;
        SimGroup_TemplateOutputRequestList_Variables_sequence SimGroup_TemplateOutputRequestList_Variables_;
        SimGroup_VrfList_VrfTerminals_sequence SimGroup_VrfList_VrfTerminals_;
        SimHeatTransAlgProps_HeatTransferAlgProps_Default_sequence SimHeatTransAlgProps_HeatTransferAlgProps_Default_;
        SimInfiltrationOrVentilation_Default_Default_sequence SimInfiltrationOrVentilation_Default_Default_;
        SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_sequence SimInfiltrationOrVentilation_RoomAirSettings_CrossVentilation_;
        SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_sequence SimInfiltrationOrVentilation_RoomAirSettings_OneNodeDisplacementVentilation_;
        SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_sequence SimInfiltrationOrVentilation_RoomAirSettings_ThreeNodeDisplacementVentilation_;
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_sequence SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionExterior_;
        SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_sequence SimInfiltrationOrVentilation_RoomAirSettings_UnderFloorAirDistributionInterior_;
        SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_sequence SimInfiltrationOrVentilation_RoomAirSettings_UserDefined_;
        SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_sequence SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient_;
        SimInfiltrationOrVentilation_RoomAirTempPattern_Default_sequence SimInfiltrationOrVentilation_RoomAirTempPattern_Default_;
        SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_sequence SimInfiltrationOrVentilation_RoomAirTempPattern_NonDimentionalHeight_;
        SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_sequence SimInfiltrationOrVentilation_RoomAirTempPattern_SurfaceMapping_;
        SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_sequence SimInfiltrationOrVentilation_RoomAirTempPattern_TwoGradient_;
        SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_sequence SimInfiltrationOrVentilation_RoomAirTempPattern_UserDefined_;
        SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_sequence SimInfiltrationOrVentilation_ZoneInfiltration_DesignFlowRate_;
        SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_sequence SimInfiltrationOrVentilation_ZoneInfiltration_EffectiveLeakageArea_;
        SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_sequence SimInfiltrationOrVentilation_ZoneInfiltration_FlowCoefficient_;
        SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_sequence SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate_;
        SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_sequence SimInfiltrationOrVentilation_ZoneVentilation_WindAndStackOpenArea_;
        SimInternalLoad_ComfortViewFactorAngles_Default_sequence SimInternalLoad_ComfortViewFactorAngles_Default_;
        SimInternalLoad_Default_Default_sequence SimInternalLoad_Default_Default_;
        SimInternalLoad_Equipment_Electric_sequence SimInternalLoad_Equipment_Electric_;
        SimInternalLoad_Equipment_Gas_sequence SimInternalLoad_Equipment_Gas_;
        SimInternalLoad_Equipment_HotWater_sequence SimInternalLoad_Equipment_HotWater_;
        SimInternalLoad_Equipment_Other_sequence SimInternalLoad_Equipment_Other_;
        SimInternalLoad_Equipment_Steam_sequence SimInternalLoad_Equipment_Steam_;
        SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_sequence SimInternalLoad_Equipment_ZoneBasebd_OutdoorTempControlled_;
        SimInternalLoad_Lights_Default_sequence SimInternalLoad_Lights_Default_;
        SimInternalLoad_People_Default_sequence SimInternalLoad_People_Default_;
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_sequence SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantBoudaryLayerDiffusion_;
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_sequence SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantDepositionVelocitySink_;
        SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_sequence SimInternalLoad_SurfaceContaminantSourceAndSink_GenericContaminantPressureDriven_;
        SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_sequence SimInternalLoad_ZoneContaminantSourceAndSink_CarbonDioxide_;
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_sequence SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantConstant_;
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_sequence SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantCutoffModel_;
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_sequence SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDecaySource_;
        SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_sequence SimInternalLoad_ZoneContaminantSourceAndSink_GenericContaminantDepositionRateSink_;
        SimIrregularTimeSeries_Irregular_Default_sequence SimIrregularTimeSeries_Irregular_Default_;
        SimIrregularTimeSeriesValue_TimeSeries_Irregular_sequence SimIrregularTimeSeriesValue_TimeSeries_Irregular_;
        SimList_ConnectorList_AirConnections_sequence SimList_ConnectorList_AirConnections_;
        SimList_ConnectorList_ChilledWaterConnections_sequence SimList_ConnectorList_ChilledWaterConnections_;
        SimList_ConnectorList_CondenserConnections_sequence SimList_ConnectorList_CondenserConnections_;
        SimList_ConnectorList_ControllerConnections_sequence SimList_ConnectorList_ControllerConnections_;
        SimList_ConnectorList_HotWaterConnections_sequence SimList_ConnectorList_HotWaterConnections_;
        SimList_ConnectorList_SteamConnections_sequence SimList_ConnectorList_SteamConnections_;
        SimList_ControllerList_Default_sequence SimList_ControllerList_Default_;
        SimList_DefaultList_Default_sequence SimList_DefaultList_Default_;
        SimList_EquipmentList_CondenserEquipment_sequence SimList_EquipmentList_CondenserEquipment_;
        SimList_EquipmentList_ElectricalLoadCenter_sequence SimList_EquipmentList_ElectricalLoadCenter_;
        SimList_EquipmentList_OutdoorAirSystem_sequence SimList_EquipmentList_OutdoorAirSystem_;
        SimList_EquipmentList_OutdoorAirUnit_sequence SimList_EquipmentList_OutdoorAirUnit_;
        SimList_EquipmentList_PlantEquipment_sequence SimList_EquipmentList_PlantEquipment_;
        SimList_EquipmentList_RefrigerationCompressor_sequence SimList_EquipmentList_RefrigerationCompressor_;
        SimList_EquipmentList_RefrigerationEquipment_sequence SimList_EquipmentList_RefrigerationEquipment_;
        SimList_EquipmentList_RefrigerationLoadTransfer_sequence SimList_EquipmentList_RefrigerationLoadTransfer_;
        SimList_EquipmentList_ZoneHvac_sequence SimList_EquipmentList_ZoneHvac_;
        SimList_MaterialList_Default_sequence SimList_MaterialList_Default_;
        SimList_NodeList_Default_sequence SimList_NodeList_Default_;
        SimList_NodeList_OutdoorAir_sequence SimList_NodeList_OutdoorAir_;
        SimList_OutputRequestList_Daylighting_sequence SimList_OutputRequestList_Daylighting_;
        SimList_OutputRequestList_Environmental_sequence SimList_OutputRequestList_Environmental_;
        SimList_OutputRequestList_Fuel_sequence SimList_OutputRequestList_Fuel_;
        SimList_OutputRequestList_Geometry_sequence SimList_OutputRequestList_Geometry_;
        SimList_OutputRequestList_Meters_sequence SimList_OutputRequestList_Meters_;
        SimList_OutputRequestList_Reports_sequence SimList_OutputRequestList_Reports_;
        SimList_OutputRequestList_Variables_sequence SimList_OutputRequestList_Variables_;
        SimList_Refrigeration_ChillerSet_sequence SimList_Refrigeration_ChillerSet_;
        SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence SimList_SchemeList_AirLoopAvailabilityMgrScheme_;
        SimList_SchemeList_AirTempControlScheme_sequence SimList_SchemeList_AirTempControlScheme_;
        SimList_SchemeList_CondenserOperatingScheme_sequence SimList_SchemeList_CondenserOperatingScheme_;
        SimList_SchemeList_DemandManagerScheme_sequence SimList_SchemeList_DemandManagerScheme_;
        SimList_SchemeList_MultiZoneHumidityScheme_sequence SimList_SchemeList_MultiZoneHumidityScheme_;
        SimList_SchemeList_PlantLoopAvailabilityMgrScheme_sequence SimList_SchemeList_PlantLoopAvailabilityMgrScheme_;
        SimList_SchemeList_PlantOperatingScheme_sequence SimList_SchemeList_PlantOperatingScheme_;
        SimList_SchemeList_SingleZoneHumidityScheme_sequence SimList_SchemeList_SingleZoneHumidityScheme_;
        SimList_SchemeList_WaterTempControlScheme_sequence SimList_SchemeList_WaterTempControlScheme_;
        SimList_TemplateOutputRequestList_Daylighting_sequence SimList_TemplateOutputRequestList_Daylighting_;
        SimList_TemplateOutputRequestList_FuelAndEnvironmental_sequence SimList_TemplateOutputRequestList_FuelAndEnvironmental_;
        SimList_TemplateOutputRequestList_Geometry_sequence SimList_TemplateOutputRequestList_Geometry_;
        SimList_TemplateOutputRequestList_Meters_sequence SimList_TemplateOutputRequestList_Meters_;
        SimList_TemplateOutputRequestList_Reports_sequence SimList_TemplateOutputRequestList_Reports_;
        SimList_TemplateOutputRequestList_Variables_sequence SimList_TemplateOutputRequestList_Variables_;
        SimList_VrfList_VrfTerminals_sequence SimList_VrfList_VrfTerminals_;
        SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence SimLocalPlacement_LocalPlacement_AbsolutePlacement_;
        SimLocalPlacement_LocalPlacement_RelativePlacement_sequence SimLocalPlacement_LocalPlacement_RelativePlacement_;
        SimLocationAndWeather_DesignDay_Default_sequence SimLocationAndWeather_DesignDay_Default_;
        SimLocationAndWeather_Location_Default_sequence SimLocationAndWeather_Location_Default_;
        SimLocationAndWeather_WeatherFile_ConditionType_sequence SimLocationAndWeather_WeatherFile_ConditionType_;
        SimLocationAndWeather_WeatherFile_Days_sequence SimLocationAndWeather_WeatherFile_Days_;
        SimLocationAndWeather_WeatherFile_WeatherStation_sequence SimLocationAndWeather_WeatherFile_WeatherStation_;
        SimLocationAndWeather_WeatherProperty_SkyTemperature_sequence SimLocationAndWeather_WeatherProperty_SkyTemperature_;
        SimLoop_Loop_EdgeLoop_sequence SimLoop_Loop_EdgeLoop_;
        SimLoop_Loop_PolyLoop_sequence SimLoop_Loop_PolyLoop_;
        SimLoop_Loop_VertexLoop_sequence SimLoop_Loop_VertexLoop_;
        SimMappedRepresentationItem_Default_Default_sequence SimMappedRepresentationItem_Default_Default_;
        SimMaterial_Default_Default_sequence SimMaterial_Default_Default_;
        SimMaterial_GlazingMaterial_Blind_sequence SimMaterial_GlazingMaterial_Blind_;
        SimMaterial_GlazingMaterial_ComplexShade_sequence SimMaterial_GlazingMaterial_ComplexShade_;
        SimMaterial_GlazingMaterial_Gap_sequence SimMaterial_GlazingMaterial_Gap_;
        SimMaterial_GlazingMaterial_Gas_sequence SimMaterial_GlazingMaterial_Gas_;
        SimMaterial_GlazingMaterial_GasMixture_sequence SimMaterial_GlazingMaterial_GasMixture_;
        SimMaterial_GlazingMaterial_Glazing_sequence SimMaterial_GlazingMaterial_Glazing_;
        SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_sequence SimMaterial_GlazingMaterial_GlazingRefractionExtinctionMethod_;
        SimMaterial_GlazingMaterial_Screen_sequence SimMaterial_GlazingMaterial_Screen_;
        SimMaterial_GlazingMaterial_Shade_sequence SimMaterial_GlazingMaterial_Shade_;
        SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence SimMaterial_GlazingMaterial_SimpleGlazingSystem_;
        SimMaterial_GlazingMaterial_Thermochromic_sequence SimMaterial_GlazingMaterial_Thermochromic_;
        SimMaterial_OpaqueMaterial_AirGap_sequence SimMaterial_OpaqueMaterial_AirGap_;
        SimMaterial_OpaqueMaterial_Composite_sequence SimMaterial_OpaqueMaterial_Composite_;
        SimMaterial_OpaqueMaterial_Default_sequence SimMaterial_OpaqueMaterial_Default_;
        SimMaterial_OpaqueMaterial_InfraredTransparent_sequence SimMaterial_OpaqueMaterial_InfraredTransparent_;
        SimMaterial_OpaqueMaterial_Insulation_sequence SimMaterial_OpaqueMaterial_Insulation_;
        SimMaterial_OpaqueMaterial_InsulationMovable_sequence SimMaterial_OpaqueMaterial_InsulationMovable_;
        SimMaterial_OpaqueMaterial_NoMass_sequence SimMaterial_OpaqueMaterial_NoMass_;
        SimMaterial_OpaqueMaterial_Vegetation_sequence SimMaterial_OpaqueMaterial_Vegetation_;
        SimMaterial_VirtualBoundary_Default_sequence SimMaterial_VirtualBoundary_Default_;
        SimMaterialLayer_GlazingMaterialLayer_Default_sequence SimMaterialLayer_GlazingMaterialLayer_Default_;
        SimMaterialLayer_OpaqueMaterialLayer_Default_sequence SimMaterialLayer_OpaqueMaterialLayer_Default_;
        SimMaterialLayer_VirtualBoundaryLayer_Default_sequence SimMaterialLayer_VirtualBoundaryLayer_Default_;
        SimMaterialLayerSet_Default_Default_sequence SimMaterialLayerSet_Default_Default_;
        SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_sequence SimMaterialLayerSet_GlazingLayerSet_ComplexFenestrationState_;
        SimMaterialLayerSet_GlazingLayerSet_CurtainWall_sequence SimMaterialLayerSet_GlazingLayerSet_CurtainWall_;
        SimMaterialLayerSet_GlazingLayerSet_Default_sequence SimMaterialLayerSet_GlazingLayerSet_Default_;
        SimMaterialLayerSet_GlazingLayerSet_GlassDoor_sequence SimMaterialLayerSet_GlazingLayerSet_GlassDoor_;
        SimMaterialLayerSet_GlazingLayerSet_Window_sequence SimMaterialLayerSet_GlazingLayerSet_Window_;
        SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_sequence SimMaterialLayerSet_GlazingLayerSet_WindowDataFile_;
        SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence SimMaterialLayerSet_OpaqueLayerSet_Ceiling_;
        SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_sequence SimMaterialLayerSet_OpaqueLayerSet_CfactorUndergroundWall_;
        SimMaterialLayerSet_OpaqueLayerSet_Default_sequence SimMaterialLayerSet_OpaqueLayerSet_Default_;
        SimMaterialLayerSet_OpaqueLayerSet_Door_sequence SimMaterialLayerSet_OpaqueLayerSet_Door_;
        SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_sequence SimMaterialLayerSet_OpaqueLayerSet_FfactorGroundFloor_;
        SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence SimMaterialLayerSet_OpaqueLayerSet_Floor_;
        SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence SimMaterialLayerSet_OpaqueLayerSet_InternalSource_;
        SimMaterialLayerSet_OpaqueLayerSet_Landing_sequence SimMaterialLayerSet_OpaqueLayerSet_Landing_;
        SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence SimMaterialLayerSet_OpaqueLayerSet_Roof_;
        SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence SimMaterialLayerSet_OpaqueLayerSet_Wall_;
        SimMeasureType_AreaMeasure_Default_sequence SimMeasureType_AreaMeasure_Default_;
        SimMeasureType_CountMeasure_AirChangesPerhour_sequence SimMeasureType_CountMeasure_AirChangesPerhour_;
        SimMeasureType_CountMeasure_Count_sequence SimMeasureType_CountMeasure_Count_;
        SimMeasureType_Default_Default_sequence SimMeasureType_Default_Default_;
        SimMeasureType_EnergyMeasure_Default_sequence SimMeasureType_EnergyMeasure_Default_;
        SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_sequence SimMeasureType_EnergyMeasure_WattsPerAreaMeasure_;
        SimMeasureType_EnergyMeasure_WattsPerPerson_sequence SimMeasureType_EnergyMeasure_WattsPerPerson_;
        SimMeasureType_LengthMeasure_Default_sequence SimMeasureType_LengthMeasure_Default_;
        SimMeasureType_MassMeasure_Default_sequence SimMeasureType_MassMeasure_Default_;
        SimMeasureType_MonetaryMeasure_Default_sequence SimMeasureType_MonetaryMeasure_Default_;
        SimMeasureType_PersonsPerAreaMeasure_Default_sequence SimMeasureType_PersonsPerAreaMeasure_Default_;
        SimMeasureType_RatioMeasure_Default_sequence SimMeasureType_RatioMeasure_Default_;
        SimMeasureType_RatioMeasure_PositiveRatioMeasure_sequence SimMeasureType_RatioMeasure_PositiveRatioMeasure_;
        SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_sequence SimMeasureType_RotationalAngleMeasure_CompoundPlaneAngleMeasure_;
        SimMeasureType_RotationalAngleMeasure_Degrees_sequence SimMeasureType_RotationalAngleMeasure_Degrees_;
        SimMeasureType_ThermodynamicTemperatureMeasure_Default_sequence SimMeasureType_ThermodynamicTemperatureMeasure_Default_;
        SimMeasureType_VolumeMeasure_Default_sequence SimMeasureType_VolumeMeasure_Default_;
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_sequence SimMeasureType_VolumetricFlowRateMeasure_M3PerSecond_;
        SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_sequence SimMeasureType_VolumetricFlowRateMeasure_M3PerSecondPerPerson_;
        SimMember_Default_Default_sequence SimMember_Default_Default_;
        SimMemberParams_Profile_Member_sequence SimMemberParams_Profile_Member_;
        SimMemberProfileProperties_Beam_Default_sequence SimMemberProfileProperties_Beam_Default_;
        SimMemberProfileProperties_Column_Default_sequence SimMemberProfileProperties_Column_Default_;
        SimMemberProfileProperties_Default_Default_sequence SimMemberProfileProperties_Default_Default_;
        SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence SimModelRepresentationContext_GeometricRepresentationContext_Default_;
        SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence SimModelRepresentationContext_GeometricRepresentationSubContext_Default_;
        SimModelRepresentationContext_RepresentationContext_Default_sequence SimModelRepresentationContext_RepresentationContext_Default_;
        SimNode_AirflowNetworkNode_AirDistributionNode_sequence SimNode_AirflowNetworkNode_AirDistributionNode_;
        SimNode_AirflowNetworkNode_ExternalNode_sequence SimNode_AirflowNetworkNode_ExternalNode_;
        SimNode_AirflowNetworkNode_ZoneNode_sequence SimNode_AirflowNetworkNode_ZoneNode_;
        SimNode_AirFlowPort_Air_In_sequence SimNode_AirFlowPort_Air_In_;
        SimNode_AirFlowPort_Air_InOrOut_sequence SimNode_AirFlowPort_Air_InOrOut_;
        SimNode_AirFlowPort_Air_Out_sequence SimNode_AirFlowPort_Air_Out_;
        SimNode_AirFlowPort_Default_sequence SimNode_AirFlowPort_Default_;
        SimNode_AirFlowPort_ExhaustAir_Out_sequence SimNode_AirFlowPort_ExhaustAir_Out_;
        SimNode_AirFlowPort_OutdoorAir_In_sequence SimNode_AirFlowPort_OutdoorAir_In_;
        SimNode_ChilledWaterFlowPort_CondensedWaterOut_sequence SimNode_ChilledWaterFlowPort_CondensedWaterOut_;
        SimNode_ChilledWaterFlowPort_Default_sequence SimNode_ChilledWaterFlowPort_Default_;
        SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_sequence SimNode_ChilledWaterFlowPort_EvaporativeWaterIn_;
        SimNode_ChilledWaterFlowPort_Water_In_sequence SimNode_ChilledWaterFlowPort_Water_In_;
        SimNode_ChilledWaterFlowPort_Water_InOrOut_sequence SimNode_ChilledWaterFlowPort_Water_InOrOut_;
        SimNode_ChilledWaterFlowPort_Water_Out_sequence SimNode_ChilledWaterFlowPort_Water_Out_;
        SimNode_CondenserFlowPort_CondenserFlow_In_sequence SimNode_CondenserFlowPort_CondenserFlow_In_;
        SimNode_CondenserFlowPort_CondenserFlow_InOrOut_sequence SimNode_CondenserFlowPort_CondenserFlow_InOrOut_;
        SimNode_CondenserFlowPort_CondenserFlow_Out_sequence SimNode_CondenserFlowPort_CondenserFlow_Out_;
        SimNode_CondenserFlowPort_Default_sequence SimNode_CondenserFlowPort_Default_;
        SimNode_DaylightingReferencePoint_Default_sequence SimNode_DaylightingReferencePoint_Default_;
        SimNode_DigitalControl_AirLoop_Default_sequence SimNode_DigitalControl_AirLoop_Default_;
        SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence SimNode_DigitalControl_AirLoop_DigitalSignal_In_;
        SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_AirLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_AirLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_AirLoop_DigitalSignal_Out_;
        SimNode_DigitalControl_CHWLoop_Default_sequence SimNode_DigitalControl_CHWLoop_Default_;
        SimNode_DigitalControl_CHWLoop_DigitalSignal_In_sequence SimNode_DigitalControl_CHWLoop_DigitalSignal_In_;
        SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_CHWLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_CHWLoop_DigitalSignal_Out_;
        SimNode_DigitalControl_CWLoop_Default_sequence SimNode_DigitalControl_CWLoop_Default_;
        SimNode_DigitalControl_CWLoop_DigitalSignal_In_sequence SimNode_DigitalControl_CWLoop_DigitalSignal_In_;
        SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_CWLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_CWLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_CWLoop_DigitalSignal_Out_;
        SimNode_DigitalControl_HWLoop_Default_sequence SimNode_DigitalControl_HWLoop_Default_;
        SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence SimNode_DigitalControl_HWLoop_DigitalSignal_In_;
        SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_HWLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_HWLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_HWLoop_DigitalSignal_Out_;
        SimNode_DigitalControl_MxWLoop_Default_sequence SimNode_DigitalControl_MxWLoop_Default_;
        SimNode_DigitalControl_MxWLoop_DigitalSignal_In_sequence SimNode_DigitalControl_MxWLoop_DigitalSignal_In_;
        SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_MxWLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_MxWLoop_DigitalSignal_Out_;
        SimNode_DigitalControl_RFGLoop_Default_sequence SimNode_DigitalControl_RFGLoop_Default_;
        SimNode_DigitalControl_RFGLoop_DigitalSignal_In_sequence SimNode_DigitalControl_RFGLoop_DigitalSignal_In_;
        SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_RFGLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_RFGLoop_DigitalSignal_Out_;
        SimNode_DigitalControl_STMLoop_Default_sequence SimNode_DigitalControl_STMLoop_Default_;
        SimNode_DigitalControl_STMLoop_DigitalSignal_In_sequence SimNode_DigitalControl_STMLoop_DigitalSignal_In_;
        SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence SimNode_DigitalControl_STMLoop_DigitalSignal_InOrOut_;
        SimNode_DigitalControl_STMLoop_DigitalSignal_Out_sequence SimNode_DigitalControl_STMLoop_DigitalSignal_Out_;
        SimNode_DigitalControlPort_Default_sequence SimNode_DigitalControlPort_Default_;
        SimNode_DigitalControlPort_DigitalSignal_In_sequence SimNode_DigitalControlPort_DigitalSignal_In_;
        SimNode_DigitalControlPort_DigitalSignal_InOrOut_sequence SimNode_DigitalControlPort_DigitalSignal_InOrOut_;
        SimNode_DigitalControlPort_DigitalSignal_Out_sequence SimNode_DigitalControlPort_DigitalSignal_Out_;
        SimNode_DigitalControlPort_DigitalVirtual_sequence SimNode_DigitalControlPort_DigitalVirtual_;
        SimNode_DistributionPort_Default_sequence SimNode_DistributionPort_Default_;
        SimNode_Docking_Default_sequence SimNode_Docking_Default_;
        SimNode_Docking_Thermalzone_sequence SimNode_Docking_Thermalzone_;
        SimNode_ElectricalFlowPort_Default_sequence SimNode_ElectricalFlowPort_Default_;
        SimNode_ElectricalFlowPort_Electrical_In_sequence SimNode_ElectricalFlowPort_Electrical_In_;
        SimNode_ElectricalFlowPort_Electrical_InOrOut_sequence SimNode_ElectricalFlowPort_Electrical_InOrOut_;
        SimNode_ElectricalFlowPort_Electrical_Out_sequence SimNode_ElectricalFlowPort_Electrical_Out_;
        SimNode_HotWaterFlowPort_CondensedWaterOut_sequence SimNode_HotWaterFlowPort_CondensedWaterOut_;
        SimNode_HotWaterFlowPort_Default_sequence SimNode_HotWaterFlowPort_Default_;
        SimNode_HotWaterFlowPort_EvaporativeWaterIn_sequence SimNode_HotWaterFlowPort_EvaporativeWaterIn_;
        SimNode_HotWaterFlowPort_Water_In_sequence SimNode_HotWaterFlowPort_Water_In_;
        SimNode_HotWaterFlowPort_Water_InOrOut_sequence SimNode_HotWaterFlowPort_Water_InOrOut_;
        SimNode_HotWaterFlowPort_Water_Out_sequence SimNode_HotWaterFlowPort_Water_Out_;
        SimNode_MixedWaterFlowPort_CondensedWaterOut_sequence SimNode_MixedWaterFlowPort_CondensedWaterOut_;
        SimNode_MixedWaterFlowPort_Default_sequence SimNode_MixedWaterFlowPort_Default_;
        SimNode_MixedWaterFlowPort_EvaporativeWaterIn_sequence SimNode_MixedWaterFlowPort_EvaporativeWaterIn_;
        SimNode_MixedWaterFlowPort_Water_In_sequence SimNode_MixedWaterFlowPort_Water_In_;
        SimNode_MixedWaterFlowPort_Water_InOrOut_sequence SimNode_MixedWaterFlowPort_Water_InOrOut_;
        SimNode_MixedWaterFlowPort_Water_Out_sequence SimNode_MixedWaterFlowPort_Water_Out_;
        SimNode_Node_Default_sequence SimNode_Node_Default_;
        SimNode_Node_OutdoorAir_sequence SimNode_Node_OutdoorAir_;
        SimNode_Port_Default_sequence SimNode_Port_Default_;
        SimNode_RefrigerationFlowPort_Default_sequence SimNode_RefrigerationFlowPort_Default_;
        SimNode_RefrigerationFlowPort_Refrigeration_In_sequence SimNode_RefrigerationFlowPort_Refrigeration_In_;
        SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_sequence SimNode_RefrigerationFlowPort_Refrigeration_InOrOut_;
        SimNode_RefrigerationFlowPort_Refrigeration_Out_sequence SimNode_RefrigerationFlowPort_Refrigeration_Out_;
        SimNode_SetpointNode_Default_sequence SimNode_SetpointNode_Default_;
        SimNode_SteamFlowPort_Default_sequence SimNode_SteamFlowPort_Default_;
        SimNode_SteamFlowPort_Steam_In_sequence SimNode_SteamFlowPort_Steam_In_;
        SimNode_SteamFlowPort_Steam_InOrOut_sequence SimNode_SteamFlowPort_Steam_InOrOut_;
        SimNode_SteamFlowPort_Steam_Out_sequence SimNode_SteamFlowPort_Steam_Out_;
        SimNode_ZoneAirFlowPort_Air_In_sequence SimNode_ZoneAirFlowPort_Air_In_;
        SimNode_ZoneAirFlowPort_Air_Out_sequence SimNode_ZoneAirFlowPort_Air_Out_;
        SimNode_ZoneAirNode_Default_sequence SimNode_ZoneAirNode_Default_;
        SimObjectOutputRequestSet_Default_Default_sequence SimObjectOutputRequestSet_Default_Default_;
        SimOpeningType_Opening_Default_sequence SimOpeningType_Opening_Default_;
        SimOrganization_Organization_Architect_sequence SimOrganization_Organization_Architect_;
        SimOrganization_Organization_Default_sequence SimOrganization_Organization_Default_;
        SimOrganization_Organization_Engineer_sequence SimOrganization_Organization_Engineer_;
        SimOrganization_Organization_Owner_sequence SimOrganization_Organization_Owner_;
        SimOwnerHistory_Default_Default_sequence SimOwnerHistory_Default_Default_;
        SimPanel_Default_Default_sequence SimPanel_Default_Default_;
        SimPanelArrayParams_PanelArray_Default_sequence SimPanelArrayParams_PanelArray_Default_;
        SimPanelArrayParams_SolarShadeArray_Default_sequence SimPanelArrayParams_SolarShadeArray_Default_;
        SimPanelParams_Panel_Default_sequence SimPanelParams_Panel_Default_;
        SimPanelParams_Panel_Glazing_sequence SimPanelParams_Panel_Glazing_;
        SimPanelParams_Panel_SolarShading_sequence SimPanelParams_Panel_SolarShading_;
        SimParameterizedProfileDef_ParameterizedProfile_C_Shape_sequence SimParameterizedProfileDef_ParameterizedProfile_C_Shape_;
        SimParameterizedProfileDef_ParameterizedProfile_Circle_sequence SimParameterizedProfileDef_ParameterizedProfile_Circle_;
        SimParameterizedProfileDef_ParameterizedProfile_Ellipse_sequence SimParameterizedProfileDef_ParameterizedProfile_Ellipse_;
        SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_sequence SimParameterizedProfileDef_ParameterizedProfile_HollowRectangle_;
        SimParameterizedProfileDef_ParameterizedProfile_I_Shape_sequence SimParameterizedProfileDef_ParameterizedProfile_I_Shape_;
        SimParameterizedProfileDef_ParameterizedProfile_L_Shape_sequence SimParameterizedProfileDef_ParameterizedProfile_L_Shape_;
        SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence SimParameterizedProfileDef_ParameterizedProfile_Rectangle_;
        SimParameterizedProfileDef_ParameterizedProfile_T_Shape_sequence SimParameterizedProfileDef_ParameterizedProfile_T_Shape_;
        SimParameterizedProfileDef_ParameterizedProfile_U_Shape_sequence SimParameterizedProfileDef_ParameterizedProfile_U_Shape_;
        SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_sequence SimParameterizedProfileDef_ParameterizedProfile_Z_Shape_;
        SimPerformanceCurve_Mathematical_Bicubic_sequence SimPerformanceCurve_Mathematical_Bicubic_;
        SimPerformanceCurve_Mathematical_Biquadratic_sequence SimPerformanceCurve_Mathematical_Biquadratic_;
        SimPerformanceCurve_Mathematical_Cubic_sequence SimPerformanceCurve_Mathematical_Cubic_;
        SimPerformanceCurve_Mathematical_DoubleExponentialDecay_sequence SimPerformanceCurve_Mathematical_DoubleExponentialDecay_;
        SimPerformanceCurve_Mathematical_Exponent_sequence SimPerformanceCurve_Mathematical_Exponent_;
        SimPerformanceCurve_Mathematical_ExponentialDecay_sequence SimPerformanceCurve_Mathematical_ExponentialDecay_;
        SimPerformanceCurve_Mathematical_ExponentialSkewNormal_sequence SimPerformanceCurve_Mathematical_ExponentialSkewNormal_;
        SimPerformanceCurve_Mathematical_FanPressureRise_sequence SimPerformanceCurve_Mathematical_FanPressureRise_;
        SimPerformanceCurve_Mathematical_Linear_sequence SimPerformanceCurve_Mathematical_Linear_;
        SimPerformanceCurve_Mathematical_QuadLinear_sequence SimPerformanceCurve_Mathematical_QuadLinear_;
        SimPerformanceCurve_Mathematical_Quadratic_sequence SimPerformanceCurve_Mathematical_Quadratic_;
        SimPerformanceCurve_Mathematical_QuadraticLinear_sequence SimPerformanceCurve_Mathematical_QuadraticLinear_;
        SimPerformanceCurve_Mathematical_Quartic_sequence SimPerformanceCurve_Mathematical_Quartic_;
        SimPerformanceCurve_Mathematical_RectangularHyperbola1_sequence SimPerformanceCurve_Mathematical_RectangularHyperbola1_;
        SimPerformanceCurve_Mathematical_RectangularHyperbola2_sequence SimPerformanceCurve_Mathematical_RectangularHyperbola2_;
        SimPerformanceCurve_Mathematical_Sigmoid_sequence SimPerformanceCurve_Mathematical_Sigmoid_;
        SimPerformanceCurve_Mathematical_TriQuadratic_sequence SimPerformanceCurve_Mathematical_TriQuadratic_;
        SimPerformanceCurve_Relational_PressureDrop_sequence SimPerformanceCurve_Relational_PressureDrop_;
        SimPerformanceTable_Variable_MultiLookup_sequence SimPerformanceTable_Variable_MultiLookup_;
        SimPerformanceTable_Variable_OneIndependent_sequence SimPerformanceTable_Variable_OneIndependent_;
        SimPerformanceTable_Variable_TwoIndependent_sequence SimPerformanceTable_Variable_TwoIndependent_;
        SimPerson_Person_Default_sequence SimPerson_Person_Default_;
        SimPersonAndOrganization_PersonAndOrganization_Architect_sequence SimPersonAndOrganization_PersonAndOrganization_Architect_;
        SimPersonAndOrganization_PersonAndOrganization_Default_sequence SimPersonAndOrganization_PersonAndOrganization_Default_;
        SimPersonAndOrganization_PersonAndOrganization_Engineer_sequence SimPersonAndOrganization_PersonAndOrganization_Engineer_;
        SimPersonAndOrganization_PersonAndOrganization_Owner_sequence SimPersonAndOrganization_PersonAndOrganization_Owner_;
        SimPlacement_Axis1Placement_Default_sequence SimPlacement_Axis1Placement_Default_;
        SimPlacement_Axis2Placement2D_Default_sequence SimPlacement_Axis2Placement2D_Default_;
        SimPlacement_Axis2Placement3D_Default_sequence SimPlacement_Axis2Placement3D_Default_;
        SimPort_AirFlowPort_Air_In_sequence SimPort_AirFlowPort_Air_In_;
        SimPort_AirFlowPort_Air_InOrOut_sequence SimPort_AirFlowPort_Air_InOrOut_;
        SimPort_AirFlowPort_Air_Out_sequence SimPort_AirFlowPort_Air_Out_;
        SimPort_AirFlowPort_Default_sequence SimPort_AirFlowPort_Default_;
        SimPort_AirFlowPort_ExhaustAir_Out_sequence SimPort_AirFlowPort_ExhaustAir_Out_;
        SimPort_AirFlowPort_OutdoorAir_In_sequence SimPort_AirFlowPort_OutdoorAir_In_;
        SimPort_ChilledWaterFlowPort_CondensedWaterOut_sequence SimPort_ChilledWaterFlowPort_CondensedWaterOut_;
        SimPort_ChilledWaterFlowPort_Default_sequence SimPort_ChilledWaterFlowPort_Default_;
        SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_sequence SimPort_ChilledWaterFlowPort_EvaporativeWaterIn_;
        SimPort_ChilledWaterFlowPort_Water_In_sequence SimPort_ChilledWaterFlowPort_Water_In_;
        SimPort_ChilledWaterFlowPort_Water_InOrOut_sequence SimPort_ChilledWaterFlowPort_Water_InOrOut_;
        SimPort_ChilledWaterFlowPort_Water_Out_sequence SimPort_ChilledWaterFlowPort_Water_Out_;
        SimPort_CondenserFlowPort_CondenserFlow_In_sequence SimPort_CondenserFlowPort_CondenserFlow_In_;
        SimPort_CondenserFlowPort_CondenserFlow_InOrOut_sequence SimPort_CondenserFlowPort_CondenserFlow_InOrOut_;
        SimPort_CondenserFlowPort_CondenserFlow_Out_sequence SimPort_CondenserFlowPort_CondenserFlow_Out_;
        SimPort_CondenserFlowPort_Default_sequence SimPort_CondenserFlowPort_Default_;
        SimPort_DigitalControl_AirLoop_Default_sequence SimPort_DigitalControl_AirLoop_Default_;
        SimPort_DigitalControl_AirLoop_DigitalSignal_In_sequence SimPort_DigitalControl_AirLoop_DigitalSignal_In_;
        SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_AirLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_AirLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_AirLoop_DigitalSignal_Out_;
        SimPort_DigitalControl_CHWLoop_Default_sequence SimPort_DigitalControl_CHWLoop_Default_;
        SimPort_DigitalControl_CHWLoop_DigitalSignal_In_sequence SimPort_DigitalControl_CHWLoop_DigitalSignal_In_;
        SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_CHWLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_CHWLoop_DigitalSignal_Out_;
        SimPort_DigitalControl_CWLoop_Default_sequence SimPort_DigitalControl_CWLoop_Default_;
        SimPort_DigitalControl_CWLoop_DigitalSignal_In_sequence SimPort_DigitalControl_CWLoop_DigitalSignal_In_;
        SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_CWLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_CWLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_CWLoop_DigitalSignal_Out_;
        SimPort_DigitalControl_HWLoop_Default_sequence SimPort_DigitalControl_HWLoop_Default_;
        SimPort_DigitalControl_HWLoop_DigitalSignal_In_sequence SimPort_DigitalControl_HWLoop_DigitalSignal_In_;
        SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_HWLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_HWLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_HWLoop_DigitalSignal_Out_;
        SimPort_DigitalControl_MxWLoop_Default_sequence SimPort_DigitalControl_MxWLoop_Default_;
        SimPort_DigitalControl_MxWLoop_DigitalSignal_In_sequence SimPort_DigitalControl_MxWLoop_DigitalSignal_In_;
        SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_MxWLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_MxWLoop_DigitalSignal_Out_;
        SimPort_DigitalControl_RFGLoop_Default_sequence SimPort_DigitalControl_RFGLoop_Default_;
        SimPort_DigitalControl_RFGLoop_DigitalSignal_In_sequence SimPort_DigitalControl_RFGLoop_DigitalSignal_In_;
        SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_RFGLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_RFGLoop_DigitalSignal_Out_;
        SimPort_DigitalControl_STMLoop_Default_sequence SimPort_DigitalControl_STMLoop_Default_;
        SimPort_DigitalControl_STMLoop_DigitalSignal_In_sequence SimPort_DigitalControl_STMLoop_DigitalSignal_In_;
        SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_sequence SimPort_DigitalControl_STMLoop_DigitalSignal_InOrOut_;
        SimPort_DigitalControl_STMLoop_DigitalSignal_Out_sequence SimPort_DigitalControl_STMLoop_DigitalSignal_Out_;
        SimPort_DigitalControlPort_Default_sequence SimPort_DigitalControlPort_Default_;
        SimPort_DigitalControlPort_DigitalSignal_In_sequence SimPort_DigitalControlPort_DigitalSignal_In_;
        SimPort_DigitalControlPort_DigitalSignal_InOrOut_sequence SimPort_DigitalControlPort_DigitalSignal_InOrOut_;
        SimPort_DigitalControlPort_DigitalSignal_Out_sequence SimPort_DigitalControlPort_DigitalSignal_Out_;
        SimPort_DigitalControlPort_DigitalVirtual_sequence SimPort_DigitalControlPort_DigitalVirtual_;
        SimPort_DistributionPort_Default_sequence SimPort_DistributionPort_Default_;
        SimPort_Docking_Default_sequence SimPort_Docking_Default_;
        SimPort_Docking_Thermalzone_sequence SimPort_Docking_Thermalzone_;
        SimPort_ElectricalFlowPort_Default_sequence SimPort_ElectricalFlowPort_Default_;
        SimPort_ElectricalFlowPort_Electrical_In_sequence SimPort_ElectricalFlowPort_Electrical_In_;
        SimPort_ElectricalFlowPort_Electrical_InOrOut_sequence SimPort_ElectricalFlowPort_Electrical_InOrOut_;
        SimPort_ElectricalFlowPort_Electrical_Out_sequence SimPort_ElectricalFlowPort_Electrical_Out_;
        SimPort_HotWaterFlowPort_CondensedWaterOut_sequence SimPort_HotWaterFlowPort_CondensedWaterOut_;
        SimPort_HotWaterFlowPort_Default_sequence SimPort_HotWaterFlowPort_Default_;
        SimPort_HotWaterFlowPort_EvaporativeWaterIn_sequence SimPort_HotWaterFlowPort_EvaporativeWaterIn_;
        SimPort_HotWaterFlowPort_Water_In_sequence SimPort_HotWaterFlowPort_Water_In_;
        SimPort_HotWaterFlowPort_Water_InOrOut_sequence SimPort_HotWaterFlowPort_Water_InOrOut_;
        SimPort_HotWaterFlowPort_Water_Out_sequence SimPort_HotWaterFlowPort_Water_Out_;
        SimPort_MixedWaterFlowPort_CondensedWaterOut_sequence SimPort_MixedWaterFlowPort_CondensedWaterOut_;
        SimPort_MixedWaterFlowPort_Default_sequence SimPort_MixedWaterFlowPort_Default_;
        SimPort_MixedWaterFlowPort_EvaporativeWaterIn_sequence SimPort_MixedWaterFlowPort_EvaporativeWaterIn_;
        SimPort_MixedWaterFlowPort_Water_In_sequence SimPort_MixedWaterFlowPort_Water_In_;
        SimPort_MixedWaterFlowPort_Water_InOrOut_sequence SimPort_MixedWaterFlowPort_Water_InOrOut_;
        SimPort_MixedWaterFlowPort_Water_Out_sequence SimPort_MixedWaterFlowPort_Water_Out_;
        SimPort_Port_Default_sequence SimPort_Port_Default_;
        SimPort_RefrigerationFlowPort_Default_sequence SimPort_RefrigerationFlowPort_Default_;
        SimPort_RefrigerationFlowPort_Refrigeration_In_sequence SimPort_RefrigerationFlowPort_Refrigeration_In_;
        SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_sequence SimPort_RefrigerationFlowPort_Refrigeration_InOrOut_;
        SimPort_RefrigerationFlowPort_Refrigeration_Out_sequence SimPort_RefrigerationFlowPort_Refrigeration_Out_;
        SimPort_SteamFlowPort_Default_sequence SimPort_SteamFlowPort_Default_;
        SimPort_SteamFlowPort_Steam_In_sequence SimPort_SteamFlowPort_Steam_In_;
        SimPort_SteamFlowPort_Steam_InOrOut_sequence SimPort_SteamFlowPort_Steam_InOrOut_;
        SimPort_SteamFlowPort_Steam_Out_sequence SimPort_SteamFlowPort_Steam_Out_;
        SimPort_ZoneAirFlowPort_Air_In_sequence SimPort_ZoneAirFlowPort_Air_In_;
        SimPort_ZoneAirFlowPort_Air_Out_sequence SimPort_ZoneAirFlowPort_Air_Out_;
        SimPresentationLayerAssignment_Default_Default_sequence SimPresentationLayerAssignment_Default_Default_;
        SimProfileDefinition_ArbitraryProfile_Closed_sequence SimProfileDefinition_ArbitraryProfile_Closed_;
        SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_sequence SimProfileDefinition_ArbitraryProfile_ClosedWithVoids_;
        SimProfileDefinition_ArbitraryProfile_Open_sequence SimProfileDefinition_ArbitraryProfile_Open_;
        SimProfileDefinition_CompositeProfile_Default_sequence SimProfileDefinition_CompositeProfile_Default_;
        SimProfileDefinition_Default_Default_sequence SimProfileDefinition_Default_Default_;
        SimProfileDefinition_ParameterizedProfile_C_Shape_sequence SimProfileDefinition_ParameterizedProfile_C_Shape_;
        SimProfileDefinition_ParameterizedProfile_Circle_sequence SimProfileDefinition_ParameterizedProfile_Circle_;
        SimProfileDefinition_ParameterizedProfile_Ellipse_sequence SimProfileDefinition_ParameterizedProfile_Ellipse_;
        SimProfileDefinition_ParameterizedProfile_HollowRectangle_sequence SimProfileDefinition_ParameterizedProfile_HollowRectangle_;
        SimProfileDefinition_ParameterizedProfile_I_Shape_sequence SimProfileDefinition_ParameterizedProfile_I_Shape_;
        SimProfileDefinition_ParameterizedProfile_L_Shape_sequence SimProfileDefinition_ParameterizedProfile_L_Shape_;
        SimProfileDefinition_ParameterizedProfile_Rectangle_sequence SimProfileDefinition_ParameterizedProfile_Rectangle_;
        SimProfileDefinition_ParameterizedProfile_T_Shape_sequence SimProfileDefinition_ParameterizedProfile_T_Shape_;
        SimProfileDefinition_ParameterizedProfile_U_Shape_sequence SimProfileDefinition_ParameterizedProfile_U_Shape_;
        SimProfileDefinition_ParameterizedProfile_Z_Shape_sequence SimProfileDefinition_ParameterizedProfile_Z_Shape_;
        SimProfileParams_Profile_Default_sequence SimProfileParams_Profile_Default_;
        SimProfileParams_Profile_Member_sequence SimProfileParams_Profile_Member_;
        SimProject_Project_DesignAlternative_sequence SimProject_Project_DesignAlternative_;
        SimPropertyListValue_SimpleProp_ListValue_sequence SimPropertyListValue_SimpleProp_ListValue_;
        SimPropertySet_PropertySet_Default_sequence SimPropertySet_PropertySet_Default_;
        SimPropertySingleValue_SimpleProp_SingleValue_sequence SimPropertySingleValue_SimpleProp_SingleValue_;
        SimRailing_Default_Default_sequence SimRailing_Default_Default_;
        SimRailing_GuardRailing_Default_sequence SimRailing_GuardRailing_Default_;
        SimRailing_HandRailing_Default_sequence SimRailing_HandRailing_Default_;
        SimRailingParams_Railing_Default_sequence SimRailingParams_Railing_Default_;
        SimRamp_Ramp_Default_sequence SimRamp_Ramp_Default_;
        SimRampFlight_Default_Default_sequence SimRampFlight_Default_Default_;
        SimRampFlightParams_RampFlight_Default_sequence SimRampFlightParams_RampFlight_Default_;
        SimRampParams_Ramp_Default_sequence SimRampParams_Ramp_Default_;
        SimReferenceByName_Default_Default_sequence SimReferenceByName_Default_Default_;
        SimRefrigerationSystemElement_Compressor_Default_sequence SimRefrigerationSystemElement_Compressor_Default_;
        SimRefrigerationSystemElement_Condenser_AirCooled_sequence SimRefrigerationSystemElement_Condenser_AirCooled_;
        SimRefrigerationSystemElement_Condenser_Cascade_sequence SimRefrigerationSystemElement_Condenser_Cascade_;
        SimRefrigerationSystemElement_Condenser_EvaporativeCooled_sequence SimRefrigerationSystemElement_Condenser_EvaporativeCooled_;
        SimRefrigerationSystemElement_Condenser_WaterCooled_sequence SimRefrigerationSystemElement_Condenser_WaterCooled_;
        SimRefrigerationSystemElement_Default_Default_sequence SimRefrigerationSystemElement_Default_Default_;
        SimRefrigerationSystemElement_GasCooler_AirCooled_sequence SimRefrigerationSystemElement_GasCooler_AirCooled_;
        SimRefrigerationSystemElement_PackagedCompressorRack_Default_sequence SimRefrigerationSystemElement_PackagedCompressorRack_Default_;
        SimRefrigerationSystemElement_RefrigeratedCase_Default_sequence SimRefrigerationSystemElement_RefrigeratedCase_Default_;
        SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_sequence SimRefrigerationSystemElement_RefrigerationChiller_AirChiller_;
        SimRefrigerationSystemElement_Subcooler_Default_sequence SimRefrigerationSystemElement_Subcooler_Default_;
        SimRefrigerationSystemElement_WalkInCooler_Default_sequence SimRefrigerationSystemElement_WalkInCooler_Default_;
        SimRegularTimeSeries_Regular_Default_sequence SimRegularTimeSeries_Regular_Default_;
        SimRepresentationMap_RepresentationMap_Default_sequence SimRepresentationMap_RepresentationMap_Default_;
        SimResourceConsumption_ExteriorConsumption_Default_sequence SimResourceConsumption_ExteriorConsumption_Default_;
        SimResourceConsumption_ExteriorConsumption_Electricity_sequence SimResourceConsumption_ExteriorConsumption_Electricity_;
        SimResourceConsumption_ExteriorConsumption_Fuel_sequence SimResourceConsumption_ExteriorConsumption_Fuel_;
        SimResourceConsumption_ExteriorConsumption_NaturalGas_sequence SimResourceConsumption_ExteriorConsumption_NaturalGas_;
        SimResourceConsumption_ExteriorConsumption_Water_sequence SimResourceConsumption_ExteriorConsumption_Water_;
        SimResourceConsumption_InteriorConsumption_Default_sequence SimResourceConsumption_InteriorConsumption_Default_;
        SimResultsGuide_ResultsGuide_CustomTemplate_sequence SimResultsGuide_ResultsGuide_CustomTemplate_;
        SimResultsGuide_ResultsGuide_Default_sequence SimResultsGuide_ResultsGuide_Default_;
        SimResultsGuide_ResultsGuide_PackageTemplate_sequence SimResultsGuide_ResultsGuide_PackageTemplate_;
        SimResultsTextInfo_ResultsTextInfo_Default_sequence SimResultsTextInfo_ResultsTextInfo_Default_;
        SimResultsVariables_ResultsVariables_Default_sequence SimResultsVariables_ResultsVariables_Default_;
        SimResultsView_ResultsView_Default_sequence SimResultsView_ResultsView_Default_;
        SimResultsViewSet_ResultsViewSet_Default_sequence SimResultsViewSet_ResultsViewSet_Default_;
        SimRoof_Roof_Default_sequence SimRoof_Roof_Default_;
        SimSensor_AirVelocitySensor_Default_sequence SimSensor_AirVelocitySensor_Default_;
        SimSensor_Default_Default_sequence SimSensor_Default_Default_;
        SimSensor_FireSensor_Default_sequence SimSensor_FireSensor_Default_;
        SimSensor_GasSensor_CO2Sensor_sequence SimSensor_GasSensor_CO2Sensor_;
        SimSensor_GasSensor_SmokeSensor_sequence SimSensor_GasSensor_SmokeSensor_;
        SimSensor_HeatSensor_Default_sequence SimSensor_HeatSensor_Default_;
        SimSensor_LuxSensor_Default_sequence SimSensor_LuxSensor_Default_;
        SimSensor_Meter_AirFlowRateMeter_sequence SimSensor_Meter_AirFlowRateMeter_;
        SimSensor_Meter_FluidFlowRateMeter_sequence SimSensor_Meter_FluidFlowRateMeter_;
        SimSensor_Meter_HvacZoneWaterUseMeter_sequence SimSensor_Meter_HvacZoneWaterUseMeter_;
        SimSensor_MovementSensor_Default_sequence SimSensor_MovementSensor_Default_;
        SimSensor_PressureSensor_Default_sequence SimSensor_PressureSensor_Default_;
        SimSensor_RelativeHumidity_Type1_sequence SimSensor_RelativeHumidity_Type1_;
        SimSensor_RelativeHumidity_Type2_sequence SimSensor_RelativeHumidity_Type2_;
        SimSensor_SolarRadiation_Default_sequence SimSensor_SolarRadiation_Default_;
        SimSensor_SoundSensor_Default_sequence SimSensor_SoundSensor_Default_;
        SimSensor_TemperatureSensor_DryBulb_sequence SimSensor_TemperatureSensor_DryBulb_;
        SimSensor_TemperatureSensor_Fluid_sequence SimSensor_TemperatureSensor_Fluid_;
        SimSensor_TemperatureSensor_Radiant_sequence SimSensor_TemperatureSensor_Radiant_;
        SimSensor_TemperatureSensor_WetBulb_sequence SimSensor_TemperatureSensor_WetBulb_;
        SimSensor_VirtualSensor_EmsSensor_sequence SimSensor_VirtualSensor_EmsSensor_;
        SimShapeRepresentation_ShapeRepresentation_Default_sequence SimShapeRepresentation_ShapeRepresentation_Default_;
        SimSimpleProperty_SimpleProp_Default_sequence SimSimpleProperty_SimpleProp_Default_;
        SimSimpleProperty_SimpleProp_ListValue_sequence SimSimpleProperty_SimpleProp_ListValue_;
        SimSimpleProperty_SimpleProp_SingleValue_sequence SimSimpleProperty_SimpleProp_SingleValue_;
        SimSimulationConfiguration_SimulationConfiguration_Default_sequence SimSimulationConfiguration_SimulationConfiguration_Default_;
        SimSimulationOutputFormat_ControlReportingTolerances_Default_sequence SimSimulationOutputFormat_ControlReportingTolerances_Default_;
        SimSimulationOutputFormat_ControlSizingStyle_Default_sequence SimSimulationOutputFormat_ControlSizingStyle_Default_;
        SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_sequence SimSimulationOutputFormat_ControlSurfaceColorScheme_Default_;
        SimSimulationOutputFormat_ControlTableStyle_Default_sequence SimSimulationOutputFormat_ControlTableStyle_Default_;
        SimSimulationOutputFormat_Default_Default_sequence SimSimulationOutputFormat_Default_Default_;
        SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_sequence SimSimulationOutputFormat_OutputControlIlluminanceMapStyle_Default_;
        SimSimulationOutputRequest_Daylighting_DaylightFactors_sequence SimSimulationOutputRequest_Daylighting_DaylightFactors_;
        SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_sequence SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap_;
        SimSimulationOutputRequest_Default_Default_sequence SimSimulationOutputRequest_Default_Default_;
        SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_sequence SimSimulationOutputRequest_FuelAndEnvironmental_EnvironmentalImpactFactors_;
        SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_sequence SimSimulationOutputRequest_FuelAndEnvironmental_FuelFactors_;
        SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_sequence SimSimulationOutputRequest_FuelAndEnvironmental_VarReqEnvironmentalImpactFactors_;
        SimSimulationOutputRequest_General_ReportReqDebuggingData_sequence SimSimulationOutputRequest_General_ReportReqDebuggingData_;
        SimSimulationOutputRequest_General_ReportReqDiagnostics_sequence SimSimulationOutputRequest_General_ReportReqDiagnostics_;
        SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_sequence SimSimulationOutputRequest_General_ReportReqEnergyManagementSystem_;
        SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_sequence SimSimulationOutputRequest_General_ReportReqPreprocessorMessage_;
        SimSimulationOutputRequest_General_ReportReqSchedules_sequence SimSimulationOutputRequest_General_ReportReqSchedules_;
        SimSimulationOutputRequest_General_ReportReqSQLite_sequence SimSimulationOutputRequest_General_ReportReqSQLite_;
        SimSimulationOutputRequest_General_ReportReqVariableDictionary_sequence SimSimulationOutputRequest_General_ReportReqVariableDictionary_;
        SimSimulationOutputRequest_Geometry_ReportReqConstructions_sequence SimSimulationOutputRequest_Geometry_ReportReqConstructions_;
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_sequence SimSimulationOutputRequest_Geometry_ReportReqSurfacesDrawing_;
        SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_sequence SimSimulationOutputRequest_Geometry_ReportReqSurfacesList_;
        SimSimulationOutputRequest_Meters_EnergyEndUseCategory_sequence SimSimulationOutputRequest_Meters_EnergyEndUseCategory_;
        SimSimulationOutputRequest_Meters_MeterCumulative_sequence SimSimulationOutputRequest_Meters_MeterCumulative_;
        SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_sequence SimSimulationOutputRequest_Meters_MeterCumulativeMeterFileOnly_;
        SimSimulationOutputRequest_Meters_MeterFileOnly_sequence SimSimulationOutputRequest_Meters_MeterFileOnly_;
        SimSimulationOutputRequest_Meters_VarReqMeter_sequence SimSimulationOutputRequest_Meters_VarReqMeter_;
        SimSimulationOutputRequest_Meters_VarReqMeterCustom_sequence SimSimulationOutputRequest_Meters_VarReqMeterCustom_;
        SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_sequence SimSimulationOutputRequest_Meters_VarReqMeterCustomDecrement_;
        SimSimulationOutputRequest_StandardReports_TableMonthly_sequence SimSimulationOutputRequest_StandardReports_TableMonthly_;
        SimSimulationOutputRequest_StandardReports_TableSummaryReports_sequence SimSimulationOutputRequest_StandardReports_TableSummaryReports_;
        SimSimulationOutputRequest_StandardReports_TableTimeBins_sequence SimSimulationOutputRequest_StandardReports_TableTimeBins_;
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_sequence SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemMeteredOutputVariable_;
        SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_sequence SimSimulationOutputRequest_TimeSeriesVariables_EnergyMgmtSystemOutputVariable_;
        SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_sequence SimSimulationOutputRequest_TimeSeriesVariables_VarReqVariable_;
        SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_sequence SimSimulationParameters_Algorithm_HeatBalanceAlgorithm_;
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_sequence SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmInside_;
        SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_sequence SimSimulationParameters_Algorithm_SurfaceConvectionAlgorithmOutside_;
        SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_sequence SimSimulationParameters_Algorithm_ZoneAirHeatBalanceAlgorithm_;
        SimSimulationParameters_ConvectionCoefficients_Default_sequence SimSimulationParameters_ConvectionCoefficients_Default_;
        SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_sequence SimSimulationParameters_ConvectionCoefficients_MultipleSurfaces_;
        SimSimulationParameters_FluidProperties_Concentration_sequence SimSimulationParameters_FluidProperties_Concentration_;
        SimSimulationParameters_FluidProperties_GlycolConcentrations_sequence SimSimulationParameters_FluidProperties_GlycolConcentrations_;
        SimSimulationParameters_FluidProperties_Names_sequence SimSimulationParameters_FluidProperties_Names_;
        SimSimulationParameters_FluidProperties_Saturated_sequence SimSimulationParameters_FluidProperties_Saturated_;
        SimSimulationParameters_FluidProperties_SuperHeated_sequence SimSimulationParameters_FluidProperties_SuperHeated_;
        SimSimulationParameters_FluidProperties_Temperatures_sequence SimSimulationParameters_FluidProperties_Temperatures_;
        SimSimulationParameters_GroundHeatTransfer_Default_sequence SimSimulationParameters_GroundHeatTransfer_Default_;
        SimSimulationParameters_HvacDesign_AirLoopSizing_sequence SimSimulationParameters_HvacDesign_AirLoopSizing_;
        SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_sequence SimSimulationParameters_HvacDesign_OutdoorAirDesignSpec_;
        SimSimulationParameters_HvacDesign_Sizing_sequence SimSimulationParameters_HvacDesign_Sizing_;
        SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence SimSimulationParameters_HvacDesign_WaterLoopSizing_;
        SimSimulationParameters_HvacDesign_ZoneAIrDistribution_sequence SimSimulationParameters_HvacDesign_ZoneAIrDistribution_;
        SimSimulationParameters_HvacDesign_ZoneSizing_sequence SimSimulationParameters_HvacDesign_ZoneSizing_;
        SimSimulationParameters_Parametric_FileNameSuffix_sequence SimSimulationParameters_Parametric_FileNameSuffix_;
        SimSimulationParameters_Parametric_Logic_sequence SimSimulationParameters_Parametric_Logic_;
        SimSimulationParameters_Parametric_RunControl_sequence SimSimulationParameters_Parametric_RunControl_;
        SimSimulationParameters_Parametric_SetValueForRun_sequence SimSimulationParameters_Parametric_SetValueForRun_;
        SimSimulationParameters_SimulationControl_DaylightSavingTime_sequence SimSimulationParameters_SimulationControl_DaylightSavingTime_;
        SimSimulationParameters_SimulationControl_Default_sequence SimSimulationParameters_SimulationControl_Default_;
        SimSimulationParameters_SimulationControl_RunPeriod_sequence SimSimulationParameters_SimulationControl_RunPeriod_;
        SimSimulationParameters_SimulationControl_RunPeriodCustomRange_sequence SimSimulationParameters_SimulationControl_RunPeriodCustomRange_;
        SimSimulationParameters_SimulationControl_SpecialDays_sequence SimSimulationParameters_SimulationControl_SpecialDays_;
        SimSimulationParameters_SiteWindPressure_WindDirections_sequence SimSimulationParameters_SiteWindPressure_WindDirections_;
        SimSimulationParameters_SiteWindPressure_WindPressureValues_sequence SimSimulationParameters_SiteWindPressure_WindPressureValues_;
        SimSimulationParameters_SurfaceProperties_Default_sequence SimSimulationParameters_SurfaceProperties_Default_;
        SimSimulationParameters_SurfaceProperties_VaporCoefficients_sequence SimSimulationParameters_SurfaceProperties_VaporCoefficients_;
        SimSimulationRun_Default_Default_sequence SimSimulationRun_Default_Default_;
        SimSite_AdjacentSite_Default_sequence SimSite_AdjacentSite_Default_;
        SimSite_BuildingSite_Default_sequence SimSite_BuildingSite_Default_;
        SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_sequence SimSiteAssembly_SiteAssembly_ExteriorEquipmentWater_;
        SimSiteAssembly_SiteAssembly_ExteriorLighting_sequence SimSiteAssembly_SiteAssembly_ExteriorLighting_;
        SimSiteAssembly_SiteAssembly_ExteriorSignage_sequence SimSiteAssembly_SiteAssembly_ExteriorSignage_;
        SimSiteAssembly_SiteAssembly_Fuel_sequence SimSiteAssembly_SiteAssembly_Fuel_;
        SimSiteAssembly_SiteAssembly_FuelCell_sequence SimSiteAssembly_SiteAssembly_FuelCell_;
        SimSiteAssembly_SiteAssembly_SolarHotWater_sequence SimSiteAssembly_SiteAssembly_SolarHotWater_;
        SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_sequence SimSiteAssembly_SiteAssembly_SolarPhotovoltaic_;
        SimSiteAssembly_SiteAssembly_Water_sequence SimSiteAssembly_SiteAssembly_Water_;
        SimSiteAssembly_SiteAssembly_WindTurbine_sequence SimSiteAssembly_SiteAssembly_WindTurbine_;
        SimSIUnitType_SiUnit_Default_sequence SimSIUnitType_SiUnit_Default_;
        SimSlab_Ceiling_InterzoneCeiling_sequence SimSlab_Ceiling_InterzoneCeiling_;
        SimSlab_Ceiling_InterzoneCeilingAdiabatic_sequence SimSlab_Ceiling_InterzoneCeilingAdiabatic_;
        SimSlab_Ceiling_InterzoneCeilingDetailed_sequence SimSlab_Ceiling_InterzoneCeilingDetailed_;
        SimSlab_Default_Default_sequence SimSlab_Default_Default_;
        SimSlab_Floor_Adiabatic_sequence SimSlab_Floor_Adiabatic_;
        SimSlab_Floor_FloorOverAir_sequence SimSlab_Floor_FloorOverAir_;
        SimSlab_Floor_FloorOverAirDetailed_sequence SimSlab_Floor_FloorOverAirDetailed_;
        SimSlab_Floor_FloorOverEarth_sequence SimSlab_Floor_FloorOverEarth_;
        SimSlab_Floor_FloorOverEarthDetailed_sequence SimSlab_Floor_FloorOverEarthDetailed_;
        SimSlab_Floor_InterzoneFloor_sequence SimSlab_Floor_InterzoneFloor_;
        SimSlab_Floor_InterzoneFloorDetailed_sequence SimSlab_Floor_InterzoneFloorDetailed_;
        SimSlab_Floor_RaisedFloor_sequence SimSlab_Floor_RaisedFloor_;
        SimSlab_Landing_Default_sequence SimSlab_Landing_Default_;
        SimSlab_OtherSideCoefficients_Default_sequence SimSlab_OtherSideCoefficients_Default_;
        SimSlab_OtherSideCoefficients_Detailed_sequence SimSlab_OtherSideCoefficients_Detailed_;
        SimSlab_OtherSideCoefficients_DetailedFloor_sequence SimSlab_OtherSideCoefficients_DetailedFloor_;
        SimSlab_OtherSideCoefficients_DetailedRoofCeiling_sequence SimSlab_OtherSideCoefficients_DetailedRoofCeiling_;
        SimSlab_OtherSideConditionsModel_Default_sequence SimSlab_OtherSideConditionsModel_Default_;
        SimSlab_OtherSideConditionsModel_Detailed_sequence SimSlab_OtherSideConditionsModel_Detailed_;
        SimSlab_OtherSideConditionsModel_DetailedFloor_sequence SimSlab_OtherSideConditionsModel_DetailedFloor_;
        SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_sequence SimSlab_OtherSideConditionsModel_DetailedRoofCeiling_;
        SimSlab_RoofSlab_RoofUnderAir_sequence SimSlab_RoofSlab_RoofUnderAir_;
        SimSlab_RoofSlab_RoofUnderAirDetailed_sequence SimSlab_RoofSlab_RoofUnderAirDetailed_;
        SimSlab_RoofSlab_RoofUnderEarth_sequence SimSlab_RoofSlab_RoofUnderEarth_;
        SimSlab_RoofSlab_RoofUnderEarthDetailed_sequence SimSlab_RoofSlab_RoofUnderEarthDetailed_;
        SimSlabParams_Slab_Ceiling_sequence SimSlabParams_Slab_Ceiling_;
        SimSlabParams_Slab_Floor_sequence SimSlabParams_Slab_Floor_;
        SimSlabParams_Slab_Landing_sequence SimSlabParams_Slab_Landing_;
        SimSlabParams_Slab_Roof_sequence SimSlabParams_Slab_Roof_;
        SimSlabType_Slab_Default_sequence SimSlabType_Slab_Default_;
        SimSoftwareApplication_Default_Default_sequence SimSoftwareApplication_Default_Default_;
        SimSolarObsParams_SolarObstruction_Default_sequence SimSolarObsParams_SolarObstruction_Default_;
        SimSolarShade_Default_Default_sequence SimSolarShade_Default_Default_;
        SimSolarShade_Fin_Default_sequence SimSolarShade_Fin_Default_;
        SimSolarShade_Fin_Projection_sequence SimSolarShade_Fin_Projection_;
        SimSolarShade_Overhang_Continuous_sequence SimSolarShade_Overhang_Continuous_;
        SimSolarShade_Overhang_Default_sequence SimSolarShade_Overhang_Default_;
        SimSolarShade_Overhang_Projection_sequence SimSolarShade_Overhang_Projection_;
        SimSolarShade_ZoneDetailed_Default_sequence SimSolarShade_ZoneDetailed_Default_;
        SimSolarShadeArrayParams_SolarShadeArray_Default_sequence SimSolarShadeArrayParams_SolarShadeArray_Default_;
        SimSolarShadePanelParams_Panel_SolarShading_sequence SimSolarShadePanelParams_Panel_SolarShading_;
        SimSolarShadeType_SolarShade_Default_sequence SimSolarShadeType_SolarShade_Default_;
        SimSpace_Occupied_Default_sequence SimSpace_Occupied_Default_;
        SimSpace_Unoccupied_CeilingPlenum_sequence SimSpace_Unoccupied_CeilingPlenum_;
        SimSpace_Unoccupied_CeilingVoid_sequence SimSpace_Unoccupied_CeilingVoid_;
        SimSpace_Unoccupied_Default_sequence SimSpace_Unoccupied_Default_;
        SimSpace_Unoccupied_FloorPlenum_sequence SimSpace_Unoccupied_FloorPlenum_;
        SimSpace_Unoccupied_FloorVoid_sequence SimSpace_Unoccupied_FloorVoid_;
        SimSpace_Unoccupied_Plenum_sequence SimSpace_Unoccupied_Plenum_;
        SimSpace_Unoccupied_SlabOpeningVoid_sequence SimSpace_Unoccupied_SlabOpeningVoid_;
        SimSpace_Unoccupied_WallOpeningVoid_sequence SimSpace_Unoccupied_WallOpeningVoid_;
        SimSpaceBoundary_FirstLevel_Default_sequence SimSpaceBoundary_FirstLevel_Default_;
        SimSpaceBoundary_SecondLevel_Default_sequence SimSpaceBoundary_SecondLevel_Default_;
        SimSpaceBoundary_SecondLevel_SubTypeA_sequence SimSpaceBoundary_SecondLevel_SubTypeA_;
        SimSpaceBoundary_SecondLevel_SubTypeB_sequence SimSpaceBoundary_SecondLevel_SubTypeB_;
        SimSpaceBoundary_SecondLevel_SubTypeC_sequence SimSpaceBoundary_SecondLevel_SubTypeC_;
        SimSpaceOccupant_Actor_SpaceOccupant_sequence SimSpaceOccupant_Actor_SpaceOccupant_;
        SimSpaceParams_Space_Default_sequence SimSpaceParams_Space_Default_;
        SimSpaceType_Space_Default_sequence SimSpaceType_Space_Default_;
        SimSpatialZone_OutdoorAir_Default_sequence SimSpatialZone_OutdoorAir_Default_;
        SimSpatialZone_Plenum_CeilingPlenum_sequence SimSpatialZone_Plenum_CeilingPlenum_;
        SimSpatialZone_Plenum_Default_sequence SimSpatialZone_Plenum_Default_;
        SimSpatialZone_Plenum_FloorPlenum_sequence SimSpatialZone_Plenum_FloorPlenum_;
        SimSpatialZone_SecurityZone_Public_sequence SimSpatialZone_SecurityZone_Public_;
        SimSpatialZone_SecurityZone_Security_sequence SimSpatialZone_SecurityZone_Security_;
        SimSpatialZone_SecurityZone_StaffOnly_sequence SimSpatialZone_SecurityZone_StaffOnly_;
        SimSpatialZone_ThermalZone_Default_sequence SimSpatialZone_ThermalZone_Default_;
        SimStair_Stair_Default_sequence SimStair_Stair_Default_;
        SimStairFlight_Default_Default_sequence SimStairFlight_Default_Default_;
        SimStairFlightParams_StairFlight_Default_sequence SimStairFlightParams_StairFlight_Default_;
        SimStairParams_Stair_Default_sequence SimStairParams_Stair_Default_;
        SimSystem_AirFlowNetwork_Default_sequence SimSystem_AirFlowNetwork_Default_;
        SimSystem_Electrical_SystemsContainer_sequence SimSystem_Electrical_SystemsContainer_;
        SimSystem_ElectricalLighting_FullSystem_sequence SimSystem_ElectricalLighting_FullSystem_;
        SimSystem_ElectricalLighting_LightingCircuit_sequence SimSystem_ElectricalLighting_LightingCircuit_;
        SimSystem_ElectricalPower_FullSystem_sequence SimSystem_ElectricalPower_FullSystem_;
        SimSystem_ElectroMechanical_PV_SolarThermal_sequence SimSystem_ElectroMechanical_PV_SolarThermal_;
        SimSystem_Hvac_SystemsContainer_sequence SimSystem_Hvac_SystemsContainer_;
        SimSystem_HvacAir_AirBranch_sequence SimSystem_HvacAir_AirBranch_;
        SimSystem_HvacAir_Control_sequence SimSystem_HvacAir_Control_;
        SimSystem_HvacAir_ControlDemand_sequence SimSystem_HvacAir_ControlDemand_;
        SimSystem_HvacAir_ControlSupply_sequence SimSystem_HvacAir_ControlSupply_;
        SimSystem_HvacAir_Demand_sequence SimSystem_HvacAir_Demand_;
        SimSystem_HvacAir_DemandSideReturnPath_sequence SimSystem_HvacAir_DemandSideReturnPath_;
        SimSystem_HvacAir_DemandSideSupplyPath_sequence SimSystem_HvacAir_DemandSideSupplyPath_;
        SimSystem_HvacAir_DemandSideZoneHvac_sequence SimSystem_HvacAir_DemandSideZoneHvac_;
        SimSystem_HvacAir_FullSystem_sequence SimSystem_HvacAir_FullSystem_;
        SimSystem_HvacAir_OutdoorAir_sequence SimSystem_HvacAir_OutdoorAir_;
        SimSystem_HvacAir_OutdoorAirExhaust_sequence SimSystem_HvacAir_OutdoorAirExhaust_;
        SimSystem_HvacAir_OutdoorAirSupply_sequence SimSystem_HvacAir_OutdoorAirSupply_;
        SimSystem_HvacAir_Supply_sequence SimSystem_HvacAir_Supply_;
        SimSystem_HvacAir_SupplySideReturnPath_sequence SimSystem_HvacAir_SupplySideReturnPath_;
        SimSystem_HvacAir_SupplySideSupplyPath_sequence SimSystem_HvacAir_SupplySideSupplyPath_;
        SimSystem_HvacChilledWater_Control_sequence SimSystem_HvacChilledWater_Control_;
        SimSystem_HvacChilledWater_ControlDemand_sequence SimSystem_HvacChilledWater_ControlDemand_;
        SimSystem_HvacChilledWater_ControlSupply_sequence SimSystem_HvacChilledWater_ControlSupply_;
        SimSystem_HvacChilledWater_Demand_sequence SimSystem_HvacChilledWater_Demand_;
        SimSystem_HvacChilledWater_DemandSideDemandComponents_sequence SimSystem_HvacChilledWater_DemandSideDemandComponents_;
        SimSystem_HvacChilledWater_DemandSideReturnPath_sequence SimSystem_HvacChilledWater_DemandSideReturnPath_;
        SimSystem_HvacChilledWater_DemandSideSupplyPath_sequence SimSystem_HvacChilledWater_DemandSideSupplyPath_;
        SimSystem_HvacChilledWater_FullSystem_sequence SimSystem_HvacChilledWater_FullSystem_;
        SimSystem_HvacChilledWater_Supply_sequence SimSystem_HvacChilledWater_Supply_;
        SimSystem_HvacChilledWater_WaterBranch_sequence SimSystem_HvacChilledWater_WaterBranch_;
        SimSystem_HvacCondenser_CondenserBranch_sequence SimSystem_HvacCondenser_CondenserBranch_;
        SimSystem_HvacCondenser_Control_sequence SimSystem_HvacCondenser_Control_;
        SimSystem_HvacCondenser_ControlDemand_sequence SimSystem_HvacCondenser_ControlDemand_;
        SimSystem_HvacCondenser_ControlSupply_sequence SimSystem_HvacCondenser_ControlSupply_;
        SimSystem_HvacCondenser_Demand_sequence SimSystem_HvacCondenser_Demand_;
        SimSystem_HvacCondenser_DemandSideDemandComponents_sequence SimSystem_HvacCondenser_DemandSideDemandComponents_;
        SimSystem_HvacCondenser_DemandSideReturnPath_sequence SimSystem_HvacCondenser_DemandSideReturnPath_;
        SimSystem_HvacCondenser_DemandSideSupplyPath_sequence SimSystem_HvacCondenser_DemandSideSupplyPath_;
        SimSystem_HvacCondenser_FullSystem_sequence SimSystem_HvacCondenser_FullSystem_;
        SimSystem_HvacCondenser_Supply_sequence SimSystem_HvacCondenser_Supply_;
        SimSystem_HvacHotWater_Control_sequence SimSystem_HvacHotWater_Control_;
        SimSystem_HvacHotWater_ControlDemand_sequence SimSystem_HvacHotWater_ControlDemand_;
        SimSystem_HvacHotWater_ControlSupply_sequence SimSystem_HvacHotWater_ControlSupply_;
        SimSystem_HvacHotWater_Demand_sequence SimSystem_HvacHotWater_Demand_;
        SimSystem_HvacHotWater_DemandSideDemandComponents_sequence SimSystem_HvacHotWater_DemandSideDemandComponents_;
        SimSystem_HvacHotWater_DemandSideReturnPath_sequence SimSystem_HvacHotWater_DemandSideReturnPath_;
        SimSystem_HvacHotWater_DemandSideSupplyPath_sequence SimSystem_HvacHotWater_DemandSideSupplyPath_;
        SimSystem_HvacHotWater_FullSystem_sequence SimSystem_HvacHotWater_FullSystem_;
        SimSystem_HvacHotWater_Supply_sequence SimSystem_HvacHotWater_Supply_;
        SimSystem_HvacHotWater_WaterBranch_sequence SimSystem_HvacHotWater_WaterBranch_;
        SimSystem_HvacMixedWater_Control_sequence SimSystem_HvacMixedWater_Control_;
        SimSystem_HvacMixedWater_ControlDemand_sequence SimSystem_HvacMixedWater_ControlDemand_;
        SimSystem_HvacMixedWater_ControlSupply_sequence SimSystem_HvacMixedWater_ControlSupply_;
        SimSystem_HvacMixedWater_Demand_sequence SimSystem_HvacMixedWater_Demand_;
        SimSystem_HvacMixedWater_DemandSideDemandComponents_sequence SimSystem_HvacMixedWater_DemandSideDemandComponents_;
        SimSystem_HvacMixedWater_DemandSideReturnPath_sequence SimSystem_HvacMixedWater_DemandSideReturnPath_;
        SimSystem_HvacMixedWater_DemandSideSupplyPath_sequence SimSystem_HvacMixedWater_DemandSideSupplyPath_;
        SimSystem_HvacMixedWater_FullSystem_sequence SimSystem_HvacMixedWater_FullSystem_;
        SimSystem_HvacMixedWater_Supply_sequence SimSystem_HvacMixedWater_Supply_;
        SimSystem_HvacMixedWater_WaterBranch_sequence SimSystem_HvacMixedWater_WaterBranch_;
        SimSystem_HvacSteam_Control_sequence SimSystem_HvacSteam_Control_;
        SimSystem_HvacSteam_ControlDemand_sequence SimSystem_HvacSteam_ControlDemand_;
        SimSystem_HvacSteam_ControlSupply_sequence SimSystem_HvacSteam_ControlSupply_;
        SimSystem_HvacSteam_Demand_sequence SimSystem_HvacSteam_Demand_;
        SimSystem_HvacSteam_DemandSideDemandComponents_sequence SimSystem_HvacSteam_DemandSideDemandComponents_;
        SimSystem_HvacSteam_DemandSideReturnPath_sequence SimSystem_HvacSteam_DemandSideReturnPath_;
        SimSystem_HvacSteam_DemandSideSupplyPath_sequence SimSystem_HvacSteam_DemandSideSupplyPath_;
        SimSystem_HvacSteam_FullSystem_sequence SimSystem_HvacSteam_FullSystem_;
        SimSystem_HvacSteam_SteamBranch_sequence SimSystem_HvacSteam_SteamBranch_;
        SimSystem_HvacSteam_Supply_sequence SimSystem_HvacSteam_Supply_;
        SimSystem_Mechanical_SystemsContainer_sequence SimSystem_Mechanical_SystemsContainer_;
        SimSystem_Plumbing_ColdWater_sequence SimSystem_Plumbing_ColdWater_;
        SimSystem_Plumbing_GrayWater_sequence SimSystem_Plumbing_GrayWater_;
        SimSystem_Plumbing_HotWater_sequence SimSystem_Plumbing_HotWater_;
        SimSystem_Plumbing_PotableWater_sequence SimSystem_Plumbing_PotableWater_;
        SimSystem_Plumbing_SystemsContainer_sequence SimSystem_Plumbing_SystemsContainer_;
        SimSystem_Plumbing_UndergroundPipingCircuit_sequence SimSystem_Plumbing_UndergroundPipingCircuit_;
        SimSystem_Plumbing_WasteWater_sequence SimSystem_Plumbing_WasteWater_;
        SimSystem_Plumbing_WaterUseSystem_sequence SimSystem_Plumbing_WaterUseSystem_;
        SimSystem_Plumbing_WaterUseWell_sequence SimSystem_Plumbing_WaterUseWell_;
        SimSystem_RefrigerationPrimary_Control_sequence SimSystem_RefrigerationPrimary_Control_;
        SimSystem_RefrigerationPrimary_Demand_sequence SimSystem_RefrigerationPrimary_Demand_;
        SimSystem_RefrigerationPrimary_FullSystem_sequence SimSystem_RefrigerationPrimary_FullSystem_;
        SimSystem_RefrigerationPrimary_Supply_sequence SimSystem_RefrigerationPrimary_Supply_;
        SimSystem_RefrigerationSecondary_Control_sequence SimSystem_RefrigerationSecondary_Control_;
        SimSystem_RefrigerationSecondary_Demand_sequence SimSystem_RefrigerationSecondary_Demand_;
        SimSystem_RefrigerationSecondary_FullSystem_sequence SimSystem_RefrigerationSecondary_FullSystem_;
        SimSystem_RefrigerationSecondary_Supply_sequence SimSystem_RefrigerationSecondary_Supply_;
        SimSystem_RefrigerationTranscritical_Control_sequence SimSystem_RefrigerationTranscritical_Control_;
        SimSystem_RefrigerationTranscritical_Demand_sequence SimSystem_RefrigerationTranscritical_Demand_;
        SimSystem_RefrigerationTranscritical_FullSystem_sequence SimSystem_RefrigerationTranscritical_FullSystem_;
        SimSystem_RefrigerationTranscritical_Supply_sequence SimSystem_RefrigerationTranscritical_Supply_;
        SimSystem_SitePowerDemand_ElectricityConsuming_sequence SimSystem_SitePowerDemand_ElectricityConsuming_;
        SimSystem_SitePowerDemand_FuelConsuming_sequence SimSystem_SitePowerDemand_FuelConsuming_;
        SimSystem_SitePowerDemand_WaterConsuming_sequence SimSystem_SitePowerDemand_WaterConsuming_;
        SimSystem_SitePowerGeneration_Other_sequence SimSystem_SitePowerGeneration_Other_;
        SimSystem_SitePowerGeneration_Photovoltaic_sequence SimSystem_SitePowerGeneration_Photovoltaic_;
        SimSystem_SitePowerGeneration_WindTurbine_sequence SimSystem_SitePowerGeneration_WindTurbine_;
        SimSystem_Transport_Elevator_sequence SimSystem_Transport_Elevator_;
        SimSystem_Transport_Escalator_sequence SimSystem_Transport_Escalator_;
        SimSystem_Transport_MovingWalkway_sequence SimSystem_Transport_MovingWalkway_;
        SimSystem_Transport_SystemsContainer_sequence SimSystem_Transport_SystemsContainer_;
        SimSystem_VariableRefrigerantFlow_Control_sequence SimSystem_VariableRefrigerantFlow_Control_;
        SimSystem_VariableRefrigerantFlow_Demand_sequence SimSystem_VariableRefrigerantFlow_Demand_;
        SimSystem_VariableRefrigerantFlow_FullSystem_sequence SimSystem_VariableRefrigerantFlow_FullSystem_;
        SimSystem_VariableRefrigerantFlow_Supply_sequence SimSystem_VariableRefrigerantFlow_Supply_;
        SimSystem_ZoneHvacGroup_Control_sequence SimSystem_ZoneHvacGroup_Control_;
        SimSystem_ZoneHvacGroup_ControlDemand_sequence SimSystem_ZoneHvacGroup_ControlDemand_;
        SimSystem_ZoneHvacGroup_ControlSupply_sequence SimSystem_ZoneHvacGroup_ControlSupply_;
        SimSystem_ZoneHvacGroup_Demand_sequence SimSystem_ZoneHvacGroup_Demand_;
        SimSystem_ZoneHvacGroup_DemandSideSupplyPath_sequence SimSystem_ZoneHvacGroup_DemandSideSupplyPath_;
        SimSystem_ZoneHvacGroup_DemandSideZoneHvac_sequence SimSystem_ZoneHvacGroup_DemandSideZoneHvac_;
        SimSystem_ZoneHvacGroup_FullSystem_sequence SimSystem_ZoneHvacGroup_FullSystem_;
        SimSystem_ZoneHvacGroup_Supply_sequence SimSystem_ZoneHvacGroup_Supply_;
        SimSystem_ZoneHvacGroup_SupplySideReturnPath_sequence SimSystem_ZoneHvacGroup_SupplySideReturnPath_;
        SimTemplateConstructions_Constructions_Default_sequence SimTemplateConstructions_Constructions_Default_;
        SimTemplateDaylighting_Daylighting_Default_sequence SimTemplateDaylighting_Daylighting_Default_;
        SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_sequence SimTemplateHvacZoneEquipment_HvacZoneEquipment_Default_;
        SimTemplateLocation_Location_Default_sequence SimTemplateLocation_Location_Default_;
        SimTemplateNaturalVentilation_NaturalVentilation_Default_sequence SimTemplateNaturalVentilation_NaturalVentilation_Default_;
        SimTemplateOutputFormatSet_OutputFormatSet_Default_sequence SimTemplateOutputFormatSet_OutputFormatSet_Default_;
        SimTemplateOutputRequestSet_OutputRequestSet_Default_sequence SimTemplateOutputRequestSet_OutputRequestSet_Default_;
        SimTemplateSimulationParameters_SimulationParameters_Default_sequence SimTemplateSimulationParameters_SimulationParameters_Default_;
        SimTemplateZoneConditions_ZoneConditions_Default_sequence SimTemplateZoneConditions_ZoneConditions_Default_;
        SimTemplateZoneLoads_ZoneLoads_Default_sequence SimTemplateZoneLoads_ZoneLoads_Default_;
        SimTimeSeriesSchedule_Calendar_Configuration_sequence SimTimeSeriesSchedule_Calendar_Configuration_;
        SimTimeSeriesSchedule_Calendar_Default_sequence SimTimeSeriesSchedule_Calendar_Default_;
        SimTimeSeriesSchedule_Calendar_SpecialDays_sequence SimTimeSeriesSchedule_Calendar_SpecialDays_;
        SimTimeSeriesSchedule_Compact_Default_sequence SimTimeSeriesSchedule_Compact_Default_;
        SimTimeSeriesSchedule_Constant_Default_sequence SimTimeSeriesSchedule_Constant_Default_;
        SimTimeSeriesSchedule_Day_Hourly_sequence SimTimeSeriesSchedule_Day_Hourly_;
        SimTimeSeriesSchedule_Day_Interval_sequence SimTimeSeriesSchedule_Day_Interval_;
        SimTimeSeriesSchedule_Day_List_sequence SimTimeSeriesSchedule_Day_List_;
        SimTimeSeriesSchedule_File_Default_sequence SimTimeSeriesSchedule_File_Default_;
        SimTimeSeriesSchedule_Limits_Default_sequence SimTimeSeriesSchedule_Limits_Default_;
        SimTimeSeriesSchedule_TimeSeries_Default_sequence SimTimeSeriesSchedule_TimeSeries_Default_;
        SimTimeSeriesSchedule_Week_Compact_sequence SimTimeSeriesSchedule_Week_Compact_;
        SimTimeSeriesSchedule_Week_Daily_sequence SimTimeSeriesSchedule_Week_Daily_;
        SimTimeSeriesSchedule_Year_Default_sequence SimTimeSeriesSchedule_Year_Default_;
        SimTimeSeriesValue_TimeSeries_Irregular_sequence SimTimeSeriesValue_TimeSeries_Irregular_;
        SimTimeSeriesValue_TimeSeries_Regular_sequence SimTimeSeriesValue_TimeSeries_Regular_;
        SimToplogicalRepresentation_TopologicalRepresentation_Default_sequence SimToplogicalRepresentation_TopologicalRepresentation_Default_;
        SimTransportSysAssembly_TransportSysAssembly_Default_sequence SimTransportSysAssembly_TransportSysAssembly_Default_;
        SimTransportSysAssembly_TransportSysAssembly_Elevator_sequence SimTransportSysAssembly_TransportSysAssembly_Elevator_;
        SimTransportSysAssembly_TransportSysAssembly_Escalator_sequence SimTransportSysAssembly_TransportSysAssembly_Escalator_;
        SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_sequence SimTransportSysAssembly_TransportSysAssembly_MovingWalkway_;
        SimValidationResultsAir_AirLoop_Default_sequence SimValidationResultsAir_AirLoop_Default_;
        SimValidationResultsWater_WaterLoop_ChilledWater_sequence SimValidationResultsWater_WaterLoop_ChilledWater_;
        SimValidationResultsWater_WaterLoop_Condenser_sequence SimValidationResultsWater_WaterLoop_Condenser_;
        SimValidationResultsWater_WaterLoop_HotWater_sequence SimValidationResultsWater_WaterLoop_HotWater_;
        SimValidationResultsWater_WaterLoop_MixedWater_sequence SimValidationResultsWater_WaterLoop_MixedWater_;
        SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_sequence SimVentilationAssembly_VentilationAssembly_CoolTower_Shower_;
        SimVentilationAssembly_VentilationAssembly_EarthTube_sequence SimVentilationAssembly_VentilationAssembly_EarthTube_;
        SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_sequence SimVentilationAssembly_VentilationAssembly_ExteriorNaturallyVentilatedCavity_;
        SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_sequence SimVentilationAssembly_VentilationAssembly_RefrigerationDoor_;
        SimVentilationAssembly_VentilationAssembly_ThermalChimney_sequence SimVentilationAssembly_VentilationAssembly_ThermalChimney_;
        SimVertex_Vertex_Point_sequence SimVertex_Vertex_Point_;
        SimVirtualElement_Default_Default_sequence SimVirtualElement_Default_Default_;
        SimVirtualElement_Slab_Ceiling_sequence SimVirtualElement_Slab_Ceiling_;
        SimVirtualElement_Slab_Default_sequence SimVirtualElement_Slab_Default_;
        SimVirtualElement_Slab_Floor_sequence SimVirtualElement_Slab_Floor_;
        SimVirtualElement_Slab_OpeningFiller_sequence SimVirtualElement_Slab_OpeningFiller_;
        SimVirtualElement_Wall_Default_sequence SimVirtualElement_Wall_Default_;
        SimVirtualElement_Wall_OpeningFiller_sequence SimVirtualElement_Wall_OpeningFiller_;
        SimVirtualGridIntersection_VirtualGridIntersection_Default_sequence SimVirtualGridIntersection_VirtualGridIntersection_Default_;
        SimWall_OtherSideCoefficients_Default_sequence SimWall_OtherSideCoefficients_Default_;
        SimWall_OtherSideCoefficients_Detailed_sequence SimWall_OtherSideCoefficients_Detailed_;
        SimWall_OtherSideCoefficients_DetailedFloor_sequence SimWall_OtherSideCoefficients_DetailedFloor_;
        SimWall_OtherSideCoefficients_DetailedRoofCeiling_sequence SimWall_OtherSideCoefficients_DetailedRoofCeiling_;
        SimWall_OtherSideConditionsModel_Default_sequence SimWall_OtherSideConditionsModel_Default_;
        SimWall_OtherSideConditionsModel_Detailed_sequence SimWall_OtherSideConditionsModel_Detailed_;
        SimWall_OtherSideConditionsModel_DetailedFloor_sequence SimWall_OtherSideConditionsModel_DetailedFloor_;
        SimWall_OtherSideConditionsModel_DetailedRoofCeiling_sequence SimWall_OtherSideConditionsModel_DetailedRoofCeiling_;
        SimWall_TypicalWall_Adiabatic_sequence SimWall_TypicalWall_Adiabatic_;
        SimWall_TypicalWall_Default_sequence SimWall_TypicalWall_Default_;
        SimWall_TypicalWall_ExteriorAboveGrade_sequence SimWall_TypicalWall_ExteriorAboveGrade_;
        SimWall_TypicalWall_ExteriorAboveGradeDetailed_sequence SimWall_TypicalWall_ExteriorAboveGradeDetailed_;
        SimWall_TypicalWall_ExteriorAboveGradeStandard_sequence SimWall_TypicalWall_ExteriorAboveGradeStandard_;
        SimWall_TypicalWall_ExteriorBelowGrade_sequence SimWall_TypicalWall_ExteriorBelowGrade_;
        SimWall_TypicalWall_ExteriorBelowGradeDetailed_sequence SimWall_TypicalWall_ExteriorBelowGradeDetailed_;
        SimWall_TypicalWall_ExteriorBelowGradeStandard_sequence SimWall_TypicalWall_ExteriorBelowGradeStandard_;
        SimWall_TypicalWall_Interior_sequence SimWall_TypicalWall_Interior_;
        SimWall_TypicalWall_InteriorDetailed_sequence SimWall_TypicalWall_InteriorDetailed_;
        SimWall_TypicalWall_InteriorStandard_sequence SimWall_TypicalWall_InteriorStandard_;
        SimWallParams_Wall_Default_sequence SimWallParams_Wall_Default_;
        SimWallType_Wall_Default_sequence SimWallType_Wall_Default_;
        SimWindow_ComplexFenestration_ThermoChromic_sequence SimWindow_ComplexFenestration_ThermoChromic_;
        SimWindow_TypicalWindow_Default_sequence SimWindow_TypicalWindow_Default_;
        SimWindow_TypicalWindow_Exterior_sequence SimWindow_TypicalWindow_Exterior_;
        SimWindow_TypicalWindow_ExteriorDetailed_sequence SimWindow_TypicalWindow_ExteriorDetailed_;
        SimWindow_TypicalWindow_FrameAndDivider_sequence SimWindow_TypicalWindow_FrameAndDivider_;
        SimWindow_TypicalWindow_Interior_sequence SimWindow_TypicalWindow_Interior_;
        SimWindowArrayParams_WindowArray_Default_sequence SimWindowArrayParams_WindowArray_Default_;
        SimWindowLiningProps_WindowLiningProps_Default_sequence SimWindowLiningProps_WindowLiningProps_Default_;
        SimWindowPanelProps_WindowPanelProps_Default_sequence SimWindowPanelProps_WindowPanelProps_Default_;
        SimWindowParams_Window_Default_sequence SimWindowParams_Window_Default_;
        SimWindowType_Window_Default_sequence SimWindowType_Window_Default_;
      };
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace namespaces
{
  namespace Sim
  {
    namespace Model
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // SIM_MODEL1_HXX
