// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic
      // 

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_UFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_UFactorTimesAreaVal () const
      {
        return this->SimFlowEnergyTrans_UFactorTimesAreaVal_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_UFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_UFactorTimesAreaVal ()
      {
        return this->SimFlowEnergyTrans_UFactorTimesAreaVal_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_UFactorTimesAreaVal (const SimFlowEnergyTrans_UFactorTimesAreaVal_type& x)
      {
        this->SimFlowEnergyTrans_UFactorTimesAreaVal_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_UFactorTimesAreaVal (const SimFlowEnergyTrans_UFactorTimesAreaVal_optional& x)
      {
        this->SimFlowEnergyTrans_UFactorTimesAreaVal_ = x;
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompName () const
      {
        return this->SimFlowEnergyTrans_CntlledCompName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompName ()
      {
        return this->SimFlowEnergyTrans_CntlledCompName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompName (const SimFlowEnergyTrans_CntlledCompName_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompName (const SimFlowEnergyTrans_CntlledCompName_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompName (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompName_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompObjType_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompObjType () const
      {
        return this->SimFlowEnergyTrans_CntlledCompObjType_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompObjType_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompObjType ()
      {
        return this->SimFlowEnergyTrans_CntlledCompObjType_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompObjType (const SimFlowEnergyTrans_CntlledCompObjType_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompObjType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompObjType (const SimFlowEnergyTrans_CntlledCompObjType_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompObjType_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompObjType (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompObjType_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompObjType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_SetpointSchedName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_SetpointSchedName () const
      {
        return this->SimFlowEnergyTrans_SetpointSchedName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_SetpointSchedName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_SetpointSchedName ()
      {
        return this->SimFlowEnergyTrans_SetpointSchedName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_SetpointSchedName (const SimFlowEnergyTrans_SetpointSchedName_type& x)
      {
        this->SimFlowEnergyTrans_SetpointSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_SetpointSchedName (const SimFlowEnergyTrans_SetpointSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_SetpointSchedName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_SetpointSchedName (::std::auto_ptr< SimFlowEnergyTrans_SetpointSchedName_type > x)
      {
        this->SimFlowEnergyTrans_SetpointSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CondInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CondInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CondInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CondInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondInletNodeName (const SimFlowEnergyTrans_CondInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CondInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondInletNodeName (const SimFlowEnergyTrans_CondInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CondInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CondInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CondOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_CondOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CondOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_CondOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondOutletNodeName (const SimFlowEnergyTrans_CondOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CondOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondOutletNodeName (const SimFlowEnergyTrans_CondOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CondOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CondOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_PlantInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantInletNodeName () const
      {
        return this->SimFlowEnergyTrans_PlantInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_PlantInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantInletNodeName ()
      {
        return this->SimFlowEnergyTrans_PlantInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantInletNodeName (const SimFlowEnergyTrans_PlantInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_PlantInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantInletNodeName (const SimFlowEnergyTrans_PlantInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_PlantInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_PlantInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_PlantInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_PlantOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_PlantOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_PlantOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_PlantOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantOutletNodeName (const SimFlowEnergyTrans_PlantOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_PlantOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantOutletNodeName (const SimFlowEnergyTrans_PlantOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_PlantOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_PlantOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_PlantOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_FreeCoolingCntlMode_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_FreeCoolingCntlMode () const
      {
        return this->SimFlowEnergyTrans_FreeCoolingCntlMode_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_FreeCoolingCntlMode_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_FreeCoolingCntlMode ()
      {
        return this->SimFlowEnergyTrans_FreeCoolingCntlMode_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_FreeCoolingCntlMode (const SimFlowEnergyTrans_FreeCoolingCntlMode_type& x)
      {
        this->SimFlowEnergyTrans_FreeCoolingCntlMode_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_FreeCoolingCntlMode (const SimFlowEnergyTrans_FreeCoolingCntlMode_optional& x)
      {
        this->SimFlowEnergyTrans_FreeCoolingCntlMode_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_FreeCoolingCntlMode (::std::auto_ptr< SimFlowEnergyTrans_FreeCoolingCntlMode_type > x)
      {
        this->SimFlowEnergyTrans_FreeCoolingCntlMode_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_HeatExchngSetpointSchedName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchngSetpointSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_HeatExchngSetpointSchedName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchngSetpointSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchngSetpointSchedName (const SimFlowEnergyTrans_HeatExchngSetpointSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchngSetpointSchedName (const SimFlowEnergyTrans_HeatExchngSetpointSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchngSetpointSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatExchngSetpointSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_HeatExchangeMode_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchangeMode () const
      {
        return this->SimFlowEnergyTrans_HeatExchangeMode_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_HeatExchangeMode_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchangeMode ()
      {
        return this->SimFlowEnergyTrans_HeatExchangeMode_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchangeMode (const SimFlowEnergyTrans_HeatExchangeMode_type& x)
      {
        this->SimFlowEnergyTrans_HeatExchangeMode_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchangeMode (const SimFlowEnergyTrans_HeatExchangeMode_optional& x)
      {
        this->SimFlowEnergyTrans_HeatExchangeMode_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_HeatExchangeMode (::std::auto_ptr< SimFlowEnergyTrans_HeatExchangeMode_type > x)
      {
        this->SimFlowEnergyTrans_HeatExchangeMode_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CondSideFlowRate_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondSideFlowRate () const
      {
        return this->SimFlowEnergyTrans_CondSideFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CondSideFlowRate_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondSideFlowRate ()
      {
        return this->SimFlowEnergyTrans_CondSideFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondSideFlowRate (const SimFlowEnergyTrans_CondSideFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_CondSideFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CondSideFlowRate (const SimFlowEnergyTrans_CondSideFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_CondSideFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_PlantSideFlowRate_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantSideFlowRate () const
      {
        return this->SimFlowEnergyTrans_PlantSideFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_PlantSideFlowRate_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantSideFlowRate ()
      {
        return this->SimFlowEnergyTrans_PlantSideFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantSideFlowRate (const SimFlowEnergyTrans_PlantSideFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_PlantSideFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_PlantSideFlowRate (const SimFlowEnergyTrans_PlantSideFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_PlantSideFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompCondInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompCondInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondInletNodeName (const SimFlowEnergyTrans_CntlledCompCondInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondInletNodeName (const SimFlowEnergyTrans_CntlledCompCondInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompCondInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompCondOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompCondOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondOutletNodeName (const SimFlowEnergyTrans_CntlledCompCondOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondOutletNodeName (const SimFlowEnergyTrans_CntlledCompCondOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompCondOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompCondOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompPlantInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompPlantInletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantInletNodeName (const SimFlowEnergyTrans_CntlledCompPlantInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantInletNodeName (const SimFlowEnergyTrans_CntlledCompPlantInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompPlantInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_optional& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantOutletNodeName (const SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantOutletNodeName (const SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTrans_CntlledCompPlantOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic
      //

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater (RefId),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_CntlledCompName_ (this),
        SimFlowEnergyTrans_CntlledCompObjType_ (this),
        SimFlowEnergyTrans_SetpointSchedName_ (this),
        SimFlowEnergyTrans_CondInletNodeName_ (this),
        SimFlowEnergyTrans_CondOutletNodeName_ (this),
        SimFlowEnergyTrans_PlantInletNodeName_ (this),
        SimFlowEnergyTrans_PlantOutletNodeName_ (this),
        SimFlowEnergyTrans_FreeCoolingCntlMode_ (this),
        SimFlowEnergyTrans_HeatExchngSetpointSchedName_ (this),
        SimFlowEnergyTrans_HeatExchangeMode_ (this),
        SimFlowEnergyTrans_CondSideFlowRate_ (this),
        SimFlowEnergyTrans_PlantSideFlowRate_ (this),
        SimFlowEnergyTrans_CntlledCompCondInletNodeName_ (this),
        SimFlowEnergyTrans_CntlledCompCondOutletNodeName_ (this),
        SimFlowEnergyTrans_CntlledCompPlantInletNodeName_ (this),
        SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic (const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic& x,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater (x, f, c),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (x.SimFlowEnergyTrans_UFactorTimesAreaVal_, f, this),
        SimFlowEnergyTrans_CntlledCompName_ (x.SimFlowEnergyTrans_CntlledCompName_, f, this),
        SimFlowEnergyTrans_CntlledCompObjType_ (x.SimFlowEnergyTrans_CntlledCompObjType_, f, this),
        SimFlowEnergyTrans_SetpointSchedName_ (x.SimFlowEnergyTrans_SetpointSchedName_, f, this),
        SimFlowEnergyTrans_CondInletNodeName_ (x.SimFlowEnergyTrans_CondInletNodeName_, f, this),
        SimFlowEnergyTrans_CondOutletNodeName_ (x.SimFlowEnergyTrans_CondOutletNodeName_, f, this),
        SimFlowEnergyTrans_PlantInletNodeName_ (x.SimFlowEnergyTrans_PlantInletNodeName_, f, this),
        SimFlowEnergyTrans_PlantOutletNodeName_ (x.SimFlowEnergyTrans_PlantOutletNodeName_, f, this),
        SimFlowEnergyTrans_FreeCoolingCntlMode_ (x.SimFlowEnergyTrans_FreeCoolingCntlMode_, f, this),
        SimFlowEnergyTrans_HeatExchngSetpointSchedName_ (x.SimFlowEnergyTrans_HeatExchngSetpointSchedName_, f, this),
        SimFlowEnergyTrans_HeatExchangeMode_ (x.SimFlowEnergyTrans_HeatExchangeMode_, f, this),
        SimFlowEnergyTrans_CondSideFlowRate_ (x.SimFlowEnergyTrans_CondSideFlowRate_, f, this),
        SimFlowEnergyTrans_PlantSideFlowRate_ (x.SimFlowEnergyTrans_PlantSideFlowRate_, f, this),
        SimFlowEnergyTrans_CntlledCompCondInletNodeName_ (x.SimFlowEnergyTrans_CntlledCompCondInletNodeName_, f, this),
        SimFlowEnergyTrans_CntlledCompCondOutletNodeName_ (x.SimFlowEnergyTrans_CntlledCompCondOutletNodeName_, f, this),
        SimFlowEnergyTrans_CntlledCompPlantInletNodeName_ (x.SimFlowEnergyTrans_CntlledCompPlantInletNodeName_, f, this),
        SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_ (x.SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic (const ::xercesc::DOMElement& e,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_CntlledCompName_ (this),
        SimFlowEnergyTrans_CntlledCompObjType_ (this),
        SimFlowEnergyTrans_SetpointSchedName_ (this),
        SimFlowEnergyTrans_CondInletNodeName_ (this),
        SimFlowEnergyTrans_CondOutletNodeName_ (this),
        SimFlowEnergyTrans_PlantInletNodeName_ (this),
        SimFlowEnergyTrans_PlantOutletNodeName_ (this),
        SimFlowEnergyTrans_FreeCoolingCntlMode_ (this),
        SimFlowEnergyTrans_HeatExchngSetpointSchedName_ (this),
        SimFlowEnergyTrans_HeatExchangeMode_ (this),
        SimFlowEnergyTrans_CondSideFlowRate_ (this),
        SimFlowEnergyTrans_PlantSideFlowRate_ (this),
        SimFlowEnergyTrans_CntlledCompCondInletNodeName_ (this),
        SimFlowEnergyTrans_CntlledCompCondOutletNodeName_ (this),
        SimFlowEnergyTrans_CntlledCompPlantInletNodeName_ (this),
        SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_UFactorTimesAreaVal
          //
          if (n.name () == "SimFlowEnergyTrans_UFactorTimesAreaVal" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_UFactorTimesAreaVal_)
            {
              this->SimFlowEnergyTrans_UFactorTimesAreaVal_.set (SimFlowEnergyTrans_UFactorTimesAreaVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompName
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompName_type > r (
              SimFlowEnergyTrans_CntlledCompName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompName_)
            {
              this->SimFlowEnergyTrans_CntlledCompName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompObjType
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompObjType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompObjType_type > r (
              SimFlowEnergyTrans_CntlledCompObjType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompObjType_)
            {
              this->SimFlowEnergyTrans_CntlledCompObjType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SetpointSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_SetpointSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SetpointSchedName_type > r (
              SimFlowEnergyTrans_SetpointSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SetpointSchedName_)
            {
              this->SimFlowEnergyTrans_SetpointSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CondInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondInletNodeName_type > r (
              SimFlowEnergyTrans_CondInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondInletNodeName_)
            {
              this->SimFlowEnergyTrans_CondInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CondOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondOutletNodeName_type > r (
              SimFlowEnergyTrans_CondOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondOutletNodeName_)
            {
              this->SimFlowEnergyTrans_CondOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_PlantInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_PlantInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_PlantInletNodeName_type > r (
              SimFlowEnergyTrans_PlantInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_PlantInletNodeName_)
            {
              this->SimFlowEnergyTrans_PlantInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_PlantOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_PlantOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_PlantOutletNodeName_type > r (
              SimFlowEnergyTrans_PlantOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_PlantOutletNodeName_)
            {
              this->SimFlowEnergyTrans_PlantOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FreeCoolingCntlMode
          //
          if (n.name () == "SimFlowEnergyTrans_FreeCoolingCntlMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FreeCoolingCntlMode_type > r (
              SimFlowEnergyTrans_FreeCoolingCntlMode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FreeCoolingCntlMode_)
            {
              this->SimFlowEnergyTrans_FreeCoolingCntlMode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatExchngSetpointSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatExchngSetpointSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatExchngSetpointSchedName_type > r (
              SimFlowEnergyTrans_HeatExchngSetpointSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_)
            {
              this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatExchangeMode
          //
          if (n.name () == "SimFlowEnergyTrans_HeatExchangeMode" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatExchangeMode_type > r (
              SimFlowEnergyTrans_HeatExchangeMode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatExchangeMode_)
            {
              this->SimFlowEnergyTrans_HeatExchangeMode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondSideFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_CondSideFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CondSideFlowRate_)
            {
              this->SimFlowEnergyTrans_CondSideFlowRate_.set (SimFlowEnergyTrans_CondSideFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PlantSideFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_PlantSideFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PlantSideFlowRate_)
            {
              this->SimFlowEnergyTrans_PlantSideFlowRate_.set (SimFlowEnergyTrans_PlantSideFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompCondInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompCondInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompCondInletNodeName_type > r (
              SimFlowEnergyTrans_CntlledCompCondInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_)
            {
              this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompCondOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompCondOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompCondOutletNodeName_type > r (
              SimFlowEnergyTrans_CntlledCompCondOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_)
            {
              this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompPlantInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompPlantInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompPlantInletNodeName_type > r (
              SimFlowEnergyTrans_CntlledCompPlantInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_)
            {
              this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlledCompPlantOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CntlledCompPlantOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_type > r (
              SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_)
            {
              this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic* SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic& SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      operator= (const SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_HeatExWaterToWater& > (*this) = x;
          this->SimFlowEnergyTrans_UFactorTimesAreaVal_ = x.SimFlowEnergyTrans_UFactorTimesAreaVal_;
          this->SimFlowEnergyTrans_CntlledCompName_ = x.SimFlowEnergyTrans_CntlledCompName_;
          this->SimFlowEnergyTrans_CntlledCompObjType_ = x.SimFlowEnergyTrans_CntlledCompObjType_;
          this->SimFlowEnergyTrans_SetpointSchedName_ = x.SimFlowEnergyTrans_SetpointSchedName_;
          this->SimFlowEnergyTrans_CondInletNodeName_ = x.SimFlowEnergyTrans_CondInletNodeName_;
          this->SimFlowEnergyTrans_CondOutletNodeName_ = x.SimFlowEnergyTrans_CondOutletNodeName_;
          this->SimFlowEnergyTrans_PlantInletNodeName_ = x.SimFlowEnergyTrans_PlantInletNodeName_;
          this->SimFlowEnergyTrans_PlantOutletNodeName_ = x.SimFlowEnergyTrans_PlantOutletNodeName_;
          this->SimFlowEnergyTrans_FreeCoolingCntlMode_ = x.SimFlowEnergyTrans_FreeCoolingCntlMode_;
          this->SimFlowEnergyTrans_HeatExchngSetpointSchedName_ = x.SimFlowEnergyTrans_HeatExchngSetpointSchedName_;
          this->SimFlowEnergyTrans_HeatExchangeMode_ = x.SimFlowEnergyTrans_HeatExchangeMode_;
          this->SimFlowEnergyTrans_CondSideFlowRate_ = x.SimFlowEnergyTrans_CondSideFlowRate_;
          this->SimFlowEnergyTrans_PlantSideFlowRate_ = x.SimFlowEnergyTrans_PlantSideFlowRate_;
          this->SimFlowEnergyTrans_CntlledCompCondInletNodeName_ = x.SimFlowEnergyTrans_CntlledCompCondInletNodeName_;
          this->SimFlowEnergyTrans_CntlledCompCondOutletNodeName_ = x.SimFlowEnergyTrans_CntlledCompCondOutletNodeName_;
          this->SimFlowEnergyTrans_CntlledCompPlantInletNodeName_ = x.SimFlowEnergyTrans_CntlledCompPlantInletNodeName_;
          this->SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_ = x.SimFlowEnergyTrans_CntlledCompPlantOutletNodeName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic::
      ~SimFlowEnergyTransfer_HeatExWaterToWater_Hydronic ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

