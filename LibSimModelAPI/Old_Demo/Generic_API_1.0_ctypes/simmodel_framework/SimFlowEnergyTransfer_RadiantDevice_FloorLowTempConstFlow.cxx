// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow
      // 

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_ZoneName () const
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_ZoneName ()
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_type& x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_ZoneName (::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName () const
      {
        return this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName ()
      {
        return this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (const SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type& x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (const SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (::std::auto_ptr< SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type > x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HydronicTubingsideDiam_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam () const
      {
        return this->SimFlowEnergyTrans_HydronicTubingsideDiam_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HydronicTubingsideDiam_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam ()
      {
        return this->SimFlowEnergyTrans_HydronicTubingsideDiam_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam (const SimFlowEnergyTrans_HydronicTubingsideDiam_type& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingsideDiam_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam (const SimFlowEnergyTrans_HydronicTubingsideDiam_optional& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingsideDiam_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HydronicTubingLength_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingLength () const
      {
        return this->SimFlowEnergyTrans_HydronicTubingLength_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HydronicTubingLength_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingLength ()
      {
        return this->SimFlowEnergyTrans_HydronicTubingLength_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingLength (const SimFlowEnergyTrans_HydronicTubingLength_type& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingLength_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HydronicTubingLength (const SimFlowEnergyTrans_HydronicTubingLength_optional& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingLength_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_TempCntlType () const
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_TempCntlType ()
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_type& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_TempCntlType (::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_HeatingWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_HeatingWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName (const SimFlowEnergyTrans_HeatingWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName (const SimFlowEnergyTrans_HeatingWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingWaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName (const SimFlowEnergyTrans_HeatingWaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName (const SimFlowEnergyTrans_HeatingWaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CoolingWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CoolingWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName (const SimFlowEnergyTrans_CoolingWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName (const SimFlowEnergyTrans_CoolingWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingWaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName (const SimFlowEnergyTrans_CoolingWaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName (const SimFlowEnergyTrans_CoolingWaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CondensationCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlType () const
      {
        return this->SimFlowEnergyTrans_CondensationCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CondensationCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlType ()
      {
        return this->SimFlowEnergyTrans_CondensationCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlType (const SimFlowEnergyTrans_CondensationCntlType_type& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlType (const SimFlowEnergyTrans_CondensationCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlType (::std::auto_ptr< SimFlowEnergyTrans_CondensationCntlType_type > x)
      {
        this->SimFlowEnergyTrans_CondensationCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CondensationCntlDewpointfset_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset () const
      {
        return this->SimFlowEnergyTrans_CondensationCntlDewpointfset_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CondensationCntlDewpointfset_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset ()
      {
        return this->SimFlowEnergyTrans_CondensationCntlDewpointfset_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset (const SimFlowEnergyTrans_CondensationCntlDewpointfset_type& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlDewpointfset_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset (const SimFlowEnergyTrans_CondensationCntlDewpointfset_optional& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlDewpointfset_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_RatedFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedFlowRate () const
      {
        return this->SimFlowEnergyTrans_RatedFlowRate_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_RatedFlowRate_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedFlowRate ()
      {
        return this->SimFlowEnergyTrans_RatedFlowRate_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedFlowRate (const SimFlowEnergyTrans_RatedFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_RatedFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedFlowRate (const SimFlowEnergyTrans_RatedFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_RatedFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_PumpFlowRateSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_PumpFlowRateSchedName () const
      {
        return this->SimFlowEnergyTrans_PumpFlowRateSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_PumpFlowRateSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_PumpFlowRateSchedName ()
      {
        return this->SimFlowEnergyTrans_PumpFlowRateSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_PumpFlowRateSchedName (const SimFlowEnergyTrans_PumpFlowRateSchedName_type& x)
      {
        this->SimFlowEnergyTrans_PumpFlowRateSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_PumpFlowRateSchedName (const SimFlowEnergyTrans_PumpFlowRateSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_PumpFlowRateSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_PumpFlowRateSchedName (::std::auto_ptr< SimFlowEnergyTrans_PumpFlowRateSchedName_type > x)
      {
        this->SimFlowEnergyTrans_PumpFlowRateSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_RatedPumpHead_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPumpHead () const
      {
        return this->SimFlowEnergyTrans_RatedPumpHead_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_RatedPumpHead_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPumpHead ()
      {
        return this->SimFlowEnergyTrans_RatedPumpHead_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPumpHead (const SimFlowEnergyTrans_RatedPumpHead_type& x)
      {
        this->SimFlowEnergyTrans_RatedPumpHead_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPumpHead (const SimFlowEnergyTrans_RatedPumpHead_optional& x)
      {
        this->SimFlowEnergyTrans_RatedPumpHead_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_RatedPowerConsump_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPowerConsump () const
      {
        return this->SimFlowEnergyTrans_RatedPowerConsump_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_RatedPowerConsump_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPowerConsump ()
      {
        return this->SimFlowEnergyTrans_RatedPowerConsump_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPowerConsump (const SimFlowEnergyTrans_RatedPowerConsump_type& x)
      {
        this->SimFlowEnergyTrans_RatedPowerConsump_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_RatedPowerConsump (const SimFlowEnergyTrans_RatedPowerConsump_optional& x)
      {
        this->SimFlowEnergyTrans_RatedPowerConsump_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_MotorEff_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_MotorEff () const
      {
        return this->SimFlowEnergyTrans_MotorEff_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_MotorEff_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_MotorEff ()
      {
        return this->SimFlowEnergyTrans_MotorEff_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_MotorEff (const SimFlowEnergyTrans_MotorEff_type& x)
      {
        this->SimFlowEnergyTrans_MotorEff_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_MotorEff (const SimFlowEnergyTrans_MotorEff_optional& x)
      {
        this->SimFlowEnergyTrans_MotorEff_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_FracMotorInEffToFluidStream_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_FracMotorInEffToFluidStream () const
      {
        return this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_FracMotorInEffToFluidStream_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_FracMotorInEffToFluidStream ()
      {
        return this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_FracMotorInEffToFluidStream (const SimFlowEnergyTrans_FracMotorInEffToFluidStream_type& x)
      {
        this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_FracMotorInEffToFluidStream (const SimFlowEnergyTrans_FracMotorInEffToFluidStream_optional& x)
      {
        this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingHighWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighWaterTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingHighWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighWaterTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighWaterTempSchedName (const SimFlowEnergyTrans_HeatingHighWaterTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighWaterTempSchedName (const SimFlowEnergyTrans_HeatingHighWaterTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighWaterTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingHighWaterTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingLowWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowWaterTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingLowWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowWaterTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowWaterTempSchedName (const SimFlowEnergyTrans_HeatingLowWaterTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowWaterTempSchedName (const SimFlowEnergyTrans_HeatingLowWaterTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowWaterTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingLowWaterTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName (const SimFlowEnergyTrans_HeatingHighCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName (const SimFlowEnergyTrans_HeatingHighCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingHighCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingHighCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_HeatingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName (const SimFlowEnergyTrans_HeatingLowCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName (const SimFlowEnergyTrans_HeatingLowCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_HeatingLowCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingLowCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingHighWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighWaterTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingHighWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighWaterTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighWaterTempSchedName (const SimFlowEnergyTrans_CoolingHighWaterTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighWaterTempSchedName (const SimFlowEnergyTrans_CoolingHighWaterTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighWaterTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingHighWaterTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingLowWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowWaterTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingLowWaterTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowWaterTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowWaterTempSchedName (const SimFlowEnergyTrans_CoolingLowWaterTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowWaterTempSchedName (const SimFlowEnergyTrans_CoolingLowWaterTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowWaterTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingLowWaterTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingHighCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName (const SimFlowEnergyTrans_CoolingHighCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName (const SimFlowEnergyTrans_CoolingHighCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingHighCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingHighCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::SimFlowEnergyTrans_CoolingLowCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName (const SimFlowEnergyTrans_CoolingLowCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName (const SimFlowEnergyTrans_CoolingLowCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTrans_CoolingLowCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingLowCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow
      //

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice (RefId),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (this),
        SimFlowEnergyTrans_HydronicTubingLength_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CondensationCntlType_ (this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (this),
        SimFlowEnergyTrans_RatedFlowRate_ (this),
        SimFlowEnergyTrans_PumpFlowRateSchedName_ (this),
        SimFlowEnergyTrans_RatedPumpHead_ (this),
        SimFlowEnergyTrans_RatedPowerConsump_ (this),
        SimFlowEnergyTrans_MotorEff_ (this),
        SimFlowEnergyTrans_FracMotorInEffToFluidStream_ (this),
        SimFlowEnergyTrans_HeatingHighWaterTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowWaterTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighWaterTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowWaterTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ (this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow (const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow& x,
                                                                 ::xml_schema::flags f,
                                                                 ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice (x, f, c),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_ZoneName_ (x.SimFlowEnergyTrans_ZoneName_, f, this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (x.SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_, f, this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (x.SimFlowEnergyTrans_HydronicTubingsideDiam_, f, this),
        SimFlowEnergyTrans_HydronicTubingLength_ (x.SimFlowEnergyTrans_HydronicTubingLength_, f, this),
        SimFlowEnergyTrans_TempCntlType_ (x.SimFlowEnergyTrans_TempCntlType_, f, this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (x.SimFlowEnergyTrans_HeatingWaterInletNodeName_, f, this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (x.SimFlowEnergyTrans_HeatingWaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (x.SimFlowEnergyTrans_CoolingWaterInletNodeName_, f, this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (x.SimFlowEnergyTrans_CoolingWaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_CondensationCntlType_ (x.SimFlowEnergyTrans_CondensationCntlType_, f, this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (x.SimFlowEnergyTrans_CondensationCntlDewpointfset_, f, this),
        SimFlowEnergyTrans_RatedFlowRate_ (x.SimFlowEnergyTrans_RatedFlowRate_, f, this),
        SimFlowEnergyTrans_PumpFlowRateSchedName_ (x.SimFlowEnergyTrans_PumpFlowRateSchedName_, f, this),
        SimFlowEnergyTrans_RatedPumpHead_ (x.SimFlowEnergyTrans_RatedPumpHead_, f, this),
        SimFlowEnergyTrans_RatedPowerConsump_ (x.SimFlowEnergyTrans_RatedPowerConsump_, f, this),
        SimFlowEnergyTrans_MotorEff_ (x.SimFlowEnergyTrans_MotorEff_, f, this),
        SimFlowEnergyTrans_FracMotorInEffToFluidStream_ (x.SimFlowEnergyTrans_FracMotorInEffToFluidStream_, f, this),
        SimFlowEnergyTrans_HeatingHighWaterTempSchedName_ (x.SimFlowEnergyTrans_HeatingHighWaterTempSchedName_, f, this),
        SimFlowEnergyTrans_HeatingLowWaterTempSchedName_ (x.SimFlowEnergyTrans_HeatingLowWaterTempSchedName_, f, this),
        SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ (x.SimFlowEnergyTrans_HeatingHighCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ (x.SimFlowEnergyTrans_HeatingLowCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingHighWaterTempSchedName_ (x.SimFlowEnergyTrans_CoolingHighWaterTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingLowWaterTempSchedName_ (x.SimFlowEnergyTrans_CoolingLowWaterTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ (x.SimFlowEnergyTrans_CoolingHighCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ (x.SimFlowEnergyTrans_CoolingLowCntlTempSchedName_, f, this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow (const ::xercesc::DOMElement& e,
                                                                 ::xml_schema::flags f,
                                                                 ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (this),
        SimFlowEnergyTrans_HydronicTubingLength_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CondensationCntlType_ (this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (this),
        SimFlowEnergyTrans_RatedFlowRate_ (this),
        SimFlowEnergyTrans_PumpFlowRateSchedName_ (this),
        SimFlowEnergyTrans_RatedPumpHead_ (this),
        SimFlowEnergyTrans_RatedPowerConsump_ (this),
        SimFlowEnergyTrans_MotorEff_ (this),
        SimFlowEnergyTrans_FracMotorInEffToFluidStream_ (this),
        SimFlowEnergyTrans_HeatingHighWaterTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowWaterTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighWaterTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowWaterTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneName
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > r (
              SimFlowEnergyTrans_ZoneName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ZoneName_)
            {
              this->SimFlowEnergyTrans_ZoneName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName
          //
          if (n.name () == "SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type > r (
              SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_)
            {
              this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HydronicTubingsideDiam
          //
          if (n.name () == "SimFlowEnergyTrans_HydronicTubingsideDiam" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HydronicTubingsideDiam_)
            {
              this->SimFlowEnergyTrans_HydronicTubingsideDiam_.set (SimFlowEnergyTrans_HydronicTubingsideDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HydronicTubingLength
          //
          if (n.name () == "SimFlowEnergyTrans_HydronicTubingLength" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HydronicTubingLength_)
            {
              this->SimFlowEnergyTrans_HydronicTubingLength_.set (SimFlowEnergyTrans_HydronicTubingLength_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TempCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_TempCntlType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > r (
              SimFlowEnergyTrans_TempCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TempCntlType_)
            {
              this->SimFlowEnergyTrans_TempCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingWaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterInletNodeName_type > r (
              SimFlowEnergyTrans_HeatingWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_HeatingWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingWaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingWaterOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterOutletNodeName_type > r (
              SimFlowEnergyTrans_HeatingWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingWaterInletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterInletNodeName_type > r (
              SimFlowEnergyTrans_CoolingWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_CoolingWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingWaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingWaterOutletNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterOutletNodeName_type > r (
              SimFlowEnergyTrans_CoolingWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondensationCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_CondensationCntlType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondensationCntlType_type > r (
              SimFlowEnergyTrans_CondensationCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondensationCntlType_)
            {
              this->SimFlowEnergyTrans_CondensationCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondensationCntlDewpointfset
          //
          if (n.name () == "SimFlowEnergyTrans_CondensationCntlDewpointfset" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CondensationCntlDewpointfset_)
            {
              this->SimFlowEnergyTrans_CondensationCntlDewpointfset_.set (SimFlowEnergyTrans_CondensationCntlDewpointfset_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_RatedFlowRate" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedFlowRate_)
            {
              this->SimFlowEnergyTrans_RatedFlowRate_.set (SimFlowEnergyTrans_RatedFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PumpFlowRateSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_PumpFlowRateSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_PumpFlowRateSchedName_type > r (
              SimFlowEnergyTrans_PumpFlowRateSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_PumpFlowRateSchedName_)
            {
              this->SimFlowEnergyTrans_PumpFlowRateSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedPumpHead
          //
          if (n.name () == "SimFlowEnergyTrans_RatedPumpHead" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedPumpHead_)
            {
              this->SimFlowEnergyTrans_RatedPumpHead_.set (SimFlowEnergyTrans_RatedPumpHead_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedPowerConsump
          //
          if (n.name () == "SimFlowEnergyTrans_RatedPowerConsump" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedPowerConsump_)
            {
              this->SimFlowEnergyTrans_RatedPowerConsump_.set (SimFlowEnergyTrans_RatedPowerConsump_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MotorEff
          //
          if (n.name () == "SimFlowEnergyTrans_MotorEff" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MotorEff_)
            {
              this->SimFlowEnergyTrans_MotorEff_.set (SimFlowEnergyTrans_MotorEff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FracMotorInEffToFluidStream
          //
          if (n.name () == "SimFlowEnergyTrans_FracMotorInEffToFluidStream" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_)
            {
              this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_.set (SimFlowEnergyTrans_FracMotorInEffToFluidStream_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingHighWaterTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingHighWaterTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingHighWaterTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingHighWaterTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingLowWaterTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingLowWaterTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingLowWaterTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingLowWaterTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingHighCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingHighCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingHighCntlTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingHighCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingLowCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingLowCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingLowCntlTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingLowCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingHighWaterTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingHighWaterTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingHighWaterTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingHighWaterTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingLowWaterTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingLowWaterTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingLowWaterTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingLowWaterTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingHighCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingHighCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingHighCntlTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingHighCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingLowCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingLowCntlTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingLowCntlTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingLowCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow* SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow (*this, f, c);
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow& SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      operator= (const SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowEnergyTransfer_RadiantDevice& > (*this) = x;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_ZoneName_ = x.SimFlowEnergyTrans_ZoneName_;
          this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ = x.SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
          this->SimFlowEnergyTrans_HydronicTubingsideDiam_ = x.SimFlowEnergyTrans_HydronicTubingsideDiam_;
          this->SimFlowEnergyTrans_HydronicTubingLength_ = x.SimFlowEnergyTrans_HydronicTubingLength_;
          this->SimFlowEnergyTrans_TempCntlType_ = x.SimFlowEnergyTrans_TempCntlType_;
          this->SimFlowEnergyTrans_HeatingWaterInletNodeName_ = x.SimFlowEnergyTrans_HeatingWaterInletNodeName_;
          this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_ = x.SimFlowEnergyTrans_HeatingWaterOutletNodeName_;
          this->SimFlowEnergyTrans_CoolingWaterInletNodeName_ = x.SimFlowEnergyTrans_CoolingWaterInletNodeName_;
          this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_ = x.SimFlowEnergyTrans_CoolingWaterOutletNodeName_;
          this->SimFlowEnergyTrans_CondensationCntlType_ = x.SimFlowEnergyTrans_CondensationCntlType_;
          this->SimFlowEnergyTrans_CondensationCntlDewpointfset_ = x.SimFlowEnergyTrans_CondensationCntlDewpointfset_;
          this->SimFlowEnergyTrans_RatedFlowRate_ = x.SimFlowEnergyTrans_RatedFlowRate_;
          this->SimFlowEnergyTrans_PumpFlowRateSchedName_ = x.SimFlowEnergyTrans_PumpFlowRateSchedName_;
          this->SimFlowEnergyTrans_RatedPumpHead_ = x.SimFlowEnergyTrans_RatedPumpHead_;
          this->SimFlowEnergyTrans_RatedPowerConsump_ = x.SimFlowEnergyTrans_RatedPowerConsump_;
          this->SimFlowEnergyTrans_MotorEff_ = x.SimFlowEnergyTrans_MotorEff_;
          this->SimFlowEnergyTrans_FracMotorInEffToFluidStream_ = x.SimFlowEnergyTrans_FracMotorInEffToFluidStream_;
          this->SimFlowEnergyTrans_HeatingHighWaterTempSchedName_ = x.SimFlowEnergyTrans_HeatingHighWaterTempSchedName_;
          this->SimFlowEnergyTrans_HeatingLowWaterTempSchedName_ = x.SimFlowEnergyTrans_HeatingLowWaterTempSchedName_;
          this->SimFlowEnergyTrans_HeatingHighCntlTempSchedName_ = x.SimFlowEnergyTrans_HeatingHighCntlTempSchedName_;
          this->SimFlowEnergyTrans_HeatingLowCntlTempSchedName_ = x.SimFlowEnergyTrans_HeatingLowCntlTempSchedName_;
          this->SimFlowEnergyTrans_CoolingHighWaterTempSchedName_ = x.SimFlowEnergyTrans_CoolingHighWaterTempSchedName_;
          this->SimFlowEnergyTrans_CoolingLowWaterTempSchedName_ = x.SimFlowEnergyTrans_CoolingLowWaterTempSchedName_;
          this->SimFlowEnergyTrans_CoolingHighCntlTempSchedName_ = x.SimFlowEnergyTrans_CoolingHighCntlTempSchedName_;
          this->SimFlowEnergyTrans_CoolingLowCntlTempSchedName_ = x.SimFlowEnergyTrans_CoolingLowCntlTempSchedName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow::
      ~SimFlowEnergyTransfer_RadiantDevice_FloorLowTempConstFlow ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

