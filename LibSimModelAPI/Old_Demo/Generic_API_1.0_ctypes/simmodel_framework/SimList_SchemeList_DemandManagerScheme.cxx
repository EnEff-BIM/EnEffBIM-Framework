// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimList_SchemeList_DemandManagerScheme.hxx"

#include "simlist_demandmngr_1_10_objecttype.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      // SimList_SchemeList_DemandManagerScheme
      // 

      const SimList_SchemeList_DemandManagerScheme::SimList_MeterName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_MeterName () const
      {
        return this->SimList_MeterName_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_MeterName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_MeterName ()
      {
        return this->SimList_MeterName_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_MeterName (const SimList_MeterName_type& x)
      {
        this->SimList_MeterName_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_MeterName (const SimList_MeterName_optional& x)
      {
        this->SimList_MeterName_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_MeterName (::std::auto_ptr< SimList_MeterName_type > x)
      {
        this->SimList_MeterName_.set (x);
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_DemandLimitSchedName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSchedName () const
      {
        return this->SimList_DemandLimitSchedName_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_DemandLimitSchedName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSchedName ()
      {
        return this->SimList_DemandLimitSchedName_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSchedName (const SimList_DemandLimitSchedName_type& x)
      {
        this->SimList_DemandLimitSchedName_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSchedName (const SimList_DemandLimitSchedName_optional& x)
      {
        this->SimList_DemandLimitSchedName_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSchedName (::std::auto_ptr< SimList_DemandLimitSchedName_type > x)
      {
        this->SimList_DemandLimitSchedName_.set (x);
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_DemandLimitSafetyFrac_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSafetyFrac () const
      {
        return this->SimList_DemandLimitSafetyFrac_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_DemandLimitSafetyFrac_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSafetyFrac ()
      {
        return this->SimList_DemandLimitSafetyFrac_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSafetyFrac (const SimList_DemandLimitSafetyFrac_type& x)
      {
        this->SimList_DemandLimitSafetyFrac_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandLimitSafetyFrac (const SimList_DemandLimitSafetyFrac_optional& x)
      {
        this->SimList_DemandLimitSafetyFrac_ = x;
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_BillingPerSchedName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_BillingPerSchedName () const
      {
        return this->SimList_BillingPerSchedName_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_BillingPerSchedName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_BillingPerSchedName ()
      {
        return this->SimList_BillingPerSchedName_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_BillingPerSchedName (const SimList_BillingPerSchedName_type& x)
      {
        this->SimList_BillingPerSchedName_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_BillingPerSchedName (const SimList_BillingPerSchedName_optional& x)
      {
        this->SimList_BillingPerSchedName_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_BillingPerSchedName (::std::auto_ptr< SimList_BillingPerSchedName_type > x)
      {
        this->SimList_BillingPerSchedName_.set (x);
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_PeakPerSchedName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_PeakPerSchedName () const
      {
        return this->SimList_PeakPerSchedName_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_PeakPerSchedName_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_PeakPerSchedName ()
      {
        return this->SimList_PeakPerSchedName_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_PeakPerSchedName (const SimList_PeakPerSchedName_type& x)
      {
        this->SimList_PeakPerSchedName_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_PeakPerSchedName (const SimList_PeakPerSchedName_optional& x)
      {
        this->SimList_PeakPerSchedName_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_PeakPerSchedName (::std::auto_ptr< SimList_PeakPerSchedName_type > x)
      {
        this->SimList_PeakPerSchedName_.set (x);
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_DemandWindLength_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandWindLength () const
      {
        return this->SimList_DemandWindLength_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_DemandWindLength_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandWindLength ()
      {
        return this->SimList_DemandWindLength_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandWindLength (const SimList_DemandWindLength_type& x)
      {
        this->SimList_DemandWindLength_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandWindLength (const SimList_DemandWindLength_optional& x)
      {
        this->SimList_DemandWindLength_ = x;
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_DemandMngrPrio_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngrPrio () const
      {
        return this->SimList_DemandMngrPrio_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_DemandMngrPrio_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngrPrio ()
      {
        return this->SimList_DemandMngrPrio_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngrPrio (const SimList_DemandMngrPrio_type& x)
      {
        this->SimList_DemandMngrPrio_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngrPrio (const SimList_DemandMngrPrio_optional& x)
      {
        this->SimList_DemandMngrPrio_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngrPrio (::std::auto_ptr< SimList_DemandMngrPrio_type > x)
      {
        this->SimList_DemandMngrPrio_.set (x);
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_DemandMngr_1_10_ObjectType_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_ObjectType () const
      {
        return this->SimList_DemandMngr_1_10_ObjectType_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_DemandMngr_1_10_ObjectType_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_ObjectType ()
      {
        return this->SimList_DemandMngr_1_10_ObjectType_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_ObjectType (const SimList_DemandMngr_1_10_ObjectType_type& x)
      {
        this->SimList_DemandMngr_1_10_ObjectType_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_ObjectType (const SimList_DemandMngr_1_10_ObjectType_optional& x)
      {
        this->SimList_DemandMngr_1_10_ObjectType_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_ObjectType (::std::auto_ptr< SimList_DemandMngr_1_10_ObjectType_type > x)
      {
        this->SimList_DemandMngr_1_10_ObjectType_.set (x);
      }

      const SimList_SchemeList_DemandManagerScheme::SimList_DemandMngr_1_10_Name_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_Name () const
      {
        return this->SimList_DemandMngr_1_10_Name_;
      }

      SimList_SchemeList_DemandManagerScheme::SimList_DemandMngr_1_10_Name_optional& SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_Name ()
      {
        return this->SimList_DemandMngr_1_10_Name_;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_Name (const SimList_DemandMngr_1_10_Name_type& x)
      {
        this->SimList_DemandMngr_1_10_Name_.set (x);
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_Name (const SimList_DemandMngr_1_10_Name_optional& x)
      {
        this->SimList_DemandMngr_1_10_Name_ = x;
      }

      void SimList_SchemeList_DemandManagerScheme::
      SimList_DemandMngr_1_10_Name (::std::auto_ptr< SimList_DemandMngr_1_10_Name_type > x)
      {
        this->SimList_DemandMngr_1_10_Name_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
      // SimList_SchemeList_DemandManagerScheme
      //

      SimList_SchemeList_DemandManagerScheme::
      SimList_SchemeList_DemandManagerScheme (const RefId_type& RefId)
      : ::namespaces::Sim::BuildingModel::SimList_SchemeList (RefId),
        SimList_MeterName_ (this),
        SimList_DemandLimitSchedName_ (this),
        SimList_DemandLimitSafetyFrac_ (this),
        SimList_BillingPerSchedName_ (this),
        SimList_PeakPerSchedName_ (this),
        SimList_DemandWindLength_ (this),
        SimList_DemandMngrPrio_ (this),
        SimList_DemandMngr_1_10_ObjectType_ (this),
        SimList_DemandMngr_1_10_Name_ (this)
      {
      }

      SimList_SchemeList_DemandManagerScheme::
      SimList_SchemeList_DemandManagerScheme (const SimList_SchemeList_DemandManagerScheme& x,
                                              ::xml_schema::flags f,
                                              ::xml_schema::container* c)
      : ::namespaces::Sim::BuildingModel::SimList_SchemeList (x, f, c),
        SimList_MeterName_ (x.SimList_MeterName_, f, this),
        SimList_DemandLimitSchedName_ (x.SimList_DemandLimitSchedName_, f, this),
        SimList_DemandLimitSafetyFrac_ (x.SimList_DemandLimitSafetyFrac_, f, this),
        SimList_BillingPerSchedName_ (x.SimList_BillingPerSchedName_, f, this),
        SimList_PeakPerSchedName_ (x.SimList_PeakPerSchedName_, f, this),
        SimList_DemandWindLength_ (x.SimList_DemandWindLength_, f, this),
        SimList_DemandMngrPrio_ (x.SimList_DemandMngrPrio_, f, this),
        SimList_DemandMngr_1_10_ObjectType_ (x.SimList_DemandMngr_1_10_ObjectType_, f, this),
        SimList_DemandMngr_1_10_Name_ (x.SimList_DemandMngr_1_10_Name_, f, this)
      {
      }

      SimList_SchemeList_DemandManagerScheme::
      SimList_SchemeList_DemandManagerScheme (const ::xercesc::DOMElement& e,
                                              ::xml_schema::flags f,
                                              ::xml_schema::container* c)
      : ::namespaces::Sim::BuildingModel::SimList_SchemeList (e, f | ::xml_schema::flags::base, c),
        SimList_MeterName_ (this),
        SimList_DemandLimitSchedName_ (this),
        SimList_DemandLimitSafetyFrac_ (this),
        SimList_BillingPerSchedName_ (this),
        SimList_PeakPerSchedName_ (this),
        SimList_DemandWindLength_ (this),
        SimList_DemandMngrPrio_ (this),
        SimList_DemandMngr_1_10_ObjectType_ (this),
        SimList_DemandMngr_1_10_Name_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimList_SchemeList_DemandManagerScheme::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::BuildingModel::SimList_SchemeList::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimList_MeterName
          //
          if (n.name () == "SimList_MeterName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_MeterName_type > r (
              SimList_MeterName_traits::create (i, f, this));

            if (!this->SimList_MeterName_)
            {
              this->SimList_MeterName_.set (r);
              continue;
            }
          }

          // SimList_DemandLimitSchedName
          //
          if (n.name () == "SimList_DemandLimitSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_DemandLimitSchedName_type > r (
              SimList_DemandLimitSchedName_traits::create (i, f, this));

            if (!this->SimList_DemandLimitSchedName_)
            {
              this->SimList_DemandLimitSchedName_.set (r);
              continue;
            }
          }

          // SimList_DemandLimitSafetyFrac
          //
          if (n.name () == "SimList_DemandLimitSafetyFrac" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimList_DemandLimitSafetyFrac_)
            {
              this->SimList_DemandLimitSafetyFrac_.set (SimList_DemandLimitSafetyFrac_traits::create (i, f, this));
              continue;
            }
          }

          // SimList_BillingPerSchedName
          //
          if (n.name () == "SimList_BillingPerSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_BillingPerSchedName_type > r (
              SimList_BillingPerSchedName_traits::create (i, f, this));

            if (!this->SimList_BillingPerSchedName_)
            {
              this->SimList_BillingPerSchedName_.set (r);
              continue;
            }
          }

          // SimList_PeakPerSchedName
          //
          if (n.name () == "SimList_PeakPerSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_PeakPerSchedName_type > r (
              SimList_PeakPerSchedName_traits::create (i, f, this));

            if (!this->SimList_PeakPerSchedName_)
            {
              this->SimList_PeakPerSchedName_.set (r);
              continue;
            }
          }

          // SimList_DemandWindLength
          //
          if (n.name () == "SimList_DemandWindLength" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            if (!this->SimList_DemandWindLength_)
            {
              this->SimList_DemandWindLength_.set (SimList_DemandWindLength_traits::create (i, f, this));
              continue;
            }
          }

          // SimList_DemandMngrPrio
          //
          if (n.name () == "SimList_DemandMngrPrio" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_DemandMngrPrio_type > r (
              SimList_DemandMngrPrio_traits::create (i, f, this));

            if (!this->SimList_DemandMngrPrio_)
            {
              this->SimList_DemandMngrPrio_.set (r);
              continue;
            }
          }

          // SimList_DemandMngr_1_10_ObjectType
          //
          if (n.name () == "SimList_DemandMngr_1_10_ObjectType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_DemandMngr_1_10_ObjectType_type > r (
              SimList_DemandMngr_1_10_ObjectType_traits::create (i, f, this));

            if (!this->SimList_DemandMngr_1_10_ObjectType_)
            {
              this->SimList_DemandMngr_1_10_ObjectType_.set (r);
              continue;
            }
          }

          // SimList_DemandMngr_1_10_Name
          //
          if (n.name () == "SimList_DemandMngr_1_10_Name" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/BuildingModel")
          {
            ::std::auto_ptr< SimList_DemandMngr_1_10_Name_type > r (
              SimList_DemandMngr_1_10_Name_traits::create (i, f, this));

            if (!this->SimList_DemandMngr_1_10_Name_)
            {
              this->SimList_DemandMngr_1_10_Name_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimList_SchemeList_DemandManagerScheme* SimList_SchemeList_DemandManagerScheme::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimList_SchemeList_DemandManagerScheme (*this, f, c);
      }

      SimList_SchemeList_DemandManagerScheme& SimList_SchemeList_DemandManagerScheme::
      operator= (const SimList_SchemeList_DemandManagerScheme& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::BuildingModel::SimList_SchemeList& > (*this) = x;
          this->SimList_MeterName_ = x.SimList_MeterName_;
          this->SimList_DemandLimitSchedName_ = x.SimList_DemandLimitSchedName_;
          this->SimList_DemandLimitSafetyFrac_ = x.SimList_DemandLimitSafetyFrac_;
          this->SimList_BillingPerSchedName_ = x.SimList_BillingPerSchedName_;
          this->SimList_PeakPerSchedName_ = x.SimList_PeakPerSchedName_;
          this->SimList_DemandWindLength_ = x.SimList_DemandWindLength_;
          this->SimList_DemandMngrPrio_ = x.SimList_DemandMngrPrio_;
          this->SimList_DemandMngr_1_10_ObjectType_ = x.SimList_DemandMngr_1_10_ObjectType_;
          this->SimList_DemandMngr_1_10_Name_ = x.SimList_DemandMngr_1_10_Name_;
        }

        return *this;
      }

      SimList_SchemeList_DemandManagerScheme::
      ~SimList_SchemeList_DemandManagerScheme ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

