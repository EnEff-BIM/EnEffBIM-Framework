// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowCompoundEqmt_WaterUse.hxx"

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_WaterUse
      // 

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_InNodeName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_InNodeName () const
      {
        return this->SimFlowCompEqmt_InNodeName_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_InNodeName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_InNodeName ()
      {
        return this->SimFlowCompEqmt_InNodeName_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_InNodeName (const SimFlowCompEqmt_InNodeName_type& x)
      {
        this->SimFlowCompEqmt_InNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_InNodeName (const SimFlowCompEqmt_InNodeName_optional& x)
      {
        this->SimFlowCompEqmt_InNodeName_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_InNodeName (::std::auto_ptr< SimFlowCompEqmt_InNodeName_type > x)
      {
        this->SimFlowCompEqmt_InNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_OutNodeName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_OutNodeName () const
      {
        return this->SimFlowCompEqmt_OutNodeName_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_OutNodeName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_OutNodeName ()
      {
        return this->SimFlowCompEqmt_OutNodeName_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_OutNodeName (const SimFlowCompEqmt_OutNodeName_type& x)
      {
        this->SimFlowCompEqmt_OutNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_OutNodeName (const SimFlowCompEqmt_OutNodeName_optional& x)
      {
        this->SimFlowCompEqmt_OutNodeName_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_OutNodeName (::std::auto_ptr< SimFlowCompEqmt_OutNodeName_type > x)
      {
        this->SimFlowCompEqmt_OutNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_SupWaterStoTankName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_SupWaterStoTankName () const
      {
        return this->SimFlowCompEqmt_SupWaterStoTankName_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_SupWaterStoTankName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_SupWaterStoTankName ()
      {
        return this->SimFlowCompEqmt_SupWaterStoTankName_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_SupWaterStoTankName (const SimFlowCompEqmt_SupWaterStoTankName_type& x)
      {
        this->SimFlowCompEqmt_SupWaterStoTankName_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_SupWaterStoTankName (const SimFlowCompEqmt_SupWaterStoTankName_optional& x)
      {
        this->SimFlowCompEqmt_SupWaterStoTankName_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_SupWaterStoTankName (::std::auto_ptr< SimFlowCompEqmt_SupWaterStoTankName_type > x)
      {
        this->SimFlowCompEqmt_SupWaterStoTankName_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_ReclamWaterStoTankName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ReclamWaterStoTankName () const
      {
        return this->SimFlowCompEqmt_ReclamWaterStoTankName_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_ReclamWaterStoTankName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ReclamWaterStoTankName ()
      {
        return this->SimFlowCompEqmt_ReclamWaterStoTankName_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ReclamWaterStoTankName (const SimFlowCompEqmt_ReclamWaterStoTankName_type& x)
      {
        this->SimFlowCompEqmt_ReclamWaterStoTankName_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ReclamWaterStoTankName (const SimFlowCompEqmt_ReclamWaterStoTankName_optional& x)
      {
        this->SimFlowCompEqmt_ReclamWaterStoTankName_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ReclamWaterStoTankName (::std::auto_ptr< SimFlowCompEqmt_ReclamWaterStoTankName_type > x)
      {
        this->SimFlowCompEqmt_ReclamWaterStoTankName_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_HotWaterSupTempSchedName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_HotWaterSupTempSchedName () const
      {
        return this->SimFlowCompEqmt_HotWaterSupTempSchedName_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_HotWaterSupTempSchedName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_HotWaterSupTempSchedName ()
      {
        return this->SimFlowCompEqmt_HotWaterSupTempSchedName_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_HotWaterSupTempSchedName (const SimFlowCompEqmt_HotWaterSupTempSchedName_type& x)
      {
        this->SimFlowCompEqmt_HotWaterSupTempSchedName_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_HotWaterSupTempSchedName (const SimFlowCompEqmt_HotWaterSupTempSchedName_optional& x)
      {
        this->SimFlowCompEqmt_HotWaterSupTempSchedName_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_HotWaterSupTempSchedName (::std::auto_ptr< SimFlowCompEqmt_HotWaterSupTempSchedName_type > x)
      {
        this->SimFlowCompEqmt_HotWaterSupTempSchedName_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_ColdWaterSupTempSchedName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ColdWaterSupTempSchedName () const
      {
        return this->SimFlowCompEqmt_ColdWaterSupTempSchedName_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_ColdWaterSupTempSchedName_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ColdWaterSupTempSchedName ()
      {
        return this->SimFlowCompEqmt_ColdWaterSupTempSchedName_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ColdWaterSupTempSchedName (const SimFlowCompEqmt_ColdWaterSupTempSchedName_type& x)
      {
        this->SimFlowCompEqmt_ColdWaterSupTempSchedName_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ColdWaterSupTempSchedName (const SimFlowCompEqmt_ColdWaterSupTempSchedName_optional& x)
      {
        this->SimFlowCompEqmt_ColdWaterSupTempSchedName_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_ColdWaterSupTempSchedName (::std::auto_ptr< SimFlowCompEqmt_ColdWaterSupTempSchedName_type > x)
      {
        this->SimFlowCompEqmt_ColdWaterSupTempSchedName_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_DrainWaterHeatExchType_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchType () const
      {
        return this->SimFlowCompEqmt_DrainWaterHeatExchType_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_DrainWaterHeatExchType_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchType ()
      {
        return this->SimFlowCompEqmt_DrainWaterHeatExchType_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchType (const SimFlowCompEqmt_DrainWaterHeatExchType_type& x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchType_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchType (const SimFlowCompEqmt_DrainWaterHeatExchType_optional& x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchType_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchType (::std::auto_ptr< SimFlowCompEqmt_DrainWaterHeatExchType_type > x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchType_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_DrainWaterHeatExchDest_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchDest () const
      {
        return this->SimFlowCompEqmt_DrainWaterHeatExchDest_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_DrainWaterHeatExchDest_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchDest ()
      {
        return this->SimFlowCompEqmt_DrainWaterHeatExchDest_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchDest (const SimFlowCompEqmt_DrainWaterHeatExchDest_type& x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchDest_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchDest (const SimFlowCompEqmt_DrainWaterHeatExchDest_optional& x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchDest_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchDest (::std::auto_ptr< SimFlowCompEqmt_DrainWaterHeatExchDest_type > x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchDest_.set (x);
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea () const
      {
        return this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea ()
      {
        return this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea (const SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_type& x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea (const SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_optional& x)
      {
        this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_ = x;
      }

      const SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_WaterUseEqmtName_1_10_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_WaterUseEqmtName_1_10 () const
      {
        return this->SimFlowCompEqmt_WaterUseEqmtName_1_10_;
      }

      SimFlowCompoundEqmt_WaterUse::SimFlowCompEqmt_WaterUseEqmtName_1_10_optional& SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_WaterUseEqmtName_1_10 ()
      {
        return this->SimFlowCompEqmt_WaterUseEqmtName_1_10_;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_WaterUseEqmtName_1_10 (const SimFlowCompEqmt_WaterUseEqmtName_1_10_type& x)
      {
        this->SimFlowCompEqmt_WaterUseEqmtName_1_10_.set (x);
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_WaterUseEqmtName_1_10 (const SimFlowCompEqmt_WaterUseEqmtName_1_10_optional& x)
      {
        this->SimFlowCompEqmt_WaterUseEqmtName_1_10_ = x;
      }

      void SimFlowCompoundEqmt_WaterUse::
      SimFlowCompEqmt_WaterUseEqmtName_1_10 (::std::auto_ptr< SimFlowCompEqmt_WaterUseEqmtName_1_10_type > x)
      {
        this->SimFlowCompEqmt_WaterUseEqmtName_1_10_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_WaterUse
      //

      SimFlowCompoundEqmt_WaterUse::
      SimFlowCompoundEqmt_WaterUse (const RefId_type& RefId)
      : ::namespaces::Sim::MepModel::SimFlowCompoundEqmt (RefId),
        SimFlowCompEqmt_InNodeName_ (this),
        SimFlowCompEqmt_OutNodeName_ (this),
        SimFlowCompEqmt_SupWaterStoTankName_ (this),
        SimFlowCompEqmt_ReclamWaterStoTankName_ (this),
        SimFlowCompEqmt_HotWaterSupTempSchedName_ (this),
        SimFlowCompEqmt_ColdWaterSupTempSchedName_ (this),
        SimFlowCompEqmt_DrainWaterHeatExchType_ (this),
        SimFlowCompEqmt_DrainWaterHeatExchDest_ (this),
        SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_ (this),
        SimFlowCompEqmt_WaterUseEqmtName_1_10_ (this)
      {
      }

      SimFlowCompoundEqmt_WaterUse::
      SimFlowCompoundEqmt_WaterUse (const SimFlowCompoundEqmt_WaterUse& x,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowCompoundEqmt (x, f, c),
        SimFlowCompEqmt_InNodeName_ (x.SimFlowCompEqmt_InNodeName_, f, this),
        SimFlowCompEqmt_OutNodeName_ (x.SimFlowCompEqmt_OutNodeName_, f, this),
        SimFlowCompEqmt_SupWaterStoTankName_ (x.SimFlowCompEqmt_SupWaterStoTankName_, f, this),
        SimFlowCompEqmt_ReclamWaterStoTankName_ (x.SimFlowCompEqmt_ReclamWaterStoTankName_, f, this),
        SimFlowCompEqmt_HotWaterSupTempSchedName_ (x.SimFlowCompEqmt_HotWaterSupTempSchedName_, f, this),
        SimFlowCompEqmt_ColdWaterSupTempSchedName_ (x.SimFlowCompEqmt_ColdWaterSupTempSchedName_, f, this),
        SimFlowCompEqmt_DrainWaterHeatExchType_ (x.SimFlowCompEqmt_DrainWaterHeatExchType_, f, this),
        SimFlowCompEqmt_DrainWaterHeatExchDest_ (x.SimFlowCompEqmt_DrainWaterHeatExchDest_, f, this),
        SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_ (x.SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_, f, this),
        SimFlowCompEqmt_WaterUseEqmtName_1_10_ (x.SimFlowCompEqmt_WaterUseEqmtName_1_10_, f, this)
      {
      }

      SimFlowCompoundEqmt_WaterUse::
      SimFlowCompoundEqmt_WaterUse (const ::xercesc::DOMElement& e,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::namespaces::Sim::MepModel::SimFlowCompoundEqmt (e, f | ::xml_schema::flags::base, c),
        SimFlowCompEqmt_InNodeName_ (this),
        SimFlowCompEqmt_OutNodeName_ (this),
        SimFlowCompEqmt_SupWaterStoTankName_ (this),
        SimFlowCompEqmt_ReclamWaterStoTankName_ (this),
        SimFlowCompEqmt_HotWaterSupTempSchedName_ (this),
        SimFlowCompEqmt_ColdWaterSupTempSchedName_ (this),
        SimFlowCompEqmt_DrainWaterHeatExchType_ (this),
        SimFlowCompEqmt_DrainWaterHeatExchDest_ (this),
        SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_ (this),
        SimFlowCompEqmt_WaterUseEqmtName_1_10_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowCompoundEqmt_WaterUse::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::namespaces::Sim::MepModel::SimFlowCompoundEqmt::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowCompEqmt_InNodeName
          //
          if (n.name () == "SimFlowCompEqmt_InNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_InNodeName_type > r (
              SimFlowCompEqmt_InNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_InNodeName_)
            {
              this->SimFlowCompEqmt_InNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_OutNodeName
          //
          if (n.name () == "SimFlowCompEqmt_OutNodeName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_OutNodeName_type > r (
              SimFlowCompEqmt_OutNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_OutNodeName_)
            {
              this->SimFlowCompEqmt_OutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_SupWaterStoTankName
          //
          if (n.name () == "SimFlowCompEqmt_SupWaterStoTankName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_SupWaterStoTankName_type > r (
              SimFlowCompEqmt_SupWaterStoTankName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_SupWaterStoTankName_)
            {
              this->SimFlowCompEqmt_SupWaterStoTankName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_ReclamWaterStoTankName
          //
          if (n.name () == "SimFlowCompEqmt_ReclamWaterStoTankName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_ReclamWaterStoTankName_type > r (
              SimFlowCompEqmt_ReclamWaterStoTankName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_ReclamWaterStoTankName_)
            {
              this->SimFlowCompEqmt_ReclamWaterStoTankName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_HotWaterSupTempSchedName
          //
          if (n.name () == "SimFlowCompEqmt_HotWaterSupTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_HotWaterSupTempSchedName_type > r (
              SimFlowCompEqmt_HotWaterSupTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_HotWaterSupTempSchedName_)
            {
              this->SimFlowCompEqmt_HotWaterSupTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_ColdWaterSupTempSchedName
          //
          if (n.name () == "SimFlowCompEqmt_ColdWaterSupTempSchedName" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_ColdWaterSupTempSchedName_type > r (
              SimFlowCompEqmt_ColdWaterSupTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_ColdWaterSupTempSchedName_)
            {
              this->SimFlowCompEqmt_ColdWaterSupTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_DrainWaterHeatExchType
          //
          if (n.name () == "SimFlowCompEqmt_DrainWaterHeatExchType" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_DrainWaterHeatExchType_type > r (
              SimFlowCompEqmt_DrainWaterHeatExchType_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_DrainWaterHeatExchType_)
            {
              this->SimFlowCompEqmt_DrainWaterHeatExchType_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_DrainWaterHeatExchDest
          //
          if (n.name () == "SimFlowCompEqmt_DrainWaterHeatExchDest" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_DrainWaterHeatExchDest_type > r (
              SimFlowCompEqmt_DrainWaterHeatExchDest_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_DrainWaterHeatExchDest_)
            {
              this->SimFlowCompEqmt_DrainWaterHeatExchDest_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea
          //
          if (n.name () == "SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            if (!this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_)
            {
              this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_.set (SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowCompEqmt_WaterUseEqmtName_1_10
          //
          if (n.name () == "SimFlowCompEqmt_WaterUseEqmtName_1_10" && n.namespace_ () == "http://www.lbl.gov/namespaces/Sim/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_WaterUseEqmtName_1_10_type > r (
              SimFlowCompEqmt_WaterUseEqmtName_1_10_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_WaterUseEqmtName_1_10_)
            {
              this->SimFlowCompEqmt_WaterUseEqmtName_1_10_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowCompoundEqmt_WaterUse* SimFlowCompoundEqmt_WaterUse::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowCompoundEqmt_WaterUse (*this, f, c);
      }

      SimFlowCompoundEqmt_WaterUse& SimFlowCompoundEqmt_WaterUse::
      operator= (const SimFlowCompoundEqmt_WaterUse& x)
      {
        if (this != &x)
        {
          static_cast< ::namespaces::Sim::MepModel::SimFlowCompoundEqmt& > (*this) = x;
          this->SimFlowCompEqmt_InNodeName_ = x.SimFlowCompEqmt_InNodeName_;
          this->SimFlowCompEqmt_OutNodeName_ = x.SimFlowCompEqmt_OutNodeName_;
          this->SimFlowCompEqmt_SupWaterStoTankName_ = x.SimFlowCompEqmt_SupWaterStoTankName_;
          this->SimFlowCompEqmt_ReclamWaterStoTankName_ = x.SimFlowCompEqmt_ReclamWaterStoTankName_;
          this->SimFlowCompEqmt_HotWaterSupTempSchedName_ = x.SimFlowCompEqmt_HotWaterSupTempSchedName_;
          this->SimFlowCompEqmt_ColdWaterSupTempSchedName_ = x.SimFlowCompEqmt_ColdWaterSupTempSchedName_;
          this->SimFlowCompEqmt_DrainWaterHeatExchType_ = x.SimFlowCompEqmt_DrainWaterHeatExchType_;
          this->SimFlowCompEqmt_DrainWaterHeatExchDest_ = x.SimFlowCompEqmt_DrainWaterHeatExchDest_;
          this->SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_ = x.SimFlowCompEqmt_DrainWaterHeatExchUFactTimesArea_;
          this->SimFlowCompEqmt_WaterUseEqmtName_1_10_ = x.SimFlowCompEqmt_WaterUseEqmtName_1_10_;
        }

        return *this;
      }

      SimFlowCompoundEqmt_WaterUse::
      ~SimFlowCompoundEqmt_WaterUse ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace namespaces
{
  namespace Sim
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

