// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimDoor_GlazedDoor_ExteriorDetailed.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimDoor_GlazedDoor_ExteriorDetailed
      // 

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_SurfType_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_SurfType () const
      {
        return this->SimDoor_SurfType_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_SurfType_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_SurfType ()
      {
        return this->SimDoor_SurfType_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_SurfType (const SimDoor_SurfType_type& x)
      {
        this->SimDoor_SurfType_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_SurfType (const SimDoor_SurfType_optional& x)
      {
        this->SimDoor_SurfType_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_SurfType (::std::auto_ptr< SimDoor_SurfType_type > x)
      {
        this->SimDoor_SurfType_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_OutsdBndCondObject_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_OutsdBndCondObject () const
      {
        return this->SimDoor_OutsdBndCondObject_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_OutsdBndCondObject_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_OutsdBndCondObject ()
      {
        return this->SimDoor_OutsdBndCondObject_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_OutsdBndCondObject (const SimDoor_OutsdBndCondObject_type& x)
      {
        this->SimDoor_OutsdBndCondObject_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_OutsdBndCondObject (const SimDoor_OutsdBndCondObject_optional& x)
      {
        this->SimDoor_OutsdBndCondObject_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_OutsdBndCondObject (::std::auto_ptr< SimDoor_OutsdBndCondObject_type > x)
      {
        this->SimDoor_OutsdBndCondObject_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_ViewFactToGnd_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ViewFactToGnd () const
      {
        return this->SimDoor_ViewFactToGnd_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_ViewFactToGnd_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ViewFactToGnd ()
      {
        return this->SimDoor_ViewFactToGnd_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ViewFactToGnd (const SimDoor_ViewFactToGnd_type& x)
      {
        this->SimDoor_ViewFactToGnd_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ViewFactToGnd (const SimDoor_ViewFactToGnd_optional& x)
      {
        this->SimDoor_ViewFactToGnd_ = x;
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_ShadingContName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ShadingContName () const
      {
        return this->SimDoor_ShadingContName_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_ShadingContName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ShadingContName ()
      {
        return this->SimDoor_ShadingContName_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ShadingContName (const SimDoor_ShadingContName_type& x)
      {
        this->SimDoor_ShadingContName_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ShadingContName (const SimDoor_ShadingContName_optional& x)
      {
        this->SimDoor_ShadingContName_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_ShadingContName (::std::auto_ptr< SimDoor_ShadingContName_type > x)
      {
        this->SimDoor_ShadingContName_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_FrmAndDivName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_FrmAndDivName () const
      {
        return this->SimDoor_FrmAndDivName_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_FrmAndDivName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_FrmAndDivName ()
      {
        return this->SimDoor_FrmAndDivName_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_FrmAndDivName (const SimDoor_FrmAndDivName_type& x)
      {
        this->SimDoor_FrmAndDivName_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_FrmAndDivName (const SimDoor_FrmAndDivName_optional& x)
      {
        this->SimDoor_FrmAndDivName_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_FrmAndDivName (::std::auto_ptr< SimDoor_FrmAndDivName_type > x)
      {
        this->SimDoor_FrmAndDivName_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_NumbVerts_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_NumbVerts () const
      {
        return this->SimDoor_NumbVerts_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_NumbVerts_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_NumbVerts ()
      {
        return this->SimDoor_NumbVerts_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_NumbVerts (const SimDoor_NumbVerts_type& x)
      {
        this->SimDoor_NumbVerts_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_NumbVerts (const SimDoor_NumbVerts_optional& x)
      {
        this->SimDoor_NumbVerts_ = x;
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_VertexXCoord_1_4_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexXCoord_1_4 () const
      {
        return this->SimDoor_VertexXCoord_1_4_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_VertexXCoord_1_4_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexXCoord_1_4 ()
      {
        return this->SimDoor_VertexXCoord_1_4_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexXCoord_1_4 (const SimDoor_VertexXCoord_1_4_type& x)
      {
        this->SimDoor_VertexXCoord_1_4_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexXCoord_1_4 (const SimDoor_VertexXCoord_1_4_optional& x)
      {
        this->SimDoor_VertexXCoord_1_4_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexXCoord_1_4 (::std::auto_ptr< SimDoor_VertexXCoord_1_4_type > x)
      {
        this->SimDoor_VertexXCoord_1_4_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_VertexYCoord_1_4_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexYCoord_1_4 () const
      {
        return this->SimDoor_VertexYCoord_1_4_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_VertexYCoord_1_4_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexYCoord_1_4 ()
      {
        return this->SimDoor_VertexYCoord_1_4_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexYCoord_1_4 (const SimDoor_VertexYCoord_1_4_type& x)
      {
        this->SimDoor_VertexYCoord_1_4_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexYCoord_1_4 (const SimDoor_VertexYCoord_1_4_optional& x)
      {
        this->SimDoor_VertexYCoord_1_4_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexYCoord_1_4 (::std::auto_ptr< SimDoor_VertexYCoord_1_4_type > x)
      {
        this->SimDoor_VertexYCoord_1_4_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_VertexZCoord_1_4_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexZCoord_1_4 () const
      {
        return this->SimDoor_VertexZCoord_1_4_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::SimDoor_VertexZCoord_1_4_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexZCoord_1_4 ()
      {
        return this->SimDoor_VertexZCoord_1_4_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexZCoord_1_4 (const SimDoor_VertexZCoord_1_4_type& x)
      {
        this->SimDoor_VertexZCoord_1_4_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexZCoord_1_4 (const SimDoor_VertexZCoord_1_4_optional& x)
      {
        this->SimDoor_VertexZCoord_1_4_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_VertexZCoord_1_4 (::std::auto_ptr< SimDoor_VertexZCoord_1_4_type > x)
      {
        this->SimDoor_VertexZCoord_1_4_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_Name_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Name () const
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_Name_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Name ()
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Name (const ComplexFenestrationProperty_SolarAbsorbedLayers_Name_type& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Name (const ComplexFenestrationProperty_SolarAbsorbedLayers_Name_optional& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Name (::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_Name_type > x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface () const
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface ()
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface (const ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_type& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface (const ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_optional& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface (::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_type > x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName () const
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName ()
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName (const ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_type& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName (const ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_optional& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName (::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_type > x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_.set (x);
      }

      const SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName () const
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_optional& SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName ()
      {
        return this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName (const ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_type& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_.set (x);
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName (const ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_optional& x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_ = x;
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName (::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_type > x)
      {
        this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimDoor_GlazedDoor_ExteriorDetailed
      //

      SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_GlazedDoor_ExteriorDetailed ()
      : ::schema::simxml::BuildingModel::SimDoor_GlazedDoor (),
        SimDoor_SurfType_ (this),
        SimDoor_OutsdBndCondObject_ (this),
        SimDoor_ViewFactToGnd_ (this),
        SimDoor_ShadingContName_ (this),
        SimDoor_FrmAndDivName_ (this),
        SimDoor_NumbVerts_ (this),
        SimDoor_VertexXCoord_1_4_ (this),
        SimDoor_VertexYCoord_1_4_ (this),
        SimDoor_VertexZCoord_1_4_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Name_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_ (this)
      {
      }

      SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_GlazedDoor_ExteriorDetailed (const RefId_type& RefId)
      : ::schema::simxml::BuildingModel::SimDoor_GlazedDoor (RefId),
        SimDoor_SurfType_ (this),
        SimDoor_OutsdBndCondObject_ (this),
        SimDoor_ViewFactToGnd_ (this),
        SimDoor_ShadingContName_ (this),
        SimDoor_FrmAndDivName_ (this),
        SimDoor_NumbVerts_ (this),
        SimDoor_VertexXCoord_1_4_ (this),
        SimDoor_VertexYCoord_1_4_ (this),
        SimDoor_VertexZCoord_1_4_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Name_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_ (this)
      {
      }

      SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_GlazedDoor_ExteriorDetailed (const SimDoor_GlazedDoor_ExteriorDetailed& x,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimDoor_GlazedDoor (x, f, c),
        SimDoor_SurfType_ (x.SimDoor_SurfType_, f, this),
        SimDoor_OutsdBndCondObject_ (x.SimDoor_OutsdBndCondObject_, f, this),
        SimDoor_ViewFactToGnd_ (x.SimDoor_ViewFactToGnd_, f, this),
        SimDoor_ShadingContName_ (x.SimDoor_ShadingContName_, f, this),
        SimDoor_FrmAndDivName_ (x.SimDoor_FrmAndDivName_, f, this),
        SimDoor_NumbVerts_ (x.SimDoor_NumbVerts_, f, this),
        SimDoor_VertexXCoord_1_4_ (x.SimDoor_VertexXCoord_1_4_, f, this),
        SimDoor_VertexYCoord_1_4_ (x.SimDoor_VertexYCoord_1_4_, f, this),
        SimDoor_VertexZCoord_1_4_ (x.SimDoor_VertexZCoord_1_4_, f, this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Name_ (x.ComplexFenestrationProperty_SolarAbsorbedLayers_Name_, f, this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_ (x.ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_, f, this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_ (x.ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_, f, this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_ (x.ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_, f, this)
      {
      }

      SimDoor_GlazedDoor_ExteriorDetailed::
      SimDoor_GlazedDoor_ExteriorDetailed (const ::xercesc::DOMElement& e,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimDoor_GlazedDoor (e, f | ::xml_schema::flags::base, c),
        SimDoor_SurfType_ (this),
        SimDoor_OutsdBndCondObject_ (this),
        SimDoor_ViewFactToGnd_ (this),
        SimDoor_ShadingContName_ (this),
        SimDoor_FrmAndDivName_ (this),
        SimDoor_NumbVerts_ (this),
        SimDoor_VertexXCoord_1_4_ (this),
        SimDoor_VertexYCoord_1_4_ (this),
        SimDoor_VertexZCoord_1_4_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Name_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_ (this),
        ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimDoor_GlazedDoor_ExteriorDetailed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::BuildingModel::SimDoor_GlazedDoor::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimDoor_SurfType
          //
          if (n.name () == "SimDoor_SurfType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_SurfType_type > r (
              SimDoor_SurfType_traits::create (i, f, this));

            if (!this->SimDoor_SurfType_)
            {
              this->SimDoor_SurfType_.set (r);
              continue;
            }
          }

          // SimDoor_OutsdBndCondObject
          //
          if (n.name () == "SimDoor_OutsdBndCondObject" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_OutsdBndCondObject_type > r (
              SimDoor_OutsdBndCondObject_traits::create (i, f, this));

            if (!this->SimDoor_OutsdBndCondObject_)
            {
              this->SimDoor_OutsdBndCondObject_.set (r);
              continue;
            }
          }

          // SimDoor_ViewFactToGnd
          //
          if (n.name () == "SimDoor_ViewFactToGnd" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimDoor_ViewFactToGnd_)
            {
              this->SimDoor_ViewFactToGnd_.set (SimDoor_ViewFactToGnd_traits::create (i, f, this));
              continue;
            }
          }

          // SimDoor_ShadingContName
          //
          if (n.name () == "SimDoor_ShadingContName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_ShadingContName_type > r (
              SimDoor_ShadingContName_traits::create (i, f, this));

            if (!this->SimDoor_ShadingContName_)
            {
              this->SimDoor_ShadingContName_.set (r);
              continue;
            }
          }

          // SimDoor_FrmAndDivName
          //
          if (n.name () == "SimDoor_FrmAndDivName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_FrmAndDivName_type > r (
              SimDoor_FrmAndDivName_traits::create (i, f, this));

            if (!this->SimDoor_FrmAndDivName_)
            {
              this->SimDoor_FrmAndDivName_.set (r);
              continue;
            }
          }

          // SimDoor_NumbVerts
          //
          if (n.name () == "SimDoor_NumbVerts" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimDoor_NumbVerts_)
            {
              this->SimDoor_NumbVerts_.set (SimDoor_NumbVerts_traits::create (i, f, this));
              continue;
            }
          }

          // SimDoor_VertexXCoord_1_4
          //
          if (n.name () == "SimDoor_VertexXCoord_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_VertexXCoord_1_4_type > r (
              SimDoor_VertexXCoord_1_4_traits::create (i, f, this));

            if (!this->SimDoor_VertexXCoord_1_4_)
            {
              this->SimDoor_VertexXCoord_1_4_.set (r);
              continue;
            }
          }

          // SimDoor_VertexYCoord_1_4
          //
          if (n.name () == "SimDoor_VertexYCoord_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_VertexYCoord_1_4_type > r (
              SimDoor_VertexYCoord_1_4_traits::create (i, f, this));

            if (!this->SimDoor_VertexYCoord_1_4_)
            {
              this->SimDoor_VertexYCoord_1_4_.set (r);
              continue;
            }
          }

          // SimDoor_VertexZCoord_1_4
          //
          if (n.name () == "SimDoor_VertexZCoord_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDoor_VertexZCoord_1_4_type > r (
              SimDoor_VertexZCoord_1_4_traits::create (i, f, this));

            if (!this->SimDoor_VertexZCoord_1_4_)
            {
              this->SimDoor_VertexZCoord_1_4_.set (r);
              continue;
            }
          }

          // ComplexFenestrationProperty_SolarAbsorbedLayers_Name
          //
          if (n.name () == "ComplexFenestrationProperty_SolarAbsorbedLayers_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_Name_type > r (
              ComplexFenestrationProperty_SolarAbsorbedLayers_Name_traits::create (i, f, this));

            if (!this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_)
            {
              this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_.set (r);
              continue;
            }
          }

          // ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface
          //
          if (n.name () == "ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_type > r (
              ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_traits::create (i, f, this));

            if (!this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_)
            {
              this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_.set (r);
              continue;
            }
          }

          // ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName
          //
          if (n.name () == "ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_type > r (
              ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_traits::create (i, f, this));

            if (!this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_)
            {
              this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_.set (r);
              continue;
            }
          }

          // ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName
          //
          if (n.name () == "ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_type > r (
              ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_traits::create (i, f, this));

            if (!this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_)
            {
              this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimDoor_GlazedDoor_ExteriorDetailed* SimDoor_GlazedDoor_ExteriorDetailed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimDoor_GlazedDoor_ExteriorDetailed (*this, f, c);
      }

      SimDoor_GlazedDoor_ExteriorDetailed& SimDoor_GlazedDoor_ExteriorDetailed::
      operator= (const SimDoor_GlazedDoor_ExteriorDetailed& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::BuildingModel::SimDoor_GlazedDoor& > (*this) = x;
          this->SimDoor_SurfType_ = x.SimDoor_SurfType_;
          this->SimDoor_OutsdBndCondObject_ = x.SimDoor_OutsdBndCondObject_;
          this->SimDoor_ViewFactToGnd_ = x.SimDoor_ViewFactToGnd_;
          this->SimDoor_ShadingContName_ = x.SimDoor_ShadingContName_;
          this->SimDoor_FrmAndDivName_ = x.SimDoor_FrmAndDivName_;
          this->SimDoor_NumbVerts_ = x.SimDoor_NumbVerts_;
          this->SimDoor_VertexXCoord_1_4_ = x.SimDoor_VertexXCoord_1_4_;
          this->SimDoor_VertexYCoord_1_4_ = x.SimDoor_VertexYCoord_1_4_;
          this->SimDoor_VertexZCoord_1_4_ = x.SimDoor_VertexZCoord_1_4_;
          this->ComplexFenestrationProperty_SolarAbsorbedLayers_Name_ = x.ComplexFenestrationProperty_SolarAbsorbedLayers_Name_;
          this->ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_ = x.ComplexFenestrationProperty_SolarAbsorbedLayers_FenestrationSurface_;
          this->ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_ = x.ComplexFenestrationProperty_SolarAbsorbedLayers_ConstructionName_;
          this->ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_ = x.ComplexFenestrationProperty_SolarAbsorbedLayers_Layer_1_5_SolarRadAbsorbedSchedName_;
        }

        return *this;
      }

      SimDoor_GlazedDoor_ExteriorDetailed::
      ~SimDoor_GlazedDoor_ExteriorDetailed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

