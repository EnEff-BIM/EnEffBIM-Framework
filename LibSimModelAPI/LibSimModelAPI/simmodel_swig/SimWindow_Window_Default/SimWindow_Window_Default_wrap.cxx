/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 


/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler {
#ifdef SWIG_DIRECTOR_UEH
    static void handler() {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.what() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }

      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;

      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will likely abort/terminate." << std::endl;
      throw;
    }

  public:

    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler) {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler() {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ApplicableOccurrence_optional swig_types[0]
#define SWIGTYPE_p_ApplicableOccurrence_traits swig_types[1]
#define SWIGTYPE_p_ApplicableOccurrence_type swig_types[2]
#define SWIGTYPE_p_AssignedToFlowElement_optional swig_types[3]
#define SWIGTYPE_p_AssignedToFlowElement_traits swig_types[4]
#define SWIGTYPE_p_AssignedToFlowElement_type swig_types[5]
#define SWIGTYPE_p_AssignedToGroups_optional swig_types[6]
#define SWIGTYPE_p_AssignedToGroups_traits swig_types[7]
#define SWIGTYPE_p_AssignedToGroups_type swig_types[8]
#define SWIGTYPE_p_ChangeFromTemplate_optional swig_types[9]
#define SWIGTYPE_p_ChangeFromTemplate_traits swig_types[10]
#define SWIGTYPE_p_ChangeFromTemplate_type swig_types[11]
#define SWIGTYPE_p_ClassRef_UniFormat_optional swig_types[12]
#define SWIGTYPE_p_ClassRef_UniFormat_traits swig_types[13]
#define SWIGTYPE_p_ClassRef_UniFormat_type swig_types[14]
#define SWIGTYPE_p_CompositeThermalTransmittance_optional swig_types[15]
#define SWIGTYPE_p_CompositeThermalTransmittance_traits swig_types[16]
#define SWIGTYPE_p_CompositeThermalTransmittance_type swig_types[17]
#define SWIGTYPE_p_CompositionType_optional swig_types[18]
#define SWIGTYPE_p_CompositionType_traits swig_types[19]
#define SWIGTYPE_p_CompositionType_type swig_types[20]
#define SWIGTYPE_p_ContainingBuildings_optional swig_types[21]
#define SWIGTYPE_p_ContainingBuildings_traits swig_types[22]
#define SWIGTYPE_p_ContainingBuildings_type swig_types[23]
#define SWIGTYPE_p_ContainingSpatialStructure_optional swig_types[24]
#define SWIGTYPE_p_ContainingSpatialStructure_traits swig_types[25]
#define SWIGTYPE_p_ContainingSpatialStructure_type swig_types[26]
#define SWIGTYPE_p_ControlElementID_optional swig_types[27]
#define SWIGTYPE_p_ControlElementID_traits swig_types[28]
#define SWIGTYPE_p_ControlElementID_type swig_types[29]
#define SWIGTYPE_p_ControlledBy_optional swig_types[30]
#define SWIGTYPE_p_ControlledBy_traits swig_types[31]
#define SWIGTYPE_p_ControlledBy_type swig_types[32]
#define SWIGTYPE_p_DecimalPrecision_optional swig_types[33]
#define SWIGTYPE_p_DecimalPrecision_traits swig_types[34]
#define SWIGTYPE_p_DecimalPrecision_type swig_types[35]
#define SWIGTYPE_p_Decomposes_optional swig_types[36]
#define SWIGTYPE_p_Decomposes_traits swig_types[37]
#define SWIGTYPE_p_Decomposes_type swig_types[38]
#define SWIGTYPE_p_DefaultForPerson_optional swig_types[39]
#define SWIGTYPE_p_DefaultForPerson_traits swig_types[40]
#define SWIGTYPE_p_DefaultForPerson_type swig_types[41]
#define SWIGTYPE_p_DefaultForProject_optional swig_types[42]
#define SWIGTYPE_p_DefaultForProject_traits swig_types[43]
#define SWIGTYPE_p_DefaultForProject_type swig_types[44]
#define SWIGTYPE_p_DefaultForUnitSystem_optional swig_types[45]
#define SWIGTYPE_p_DefaultForUnitSystem_traits swig_types[46]
#define SWIGTYPE_p_DefaultForUnitSystem_type swig_types[47]
#define SWIGTYPE_p_Description_optional swig_types[48]
#define SWIGTYPE_p_Description_traits swig_types[49]
#define SWIGTYPE_p_Description_type swig_types[50]
#define SWIGTYPE_p_DockedToPort_optional swig_types[51]
#define SWIGTYPE_p_DockedToPort_traits swig_types[52]
#define SWIGTYPE_p_DockedToPort_type swig_types[53]
#define SWIGTYPE_p_GeometricRepresentations_optional swig_types[54]
#define SWIGTYPE_p_GeometricRepresentations_traits swig_types[55]
#define SWIGTYPE_p_GeometricRepresentations_type swig_types[56]
#define SWIGTYPE_p_HasPropertySets_optional swig_types[57]
#define SWIGTYPE_p_HasPropertySets_traits swig_types[58]
#define SWIGTYPE_p_HasPropertySets_type swig_types[59]
#define SWIGTYPE_p_HasTemplateChanged_optional swig_types[60]
#define SWIGTYPE_p_HasTemplateChanged_traits swig_types[61]
#define SWIGTYPE_p_HasTemplateChanged_type swig_types[62]
#define SWIGTYPE_p_HostElement_optional swig_types[63]
#define SWIGTYPE_p_HostElement_traits swig_types[64]
#define SWIGTYPE_p_HostElement_type swig_types[65]
#define SWIGTYPE_p_IfcGlobalID_optional swig_types[66]
#define SWIGTYPE_p_IfcGlobalID_traits swig_types[67]
#define SWIGTYPE_p_IfcGlobalID_type swig_types[68]
#define SWIGTYPE_p_IfcName_optional swig_types[69]
#define SWIGTYPE_p_IfcName_traits swig_types[70]
#define SWIGTYPE_p_IfcName_type swig_types[71]
#define SWIGTYPE_p_IsAutoGenerated_optional swig_types[72]
#define SWIGTYPE_p_IsAutoGenerated_traits swig_types[73]
#define SWIGTYPE_p_IsAutoGenerated_type swig_types[74]
#define SWIGTYPE_p_IsTemplateObject_optional swig_types[75]
#define SWIGTYPE_p_IsTemplateObject_traits swig_types[76]
#define SWIGTYPE_p_IsTemplateObject_type swig_types[77]
#define SWIGTYPE_p_LocalPlacementRotation_optional swig_types[78]
#define SWIGTYPE_p_LocalPlacementRotation_traits swig_types[79]
#define SWIGTYPE_p_LocalPlacementRotation_type swig_types[80]
#define SWIGTYPE_p_LocalPlacementX_optional swig_types[81]
#define SWIGTYPE_p_LocalPlacementX_traits swig_types[82]
#define SWIGTYPE_p_LocalPlacementX_type swig_types[83]
#define SWIGTYPE_p_LocalPlacementY_optional swig_types[84]
#define SWIGTYPE_p_LocalPlacementY_traits swig_types[85]
#define SWIGTYPE_p_LocalPlacementY_type swig_types[86]
#define SWIGTYPE_p_LocalPlacementZ_optional swig_types[87]
#define SWIGTYPE_p_LocalPlacementZ_traits swig_types[88]
#define SWIGTYPE_p_LocalPlacementZ_type swig_types[89]
#define SWIGTYPE_p_LongName_optional swig_types[90]
#define SWIGTYPE_p_LongName_traits swig_types[91]
#define SWIGTYPE_p_LongName_type swig_types[92]
#define SWIGTYPE_p_MaterialList_optional swig_types[93]
#define SWIGTYPE_p_MaterialList_traits swig_types[94]
#define SWIGTYPE_p_MaterialList_type swig_types[95]
#define SWIGTYPE_p_MemberUsedForDiagrams_optional swig_types[96]
#define SWIGTYPE_p_MemberUsedForDiagrams_traits swig_types[97]
#define SWIGTYPE_p_MemberUsedForDiagrams_type swig_types[98]
#define SWIGTYPE_p_Name_optional swig_types[99]
#define SWIGTYPE_p_Name_traits swig_types[100]
#define SWIGTYPE_p_Name_type swig_types[101]
#define SWIGTYPE_p_NevronSchematicLayout_optional swig_types[102]
#define SWIGTYPE_p_NevronSchematicLayout_traits swig_types[103]
#define SWIGTYPE_p_NevronSchematicLayout_type swig_types[104]
#define SWIGTYPE_p_ObjectCreationParams_optional swig_types[105]
#define SWIGTYPE_p_ObjectCreationParams_traits swig_types[106]
#define SWIGTYPE_p_ObjectCreationParams_type swig_types[107]
#define SWIGTYPE_p_ObjectIndex_optional swig_types[108]
#define SWIGTYPE_p_ObjectIndex_traits swig_types[109]
#define SWIGTYPE_p_ObjectIndex_type swig_types[110]
#define SWIGTYPE_p_ObjectName_optional swig_types[111]
#define SWIGTYPE_p_ObjectName_traits swig_types[112]
#define SWIGTYPE_p_ObjectName_type swig_types[113]
#define SWIGTYPE_p_ObjectOwnerHistory_optional swig_types[114]
#define SWIGTYPE_p_ObjectOwnerHistory_traits swig_types[115]
#define SWIGTYPE_p_ObjectOwnerHistory_type swig_types[116]
#define SWIGTYPE_p_ObjectType_optional swig_types[117]
#define SWIGTYPE_p_ObjectType_traits swig_types[118]
#define SWIGTYPE_p_ObjectType_type swig_types[119]
#define SWIGTYPE_p_OpeningFilledByWindow_optional swig_types[120]
#define SWIGTYPE_p_OpeningFilledByWindow_traits swig_types[121]
#define SWIGTYPE_p_OpeningFilledByWindow_type swig_types[122]
#define SWIGTYPE_p_OverallHeight_optional swig_types[123]
#define SWIGTYPE_p_OverallHeight_traits swig_types[124]
#define SWIGTYPE_p_OverallHeight_type swig_types[125]
#define SWIGTYPE_p_OverallWidth_optional swig_types[126]
#define SWIGTYPE_p_OverallWidth_traits swig_types[127]
#define SWIGTYPE_p_OverallWidth_type swig_types[128]
#define SWIGTYPE_p_ParentGroups_optional swig_types[129]
#define SWIGTYPE_p_ParentGroups_traits swig_types[130]
#define SWIGTYPE_p_ParentGroups_type swig_types[131]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_optional swig_types[132]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_traits swig_types[133]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_type swig_types[134]
#define SWIGTYPE_p_Placement_optional swig_types[135]
#define SWIGTYPE_p_Placement_traits swig_types[136]
#define SWIGTYPE_p_Placement_type swig_types[137]
#define SWIGTYPE_p_ProfileName_optional swig_types[138]
#define SWIGTYPE_p_ProfileName_traits swig_types[139]
#define SWIGTYPE_p_ProfileName_type swig_types[140]
#define SWIGTYPE_p_ProfileType_optional swig_types[141]
#define SWIGTYPE_p_ProfileType_traits swig_types[142]
#define SWIGTYPE_p_ProfileType_type swig_types[143]
#define SWIGTYPE_p_RefId_traits swig_types[144]
#define SWIGTYPE_p_RefId_type swig_types[145]
#define SWIGTYPE_p_RepresentationContext_optional swig_types[146]
#define SWIGTYPE_p_RepresentationContext_traits swig_types[147]
#define SWIGTYPE_p_RepresentationContext_type swig_types[148]
#define SWIGTYPE_p_RepresentationIdentifier_optional swig_types[149]
#define SWIGTYPE_p_RepresentationIdentifier_traits swig_types[150]
#define SWIGTYPE_p_RepresentationIdentifier_type swig_types[151]
#define SWIGTYPE_p_RepresentationItems_optional swig_types[152]
#define SWIGTYPE_p_RepresentationItems_traits swig_types[153]
#define SWIGTYPE_p_RepresentationItems_type swig_types[154]
#define SWIGTYPE_p_RepresentationType_optional swig_types[155]
#define SWIGTYPE_p_RepresentationType_traits swig_types[156]
#define SWIGTYPE_p_RepresentationType_type swig_types[157]
#define SWIGTYPE_p_Representation_optional swig_types[158]
#define SWIGTYPE_p_Representation_traits swig_types[159]
#define SWIGTYPE_p_Representation_type swig_types[160]
#define SWIGTYPE_p_SelectedPropertyGroups_optional swig_types[161]
#define SWIGTYPE_p_SelectedPropertyGroups_traits swig_types[162]
#define SWIGTYPE_p_SelectedPropertyGroups_type swig_types[163]
#define SWIGTYPE_p_SimModelName_optional swig_types[164]
#define SWIGTYPE_p_SimModelName_traits swig_types[165]
#define SWIGTYPE_p_SimModelName_type swig_types[166]
#define SWIGTYPE_p_SimModelSubtype_optional swig_types[167]
#define SWIGTYPE_p_SimModelSubtype_traits swig_types[168]
#define SWIGTYPE_p_SimModelSubtype_type swig_types[169]
#define SWIGTYPE_p_SimModelType_optional swig_types[170]
#define SWIGTYPE_p_SimModelType_traits swig_types[171]
#define SWIGTYPE_p_SimModelType_type swig_types[172]
#define SWIGTYPE_p_SimUniqueID_optional swig_types[173]
#define SWIGTYPE_p_SimUniqueID_traits swig_types[174]
#define SWIGTYPE_p_SimUniqueID_type swig_types[175]
#define SWIGTYPE_p_SourceLibraryEntryID_optional swig_types[176]
#define SWIGTYPE_p_SourceLibraryEntryID_traits swig_types[177]
#define SWIGTYPE_p_SourceLibraryEntryID_type swig_types[178]
#define SWIGTYPE_p_SourceLibraryEntryRef_optional swig_types[179]
#define SWIGTYPE_p_SourceLibraryEntryRef_traits swig_types[180]
#define SWIGTYPE_p_SourceLibraryEntryRef_type swig_types[181]
#define SWIGTYPE_p_SourceModelObjectType_optional swig_types[182]
#define SWIGTYPE_p_SourceModelObjectType_traits swig_types[183]
#define SWIGTYPE_p_SourceModelObjectType_type swig_types[184]
#define SWIGTYPE_p_SourceModelSchema_optional swig_types[185]
#define SWIGTYPE_p_SourceModelSchema_traits swig_types[186]
#define SWIGTYPE_p_SourceModelSchema_type swig_types[187]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional swig_types[188]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits swig_types[189]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type swig_types[190]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional swig_types[191]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits swig_types[192]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type swig_types[193]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional swig_types[194]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits swig_types[195]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type swig_types[196]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional swig_types[197]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits swig_types[198]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type swig_types[199]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional swig_types[200]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits swig_types[201]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type swig_types[202]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional swig_types[203]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits swig_types[204]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type swig_types[205]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional swig_types[206]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits swig_types[207]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type swig_types[208]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional swig_types[209]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits swig_types[210]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type swig_types[211]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional swig_types[212]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits swig_types[213]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type swig_types[214]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional swig_types[215]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits swig_types[216]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type swig_types[217]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional swig_types[218]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits swig_types[219]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type swig_types[220]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional swig_types[221]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits swig_types[222]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type swig_types[223]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional swig_types[224]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits swig_types[225]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type swig_types[226]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional swig_types[227]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits swig_types[228]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type swig_types[229]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional swig_types[230]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits swig_types[231]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type swig_types[232]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional swig_types[233]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits swig_types[234]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type swig_types[235]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional swig_types[236]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits swig_types[237]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type swig_types[238]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional swig_types[239]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits swig_types[240]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type swig_types[241]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional swig_types[242]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits swig_types[243]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type swig_types[244]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional swig_types[245]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits swig_types[246]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type swig_types[247]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional swig_types[248]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits swig_types[249]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type swig_types[250]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional swig_types[251]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits swig_types[252]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type swig_types[253]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional swig_types[254]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits swig_types[255]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type swig_types[256]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional swig_types[257]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits swig_types[258]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type swig_types[259]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional swig_types[260]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits swig_types[261]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type swig_types[262]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional swig_types[263]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits swig_types[264]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type swig_types[265]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional swig_types[266]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits swig_types[267]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type swig_types[268]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional swig_types[269]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits swig_types[270]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type swig_types[271]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional swig_types[272]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits swig_types[273]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type swig_types[274]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional swig_types[275]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits swig_types[276]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type swig_types[277]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional swig_types[278]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits swig_types[279]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type swig_types[280]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional swig_types[281]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits swig_types[282]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type swig_types[283]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional swig_types[284]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits swig_types[285]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type swig_types[286]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional swig_types[287]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits swig_types[288]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type swig_types[289]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional swig_types[290]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits swig_types[291]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type swig_types[292]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional swig_types[293]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits swig_types[294]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type swig_types[295]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional swig_types[296]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits swig_types[297]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type swig_types[298]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional swig_types[299]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits swig_types[300]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type swig_types[301]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional swig_types[302]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits swig_types[303]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type swig_types[304]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional swig_types[305]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits swig_types[306]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type swig_types[307]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional swig_types[308]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits swig_types[309]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type swig_types[310]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional swig_types[311]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits swig_types[312]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type swig_types[313]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional swig_types[314]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits swig_types[315]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type swig_types[316]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional swig_types[317]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits swig_types[318]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type swig_types[319]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional swig_types[320]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits swig_types[321]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type swig_types[322]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional swig_types[323]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits swig_types[324]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type swig_types[325]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional swig_types[326]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits swig_types[327]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type swig_types[328]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional swig_types[329]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits swig_types[330]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type swig_types[331]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional swig_types[332]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits swig_types[333]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type swig_types[334]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional swig_types[335]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits swig_types[336]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type swig_types[337]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional swig_types[338]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits swig_types[339]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type swig_types[340]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional swig_types[341]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits swig_types[342]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type swig_types[343]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional swig_types[344]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits swig_types[345]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type swig_types[346]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional swig_types[347]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits swig_types[348]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type swig_types[349]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional swig_types[350]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits swig_types[351]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type swig_types[352]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional swig_types[353]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits swig_types[354]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type swig_types[355]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional swig_types[356]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits swig_types[357]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type swig_types[358]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional swig_types[359]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits swig_types[360]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type swig_types[361]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional swig_types[362]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits swig_types[363]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type swig_types[364]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional swig_types[365]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits swig_types[366]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type swig_types[367]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional swig_types[368]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits swig_types[369]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type swig_types[370]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional swig_types[371]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits swig_types[372]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type swig_types[373]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional swig_types[374]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits swig_types[375]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type swig_types[376]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional swig_types[377]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits swig_types[378]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type swig_types[379]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional swig_types[380]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits swig_types[381]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type swig_types[382]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional swig_types[383]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits swig_types[384]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type swig_types[385]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional swig_types[386]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits swig_types[387]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type swig_types[388]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional swig_types[389]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits swig_types[390]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type swig_types[391]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional swig_types[392]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits swig_types[393]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type swig_types[394]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional swig_types[395]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits swig_types[396]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type swig_types[397]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional swig_types[398]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits swig_types[399]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type swig_types[400]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional swig_types[401]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits swig_types[402]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type swig_types[403]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional swig_types[404]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits swig_types[405]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type swig_types[406]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional swig_types[407]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits swig_types[408]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type swig_types[409]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional swig_types[410]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits swig_types[411]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type swig_types[412]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional swig_types[413]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits swig_types[414]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type swig_types[415]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional swig_types[416]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits swig_types[417]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type swig_types[418]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional swig_types[419]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits swig_types[420]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type swig_types[421]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional swig_types[422]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits swig_types[423]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type swig_types[424]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional swig_types[425]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits swig_types[426]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type swig_types[427]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional swig_types[428]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits swig_types[429]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type swig_types[430]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional swig_types[431]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits swig_types[432]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type swig_types[433]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional swig_types[434]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits swig_types[435]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type swig_types[436]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional swig_types[437]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits swig_types[438]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type swig_types[439]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional swig_types[440]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits swig_types[441]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type swig_types[442]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional swig_types[443]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits swig_types[444]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type swig_types[445]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional swig_types[446]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits swig_types[447]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type swig_types[448]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional swig_types[449]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits swig_types[450]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type swig_types[451]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional swig_types[452]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits swig_types[453]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type swig_types[454]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional swig_types[455]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits swig_types[456]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type swig_types[457]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional swig_types[458]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits swig_types[459]
#define SWIGTYPE_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type swig_types[460]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional swig_types[461]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits swig_types[462]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type swig_types[463]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional swig_types[464]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits swig_types[465]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type swig_types[466]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional swig_types[467]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits swig_types[468]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type swig_types[469]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional swig_types[470]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits swig_types[471]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type swig_types[472]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_Name_optional swig_types[473]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_Name_traits swig_types[474]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_Name_type swig_types[475]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional swig_types[476]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits swig_types[477]
#define SWIGTYPE_p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type swig_types[478]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional swig_types[479]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits swig_types[480]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type swig_types[481]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional swig_types[482]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits swig_types[483]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type swig_types[484]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional swig_types[485]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits swig_types[486]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type swig_types[487]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional swig_types[488]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits swig_types[489]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type swig_types[490]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional swig_types[491]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits swig_types[492]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type swig_types[493]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional swig_types[494]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits swig_types[495]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type swig_types[496]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional swig_types[497]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits swig_types[498]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type swig_types[499]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional swig_types[500]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits swig_types[501]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type swig_types[502]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional swig_types[503]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits swig_types[504]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type swig_types[505]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional swig_types[506]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits swig_types[507]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type swig_types[508]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional swig_types[509]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits swig_types[510]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type swig_types[511]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional swig_types[512]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits swig_types[513]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type swig_types[514]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional swig_types[515]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits swig_types[516]
#define SWIGTYPE_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type swig_types[517]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional swig_types[518]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits swig_types[519]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type swig_types[520]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional swig_types[521]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits swig_types[522]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type swig_types[523]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional swig_types[524]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits swig_types[525]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type swig_types[526]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_Name_optional swig_types[527]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_Name_traits swig_types[528]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_Name_type swig_types[529]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional swig_types[530]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits swig_types[531]
#define SWIGTYPE_p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type swig_types[532]
#define SWIGTYPE_p_Tag_optional swig_types[533]
#define SWIGTYPE_p_Tag_traits swig_types[534]
#define SWIGTYPE_p_Tag_type swig_types[535]
#define SWIGTYPE_p_TemplatesForMembers_optional swig_types[536]
#define SWIGTYPE_p_TemplatesForMembers_traits swig_types[537]
#define SWIGTYPE_p_TemplatesForMembers_type swig_types[538]
#define SWIGTYPE_p_TypeDefCreationParams_optional swig_types[539]
#define SWIGTYPE_p_TypeDefCreationParams_traits swig_types[540]
#define SWIGTYPE_p_TypeDefCreationParams_type swig_types[541]
#define SWIGTYPE_p_TypeDefinition_optional swig_types[542]
#define SWIGTYPE_p_TypeDefinition_traits swig_types[543]
#define SWIGTYPE_p_TypeDefinition_type swig_types[544]
#define SWIGTYPE_p_UnitType_String_optional swig_types[545]
#define SWIGTYPE_p_UnitType_String_traits swig_types[546]
#define SWIGTYPE_p_UnitType_String_type swig_types[547]
#define SWIGTYPE_p_VoidsInWindow_optional swig_types[548]
#define SWIGTYPE_p_VoidsInWindow_traits swig_types[549]
#define SWIGTYPE_p_VoidsInWindow_type swig_types[550]
#define SWIGTYPE_p_WindowArea_optional swig_types[551]
#define SWIGTYPE_p_WindowArea_traits swig_types[552]
#define SWIGTYPE_p_WindowArea_type swig_types[553]
#define SWIGTYPE_p_WindowConstructionType_optional swig_types[554]
#define SWIGTYPE_p_WindowConstructionType_traits swig_types[555]
#define SWIGTYPE_p_WindowConstructionType_type swig_types[556]
#define SWIGTYPE_p_WindowFrameDepth_optional swig_types[557]
#define SWIGTYPE_p_WindowFrameDepth_traits swig_types[558]
#define SWIGTYPE_p_WindowFrameDepth_type swig_types[559]
#define SWIGTYPE_p_WindowFrameThickness_optional swig_types[560]
#define SWIGTYPE_p_WindowFrameThickness_traits swig_types[561]
#define SWIGTYPE_p_WindowFrameThickness_type swig_types[562]
#define SWIGTYPE_p_WindowHeight_optional swig_types[563]
#define SWIGTYPE_p_WindowHeight_traits swig_types[564]
#define SWIGTYPE_p_WindowHeight_type swig_types[565]
#define SWIGTYPE_p_WindowIsExternal_optional swig_types[566]
#define SWIGTYPE_p_WindowIsExternal_traits swig_types[567]
#define SWIGTYPE_p_WindowIsExternal_type swig_types[568]
#define SWIGTYPE_p_WindowOperationType_optional swig_types[569]
#define SWIGTYPE_p_WindowOperationType_traits swig_types[570]
#define SWIGTYPE_p_WindowOperationType_type swig_types[571]
#define SWIGTYPE_p_WindowPerimeter_optional swig_types[572]
#define SWIGTYPE_p_WindowPerimeter_traits swig_types[573]
#define SWIGTYPE_p_WindowPerimeter_type swig_types[574]
#define SWIGTYPE_p_WindowTypeTag_optional swig_types[575]
#define SWIGTYPE_p_WindowTypeTag_traits swig_types[576]
#define SWIGTYPE_p_WindowTypeTag_type swig_types[577]
#define SWIGTYPE_p_WindowWidth_optional swig_types[578]
#define SWIGTYPE_p_WindowWidth_traits swig_types[579]
#define SWIGTYPE_p_WindowWidth_type swig_types[580]
#define SWIGTYPE_p_XDirectionX_optional swig_types[581]
#define SWIGTYPE_p_XDirectionX_traits swig_types[582]
#define SWIGTYPE_p_XDirectionX_type swig_types[583]
#define SWIGTYPE_p_XDirectionY_optional swig_types[584]
#define SWIGTYPE_p_XDirectionY_traits swig_types[585]
#define SWIGTYPE_p_XDirectionY_type swig_types[586]
#define SWIGTYPE_p_XDirectionZ_optional swig_types[587]
#define SWIGTYPE_p_XDirectionZ_traits swig_types[588]
#define SWIGTYPE_p_XDirectionZ_type swig_types[589]
#define SWIGTYPE_p__3dHeight_optional swig_types[590]
#define SWIGTYPE_p__3dHeight_traits swig_types[591]
#define SWIGTYPE_p__3dHeight_type swig_types[592]
#define SWIGTYPE_p__3dLength_optional swig_types[593]
#define SWIGTYPE_p__3dLength_traits swig_types[594]
#define SWIGTYPE_p__3dLength_type swig_types[595]
#define SWIGTYPE_p__3dWidth_optional swig_types[596]
#define SWIGTYPE_p__3dWidth_traits swig_types[597]
#define SWIGTYPE_p__3dWidth_type swig_types[598]
#define SWIGTYPE_p_allocator_type swig_types[599]
#define SWIGTYPE_p_base_const_iterator swig_types[600]
#define SWIGTYPE_p_base_iterator swig_types[601]
#define SWIGTYPE_p_base_sequence swig_types[602]
#define SWIGTYPE_p_bool swig_types[603]
#define SWIGTYPE_p_bool_convertible swig_types[604]
#define SWIGTYPE_p_char swig_types[605]
#define SWIGTYPE_p_const_iterator swig_types[606]
#define SWIGTYPE_p_const_reverse_iterator swig_types[607]
#define SWIGTYPE_p_difference_type swig_types[608]
#define SWIGTYPE_p_dom_content_optional swig_types[609]
#define SWIGTYPE_p_double swig_types[610]
#define SWIGTYPE_p_float swig_types[611]
#define SWIGTYPE_p_int swig_types[612]
#define SWIGTYPE_p_iterator swig_types[613]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t swig_types[614]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t swig_types[615]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t swig_types[616]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t swig_types[617]
#define SWIGTYPE_p_long_long swig_types[618]
#define SWIGTYPE_p_ptr swig_types[619]
#define SWIGTYPE_p_reverse_iterator swig_types[620]
#define SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow swig_types[621]
#define SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window swig_types[622]
#define SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default swig_types[623]
#define SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter swig_types[624]
#define SWIGTYPE_p_schema__simxml__Model__SimModel swig_types[625]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams swig_types[626]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode swig_types[627]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort swig_types[628]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType swig_types[629]
#define SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition swig_types[630]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups swig_types[631]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition swig_types[632]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault swig_types[633]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams swig_types[634]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement swig_types[635]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement swig_types[636]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement swig_types[637]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement swig_types[638]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimElement swig_types[639]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement swig_types[640]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem swig_types[641]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup swig_types[642]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObject swig_types[643]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition swig_types[644]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement swig_types[645]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition swig_types[646]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition swig_types[647]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation swig_types[648]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem swig_types[649]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject swig_types[650]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot swig_types[651]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement swig_types[652]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate swig_types[653]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem swig_types[654]
#define SWIGTYPE_p_schema__simxml__SimModelCore__doubleList swig_types[655]
#define SWIGTYPE_p_schema__simxml__SimModelCore__integerList swig_types[656]
#define SWIGTYPE_p_schema__simxml__SimModelCore__logical swig_types[657]
#define SWIGTYPE_p_self_ swig_types[658]
#define SWIGTYPE_p_short swig_types[659]
#define SWIGTYPE_p_signed_char swig_types[660]
#define SWIGTYPE_p_size_type swig_types[661]
#define SWIGTYPE_p_std__auto_ptrT_T_t swig_types[662]
#define SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t swig_types[663]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t swig_types[664]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t swig_types[665]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t swig_types[666]
#define SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type swig_types[667]
#define SWIGTYPE_p_unsigned_char swig_types[668]
#define SWIGTYPE_p_unsigned_int swig_types[669]
#define SWIGTYPE_p_unsigned_long_long swig_types[670]
#define SWIGTYPE_p_unsigned_short swig_types[671]
#define SWIGTYPE_p_value_type swig_types[672]
#define SWIGTYPE_p_xercesc__DOMElement swig_types[673]
#define SWIGTYPE_p_xsd__cxx__tree___type swig_types[674]
#define SWIGTYPE_p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t swig_types[675]
#define SWIGTYPE_p_xsd__cxx__tree__boundsT_char_t swig_types[676]
#define SWIGTYPE_p_xsd__cxx__tree__bufferT_char_t swig_types[677]
#define SWIGTYPE_p_xsd__cxx__tree__content_order swig_types[678]
#define SWIGTYPE_p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[679]
#define SWIGTYPE_p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[680]
#define SWIGTYPE_p_xsd__cxx__tree__diagnosticsT_char_t swig_types[681]
#define SWIGTYPE_p_xsd__cxx__tree__duplicate_idT_char_t swig_types[682]
#define SWIGTYPE_p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[683]
#define SWIGTYPE_p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t swig_types[684]
#define SWIGTYPE_p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t swig_types[685]
#define SWIGTYPE_p_xsd__cxx__tree__errorT_char_t swig_types[686]
#define SWIGTYPE_p_xsd__cxx__tree__exceptionT_char_t swig_types[687]
#define SWIGTYPE_p_xsd__cxx__tree__expected_attributeT_char_t swig_types[688]
#define SWIGTYPE_p_xsd__cxx__tree__expected_elementT_char_t swig_types[689]
#define SWIGTYPE_p_xsd__cxx__tree__expected_text_contentT_char_t swig_types[690]
#define SWIGTYPE_p_xsd__cxx__tree__flags swig_types[691]
#define SWIGTYPE_p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[692]
#define SWIGTYPE_p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[693]
#define SWIGTYPE_p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[694]
#define SWIGTYPE_p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[695]
#define SWIGTYPE_p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[696]
#define SWIGTYPE_p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t swig_types[697]
#define SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t swig_types[698]
#define SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t swig_types[699]
#define SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t swig_types[700]
#define SWIGTYPE_p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t swig_types[701]
#define SWIGTYPE_p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t swig_types[702]
#define SWIGTYPE_p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t swig_types[703]
#define SWIGTYPE_p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t swig_types[704]
#define SWIGTYPE_p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t swig_types[705]
#define SWIGTYPE_p_xsd__cxx__tree__no_prefix_mappingT_char_t swig_types[706]
#define SWIGTYPE_p_xsd__cxx__tree__no_type_infoT_char_t swig_types[707]
#define SWIGTYPE_p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t swig_types[708]
#define SWIGTYPE_p_xsd__cxx__tree__not_derivedT_char_t swig_types[709]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t swig_types[710]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t swig_types[711]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t swig_types[712]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t swig_types[713]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t swig_types[714]
#define SWIGTYPE_p_xsd__cxx__tree__parsingT_char_t swig_types[715]
#define SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t swig_types[716]
#define SWIGTYPE_p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t swig_types[717]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t swig_types[718]
#define SWIGTYPE_p_xsd__cxx__tree__sequence_common swig_types[719]
#define SWIGTYPE_p_xsd__cxx__tree__severity swig_types[720]
#define SWIGTYPE_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t swig_types[721]
#define SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t swig_types[722]
#define SWIGTYPE_p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[723]
#define SWIGTYPE_p_xsd__cxx__tree__time_zone swig_types[724]
#define SWIGTYPE_p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t swig_types[725]
#define SWIGTYPE_p_xsd__cxx__tree__unexpected_elementT_char_t swig_types[726]
#define SWIGTYPE_p_xsd__cxx__tree__unexpected_enumeratorT_char_t swig_types[727]
#define SWIGTYPE_p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t swig_types[728]
#define SWIGTYPE_p_xsd__cxx__tree__user_data_keys_templateT_0_t swig_types[729]
#define SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t swig_types[730]
static swig_type_info *swig_types[732];
static swig_module_info swig_module = {swig_types, 731, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _SimWindow_Window_Default.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__SimWindow_Window_Default

#else
#  define SWIG_init    init_SimWindow_Window_Default

#endif
#define SWIG_name    "_SimWindow_Window_Default"

#define SWIGVERSION 0x030007 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#define SWIG_FILE_WITH_INIT
#include "../SimModel_Dll_lib/framework/simmodel.hxx"
using namespace xsd::cxx::tree;


#include <string>


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


#include <algorithm>


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "SimWindow_Window_Default_wrap.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_SimWindow_Name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::Name_optional *) &((schema::simxml::BuildingModel::SimWindow const *)arg1)->Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::Name_optional *) &(arg1)->Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Name__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::Name_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Name_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Name_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow::Name_type * >(argp2);
  (arg1)->Name((schema::simxml::BuildingModel::SimWindow::Name_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Name__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::Name_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Name_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Name_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow::Name_optional * >(argp2);
  (arg1)->Name((schema::simxml::BuildingModel::SimWindow::Name_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Name__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Name(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Name(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Name__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Name__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Name__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Name__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Name__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Name'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow::Name() const\n"
    "    schema::simxml::BuildingModel::SimWindow::Name()\n"
    "    schema::simxml::BuildingModel::SimWindow::Name(schema::simxml::BuildingModel::SimWindow::Name_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::Name(schema::simxml::BuildingModel::SimWindow::Name_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::Name(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Representation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::Representation_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Representation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Representation" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::Representation_optional *) &((schema::simxml::BuildingModel::SimWindow const *)arg1)->Representation();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Representation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::Representation_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Representation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Representation" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::Representation_optional *) &(arg1)->Representation();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Representation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::Representation_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Representation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Representation" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Representation" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Representation_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Representation" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Representation_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow::Representation_type * >(argp2);
  (arg1)->Representation((schema::simxml::BuildingModel::SimWindow::Representation_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Representation__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::Representation_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Representation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Representation" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Representation" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Representation_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Representation" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::Representation_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow::Representation_optional * >(argp2);
  (arg1)->Representation((schema::simxml::BuildingModel::SimWindow::Representation_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Representation__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Representation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Representation" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Representation" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Representation" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Representation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Representation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Representation__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Representation__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Representation__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Representation__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Representation__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Representation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow::Representation() const\n"
    "    schema::simxml::BuildingModel::SimWindow::Representation()\n"
    "    schema::simxml::BuildingModel::SimWindow::Representation(schema::simxml::BuildingModel::SimWindow::Representation_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::Representation(schema::simxml::BuildingModel::SimWindow::Representation_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::Representation(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallHeight_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_OverallHeight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::OverallHeight_optional *) &((schema::simxml::BuildingModel::SimWindow const *)arg1)->OverallHeight();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallHeight_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_OverallHeight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::OverallHeight_optional *) &(arg1)->OverallHeight();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallHeight__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallHeight_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallHeight_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_OverallHeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_OverallHeight" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::OverallHeight_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow::OverallHeight_type >(val2);
  arg2 = &temp2;
  (arg1)->OverallHeight((schema::simxml::BuildingModel::SimWindow::OverallHeight_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallHeight__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallHeight_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_OverallHeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_OverallHeight" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::OverallHeight_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_OverallHeight" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::OverallHeight_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow::OverallHeight_optional * >(argp2);
  (arg1)->OverallHeight((schema::simxml::BuildingModel::SimWindow::OverallHeight_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallHeight(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_OverallHeight__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_OverallHeight__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_OverallHeight__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_OverallHeight__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_OverallHeight'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallHeight() const\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallHeight()\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallHeight(schema::simxml::BuildingModel::SimWindow::OverallHeight_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallHeight(schema::simxml::BuildingModel::SimWindow::OverallHeight_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallWidth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_OverallWidth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::OverallWidth_optional *) &((schema::simxml::BuildingModel::SimWindow const *)arg1)->OverallWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallWidth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_OverallWidth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow::OverallWidth_optional *) &(arg1)->OverallWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallWidth__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallWidth_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallWidth_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_OverallWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_OverallWidth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::OverallWidth_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow::OverallWidth_type >(val2);
  arg2 = &temp2;
  (arg1)->OverallWidth((schema::simxml::BuildingModel::SimWindow::OverallWidth_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallWidth__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  schema::simxml::BuildingModel::SimWindow::OverallWidth_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_OverallWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_OverallWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_OverallWidth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::OverallWidth_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_OverallWidth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow::OverallWidth_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow::OverallWidth_optional * >(argp2);
  (arg1)->OverallWidth((schema::simxml::BuildingModel::SimWindow::OverallWidth_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_OverallWidth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_OverallWidth__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_OverallWidth__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_OverallWidth__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_OverallWidth__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_OverallWidth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallWidth() const\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallWidth()\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallWidth(schema::simxml::BuildingModel::SimWindow::OverallWidth_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::OverallWidth(schema::simxml::BuildingModel::SimWindow::OverallWidth_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimWindow")) SWIG_fail;
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((schema::simxml::BuildingModel::SimWindow const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((schema::simxml::BuildingModel::SimWindow const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow *)new schema::simxml::BuildingModel::SimWindow((schema::simxml::BuildingModel::SimWindow const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimWindow__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow()\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(::xercesc::DOMElement const &)\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(schema::simxml::BuildingModel::SimWindow const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(schema::simxml::BuildingModel::SimWindow const &,::xml_schema::flags)\n"
    "    schema::simxml::BuildingModel::SimWindow::SimWindow(schema::simxml::BuildingModel::SimWindow const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow *)((schema::simxml::BuildingModel::SimWindow const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow *)((schema::simxml::BuildingModel::SimWindow const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow *)((schema::simxml::BuildingModel::SimWindow const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::BuildingModel::SimWindow::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::BuildingModel::SimWindow::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow *arg1 = (schema::simxml::BuildingModel::SimWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowTypeTag__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowTypeTag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowTypeTag();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowTypeTag__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowTypeTag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional *) &(arg1)->WindowTypeTag();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowTypeTag__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowTypeTag",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type * >(argp2);
  (arg1)->WindowTypeTag((schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowTypeTag__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowTypeTag",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional * >(argp2);
  (arg1)->WindowTypeTag((schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowTypeTag__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowTypeTag",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowTypeTag" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->WindowTypeTag(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowTypeTag(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowTypeTag__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowTypeTag__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowTypeTag__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowTypeTag__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowTypeTag__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowTypeTag'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag(schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag(schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowOperationType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowOperationType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowOperationType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowOperationType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowOperationType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional *) &(arg1)->WindowOperationType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowOperationType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowOperationType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowOperationType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type * >(argp2);
  (arg1)->WindowOperationType((schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowOperationType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowOperationType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowOperationType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional * >(argp2);
  (arg1)->WindowOperationType((schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowOperationType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowOperationType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowOperationType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowOperationType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->WindowOperationType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowOperationType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowOperationType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowOperationType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowOperationType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowOperationType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowOperationType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowOperationType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType(schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType(schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowConstructionType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowConstructionType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowConstructionType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowConstructionType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowConstructionType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional *) &(arg1)->WindowConstructionType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowConstructionType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowConstructionType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type * >(argp2);
  (arg1)->WindowConstructionType((schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowConstructionType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowConstructionType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional * >(argp2);
  (arg1)->WindowConstructionType((schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowConstructionType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowConstructionType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowConstructionType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->WindowConstructionType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowConstructionType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowConstructionType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowConstructionType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowConstructionType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowConstructionType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowConstructionType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowConstructionType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType(schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType(schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowIsExternal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowIsExternal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowIsExternal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowIsExternal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowIsExternal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional *) &(arg1)->WindowIsExternal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowIsExternal__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_type temp2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowIsExternal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowIsExternal((schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowIsExternal__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowIsExternal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowIsExternal" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional * >(argp2);
  (arg1)->WindowIsExternal((schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowIsExternal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowIsExternal__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowIsExternal__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowIsExternal__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowIsExternal__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowIsExternal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal(schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal(schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_CompositeThermalTransmittance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->CompositeThermalTransmittance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_CompositeThermalTransmittance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional *) &(arg1)->CompositeThermalTransmittance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_CompositeThermalTransmittance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_type >(val2);
  arg2 = &temp2;
  (arg1)->CompositeThermalTransmittance((schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_CompositeThermalTransmittance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_CompositeThermalTransmittance" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional * >(argp2);
  (arg1)->CompositeThermalTransmittance((schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_CompositeThermalTransmittance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_CompositeThermalTransmittance__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_CompositeThermalTransmittance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance(schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance(schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowHeight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowHeight();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowHeight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional *) &(arg1)->WindowHeight();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowHeight__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowHeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowHeight" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowHeight((schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowHeight__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowHeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowHeight" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowHeight" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowHeight" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional * >(argp2);
  (arg1)->WindowHeight((schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowHeight(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowHeight__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowHeight__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowHeight__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowHeight__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowHeight'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowHeight() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowHeight()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowHeight(schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowHeight(schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowWidth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowWidth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional *) &(arg1)->WindowWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowWidth__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowWidth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowWidth((schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowWidth__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowWidth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowWidth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowWidth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional * >(argp2);
  (arg1)->WindowWidth((schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowWidth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowWidth__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowWidth__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowWidth__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowWidth__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowWidth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowWidth() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowWidth()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowWidth(schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowWidth(schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowArea__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowArea",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowArea" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowArea();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowArea__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowArea",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowArea" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional *) &(arg1)->WindowArea();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowArea__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowArea_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowArea_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowArea",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowArea" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowArea" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowArea_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowArea_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowArea((schema::simxml::BuildingModel::SimWindow_Window::WindowArea_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowArea__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowArea",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowArea" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowArea" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowArea" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional * >(argp2);
  (arg1)->WindowArea((schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowArea(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowArea__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowArea__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowArea__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowArea__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowArea'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowArea() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowArea()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowArea(schema::simxml::BuildingModel::SimWindow_Window::WindowArea_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowArea(schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowPerimeter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowPerimeter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowPerimeter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowPerimeter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowPerimeter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional *) &(arg1)->WindowPerimeter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowPerimeter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowPerimeter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowPerimeter((schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowPerimeter__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowPerimeter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowPerimeter" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional * >(argp2);
  (arg1)->WindowPerimeter((schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowPerimeter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowPerimeter__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowPerimeter__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowPerimeter__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowPerimeter__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowPerimeter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter(schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter(schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameDepth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowFrameDepth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowFrameDepth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameDepth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowFrameDepth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional *) &(arg1)->WindowFrameDepth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameDepth__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowFrameDepth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowFrameDepth((schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameDepth__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowFrameDepth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowFrameDepth" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional * >(argp2);
  (arg1)->WindowFrameDepth((schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameDepth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowFrameDepth__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowFrameDepth__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowFrameDepth__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowFrameDepth__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowFrameDepth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth(schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth(schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameThickness__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowFrameThickness",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->WindowFrameThickness();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameThickness__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_WindowFrameThickness",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional *) &(arg1)->WindowFrameThickness();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameThickness__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowFrameThickness",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_type""'");
  } 
  temp2 = static_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_type >(val2);
  arg2 = &temp2;
  (arg1)->WindowFrameThickness((schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameThickness__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_WindowFrameThickness",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_WindowFrameThickness" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional * >(argp2);
  (arg1)->WindowFrameThickness((schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_WindowFrameThickness(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowFrameThickness__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_WindowFrameThickness__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_WindowFrameThickness__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_WindowFrameThickness__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_WindowFrameThickness'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness(schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness(schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_ClassRef_UniFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->ClassRef_UniFormat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_ClassRef_UniFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional *) &(arg1)->ClassRef_UniFormat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_ClassRef_UniFormat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type * >(argp2);
  (arg1)->ClassRef_UniFormat((schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_ClassRef_UniFormat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional * >(argp2);
  (arg1)->ClassRef_UniFormat((schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_ClassRef_UniFormat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_ClassRef_UniFormat" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ClassRef_UniFormat(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_ClassRef_UniFormat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_ClassRef_UniFormat__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_ClassRef_UniFormat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat(schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat(schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_MaterialList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_MaterialList",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_MaterialList" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->MaterialList();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_MaterialList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_MaterialList",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_MaterialList" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional *) &(arg1)->MaterialList();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_MaterialList__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_MaterialList",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_MaterialList" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_MaterialList" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_MaterialList" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type * >(argp2);
  (arg1)->MaterialList((schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_MaterialList__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_MaterialList",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_MaterialList" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_MaterialList" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_MaterialList" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional * >(argp2);
  (arg1)->MaterialList((schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_MaterialList__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_MaterialList",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_MaterialList" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_MaterialList" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_MaterialList" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->MaterialList(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_MaterialList(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_MaterialList__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_MaterialList__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_MaterialList__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_MaterialList__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_MaterialList__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_MaterialList'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::MaterialList() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::MaterialList()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::MaterialList(schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::MaterialList(schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::MaterialList(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_VoidsInWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_VoidsInWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->VoidsInWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_VoidsInWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_VoidsInWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional *) &(arg1)->VoidsInWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_VoidsInWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_VoidsInWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type * >(argp2);
  (arg1)->VoidsInWindow((schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_VoidsInWindow__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_VoidsInWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional * >(argp2);
  (arg1)->VoidsInWindow((schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_VoidsInWindow__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_VoidsInWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_VoidsInWindow" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->VoidsInWindow(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_VoidsInWindow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_VoidsInWindow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_VoidsInWindow__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_VoidsInWindow__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_VoidsInWindow__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_VoidsInWindow__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_VoidsInWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow(schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow(schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_OpeningFilledByWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->OpeningFilledByWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_OpeningFilledByWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional *) &(arg1)->OpeningFilledByWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_OpeningFilledByWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type * >(argp2);
  (arg1)->OpeningFilledByWindow((schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_OpeningFilledByWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional * >(argp2);
  (arg1)->OpeningFilledByWindow((schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_OpeningFilledByWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_OpeningFilledByWindow" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->OpeningFilledByWindow(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_OpeningFilledByWindow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_OpeningFilledByWindow__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_OpeningFilledByWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow(schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow(schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_Name(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_Name(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_UserCurve_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional *) &(arg1)->SurfConvectAlg_Inside_UserCurve_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_UserCurve_Name(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *) &(arg1)->SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *) &(arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_UserCurve_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional *) &(arg1)->SurfConvectAlg_Outside_UserCurve_Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_Name((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_UserCurve_Name(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *) &(arg1)->SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *) &((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *) &(arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional * >(argp2);
  (arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName((schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName() const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName(schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName(::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimWindow_Window")) SWIG_fail;
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow_Window",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow_Window" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow_Window",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow_Window",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow_Window" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((schema::simxml::BuildingModel::SimWindow_Window const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow_Window",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((schema::simxml::BuildingModel::SimWindow_Window const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)new schema::simxml::BuildingModel::SimWindow_Window((schema::simxml::BuildingModel::SimWindow_Window const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimWindow_Window__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow_Window__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow_Window__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow_Window__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow_Window__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimWindow_Window'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(::xercesc::DOMElement const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(schema::simxml::BuildingModel::SimWindow_Window const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(schema::simxml::BuildingModel::SimWindow_Window const &,::xml_schema::flags)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::SimWindow_Window(schema::simxml::BuildingModel::SimWindow_Window const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow_Window *)((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window *)((schema::simxml::BuildingModel::SimWindow_Window const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow_Window__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimWindow_Window(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window *arg1 = (schema::simxml::BuildingModel::SimWindow_Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimWindow_Window",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimWindow_Window" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimWindow_Window_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimWindow_Window_Default")) SWIG_fail;
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow_Window_Default",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow_Window_Default" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow_Window_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow_Window_Default",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow_Window_Default" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow_Window_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)new schema::simxml::BuildingModel::SimWindow_Window_Default((schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimWindow_Window_Default__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window_Default__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window_Default__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow_Window_Default__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow_Window_Default__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow_Window_Default__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow_Window_Default__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimWindow_Window_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default()\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(::xercesc::DOMElement const &)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(schema::simxml::BuildingModel::SimWindow_Window_Default const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(schema::simxml::BuildingModel::SimWindow_Window_Default const &,::xml_schema::flags)\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::SimWindow_Window_Default(schema::simxml::BuildingModel::SimWindow_Window_Default const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = (schema::simxml::BuildingModel::SimWindow_Window_Default *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window_Default__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)((schema::simxml::BuildingModel::SimWindow_Window_Default const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = (schema::simxml::BuildingModel::SimWindow_Window_Default *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)((schema::simxml::BuildingModel::SimWindow_Window_Default const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = (schema::simxml::BuildingModel::SimWindow_Window_Default *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default__clone" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  result = (schema::simxml::BuildingModel::SimWindow_Window_Default *)((schema::simxml::BuildingModel::SimWindow_Window_Default const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_Default__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow_Window_Default__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::BuildingModel::SimWindow_Window_Default::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimWindow_Window_Default(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::BuildingModel::SimWindow_Window_Default *arg1 = (schema::simxml::BuildingModel::SimWindow_Window_Default *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimWindow_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::BuildingModel::SimWindow_Window_Default *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimWindow_Window_Default_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window_Default_sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimWindow_Window_Default_sequence")) SWIG_fail;
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg1 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *arg2 = 0 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow_Window_Default_sequence",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg2 = reinterpret_cast< ::schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >(arg1,(::schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg1 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *arg2 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow_Window_Default_sequence",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg2 = reinterpret_cast< ::schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp2);
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >(arg1,(::schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimWindow_Window_Default_sequence",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimWindow_Window_Default_sequence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimWindow_Window_Default_sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *)new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimWindow_Window_Default_sequence(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimWindow_Window_Default_sequence__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window_Default_sequence__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimWindow_Window_Default_sequence__SWIG_6(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow_Window_Default_sequence__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimWindow_Window_Default_sequence__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow_Window_Default_sequence__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimWindow_Window_Default_sequence__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimWindow_Window_Default_sequence'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence()\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type,::schema::simxml::BuildingModel::SimWindow_Window_Default const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type,::schema::simxml::BuildingModel::SimWindow_Window_Default const &)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::sequence(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg2 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window_Default_sequence_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_assign" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_assign" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_assign" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_assign" "', argument " "3"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_assign" "', argument " "3"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg3 = reinterpret_cast< ::schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp3);
  (arg1)->assign(arg2,(::schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_begin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::const_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_begin" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = ((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->begin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_end__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::const_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_end" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = ((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->end();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_begin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_begin" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_begin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_begin__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_begin__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_begin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::begin() const\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::begin()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_end__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_end" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_end(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_end__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_end__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_end'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::end() const\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::end()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_rbegin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::const_reverse_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_rbegin" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = ((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->rbegin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_reverse_iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_rend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::const_reverse_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_rend" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = ((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->rend();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_reverse_iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_rbegin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::reverse_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_rbegin" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::reverse_iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_rbegin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_rbegin__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_rbegin__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_rbegin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::rbegin() const\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::rbegin()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_rend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::reverse_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_rend" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::reverse_iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_rend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_rend__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_rend__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_rend'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::rend() const\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::rend()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_at__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_at",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &(arg1)->at(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_at__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_at",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &(arg1)->at(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_at__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_at",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->at(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_at(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_at__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_at__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_at__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_at'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::at(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::at(int)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::at(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_front__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_front" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &(arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_front__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_front" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_front(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_front__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_front__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_front'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::front()\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::front() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_back__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &(arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_back__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (::schema::simxml::BuildingModel::SimWindow_Window_Default *) &((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_back(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_back__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_back__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_back'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::back()\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::back() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_push_back__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_push_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_push_back" "', argument " "2"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_push_back" "', argument " "2"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg2 = reinterpret_cast< ::schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp2);
  (arg1)->push_back((::schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_push_back__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_push_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_push_back" "', argument " "2"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_push_back" "', argument " "2"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default >""'");
    } else {
      std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > * temp = reinterpret_cast< std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_push_back(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_push_back__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_push_back__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_push_back'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::push_back(::schema::simxml::BuildingModel::SimWindow_Window_Default const &)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::push_back(std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_pop_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_detach_back__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_detach_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_detach_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimWindow_Window_Default_sequence_detach_back" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (arg1)->detach_back(arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_detach_back__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimWindow_Window_Default_sequence_detach_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_detach_back" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  result = (arg1)->detach_back();
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_detach_back(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimWindow_Window_Default_sequence_detach_back__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_detach_back__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_detach_back'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::detach_back(bool)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::detach_back()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window_Default_sequence_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "3"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "3"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg3 = reinterpret_cast< ::schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp3);
  result = (arg1)->insert(arg2,(::schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window_Default_sequence_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "3"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "3"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default >""'");
    } else {
      std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > * temp = reinterpret_cast< std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (arg1)->insert(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_insert__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg3 ;
  ::schema::simxml::BuildingModel::SimWindow_Window_Default *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimWindow_Window_Default_sequence_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "3"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "3"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "4"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_insert" "', argument " "4"" of type '" "::schema::simxml::BuildingModel::SimWindow_Window_Default const &""'"); 
  }
  arg4 = reinterpret_cast< ::schema::simxml::BuildingModel::SimWindow_Window_Default * >(argp4);
  (arg1)->insert(arg2,arg3,(::schema::simxml::BuildingModel::SimWindow_Window_Default const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow_Window_Default_sequence_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow_Window_Default_sequence_insert__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimWindow_Window_Default_sequence_insert__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::insert(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const &)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::insert(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator,std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default >)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::insert(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator,xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type,::schema::simxml::BuildingModel::SimWindow_Window_Default const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window_Default_sequence_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "3"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_erase" "', argument " "3"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimWindow_Window_Default_sequence_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow_Window_Default_sequence_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::erase(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::erase(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator,xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_detach__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimWindow_Window_Default_sequence_detach",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "3"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "3"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > &""'"); 
  }
  arg3 = reinterpret_cast< std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (arg1)->detach(arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_detach__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > arg2 ;
  std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimWindow_Window_Default_sequence_detach",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator""'");
    } else {
      xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "3"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_detach" "', argument " "3"" of type '" "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > &""'"); 
  }
  arg3 = reinterpret_cast< std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > * >(argp3);
  result = (arg1)->detach(arg2,*arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator(static_cast< const xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_detach(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimWindow_Window_Default_sequence_detach__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_SimWindow_Window_Default_sequence_detach__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimWindow_Window_Default_sequence_detach'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::detach(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator,std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > &,bool)\n"
    "    xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::detach(xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator,std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimWindow_Window_Default_sequence_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimWindow_Window_Default_sequence_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimWindow_Window_Default_sequence_swap" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimWindow_Window_Default_sequence_swap" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimWindow_Window_Default_sequence_swap" "', argument " "2"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SimWindow_Window_Default_sequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *arg1 = (xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimWindow_Window_Default_sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimWindow_Window_Default_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimWindow_Window_Default_sequence_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"SimWindow_Name", _wrap_SimWindow_Name, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Representation", _wrap_SimWindow_Representation, METH_VARARGS, NULL},
	 { (char *)"SimWindow_OverallHeight", _wrap_SimWindow_OverallHeight, METH_VARARGS, NULL},
	 { (char *)"SimWindow_OverallWidth", _wrap_SimWindow_OverallWidth, METH_VARARGS, NULL},
	 { (char *)"new_SimWindow", _wrap_new_SimWindow, METH_VARARGS, NULL},
	 { (char *)"SimWindow__clone", _wrap_SimWindow__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimWindow", _wrap_delete_SimWindow, METH_VARARGS, NULL},
	 { (char *)"SimWindow_swigregister", SimWindow_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowTypeTag", _wrap_SimWindow_Window_WindowTypeTag, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowOperationType", _wrap_SimWindow_Window_WindowOperationType, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowConstructionType", _wrap_SimWindow_Window_WindowConstructionType, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowIsExternal", _wrap_SimWindow_Window_WindowIsExternal, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_CompositeThermalTransmittance", _wrap_SimWindow_Window_CompositeThermalTransmittance, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowHeight", _wrap_SimWindow_Window_WindowHeight, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowWidth", _wrap_SimWindow_Window_WindowWidth, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowArea", _wrap_SimWindow_Window_WindowArea, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowPerimeter", _wrap_SimWindow_Window_WindowPerimeter, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowFrameDepth", _wrap_SimWindow_Window_WindowFrameDepth, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_WindowFrameThickness", _wrap_SimWindow_Window_WindowFrameThickness, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_ClassRef_UniFormat", _wrap_SimWindow_Window_ClassRef_UniFormat, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_MaterialList", _wrap_SimWindow_Window_MaterialList, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_VoidsInWindow", _wrap_SimWindow_Window_VoidsInWindow, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_OpeningFilledByWindow", _wrap_SimWindow_Window_OpeningFilledByWindow, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_Name, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_Name, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name", _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_Name, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer", _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name", _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_Name, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve", _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName", _wrap_SimWindow_Window_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName, METH_VARARGS, NULL},
	 { (char *)"new_SimWindow_Window", _wrap_new_SimWindow_Window, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window__clone", _wrap_SimWindow_Window__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimWindow_Window", _wrap_delete_SimWindow_Window, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_swigregister", SimWindow_Window_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimWindow_Window_Default", _wrap_new_SimWindow_Window_Default, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default__clone", _wrap_SimWindow_Window_Default__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimWindow_Window_Default", _wrap_delete_SimWindow_Window_Default, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_swigregister", SimWindow_Window_Default_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimWindow_Window_Default_sequence", _wrap_new_SimWindow_Window_Default_sequence, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_assign", _wrap_SimWindow_Window_Default_sequence_assign, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_begin", _wrap_SimWindow_Window_Default_sequence_begin, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_end", _wrap_SimWindow_Window_Default_sequence_end, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_rbegin", _wrap_SimWindow_Window_Default_sequence_rbegin, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_rend", _wrap_SimWindow_Window_Default_sequence_rend, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_at", _wrap_SimWindow_Window_Default_sequence_at, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_front", _wrap_SimWindow_Window_Default_sequence_front, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_back", _wrap_SimWindow_Window_Default_sequence_back, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_push_back", _wrap_SimWindow_Window_Default_sequence_push_back, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_pop_back", _wrap_SimWindow_Window_Default_sequence_pop_back, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_detach_back", _wrap_SimWindow_Window_Default_sequence_detach_back, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_insert", _wrap_SimWindow_Window_Default_sequence_insert, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_erase", _wrap_SimWindow_Window_Default_sequence_erase, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_detach", _wrap_SimWindow_Window_Default_sequence_detach, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_swap", _wrap_SimWindow_Window_Default_sequence_swap, METH_VARARGS, NULL},
	 { (char *)"delete_SimWindow_Window_Default_sequence", _wrap_delete_SimWindow_Window_Default_sequence, METH_VARARGS, NULL},
	 { (char *)"SimWindow_Window_Default_sequence_swigregister", SimWindow_Window_Default_sequence_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *) ((schema::simxml::SimModelCore::SimObjectDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimActorDefinition *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindowTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *) ((schema::simxml::BuildingModel::SimWindow *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *) ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *)(schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimBldgModelParams *) ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimNodeTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimNode *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTemplateTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimTemplate *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimBldgModelParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimAppDefaultTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimAppDefault *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimPropertySetDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::ResourcesGeneral::SimNode *) ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimUnitType *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimObjectPlacement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimResourceObjectTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *) ((schema::simxml::SimModelCore::SimResourceObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimFeatureElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimFeatureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRootTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *)  ((schema::simxml::SimModelCore::SimRoot *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentation *) x));
}
static void *_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_tTo_p_xsd__cxx__tree__sequence_common(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::sequence_common *)  ((xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimBuildingElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimBuildingElement *) (schema::simxml::BuildingModel::SimWindow *)(schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimBuildingElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimBuildingElement *)  ((schema::simxml::BuildingModel::SimWindow *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimBuildingElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimBuildingElement *) (schema::simxml::BuildingModel::SimWindow *) ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *)  ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *)(schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *)  ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimBuildingElement *) ((schema::simxml::BuildingModel::SimWindow *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *) ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *)  ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *)  ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *)  ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *)(schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *) ((schema::simxml::BuildingModel::SimWindow *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *) ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *)  ((schema::simxml::SimModelCore::SimObjectDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimActorDefinition *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *) ((schema::simxml::BuildingModel::SimWindow *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *) ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *)(schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimBldgModelParams *) ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimNodeTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimNode *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTemplateTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimTemplate *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimBldgModelParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimAppDefaultTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimAppDefault *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimPropertySetDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::ResourcesGeneral::SimNode *) ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimUnitType *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimObjectPlacement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimResourceObjectTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *)  ((schema::simxml::SimModelCore::SimResourceObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimFeatureElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimFeatureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentation *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *)(schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *) ((schema::simxml::BuildingModel::SimWindow *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimBuildingElement *)(schema::simxml::BuildingModel::SimWindow *) ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *)  ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *)  ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__BuildingModel__SimWindow(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::BuildingModel::SimWindow *) (schema::simxml::BuildingModel::SimWindow_Window *) ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__BuildingModel__SimWindow(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::BuildingModel::SimWindow *)  ((schema::simxml::BuildingModel::SimWindow_Window *) x));
}
static void *_p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__BuildingModel__SimWindow_Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::BuildingModel::SimWindow_Window *)  ((schema::simxml::BuildingModel::SimWindow_Window_Default *) x));
}
static swig_type_info _swigt__p_ApplicableOccurrence_optional = {"_p_ApplicableOccurrence_optional", "ApplicableOccurrence_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ApplicableOccurrence_traits = {"_p_ApplicableOccurrence_traits", "ApplicableOccurrence_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ApplicableOccurrence_type = {"_p_ApplicableOccurrence_type", "ApplicableOccurrence_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_optional = {"_p_AssignedToFlowElement_optional", "AssignedToFlowElement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_traits = {"_p_AssignedToFlowElement_traits", "AssignedToFlowElement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_type = {"_p_AssignedToFlowElement_type", "AssignedToFlowElement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_optional = {"_p_AssignedToGroups_optional", "AssignedToGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_traits = {"_p_AssignedToGroups_traits", "AssignedToGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_type = {"_p_AssignedToGroups_type", "AssignedToGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_optional = {"_p_ChangeFromTemplate_optional", "ChangeFromTemplate_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_traits = {"_p_ChangeFromTemplate_traits", "ChangeFromTemplate_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_type = {"_p_ChangeFromTemplate_type", "ChangeFromTemplate_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ClassRef_UniFormat_optional = {"_p_ClassRef_UniFormat_optional", "ClassRef_UniFormat_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ClassRef_UniFormat_traits = {"_p_ClassRef_UniFormat_traits", "ClassRef_UniFormat_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ClassRef_UniFormat_type = {"_p_ClassRef_UniFormat_type", "ClassRef_UniFormat_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositeThermalTransmittance_optional = {"_p_CompositeThermalTransmittance_optional", "CompositeThermalTransmittance_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositeThermalTransmittance_traits = {"_p_CompositeThermalTransmittance_traits", "CompositeThermalTransmittance_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositeThermalTransmittance_type = {"_p_CompositeThermalTransmittance_type", "CompositeThermalTransmittance_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_optional = {"_p_CompositionType_optional", "CompositionType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_traits = {"_p_CompositionType_traits", "CompositionType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_type = {"_p_CompositionType_type", "CompositionType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_optional = {"_p_ContainingBuildings_optional", "ContainingBuildings_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_traits = {"_p_ContainingBuildings_traits", "ContainingBuildings_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_type = {"_p_ContainingBuildings_type", "ContainingBuildings_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_optional = {"_p_ContainingSpatialStructure_optional", "ContainingSpatialStructure_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_traits = {"_p_ContainingSpatialStructure_traits", "ContainingSpatialStructure_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_type = {"_p_ContainingSpatialStructure_type", "ContainingSpatialStructure_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_optional = {"_p_ControlElementID_optional", "ControlElementID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_traits = {"_p_ControlElementID_traits", "ControlElementID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_type = {"_p_ControlElementID_type", "ControlElementID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_optional = {"_p_ControlledBy_optional", "ControlledBy_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_traits = {"_p_ControlledBy_traits", "ControlledBy_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_type = {"_p_ControlledBy_type", "ControlledBy_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_optional = {"_p_DecimalPrecision_optional", "DecimalPrecision_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_traits = {"_p_DecimalPrecision_traits", "DecimalPrecision_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_type = {"_p_DecimalPrecision_type", "DecimalPrecision_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_optional = {"_p_Decomposes_optional", "Decomposes_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_traits = {"_p_Decomposes_traits", "Decomposes_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_type = {"_p_Decomposes_type", "Decomposes_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForPerson_optional = {"_p_DefaultForPerson_optional", "DefaultForPerson_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForPerson_traits = {"_p_DefaultForPerson_traits", "DefaultForPerson_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForPerson_type = {"_p_DefaultForPerson_type", "DefaultForPerson_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForProject_optional = {"_p_DefaultForProject_optional", "DefaultForProject_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForProject_traits = {"_p_DefaultForProject_traits", "DefaultForProject_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForProject_type = {"_p_DefaultForProject_type", "DefaultForProject_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForUnitSystem_optional = {"_p_DefaultForUnitSystem_optional", "DefaultForUnitSystem_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForUnitSystem_traits = {"_p_DefaultForUnitSystem_traits", "DefaultForUnitSystem_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForUnitSystem_type = {"_p_DefaultForUnitSystem_type", "DefaultForUnitSystem_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_optional = {"_p_Description_optional", "Description_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_traits = {"_p_Description_traits", "Description_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_type = {"_p_Description_type", "Description_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_optional = {"_p_DockedToPort_optional", "DockedToPort_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_traits = {"_p_DockedToPort_traits", "DockedToPort_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_type = {"_p_DockedToPort_type", "DockedToPort_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_optional = {"_p_GeometricRepresentations_optional", "GeometricRepresentations_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_traits = {"_p_GeometricRepresentations_traits", "GeometricRepresentations_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_type = {"_p_GeometricRepresentations_type", "GeometricRepresentations_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_optional = {"_p_HasPropertySets_optional", "HasPropertySets_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_traits = {"_p_HasPropertySets_traits", "HasPropertySets_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_type = {"_p_HasPropertySets_type", "HasPropertySets_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_optional = {"_p_HasTemplateChanged_optional", "HasTemplateChanged_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_traits = {"_p_HasTemplateChanged_traits", "HasTemplateChanged_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_type = {"_p_HasTemplateChanged_type", "HasTemplateChanged_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_optional = {"_p_HostElement_optional", "HostElement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_traits = {"_p_HostElement_traits", "HostElement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_type = {"_p_HostElement_type", "HostElement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_optional = {"_p_IfcGlobalID_optional", "IfcGlobalID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_traits = {"_p_IfcGlobalID_traits", "IfcGlobalID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_type = {"_p_IfcGlobalID_type", "IfcGlobalID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_optional = {"_p_IfcName_optional", "IfcName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_traits = {"_p_IfcName_traits", "IfcName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_type = {"_p_IfcName_type", "IfcName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_optional = {"_p_IsAutoGenerated_optional", "IsAutoGenerated_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_traits = {"_p_IsAutoGenerated_traits", "IsAutoGenerated_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_type = {"_p_IsAutoGenerated_type", "IsAutoGenerated_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_optional = {"_p_IsTemplateObject_optional", "IsTemplateObject_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_traits = {"_p_IsTemplateObject_traits", "IsTemplateObject_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_type = {"_p_IsTemplateObject_type", "IsTemplateObject_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_optional = {"_p_LocalPlacementRotation_optional", "LocalPlacementRotation_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_traits = {"_p_LocalPlacementRotation_traits", "LocalPlacementRotation_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_type = {"_p_LocalPlacementRotation_type", "LocalPlacementRotation_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_optional = {"_p_LocalPlacementX_optional", "LocalPlacementX_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_traits = {"_p_LocalPlacementX_traits", "LocalPlacementX_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_type = {"_p_LocalPlacementX_type", "LocalPlacementX_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_optional = {"_p_LocalPlacementY_optional", "LocalPlacementY_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_traits = {"_p_LocalPlacementY_traits", "LocalPlacementY_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_type = {"_p_LocalPlacementY_type", "LocalPlacementY_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_optional = {"_p_LocalPlacementZ_optional", "LocalPlacementZ_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_traits = {"_p_LocalPlacementZ_traits", "LocalPlacementZ_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_type = {"_p_LocalPlacementZ_type", "LocalPlacementZ_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_optional = {"_p_LongName_optional", "LongName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_traits = {"_p_LongName_traits", "LongName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_type = {"_p_LongName_type", "LongName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MaterialList_optional = {"_p_MaterialList_optional", "MaterialList_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MaterialList_traits = {"_p_MaterialList_traits", "MaterialList_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MaterialList_type = {"_p_MaterialList_type", "MaterialList_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_optional = {"_p_MemberUsedForDiagrams_optional", "MemberUsedForDiagrams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_traits = {"_p_MemberUsedForDiagrams_traits", "MemberUsedForDiagrams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_type = {"_p_MemberUsedForDiagrams_type", "MemberUsedForDiagrams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_optional = {"_p_Name_optional", "Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_traits = {"_p_Name_traits", "Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_type = {"_p_Name_type", "Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_optional = {"_p_NevronSchematicLayout_optional", "NevronSchematicLayout_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_traits = {"_p_NevronSchematicLayout_traits", "NevronSchematicLayout_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_type = {"_p_NevronSchematicLayout_type", "NevronSchematicLayout_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_optional = {"_p_ObjectCreationParams_optional", "ObjectCreationParams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_traits = {"_p_ObjectCreationParams_traits", "ObjectCreationParams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_type = {"_p_ObjectCreationParams_type", "ObjectCreationParams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_optional = {"_p_ObjectIndex_optional", "ObjectIndex_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_traits = {"_p_ObjectIndex_traits", "ObjectIndex_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_type = {"_p_ObjectIndex_type", "ObjectIndex_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_optional = {"_p_ObjectName_optional", "ObjectName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_traits = {"_p_ObjectName_traits", "ObjectName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_type = {"_p_ObjectName_type", "ObjectName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_optional = {"_p_ObjectOwnerHistory_optional", "ObjectOwnerHistory_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_traits = {"_p_ObjectOwnerHistory_traits", "ObjectOwnerHistory_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_type = {"_p_ObjectOwnerHistory_type", "ObjectOwnerHistory_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_optional = {"_p_ObjectType_optional", "ObjectType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_traits = {"_p_ObjectType_traits", "ObjectType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_type = {"_p_ObjectType_type", "ObjectType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpeningFilledByWindow_optional = {"_p_OpeningFilledByWindow_optional", "OpeningFilledByWindow_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpeningFilledByWindow_traits = {"_p_OpeningFilledByWindow_traits", "OpeningFilledByWindow_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpeningFilledByWindow_type = {"_p_OpeningFilledByWindow_type", "OpeningFilledByWindow_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OverallHeight_optional = {"_p_OverallHeight_optional", "OverallHeight_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OverallHeight_traits = {"_p_OverallHeight_traits", "OverallHeight_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OverallHeight_type = {"_p_OverallHeight_type", "OverallHeight_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OverallWidth_optional = {"_p_OverallWidth_optional", "OverallWidth_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OverallWidth_traits = {"_p_OverallWidth_traits", "OverallWidth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OverallWidth_type = {"_p_OverallWidth_type", "OverallWidth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_optional = {"_p_ParentGroups_optional", "ParentGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_traits = {"_p_ParentGroups_traits", "ParentGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_type = {"_p_ParentGroups_type", "ParentGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_optional = {"_p_PlacementRelToContainingTypeDef_optional", "PlacementRelToContainingTypeDef_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_traits = {"_p_PlacementRelToContainingTypeDef_traits", "PlacementRelToContainingTypeDef_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_type = {"_p_PlacementRelToContainingTypeDef_type", "PlacementRelToContainingTypeDef_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_optional = {"_p_Placement_optional", "Placement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_traits = {"_p_Placement_traits", "Placement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_type = {"_p_Placement_type", "Placement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_optional = {"_p_ProfileName_optional", "ProfileName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_traits = {"_p_ProfileName_traits", "ProfileName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_type = {"_p_ProfileName_type", "ProfileName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_optional = {"_p_ProfileType_optional", "ProfileType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_traits = {"_p_ProfileType_traits", "ProfileType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_type = {"_p_ProfileType_type", "ProfileType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefId_traits = {"_p_RefId_traits", "RefId_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefId_type = {"_p_RefId_type", "RefId_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_optional = {"_p_RepresentationContext_optional", "RepresentationContext_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_traits = {"_p_RepresentationContext_traits", "RepresentationContext_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_type = {"_p_RepresentationContext_type", "RepresentationContext_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_optional = {"_p_RepresentationIdentifier_optional", "RepresentationIdentifier_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_traits = {"_p_RepresentationIdentifier_traits", "RepresentationIdentifier_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_type = {"_p_RepresentationIdentifier_type", "RepresentationIdentifier_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_optional = {"_p_RepresentationItems_optional", "RepresentationItems_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_traits = {"_p_RepresentationItems_traits", "RepresentationItems_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_type = {"_p_RepresentationItems_type", "RepresentationItems_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_optional = {"_p_RepresentationType_optional", "RepresentationType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_traits = {"_p_RepresentationType_traits", "RepresentationType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_type = {"_p_RepresentationType_type", "RepresentationType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Representation_optional = {"_p_Representation_optional", "Representation_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Representation_traits = {"_p_Representation_traits", "Representation_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Representation_type = {"_p_Representation_type", "Representation_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_optional = {"_p_SelectedPropertyGroups_optional", "SelectedPropertyGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_traits = {"_p_SelectedPropertyGroups_traits", "SelectedPropertyGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_type = {"_p_SelectedPropertyGroups_type", "SelectedPropertyGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_optional = {"_p_SimModelName_optional", "SimModelName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_traits = {"_p_SimModelName_traits", "SimModelName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_type = {"_p_SimModelName_type", "SimModelName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_optional = {"_p_SimModelSubtype_optional", "SimModelSubtype_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_traits = {"_p_SimModelSubtype_traits", "SimModelSubtype_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_type = {"_p_SimModelSubtype_type", "SimModelSubtype_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_optional = {"_p_SimModelType_optional", "SimModelType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_traits = {"_p_SimModelType_traits", "SimModelType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_type = {"_p_SimModelType_type", "SimModelType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_optional = {"_p_SimUniqueID_optional", "SimUniqueID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_traits = {"_p_SimUniqueID_traits", "SimUniqueID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_type = {"_p_SimUniqueID_type", "SimUniqueID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_optional = {"_p_SourceLibraryEntryID_optional", "SourceLibraryEntryID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_traits = {"_p_SourceLibraryEntryID_traits", "SourceLibraryEntryID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_type = {"_p_SourceLibraryEntryID_type", "SourceLibraryEntryID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_optional = {"_p_SourceLibraryEntryRef_optional", "SourceLibraryEntryRef_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_traits = {"_p_SourceLibraryEntryRef_traits", "SourceLibraryEntryRef_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_type = {"_p_SourceLibraryEntryRef_type", "SourceLibraryEntryRef_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_optional = {"_p_SourceModelObjectType_optional", "SourceModelObjectType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_traits = {"_p_SourceModelObjectType_traits", "SourceModelObjectType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_type = {"_p_SourceModelObjectType_type", "SourceModelObjectType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_optional = {"_p_SourceModelSchema_optional", "SourceModelSchema_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_traits = {"_p_SourceModelSchema_traits", "SourceModelSchema_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_type = {"_p_SourceModelSchema_type", "SourceModelSchema_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional", "SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits", "SurfConvectAlg_Inside_AdaptModelSelects_Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type", "SurfConvectAlg_Inside_AdaptModelSelects_Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type = {"_p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type", "SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional", "SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits", "SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type", "SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional", "SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits", "SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type", "SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional", "SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits", "SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type", "SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional", "SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits", "SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type = {"_p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type", "SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_Name_optional = {"_p_SurfConvectAlg_Inside_UserCurve_Name_optional", "SurfConvectAlg_Inside_UserCurve_Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_Name_traits = {"_p_SurfConvectAlg_Inside_UserCurve_Name_traits", "SurfConvectAlg_Inside_UserCurve_Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_Name_type = {"_p_SurfConvectAlg_Inside_UserCurve_Name_type", "SurfConvectAlg_Inside_UserCurve_Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional = {"_p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional", "SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits = {"_p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits", "SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type = {"_p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type", "SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional", "SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits", "SurfConvectAlg_Outside_AdaptModelSelects_Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type", "SurfConvectAlg_Outside_AdaptModelSelects_Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type", "SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type = {"_p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type", "SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional = {"_p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional", "SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits = {"_p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits", "SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type = {"_p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type", "SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional = {"_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional", "SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits = {"_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits", "SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type = {"_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type", "SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional = {"_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional", "SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits = {"_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits", "SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type = {"_p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type", "SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_Name_optional = {"_p_SurfConvectAlg_Outside_UserCurve_Name_optional", "SurfConvectAlg_Outside_UserCurve_Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_Name_traits = {"_p_SurfConvectAlg_Outside_UserCurve_Name_traits", "SurfConvectAlg_Outside_UserCurve_Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_Name_type = {"_p_SurfConvectAlg_Outside_UserCurve_Name_type", "SurfConvectAlg_Outside_UserCurve_Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional = {"_p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional", "SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits = {"_p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits", "SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type = {"_p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type", "SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_optional = {"_p_Tag_optional", "Tag_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_traits = {"_p_Tag_traits", "Tag_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_type = {"_p_Tag_type", "Tag_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_optional = {"_p_TemplatesForMembers_optional", "TemplatesForMembers_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_traits = {"_p_TemplatesForMembers_traits", "TemplatesForMembers_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_type = {"_p_TemplatesForMembers_type", "TemplatesForMembers_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_optional = {"_p_TypeDefCreationParams_optional", "TypeDefCreationParams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_traits = {"_p_TypeDefCreationParams_traits", "TypeDefCreationParams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_type = {"_p_TypeDefCreationParams_type", "TypeDefCreationParams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_optional = {"_p_TypeDefinition_optional", "TypeDefinition_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_traits = {"_p_TypeDefinition_traits", "TypeDefinition_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_type = {"_p_TypeDefinition_type", "TypeDefinition_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_optional = {"_p_UnitType_String_optional", "UnitType_String_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_traits = {"_p_UnitType_String_traits", "UnitType_String_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_type = {"_p_UnitType_String_type", "UnitType_String_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VoidsInWindow_optional = {"_p_VoidsInWindow_optional", "VoidsInWindow_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VoidsInWindow_traits = {"_p_VoidsInWindow_traits", "VoidsInWindow_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VoidsInWindow_type = {"_p_VoidsInWindow_type", "VoidsInWindow_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowArea_optional = {"_p_WindowArea_optional", "WindowArea_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowArea_traits = {"_p_WindowArea_traits", "WindowArea_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowArea_type = {"_p_WindowArea_type", "WindowArea_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowConstructionType_optional = {"_p_WindowConstructionType_optional", "WindowConstructionType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowConstructionType_traits = {"_p_WindowConstructionType_traits", "WindowConstructionType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowConstructionType_type = {"_p_WindowConstructionType_type", "WindowConstructionType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowFrameDepth_optional = {"_p_WindowFrameDepth_optional", "WindowFrameDepth_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowFrameDepth_traits = {"_p_WindowFrameDepth_traits", "WindowFrameDepth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowFrameDepth_type = {"_p_WindowFrameDepth_type", "WindowFrameDepth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowFrameThickness_optional = {"_p_WindowFrameThickness_optional", "WindowFrameThickness_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowFrameThickness_traits = {"_p_WindowFrameThickness_traits", "WindowFrameThickness_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowFrameThickness_type = {"_p_WindowFrameThickness_type", "WindowFrameThickness_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowHeight_optional = {"_p_WindowHeight_optional", "WindowHeight_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowHeight_traits = {"_p_WindowHeight_traits", "WindowHeight_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowHeight_type = {"_p_WindowHeight_type", "WindowHeight_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowIsExternal_optional = {"_p_WindowIsExternal_optional", "WindowIsExternal_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowIsExternal_traits = {"_p_WindowIsExternal_traits", "WindowIsExternal_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowIsExternal_type = {"_p_WindowIsExternal_type", "WindowIsExternal_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowOperationType_optional = {"_p_WindowOperationType_optional", "WindowOperationType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowOperationType_traits = {"_p_WindowOperationType_traits", "WindowOperationType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowOperationType_type = {"_p_WindowOperationType_type", "WindowOperationType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowPerimeter_optional = {"_p_WindowPerimeter_optional", "WindowPerimeter_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowPerimeter_traits = {"_p_WindowPerimeter_traits", "WindowPerimeter_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowPerimeter_type = {"_p_WindowPerimeter_type", "WindowPerimeter_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowTypeTag_optional = {"_p_WindowTypeTag_optional", "WindowTypeTag_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowTypeTag_traits = {"_p_WindowTypeTag_traits", "WindowTypeTag_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowTypeTag_type = {"_p_WindowTypeTag_type", "WindowTypeTag_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowWidth_optional = {"_p_WindowWidth_optional", "WindowWidth_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowWidth_traits = {"_p_WindowWidth_traits", "WindowWidth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WindowWidth_type = {"_p_WindowWidth_type", "WindowWidth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_optional = {"_p_XDirectionX_optional", "XDirectionX_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_traits = {"_p_XDirectionX_traits", "XDirectionX_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_type = {"_p_XDirectionX_type", "XDirectionX_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_optional = {"_p_XDirectionY_optional", "XDirectionY_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_traits = {"_p_XDirectionY_traits", "XDirectionY_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_type = {"_p_XDirectionY_type", "XDirectionY_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_optional = {"_p_XDirectionZ_optional", "XDirectionZ_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_traits = {"_p_XDirectionZ_traits", "XDirectionZ_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_type = {"_p_XDirectionZ_type", "XDirectionZ_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_optional = {"_p__3dHeight_optional", "_3dHeight_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_traits = {"_p__3dHeight_traits", "_3dHeight_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_type = {"_p__3dHeight_type", "_3dHeight_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_optional = {"_p__3dLength_optional", "_3dLength_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_traits = {"_p__3dLength_traits", "_3dLength_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_type = {"_p__3dLength_type", "_3dLength_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_optional = {"_p__3dWidth_optional", "_3dWidth_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_traits = {"_p__3dWidth_traits", "_3dWidth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_type = {"_p__3dWidth_type", "_3dWidth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_const_iterator = {"_p_base_const_iterator", "base_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_iterator = {"_p_base_iterator", "base_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_sequence = {"_p_base_sequence", "base_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *|xml_schema::boolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool_convertible = {"_p_bool_convertible", "bool_convertible *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_iterator = {"_p_const_iterator", "const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reverse_iterator = {"_p_const_reverse_iterator", "const_reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dom_content_optional = {"_p_dom_content_optional", "dom_content_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "xml_schema::double_ *|double *|xml_schema::decimal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|xml_schema::float_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|xml_schema::int_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator = {"_p_iterator", "iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_iterator *|iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::const_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::const_reverse_iterator *|iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::const_reverse_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default const > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::iterator *|iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::reverse_iterator *|iterator_adapter< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::reverse_iterator,::schema::simxml::BuildingModel::SimWindow_Window_Default > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "long long *|xml_schema::long_ *|xml_schema::integer *|xml_schema::non_positive_integer *|xml_schema::negative_integer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ptr = {"_p_ptr", "ptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reverse_iterator = {"_p_reverse_iterator", "reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__BuildingModel__SimWindow = {"_p_schema__simxml__BuildingModel__SimWindow", "schema::simxml::BuildingModel::SimWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__BuildingModel__SimWindow_Window = {"_p_schema__simxml__BuildingModel__SimWindow_Window", "schema::simxml::BuildingModel::SimWindow_Window *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default = {"_p_schema__simxml__BuildingModel__SimWindow_Window_Default", "::schema::simxml::BuildingModel::SimWindow_Window_Default *|schema::simxml::BuildingModel::SimWindow_Window_Default *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__Model__SimModel = {"_p_schema__simxml__Model__SimModel", "::schema::simxml::Model::SimModel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups = {"_p_schema__simxml__SimModelCore__SelectedPropertyGroups", "::schema::simxml::SimModelCore::SelectedPropertyGroups *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimBuildingElement = {"_p_schema__simxml__SimModelCore__SimBuildingElement", "schema::simxml::SimModelCore::SimBuildingElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimElement = {"_p_schema__simxml__SimModelCore__SimElement", "schema::simxml::SimModelCore::SimElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement = {"_p_schema__simxml__SimModelCore__SimDistributionControlElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter = {"_p_schema__simxml__MepModel__SimFlowEnergyConverter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement = {"_p_schema__simxml__SimModelCore__SimDistributionFlowElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionElement = {"_p_schema__simxml__SimModelCore__SimDistributionElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObject = {"_p_schema__simxml__SimModelCore__SimObject", "schema::simxml::SimModelCore::SimObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimGroup = {"_p_schema__simxml__SimModelCore__SimGroup", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement = {"_p_schema__simxml__SimModelCore__SimSpatialStructureElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectDefinition = {"_p_schema__simxml__SimModelCore__SimObjectDefinition", "schema::simxml::SimModelCore::SimObjectDefinition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition = {"_p_schema__simxml__SimModelCore__SimObjectTypeDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRoot = {"_p_schema__simxml__SimModelCore__SimRoot", "schema::simxml::SimModelCore::SimRoot *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimTemplate = {"_p_schema__simxml__SimModelCore__SimTemplate", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimNode = {"_p_schema__simxml__ResourcesGeneral__SimNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimAppDefault = {"_p_schema__simxml__SimModelCore__SimAppDefault", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimActorDefinition = {"_p_schema__simxml__SimModelCore__SimActorDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams = {"_p_schema__simxml__ResourcesGeneral__SimArrayParams", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition = {"_p_schema__simxml__ResourcesGeometry__SimProfileDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimPort = {"_p_schema__simxml__ResourcesGeneral__SimPort", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition = {"_p_schema__simxml__SimModelCore__SimPropertySetDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimUnitType = {"_p_schema__simxml__ResourcesGeneral__SimUnitType", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectPlacement = {"_p_schema__simxml__SimModelCore__SimObjectPlacement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem = {"_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimResourceObject = {"_p_schema__simxml__SimModelCore__SimResourceObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimFeatureElement = {"_p_schema__simxml__SimModelCore__SimFeatureElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem = {"_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimBldgModelParams = {"_p_schema__simxml__SimModelCore__SimBldgModelParams", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRepresentationItem = {"_p_schema__simxml__SimModelCore__SimRepresentationItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRepresentation = {"_p_schema__simxml__SimModelCore__SimRepresentation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__doubleList = {"_p_schema__simxml__SimModelCore__doubleList", "::schema::simxml::SimModelCore::doubleList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__integerList = {"_p_schema__simxml__SimModelCore__integerList", "::schema::simxml::SimModelCore::integerList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__logical = {"_p_schema__simxml__SimModelCore__logical", "::schema::simxml::SimModelCore::logical *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_self_ = {"_p_self_", "self_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|xml_schema::short_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|xml_schema::byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_T_t = {"_p_std__auto_ptrT_T_t", "std::auto_ptr< T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t = {"_p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t", "std::auto_ptr< ::schema::simxml::BuildingModel::SimWindow_Window_Default > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__idref_t = {"_p_std__auto_ptrT_xml_schema__idref_t", "::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Representation_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type > *|std::auto_ptr< ::xml_schema::idref > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__idrefs_t = {"_p_std__auto_ptrT_xml_schema__idrefs_t", "std::auto_ptr< ::xml_schema::idrefs > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__string_t = {"_p_std__auto_ptrT_xml_schema__string_t", "std::auto_ptr< ::xml_schema::string > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow::Name_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type > *|::std::auto_ptr< schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type = {"_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type", "std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false >::size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|xml_schema::unsigned_byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "xml_schema::unsigned_int *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "xml_schema::unsigned_long *|unsigned long long *|xml_schema::non_negative_integer *|xml_schema::positive_integer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|xml_schema::unsigned_short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMElement = {"_p_xercesc__DOMElement", "::xercesc::DOMElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree___type = {"_p_xsd__cxx__tree___type", "xsd::cxx::tree::_type *|xsd::cxx::tree::type *|xml_schema::type *|xsd::cxx::tree::container *|xml_schema::container *|::xml_schema::container *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t", "xml_schema::base64_binary *|::xsd::cxx::tree::base64_binary< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__boundsT_char_t = {"_p_xsd__cxx__tree__boundsT_char_t", "::xsd::cxx::tree::bounds< char > *|xml_schema::bounds *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__bufferT_char_t = {"_p_xsd__cxx__tree__bufferT_char_t", "::xsd::cxx::tree::buffer< char > *|xml_schema::buffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__content_order = {"_p_xsd__cxx__tree__content_order", "::xsd::cxx::tree::content_order *|xml_schema::content_order *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::date< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::date *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xml_schema::date_time *|xsd::cxx::tree::date_time< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__diagnosticsT_char_t = {"_p_xsd__cxx__tree__diagnosticsT_char_t", "xml_schema::diagnostics *|::xsd::cxx::tree::diagnostics< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__duplicate_idT_char_t = {"_p_xsd__cxx__tree__duplicate_idT_char_t", "::xsd::cxx::tree::duplicate_id< char > *|xml_schema::duplicate_id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::duration< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::duration *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t = {"_p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t", "xml_schema::entities *|::xsd::cxx::tree::entities< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::entity > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t", "xml_schema::entity *|::xsd::cxx::tree::entity< char,xsd::cxx::tree::ncname > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__errorT_char_t = {"_p_xsd__cxx__tree__errorT_char_t", "xml_schema::error *|::xsd::cxx::tree::error< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__exceptionT_char_t = {"_p_xsd__cxx__tree__exceptionT_char_t", "::xsd::cxx::tree::exception< char > *|xml_schema::exception *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_attributeT_char_t = {"_p_xsd__cxx__tree__expected_attributeT_char_t", "::xsd::cxx::tree::expected_attribute< char > *|xml_schema::expected_attribute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_elementT_char_t = {"_p_xsd__cxx__tree__expected_elementT_char_t", "::xsd::cxx::tree::expected_element< char > *|xml_schema::expected_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_text_contentT_char_t = {"_p_xsd__cxx__tree__expected_text_contentT_char_t", "::xsd::cxx::tree::expected_text_content< char > *|xml_schema::expected_text_content *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__flags = {"_p_xsd__cxx__tree__flags", "::xsd::cxx::tree::flags *|xml_schema::flags *|::xml_schema::flags *|xsd::cxx::tree::flags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gday< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gday *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xml_schema::gmonth *|xsd::cxx::tree::gmonth< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gmonth_day< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gmonth_day *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gyear< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gyear *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gyear_month< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gyear_month *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t", "::xsd::cxx::tree::hex_binary< char,xsd::cxx::tree::simple_type > *|xml_schema::hex_binary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t", "::xsd::cxx::tree::id< char,xsd::cxx::tree::ncname > *|::xml_schema::id *|xml_schema::id *|schema::simxml::SimModelCore::SimRoot::RefId_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t", "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type *|xsd::cxx::tree::idref< char,xsd::cxx::tree::ncname,xsd::cxx::tree::_type > *|schema::simxml::BuildingModel::SimWindow::Representation_type *|xml_schema::idref *|::xml_schema::idref *|schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_type *|schema::simxml::BuildingModel::SimWindow_Window::MaterialList_type *|schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t = {"_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t", "::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref > *|::xml_schema::idrefs *|xml_schema::idrefs *|schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t", "xml_schema::language *|::xsd::cxx::tree::language< char,xsd::cxx::tree::token > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t", "xml_schema::name *|::xsd::cxx::tree::name< char,xsd::cxx::tree::token > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t = {"_p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t", "xml_schema::ncname *|::xsd::cxx::tree::ncname< char,xsd::cxx::tree::name > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t", "::xsd::cxx::tree::nmtoken< char,xsd::cxx::tree::token > *|xml_schema::nmtoken *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t = {"_p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t", "::xsd::cxx::tree::nmtokens< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::nmtoken > *|xml_schema::nmtokens *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t = {"_p_xsd__cxx__tree__no_prefix_mappingT_char_t", "::xsd::cxx::tree::no_prefix_mapping< char > *|xml_schema::no_prefix_mapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__no_type_infoT_char_t = {"_p_xsd__cxx__tree__no_type_infoT_char_t", "xml_schema::no_type_info *|::xsd::cxx::tree::no_type_info< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t = {"_p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t", "::xsd::cxx::tree::normalized_string< char,xsd::cxx::tree::string > *|xml_schema::normalized_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__not_derivedT_char_t = {"_p_xsd__cxx__tree__not_derivedT_char_t", "::xsd::cxx::tree::not_derived< char > *|xml_schema::not_derived *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_bool_true_t = {"_p_xsd__cxx__tree__optionalT_bool_true_t", "xsd::cxx::tree::optional< bool,true > *|xsd::cxx::tree::optional< bool,xsd::cxx::tree::fundamental_p< bool >::r > *|schema::simxml::BuildingModel::SimWindow_Window::WindowIsExternal_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_double_true_t = {"_p_xsd__cxx__tree__optionalT_double_true_t", "schema::simxml::BuildingModel::SimWindow_Window::CompositeThermalTransmittance_optional *|xsd::cxx::tree::optional< double,true > *|schema::simxml::BuildingModel::SimWindow::OverallHeight_optional *|schema::simxml::BuildingModel::SimWindow::OverallWidth_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowFrameDepth_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowPerimeter_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowArea_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowWidth_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowHeight_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowFrameThickness_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t", "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional *|schema::simxml::BuildingModel::SimWindow::Representation_optional *|xsd::cxx::tree::optional< xsd::cxx::tree::idref< char,xsd::cxx::tree::ncname,xsd::cxx::tree::_type >,false > *|schema::simxml::BuildingModel::SimWindow_Window::ClassRef_UniFormat_optional *|schema::simxml::BuildingModel::SimWindow_Window::MaterialList_optional *|schema::simxml::BuildingModel::SimWindow_Window::OpeningFilledByWindow_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t", "xsd::cxx::tree::optional< ::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref >,xsd::cxx::tree::fundamental_p< ::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref > >::r > *|schema::simxml::BuildingModel::SimWindow_Window::VoidsInWindow_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t", "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_optional *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_optional *|schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_optional *|schema::simxml::BuildingModel::SimWindow::Name_optional *|xsd::cxx::tree::optional< ::xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type >,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__parsingT_char_t = {"_p_xsd__cxx__tree__parsingT_char_t", "xml_schema::parsing *|::xsd::cxx::tree::parsing< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__propertiesT_char_t = {"_p_xsd__cxx__tree__propertiesT_char_t", "::xsd::cxx::tree::properties< char > *|xml_schema::properties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t", "xml_schema::qname *|::xsd::cxx::tree::qname< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::uri,xsd::cxx::tree::ncname > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequence_common = {"_p_xsd__cxx__tree__sequence_common", "xsd::cxx::tree::sequence_common *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__severity = {"_p_xsd__cxx__tree__severity", "::xsd::cxx::tree::severity *|xml_schema::severity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t", "xml_schema::simple_type *|xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t", "schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_Name_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_Name_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_Name_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_Name_type *|schema::simxml::BuildingModel::SimWindow_Window::SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type *|schema::simxml::BuildingModel::SimWindow_Window::WindowTypeTag_type *|schema::simxml::BuildingModel::SimWindow_Window::WindowOperationType_type *|schema::simxml::BuildingModel::SimWindow_Window::WindowConstructionType_type *|schema::simxml::BuildingModel::SimWindow::Name_type *|xml_schema::string *|::xml_schema::string *|::xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::time< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::time *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__time_zone = {"_p_xsd__cxx__tree__time_zone", "::xsd::cxx::tree::time_zone *|xml_schema::time_zone *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t = {"_p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t", "::xsd::cxx::tree::token< char,xsd::cxx::tree::normalized_string > *|xml_schema::token *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__unexpected_elementT_char_t = {"_p_xsd__cxx__tree__unexpected_elementT_char_t", "::xsd::cxx::tree::unexpected_element< char > *|xml_schema::unexpected_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t = {"_p_xsd__cxx__tree__unexpected_enumeratorT_char_t", "::xsd::cxx::tree::unexpected_enumerator< char > *|xml_schema::unexpected_enumerator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t", "xml_schema::uri *|::xsd::cxx::tree::uri< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t = {"_p_xsd__cxx__tree__user_data_keys_templateT_0_t", "xsd::cxx::tree::user_data_keys_template< 0 > *|xsd::cxx::tree::user_data_keys *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__xml__error_handlerT_char_t = {"_p_xsd__cxx__xml__error_handlerT_char_t", "::xsd::cxx::xml::error_handler< char > *|xml_schema::error_handler *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ApplicableOccurrence_optional,
  &_swigt__p_ApplicableOccurrence_traits,
  &_swigt__p_ApplicableOccurrence_type,
  &_swigt__p_AssignedToFlowElement_optional,
  &_swigt__p_AssignedToFlowElement_traits,
  &_swigt__p_AssignedToFlowElement_type,
  &_swigt__p_AssignedToGroups_optional,
  &_swigt__p_AssignedToGroups_traits,
  &_swigt__p_AssignedToGroups_type,
  &_swigt__p_ChangeFromTemplate_optional,
  &_swigt__p_ChangeFromTemplate_traits,
  &_swigt__p_ChangeFromTemplate_type,
  &_swigt__p_ClassRef_UniFormat_optional,
  &_swigt__p_ClassRef_UniFormat_traits,
  &_swigt__p_ClassRef_UniFormat_type,
  &_swigt__p_CompositeThermalTransmittance_optional,
  &_swigt__p_CompositeThermalTransmittance_traits,
  &_swigt__p_CompositeThermalTransmittance_type,
  &_swigt__p_CompositionType_optional,
  &_swigt__p_CompositionType_traits,
  &_swigt__p_CompositionType_type,
  &_swigt__p_ContainingBuildings_optional,
  &_swigt__p_ContainingBuildings_traits,
  &_swigt__p_ContainingBuildings_type,
  &_swigt__p_ContainingSpatialStructure_optional,
  &_swigt__p_ContainingSpatialStructure_traits,
  &_swigt__p_ContainingSpatialStructure_type,
  &_swigt__p_ControlElementID_optional,
  &_swigt__p_ControlElementID_traits,
  &_swigt__p_ControlElementID_type,
  &_swigt__p_ControlledBy_optional,
  &_swigt__p_ControlledBy_traits,
  &_swigt__p_ControlledBy_type,
  &_swigt__p_DecimalPrecision_optional,
  &_swigt__p_DecimalPrecision_traits,
  &_swigt__p_DecimalPrecision_type,
  &_swigt__p_Decomposes_optional,
  &_swigt__p_Decomposes_traits,
  &_swigt__p_Decomposes_type,
  &_swigt__p_DefaultForPerson_optional,
  &_swigt__p_DefaultForPerson_traits,
  &_swigt__p_DefaultForPerson_type,
  &_swigt__p_DefaultForProject_optional,
  &_swigt__p_DefaultForProject_traits,
  &_swigt__p_DefaultForProject_type,
  &_swigt__p_DefaultForUnitSystem_optional,
  &_swigt__p_DefaultForUnitSystem_traits,
  &_swigt__p_DefaultForUnitSystem_type,
  &_swigt__p_Description_optional,
  &_swigt__p_Description_traits,
  &_swigt__p_Description_type,
  &_swigt__p_DockedToPort_optional,
  &_swigt__p_DockedToPort_traits,
  &_swigt__p_DockedToPort_type,
  &_swigt__p_GeometricRepresentations_optional,
  &_swigt__p_GeometricRepresentations_traits,
  &_swigt__p_GeometricRepresentations_type,
  &_swigt__p_HasPropertySets_optional,
  &_swigt__p_HasPropertySets_traits,
  &_swigt__p_HasPropertySets_type,
  &_swigt__p_HasTemplateChanged_optional,
  &_swigt__p_HasTemplateChanged_traits,
  &_swigt__p_HasTemplateChanged_type,
  &_swigt__p_HostElement_optional,
  &_swigt__p_HostElement_traits,
  &_swigt__p_HostElement_type,
  &_swigt__p_IfcGlobalID_optional,
  &_swigt__p_IfcGlobalID_traits,
  &_swigt__p_IfcGlobalID_type,
  &_swigt__p_IfcName_optional,
  &_swigt__p_IfcName_traits,
  &_swigt__p_IfcName_type,
  &_swigt__p_IsAutoGenerated_optional,
  &_swigt__p_IsAutoGenerated_traits,
  &_swigt__p_IsAutoGenerated_type,
  &_swigt__p_IsTemplateObject_optional,
  &_swigt__p_IsTemplateObject_traits,
  &_swigt__p_IsTemplateObject_type,
  &_swigt__p_LocalPlacementRotation_optional,
  &_swigt__p_LocalPlacementRotation_traits,
  &_swigt__p_LocalPlacementRotation_type,
  &_swigt__p_LocalPlacementX_optional,
  &_swigt__p_LocalPlacementX_traits,
  &_swigt__p_LocalPlacementX_type,
  &_swigt__p_LocalPlacementY_optional,
  &_swigt__p_LocalPlacementY_traits,
  &_swigt__p_LocalPlacementY_type,
  &_swigt__p_LocalPlacementZ_optional,
  &_swigt__p_LocalPlacementZ_traits,
  &_swigt__p_LocalPlacementZ_type,
  &_swigt__p_LongName_optional,
  &_swigt__p_LongName_traits,
  &_swigt__p_LongName_type,
  &_swigt__p_MaterialList_optional,
  &_swigt__p_MaterialList_traits,
  &_swigt__p_MaterialList_type,
  &_swigt__p_MemberUsedForDiagrams_optional,
  &_swigt__p_MemberUsedForDiagrams_traits,
  &_swigt__p_MemberUsedForDiagrams_type,
  &_swigt__p_Name_optional,
  &_swigt__p_Name_traits,
  &_swigt__p_Name_type,
  &_swigt__p_NevronSchematicLayout_optional,
  &_swigt__p_NevronSchematicLayout_traits,
  &_swigt__p_NevronSchematicLayout_type,
  &_swigt__p_ObjectCreationParams_optional,
  &_swigt__p_ObjectCreationParams_traits,
  &_swigt__p_ObjectCreationParams_type,
  &_swigt__p_ObjectIndex_optional,
  &_swigt__p_ObjectIndex_traits,
  &_swigt__p_ObjectIndex_type,
  &_swigt__p_ObjectName_optional,
  &_swigt__p_ObjectName_traits,
  &_swigt__p_ObjectName_type,
  &_swigt__p_ObjectOwnerHistory_optional,
  &_swigt__p_ObjectOwnerHistory_traits,
  &_swigt__p_ObjectOwnerHistory_type,
  &_swigt__p_ObjectType_optional,
  &_swigt__p_ObjectType_traits,
  &_swigt__p_ObjectType_type,
  &_swigt__p_OpeningFilledByWindow_optional,
  &_swigt__p_OpeningFilledByWindow_traits,
  &_swigt__p_OpeningFilledByWindow_type,
  &_swigt__p_OverallHeight_optional,
  &_swigt__p_OverallHeight_traits,
  &_swigt__p_OverallHeight_type,
  &_swigt__p_OverallWidth_optional,
  &_swigt__p_OverallWidth_traits,
  &_swigt__p_OverallWidth_type,
  &_swigt__p_ParentGroups_optional,
  &_swigt__p_ParentGroups_traits,
  &_swigt__p_ParentGroups_type,
  &_swigt__p_PlacementRelToContainingTypeDef_optional,
  &_swigt__p_PlacementRelToContainingTypeDef_traits,
  &_swigt__p_PlacementRelToContainingTypeDef_type,
  &_swigt__p_Placement_optional,
  &_swigt__p_Placement_traits,
  &_swigt__p_Placement_type,
  &_swigt__p_ProfileName_optional,
  &_swigt__p_ProfileName_traits,
  &_swigt__p_ProfileName_type,
  &_swigt__p_ProfileType_optional,
  &_swigt__p_ProfileType_traits,
  &_swigt__p_ProfileType_type,
  &_swigt__p_RefId_traits,
  &_swigt__p_RefId_type,
  &_swigt__p_RepresentationContext_optional,
  &_swigt__p_RepresentationContext_traits,
  &_swigt__p_RepresentationContext_type,
  &_swigt__p_RepresentationIdentifier_optional,
  &_swigt__p_RepresentationIdentifier_traits,
  &_swigt__p_RepresentationIdentifier_type,
  &_swigt__p_RepresentationItems_optional,
  &_swigt__p_RepresentationItems_traits,
  &_swigt__p_RepresentationItems_type,
  &_swigt__p_RepresentationType_optional,
  &_swigt__p_RepresentationType_traits,
  &_swigt__p_RepresentationType_type,
  &_swigt__p_Representation_optional,
  &_swigt__p_Representation_traits,
  &_swigt__p_Representation_type,
  &_swigt__p_SelectedPropertyGroups_optional,
  &_swigt__p_SelectedPropertyGroups_traits,
  &_swigt__p_SelectedPropertyGroups_type,
  &_swigt__p_SimModelName_optional,
  &_swigt__p_SimModelName_traits,
  &_swigt__p_SimModelName_type,
  &_swigt__p_SimModelSubtype_optional,
  &_swigt__p_SimModelSubtype_traits,
  &_swigt__p_SimModelSubtype_type,
  &_swigt__p_SimModelType_optional,
  &_swigt__p_SimModelType_traits,
  &_swigt__p_SimModelType_type,
  &_swigt__p_SimUniqueID_optional,
  &_swigt__p_SimUniqueID_traits,
  &_swigt__p_SimUniqueID_type,
  &_swigt__p_SourceLibraryEntryID_optional,
  &_swigt__p_SourceLibraryEntryID_traits,
  &_swigt__p_SourceLibraryEntryID_type,
  &_swigt__p_SourceLibraryEntryRef_optional,
  &_swigt__p_SourceLibraryEntryRef_traits,
  &_swigt__p_SourceLibraryEntryRef_type,
  &_swigt__p_SourceModelObjectType_optional,
  &_swigt__p_SourceModelObjectType_traits,
  &_swigt__p_SourceModelObjectType_type,
  &_swigt__p_SourceModelSchema_optional,
  &_swigt__p_SourceModelSchema_traits,
  &_swigt__p_SourceModelSchema_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_Name_optional,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_Name_traits,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_Name_type,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits,
  &_swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits,
  &_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_Name_optional,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_Name_traits,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_Name_type,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits,
  &_swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type,
  &_swigt__p_Tag_optional,
  &_swigt__p_Tag_traits,
  &_swigt__p_Tag_type,
  &_swigt__p_TemplatesForMembers_optional,
  &_swigt__p_TemplatesForMembers_traits,
  &_swigt__p_TemplatesForMembers_type,
  &_swigt__p_TypeDefCreationParams_optional,
  &_swigt__p_TypeDefCreationParams_traits,
  &_swigt__p_TypeDefCreationParams_type,
  &_swigt__p_TypeDefinition_optional,
  &_swigt__p_TypeDefinition_traits,
  &_swigt__p_TypeDefinition_type,
  &_swigt__p_UnitType_String_optional,
  &_swigt__p_UnitType_String_traits,
  &_swigt__p_UnitType_String_type,
  &_swigt__p_VoidsInWindow_optional,
  &_swigt__p_VoidsInWindow_traits,
  &_swigt__p_VoidsInWindow_type,
  &_swigt__p_WindowArea_optional,
  &_swigt__p_WindowArea_traits,
  &_swigt__p_WindowArea_type,
  &_swigt__p_WindowConstructionType_optional,
  &_swigt__p_WindowConstructionType_traits,
  &_swigt__p_WindowConstructionType_type,
  &_swigt__p_WindowFrameDepth_optional,
  &_swigt__p_WindowFrameDepth_traits,
  &_swigt__p_WindowFrameDepth_type,
  &_swigt__p_WindowFrameThickness_optional,
  &_swigt__p_WindowFrameThickness_traits,
  &_swigt__p_WindowFrameThickness_type,
  &_swigt__p_WindowHeight_optional,
  &_swigt__p_WindowHeight_traits,
  &_swigt__p_WindowHeight_type,
  &_swigt__p_WindowIsExternal_optional,
  &_swigt__p_WindowIsExternal_traits,
  &_swigt__p_WindowIsExternal_type,
  &_swigt__p_WindowOperationType_optional,
  &_swigt__p_WindowOperationType_traits,
  &_swigt__p_WindowOperationType_type,
  &_swigt__p_WindowPerimeter_optional,
  &_swigt__p_WindowPerimeter_traits,
  &_swigt__p_WindowPerimeter_type,
  &_swigt__p_WindowTypeTag_optional,
  &_swigt__p_WindowTypeTag_traits,
  &_swigt__p_WindowTypeTag_type,
  &_swigt__p_WindowWidth_optional,
  &_swigt__p_WindowWidth_traits,
  &_swigt__p_WindowWidth_type,
  &_swigt__p_XDirectionX_optional,
  &_swigt__p_XDirectionX_traits,
  &_swigt__p_XDirectionX_type,
  &_swigt__p_XDirectionY_optional,
  &_swigt__p_XDirectionY_traits,
  &_swigt__p_XDirectionY_type,
  &_swigt__p_XDirectionZ_optional,
  &_swigt__p_XDirectionZ_traits,
  &_swigt__p_XDirectionZ_type,
  &_swigt__p__3dHeight_optional,
  &_swigt__p__3dHeight_traits,
  &_swigt__p__3dHeight_type,
  &_swigt__p__3dLength_optional,
  &_swigt__p__3dLength_traits,
  &_swigt__p__3dLength_type,
  &_swigt__p__3dWidth_optional,
  &_swigt__p__3dWidth_traits,
  &_swigt__p__3dWidth_type,
  &_swigt__p_allocator_type,
  &_swigt__p_base_const_iterator,
  &_swigt__p_base_iterator,
  &_swigt__p_base_sequence,
  &_swigt__p_bool,
  &_swigt__p_bool_convertible,
  &_swigt__p_char,
  &_swigt__p_const_iterator,
  &_swigt__p_const_reverse_iterator,
  &_swigt__p_difference_type,
  &_swigt__p_dom_content_optional,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_iterator,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,
  &_swigt__p_long_long,
  &_swigt__p_ptr,
  &_swigt__p_reverse_iterator,
  &_swigt__p_schema__simxml__BuildingModel__SimWindow,
  &_swigt__p_schema__simxml__BuildingModel__SimWindow_Window,
  &_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default,
  &_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter,
  &_swigt__p_schema__simxml__Model__SimModel,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimNode,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimPort,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType,
  &_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups,
  &_swigt__p_schema__simxml__SimModelCore__SimActorDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimAppDefault,
  &_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams,
  &_swigt__p_schema__simxml__SimModelCore__SimBuildingElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement,
  &_swigt__p_schema__simxml__SimModelCore__SimElement,
  &_swigt__p_schema__simxml__SimModelCore__SimFeatureElement,
  &_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__SimGroup,
  &_swigt__p_schema__simxml__SimModelCore__SimObject,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimRepresentation,
  &_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__SimResourceObject,
  &_swigt__p_schema__simxml__SimModelCore__SimRoot,
  &_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement,
  &_swigt__p_schema__simxml__SimModelCore__SimTemplate,
  &_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__doubleList,
  &_swigt__p_schema__simxml__SimModelCore__integerList,
  &_swigt__p_schema__simxml__SimModelCore__logical,
  &_swigt__p_self_,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_size_type,
  &_swigt__p_std__auto_ptrT_T_t,
  &_swigt__p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t,
  &_swigt__p_std__auto_ptrT_xml_schema__idref_t,
  &_swigt__p_std__auto_ptrT_xml_schema__idrefs_t,
  &_swigt__p_std__auto_ptrT_xml_schema__string_t,
  &_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_xercesc__DOMElement,
  &_swigt__p_xsd__cxx__tree___type,
  &_swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__boundsT_char_t,
  &_swigt__p_xsd__cxx__tree__bufferT_char_t,
  &_swigt__p_xsd__cxx__tree__content_order,
  &_swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__diagnosticsT_char_t,
  &_swigt__p_xsd__cxx__tree__duplicate_idT_char_t,
  &_swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t,
  &_swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__errorT_char_t,
  &_swigt__p_xsd__cxx__tree__exceptionT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_attributeT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_elementT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_text_contentT_char_t,
  &_swigt__p_xsd__cxx__tree__flags,
  &_swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,
  &_swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t,
  &_swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t,
  &_swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t,
  &_swigt__p_xsd__cxx__tree__no_type_infoT_char_t,
  &_swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t,
  &_swigt__p_xsd__cxx__tree__not_derivedT_char_t,
  &_swigt__p_xsd__cxx__tree__optionalT_bool_true_t,
  &_swigt__p_xsd__cxx__tree__optionalT_double_true_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,
  &_swigt__p_xsd__cxx__tree__parsingT_char_t,
  &_swigt__p_xsd__cxx__tree__propertiesT_char_t,
  &_swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequence_common,
  &_swigt__p_xsd__cxx__tree__severity,
  &_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__time_zone,
  &_swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t,
  &_swigt__p_xsd__cxx__tree__unexpected_elementT_char_t,
  &_swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t,
  &_swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t,
  &_swigt__p_xsd__cxx__xml__error_handlerT_char_t,
};

static swig_cast_info _swigc__p_ApplicableOccurrence_optional[] = {  {&_swigt__p_ApplicableOccurrence_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ApplicableOccurrence_traits[] = {  {&_swigt__p_ApplicableOccurrence_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ApplicableOccurrence_type[] = {  {&_swigt__p_ApplicableOccurrence_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_optional[] = {  {&_swigt__p_AssignedToFlowElement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_traits[] = {  {&_swigt__p_AssignedToFlowElement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_type[] = {  {&_swigt__p_AssignedToFlowElement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_optional[] = {  {&_swigt__p_AssignedToGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_traits[] = {  {&_swigt__p_AssignedToGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_type[] = {  {&_swigt__p_AssignedToGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_optional[] = {  {&_swigt__p_ChangeFromTemplate_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_traits[] = {  {&_swigt__p_ChangeFromTemplate_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_type[] = {  {&_swigt__p_ChangeFromTemplate_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ClassRef_UniFormat_optional[] = {  {&_swigt__p_ClassRef_UniFormat_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ClassRef_UniFormat_traits[] = {  {&_swigt__p_ClassRef_UniFormat_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ClassRef_UniFormat_type[] = {  {&_swigt__p_ClassRef_UniFormat_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositeThermalTransmittance_optional[] = {  {&_swigt__p_CompositeThermalTransmittance_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositeThermalTransmittance_traits[] = {  {&_swigt__p_CompositeThermalTransmittance_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositeThermalTransmittance_type[] = {  {&_swigt__p_CompositeThermalTransmittance_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_optional[] = {  {&_swigt__p_CompositionType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_traits[] = {  {&_swigt__p_CompositionType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_type[] = {  {&_swigt__p_CompositionType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_optional[] = {  {&_swigt__p_ContainingBuildings_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_traits[] = {  {&_swigt__p_ContainingBuildings_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_type[] = {  {&_swigt__p_ContainingBuildings_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_optional[] = {  {&_swigt__p_ContainingSpatialStructure_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_traits[] = {  {&_swigt__p_ContainingSpatialStructure_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_type[] = {  {&_swigt__p_ContainingSpatialStructure_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_optional[] = {  {&_swigt__p_ControlElementID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_traits[] = {  {&_swigt__p_ControlElementID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_type[] = {  {&_swigt__p_ControlElementID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_optional[] = {  {&_swigt__p_ControlledBy_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_traits[] = {  {&_swigt__p_ControlledBy_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_type[] = {  {&_swigt__p_ControlledBy_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_optional[] = {  {&_swigt__p_DecimalPrecision_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_traits[] = {  {&_swigt__p_DecimalPrecision_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_type[] = {  {&_swigt__p_DecimalPrecision_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_optional[] = {  {&_swigt__p_Decomposes_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_traits[] = {  {&_swigt__p_Decomposes_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_type[] = {  {&_swigt__p_Decomposes_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForPerson_optional[] = {  {&_swigt__p_DefaultForPerson_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForPerson_traits[] = {  {&_swigt__p_DefaultForPerson_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForPerson_type[] = {  {&_swigt__p_DefaultForPerson_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForProject_optional[] = {  {&_swigt__p_DefaultForProject_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForProject_traits[] = {  {&_swigt__p_DefaultForProject_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForProject_type[] = {  {&_swigt__p_DefaultForProject_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForUnitSystem_optional[] = {  {&_swigt__p_DefaultForUnitSystem_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForUnitSystem_traits[] = {  {&_swigt__p_DefaultForUnitSystem_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForUnitSystem_type[] = {  {&_swigt__p_DefaultForUnitSystem_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_optional[] = {  {&_swigt__p_Description_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_traits[] = {  {&_swigt__p_Description_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_type[] = {  {&_swigt__p_Description_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_optional[] = {  {&_swigt__p_DockedToPort_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_traits[] = {  {&_swigt__p_DockedToPort_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_type[] = {  {&_swigt__p_DockedToPort_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_optional[] = {  {&_swigt__p_GeometricRepresentations_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_traits[] = {  {&_swigt__p_GeometricRepresentations_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_type[] = {  {&_swigt__p_GeometricRepresentations_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_optional[] = {  {&_swigt__p_HasPropertySets_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_traits[] = {  {&_swigt__p_HasPropertySets_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_type[] = {  {&_swigt__p_HasPropertySets_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_optional[] = {  {&_swigt__p_HasTemplateChanged_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_traits[] = {  {&_swigt__p_HasTemplateChanged_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_type[] = {  {&_swigt__p_HasTemplateChanged_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_optional[] = {  {&_swigt__p_HostElement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_traits[] = {  {&_swigt__p_HostElement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_type[] = {  {&_swigt__p_HostElement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_optional[] = {  {&_swigt__p_IfcGlobalID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_traits[] = {  {&_swigt__p_IfcGlobalID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_type[] = {  {&_swigt__p_IfcGlobalID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_optional[] = {  {&_swigt__p_IfcName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_traits[] = {  {&_swigt__p_IfcName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_type[] = {  {&_swigt__p_IfcName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_optional[] = {  {&_swigt__p_IsAutoGenerated_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_traits[] = {  {&_swigt__p_IsAutoGenerated_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_type[] = {  {&_swigt__p_IsAutoGenerated_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_optional[] = {  {&_swigt__p_IsTemplateObject_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_traits[] = {  {&_swigt__p_IsTemplateObject_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_type[] = {  {&_swigt__p_IsTemplateObject_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_optional[] = {  {&_swigt__p_LocalPlacementRotation_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_traits[] = {  {&_swigt__p_LocalPlacementRotation_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_type[] = {  {&_swigt__p_LocalPlacementRotation_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_optional[] = {  {&_swigt__p_LocalPlacementX_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_traits[] = {  {&_swigt__p_LocalPlacementX_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_type[] = {  {&_swigt__p_LocalPlacementX_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_optional[] = {  {&_swigt__p_LocalPlacementY_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_traits[] = {  {&_swigt__p_LocalPlacementY_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_type[] = {  {&_swigt__p_LocalPlacementY_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_optional[] = {  {&_swigt__p_LocalPlacementZ_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_traits[] = {  {&_swigt__p_LocalPlacementZ_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_type[] = {  {&_swigt__p_LocalPlacementZ_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_optional[] = {  {&_swigt__p_LongName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_traits[] = {  {&_swigt__p_LongName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_type[] = {  {&_swigt__p_LongName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MaterialList_optional[] = {  {&_swigt__p_MaterialList_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MaterialList_traits[] = {  {&_swigt__p_MaterialList_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MaterialList_type[] = {  {&_swigt__p_MaterialList_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_optional[] = {  {&_swigt__p_MemberUsedForDiagrams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_traits[] = {  {&_swigt__p_MemberUsedForDiagrams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_type[] = {  {&_swigt__p_MemberUsedForDiagrams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_optional[] = {  {&_swigt__p_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_traits[] = {  {&_swigt__p_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_type[] = {  {&_swigt__p_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_optional[] = {  {&_swigt__p_NevronSchematicLayout_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_traits[] = {  {&_swigt__p_NevronSchematicLayout_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_type[] = {  {&_swigt__p_NevronSchematicLayout_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_optional[] = {  {&_swigt__p_ObjectCreationParams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_traits[] = {  {&_swigt__p_ObjectCreationParams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_type[] = {  {&_swigt__p_ObjectCreationParams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_optional[] = {  {&_swigt__p_ObjectIndex_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_traits[] = {  {&_swigt__p_ObjectIndex_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_type[] = {  {&_swigt__p_ObjectIndex_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_optional[] = {  {&_swigt__p_ObjectName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_traits[] = {  {&_swigt__p_ObjectName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_type[] = {  {&_swigt__p_ObjectName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_optional[] = {  {&_swigt__p_ObjectOwnerHistory_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_traits[] = {  {&_swigt__p_ObjectOwnerHistory_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_type[] = {  {&_swigt__p_ObjectOwnerHistory_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_optional[] = {  {&_swigt__p_ObjectType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_traits[] = {  {&_swigt__p_ObjectType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_type[] = {  {&_swigt__p_ObjectType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpeningFilledByWindow_optional[] = {  {&_swigt__p_OpeningFilledByWindow_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpeningFilledByWindow_traits[] = {  {&_swigt__p_OpeningFilledByWindow_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpeningFilledByWindow_type[] = {  {&_swigt__p_OpeningFilledByWindow_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OverallHeight_optional[] = {  {&_swigt__p_OverallHeight_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OverallHeight_traits[] = {  {&_swigt__p_OverallHeight_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OverallHeight_type[] = {  {&_swigt__p_OverallHeight_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OverallWidth_optional[] = {  {&_swigt__p_OverallWidth_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OverallWidth_traits[] = {  {&_swigt__p_OverallWidth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OverallWidth_type[] = {  {&_swigt__p_OverallWidth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_optional[] = {  {&_swigt__p_ParentGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_traits[] = {  {&_swigt__p_ParentGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_type[] = {  {&_swigt__p_ParentGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_optional[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_traits[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_type[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_optional[] = {  {&_swigt__p_Placement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_traits[] = {  {&_swigt__p_Placement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_type[] = {  {&_swigt__p_Placement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_optional[] = {  {&_swigt__p_ProfileName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_traits[] = {  {&_swigt__p_ProfileName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_type[] = {  {&_swigt__p_ProfileName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_optional[] = {  {&_swigt__p_ProfileType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_traits[] = {  {&_swigt__p_ProfileType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_type[] = {  {&_swigt__p_ProfileType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefId_traits[] = {  {&_swigt__p_RefId_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefId_type[] = {  {&_swigt__p_RefId_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_optional[] = {  {&_swigt__p_RepresentationContext_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_traits[] = {  {&_swigt__p_RepresentationContext_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_type[] = {  {&_swigt__p_RepresentationContext_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_optional[] = {  {&_swigt__p_RepresentationIdentifier_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_traits[] = {  {&_swigt__p_RepresentationIdentifier_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_type[] = {  {&_swigt__p_RepresentationIdentifier_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_optional[] = {  {&_swigt__p_RepresentationItems_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_traits[] = {  {&_swigt__p_RepresentationItems_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_type[] = {  {&_swigt__p_RepresentationItems_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_optional[] = {  {&_swigt__p_RepresentationType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_traits[] = {  {&_swigt__p_RepresentationType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_type[] = {  {&_swigt__p_RepresentationType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Representation_optional[] = {  {&_swigt__p_Representation_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Representation_traits[] = {  {&_swigt__p_Representation_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Representation_type[] = {  {&_swigt__p_Representation_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_optional[] = {  {&_swigt__p_SelectedPropertyGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_traits[] = {  {&_swigt__p_SelectedPropertyGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_type[] = {  {&_swigt__p_SelectedPropertyGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_optional[] = {  {&_swigt__p_SimModelName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_traits[] = {  {&_swigt__p_SimModelName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_type[] = {  {&_swigt__p_SimModelName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_optional[] = {  {&_swigt__p_SimModelSubtype_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_traits[] = {  {&_swigt__p_SimModelSubtype_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_type[] = {  {&_swigt__p_SimModelSubtype_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_optional[] = {  {&_swigt__p_SimModelType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_traits[] = {  {&_swigt__p_SimModelType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_type[] = {  {&_swigt__p_SimModelType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_optional[] = {  {&_swigt__p_SimUniqueID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_traits[] = {  {&_swigt__p_SimUniqueID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_type[] = {  {&_swigt__p_SimUniqueID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_optional[] = {  {&_swigt__p_SourceLibraryEntryID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_traits[] = {  {&_swigt__p_SourceLibraryEntryID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_type[] = {  {&_swigt__p_SourceLibraryEntryID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_optional[] = {  {&_swigt__p_SourceLibraryEntryRef_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_traits[] = {  {&_swigt__p_SourceLibraryEntryRef_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_type[] = {  {&_swigt__p_SourceLibraryEntryRef_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_optional[] = {  {&_swigt__p_SourceModelObjectType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_traits[] = {  {&_swigt__p_SourceModelObjectType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_type[] = {  {&_swigt__p_SourceModelObjectType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_optional[] = {  {&_swigt__p_SourceModelSchema_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_traits[] = {  {&_swigt__p_SourceModelSchema_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_type[] = {  {&_swigt__p_SourceModelSchema_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_Name_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_Name_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_Name_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type[] = {  {&_swigt__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_Name_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_Name_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_Name_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type[] = {  {&_swigt__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_optional[] = {  {&_swigt__p_Tag_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_traits[] = {  {&_swigt__p_Tag_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_type[] = {  {&_swigt__p_Tag_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_optional[] = {  {&_swigt__p_TemplatesForMembers_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_traits[] = {  {&_swigt__p_TemplatesForMembers_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_type[] = {  {&_swigt__p_TemplatesForMembers_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_optional[] = {  {&_swigt__p_TypeDefCreationParams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_traits[] = {  {&_swigt__p_TypeDefCreationParams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_type[] = {  {&_swigt__p_TypeDefCreationParams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_optional[] = {  {&_swigt__p_TypeDefinition_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_traits[] = {  {&_swigt__p_TypeDefinition_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_type[] = {  {&_swigt__p_TypeDefinition_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_optional[] = {  {&_swigt__p_UnitType_String_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_traits[] = {  {&_swigt__p_UnitType_String_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_type[] = {  {&_swigt__p_UnitType_String_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VoidsInWindow_optional[] = {  {&_swigt__p_VoidsInWindow_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VoidsInWindow_traits[] = {  {&_swigt__p_VoidsInWindow_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VoidsInWindow_type[] = {  {&_swigt__p_VoidsInWindow_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowArea_optional[] = {  {&_swigt__p_WindowArea_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowArea_traits[] = {  {&_swigt__p_WindowArea_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowArea_type[] = {  {&_swigt__p_WindowArea_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowConstructionType_optional[] = {  {&_swigt__p_WindowConstructionType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowConstructionType_traits[] = {  {&_swigt__p_WindowConstructionType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowConstructionType_type[] = {  {&_swigt__p_WindowConstructionType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowFrameDepth_optional[] = {  {&_swigt__p_WindowFrameDepth_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowFrameDepth_traits[] = {  {&_swigt__p_WindowFrameDepth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowFrameDepth_type[] = {  {&_swigt__p_WindowFrameDepth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowFrameThickness_optional[] = {  {&_swigt__p_WindowFrameThickness_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowFrameThickness_traits[] = {  {&_swigt__p_WindowFrameThickness_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowFrameThickness_type[] = {  {&_swigt__p_WindowFrameThickness_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowHeight_optional[] = {  {&_swigt__p_WindowHeight_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowHeight_traits[] = {  {&_swigt__p_WindowHeight_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowHeight_type[] = {  {&_swigt__p_WindowHeight_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowIsExternal_optional[] = {  {&_swigt__p_WindowIsExternal_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowIsExternal_traits[] = {  {&_swigt__p_WindowIsExternal_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowIsExternal_type[] = {  {&_swigt__p_WindowIsExternal_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowOperationType_optional[] = {  {&_swigt__p_WindowOperationType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowOperationType_traits[] = {  {&_swigt__p_WindowOperationType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowOperationType_type[] = {  {&_swigt__p_WindowOperationType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowPerimeter_optional[] = {  {&_swigt__p_WindowPerimeter_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowPerimeter_traits[] = {  {&_swigt__p_WindowPerimeter_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowPerimeter_type[] = {  {&_swigt__p_WindowPerimeter_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowTypeTag_optional[] = {  {&_swigt__p_WindowTypeTag_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowTypeTag_traits[] = {  {&_swigt__p_WindowTypeTag_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowTypeTag_type[] = {  {&_swigt__p_WindowTypeTag_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowWidth_optional[] = {  {&_swigt__p_WindowWidth_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowWidth_traits[] = {  {&_swigt__p_WindowWidth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WindowWidth_type[] = {  {&_swigt__p_WindowWidth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_optional[] = {  {&_swigt__p_XDirectionX_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_traits[] = {  {&_swigt__p_XDirectionX_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_type[] = {  {&_swigt__p_XDirectionX_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_optional[] = {  {&_swigt__p_XDirectionY_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_traits[] = {  {&_swigt__p_XDirectionY_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_type[] = {  {&_swigt__p_XDirectionY_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_optional[] = {  {&_swigt__p_XDirectionZ_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_traits[] = {  {&_swigt__p_XDirectionZ_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_type[] = {  {&_swigt__p_XDirectionZ_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_optional[] = {  {&_swigt__p__3dHeight_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_traits[] = {  {&_swigt__p__3dHeight_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_type[] = {  {&_swigt__p__3dHeight_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_optional[] = {  {&_swigt__p__3dLength_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_traits[] = {  {&_swigt__p__3dLength_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_type[] = {  {&_swigt__p__3dLength_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_optional[] = {  {&_swigt__p__3dWidth_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_traits[] = {  {&_swigt__p__3dWidth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_type[] = {  {&_swigt__p__3dWidth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_const_iterator[] = {  {&_swigt__p_base_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_iterator[] = {  {&_swigt__p_base_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_sequence[] = {  {&_swigt__p_base_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool_convertible[] = {  {&_swigt__p_bool_convertible, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_iterator[] = {  {&_swigt__p_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reverse_iterator[] = {  {&_swigt__p_const_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dom_content_optional[] = {  {&_swigt__p_dom_content_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator[] = {  {&_swigt__p_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ptr[] = {  {&_swigt__p_ptr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reverse_iterator[] = {  {&_swigt__p_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__BuildingModel__SimWindow[] = {  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, 0, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__BuildingModel__SimWindow, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__BuildingModel__SimWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__BuildingModel__SimWindow_Window[] = {  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, 0, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__BuildingModel__SimWindow_Window, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__BuildingModel__SimWindow_Window_Default[] = {  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__Model__SimModel[] = {  {&_swigt__p_schema__simxml__Model__SimModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SelectedPropertyGroups[] = {  {&_swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimBuildingElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, 0, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimBuildingElement, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, _p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimBuildingElement, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimBuildingElement, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionControlElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__MepModel__SimFlowEnergyConverter[] = {{&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionFlowElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimElement, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, _p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimGroup[] = {{&_swigt__p_schema__simxml__SimModelCore__SimGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimSpatialStructureElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObject[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, _p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectTypeDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectDefinition[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, _p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimTemplate[] = {{&_swigt__p_schema__simxml__SimModelCore__SimTemplate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimNode[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimAppDefault[] = {{&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimActorDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimArrayParams[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeometry__SimProfileDefinition[] = {{&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimPort[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimPropertySetDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimUnitType[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectPlacement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem[] = {{&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimResourceObject[] = {{&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimFeatureElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem[] = {{&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimBldgModelParams[] = {{&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRepresentationItem[] = {{&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRepresentation[] = {{&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRoot[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, _p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, _p_schema__simxml__BuildingModel__SimWindowTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, _p_schema__simxml__SimModelCore__SimTemplateTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, _p_schema__simxml__ResourcesGeneral__SimNodeTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, _p_schema__simxml__SimModelCore__SimAppDefaultTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, _p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, _p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, _p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, _p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, _p_schema__simxml__SimModelCore__SimResourceObjectTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, _p_schema__simxml__SimModelCore__SimFeatureElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, _p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRoot, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, _p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, _p_schema__simxml__SimModelCore__SimRepresentationTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__doubleList[] = {  {&_swigt__p_schema__simxml__SimModelCore__doubleList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__integerList[] = {  {&_swigt__p_schema__simxml__SimModelCore__integerList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__logical[] = {  {&_swigt__p_schema__simxml__SimModelCore__logical, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_self_[] = {  {&_swigt__p_self_, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_T_t[] = {  {&_swigt__p_std__auto_ptrT_T_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t[] = {  {&_swigt__p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__idref_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__idref_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__idrefs_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__idrefs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__string_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type[] = {  {&_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMElement[] = {  {&_swigt__p_xercesc__DOMElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree___type[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, _p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow, _p_schema__simxml__BuildingModel__SimWindowTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window_Default, _p_schema__simxml__BuildingModel__SimWindow_Window_DefaultTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__BuildingModel__SimWindow_Window, _p_schema__simxml__BuildingModel__SimWindow_WindowTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, _p_schema__simxml__SimModelCore__SimTemplateTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, _p_schema__simxml__ResourcesGeneral__SimNodeTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, _p_schema__simxml__SimModelCore__SimAppDefaultTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, _p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, _p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, _p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, _p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, _p_schema__simxml__SimModelCore__SimResourceObjectTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, _p_schema__simxml__SimModelCore__SimFeatureElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, _p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_xsd__cxx__tree___type, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, _p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRoot, _p_schema__simxml__SimModelCore__SimRootTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, _p_schema__simxml__SimModelCore__SimRepresentationTo_p_xsd__cxx__tree___type, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__boundsT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__boundsT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__bufferT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__bufferT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__content_order[] = {  {&_swigt__p_xsd__cxx__tree__content_order, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__diagnosticsT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__diagnosticsT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__duplicate_idT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__duplicate_idT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t[] = {  {&_swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__errorT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__errorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__exceptionT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__exceptionT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_attributeT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_attributeT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_elementT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_elementT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_text_contentT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_text_contentT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__flags[] = {  {&_swigt__p_xsd__cxx__tree__flags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t[] = {  {&_swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t[] = {  {&_swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__no_prefix_mappingT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__no_type_infoT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__no_type_infoT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t[] = {  {&_swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__not_derivedT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__not_derivedT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_bool_true_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_bool_true_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_double_true_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_double_true_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__parsingT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__parsingT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__propertiesT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__propertiesT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequence_common[] = {  {&_swigt__p_xsd__cxx__tree__sequence_common, 0, 0, 0},  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, _p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_tTo_p_xsd__cxx__tree__sequence_common, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__severity[] = {  {&_swigt__p_xsd__cxx__tree__severity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__time_zone[] = {  {&_swigt__p_xsd__cxx__tree__time_zone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t[] = {  {&_swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__unexpected_elementT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__unexpected_elementT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__unexpected_enumeratorT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__user_data_keys_templateT_0_t[] = {  {&_swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__xml__error_handlerT_char_t[] = {  {&_swigt__p_xsd__cxx__xml__error_handlerT_char_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ApplicableOccurrence_optional,
  _swigc__p_ApplicableOccurrence_traits,
  _swigc__p_ApplicableOccurrence_type,
  _swigc__p_AssignedToFlowElement_optional,
  _swigc__p_AssignedToFlowElement_traits,
  _swigc__p_AssignedToFlowElement_type,
  _swigc__p_AssignedToGroups_optional,
  _swigc__p_AssignedToGroups_traits,
  _swigc__p_AssignedToGroups_type,
  _swigc__p_ChangeFromTemplate_optional,
  _swigc__p_ChangeFromTemplate_traits,
  _swigc__p_ChangeFromTemplate_type,
  _swigc__p_ClassRef_UniFormat_optional,
  _swigc__p_ClassRef_UniFormat_traits,
  _swigc__p_ClassRef_UniFormat_type,
  _swigc__p_CompositeThermalTransmittance_optional,
  _swigc__p_CompositeThermalTransmittance_traits,
  _swigc__p_CompositeThermalTransmittance_type,
  _swigc__p_CompositionType_optional,
  _swigc__p_CompositionType_traits,
  _swigc__p_CompositionType_type,
  _swigc__p_ContainingBuildings_optional,
  _swigc__p_ContainingBuildings_traits,
  _swigc__p_ContainingBuildings_type,
  _swigc__p_ContainingSpatialStructure_optional,
  _swigc__p_ContainingSpatialStructure_traits,
  _swigc__p_ContainingSpatialStructure_type,
  _swigc__p_ControlElementID_optional,
  _swigc__p_ControlElementID_traits,
  _swigc__p_ControlElementID_type,
  _swigc__p_ControlledBy_optional,
  _swigc__p_ControlledBy_traits,
  _swigc__p_ControlledBy_type,
  _swigc__p_DecimalPrecision_optional,
  _swigc__p_DecimalPrecision_traits,
  _swigc__p_DecimalPrecision_type,
  _swigc__p_Decomposes_optional,
  _swigc__p_Decomposes_traits,
  _swigc__p_Decomposes_type,
  _swigc__p_DefaultForPerson_optional,
  _swigc__p_DefaultForPerson_traits,
  _swigc__p_DefaultForPerson_type,
  _swigc__p_DefaultForProject_optional,
  _swigc__p_DefaultForProject_traits,
  _swigc__p_DefaultForProject_type,
  _swigc__p_DefaultForUnitSystem_optional,
  _swigc__p_DefaultForUnitSystem_traits,
  _swigc__p_DefaultForUnitSystem_type,
  _swigc__p_Description_optional,
  _swigc__p_Description_traits,
  _swigc__p_Description_type,
  _swigc__p_DockedToPort_optional,
  _swigc__p_DockedToPort_traits,
  _swigc__p_DockedToPort_type,
  _swigc__p_GeometricRepresentations_optional,
  _swigc__p_GeometricRepresentations_traits,
  _swigc__p_GeometricRepresentations_type,
  _swigc__p_HasPropertySets_optional,
  _swigc__p_HasPropertySets_traits,
  _swigc__p_HasPropertySets_type,
  _swigc__p_HasTemplateChanged_optional,
  _swigc__p_HasTemplateChanged_traits,
  _swigc__p_HasTemplateChanged_type,
  _swigc__p_HostElement_optional,
  _swigc__p_HostElement_traits,
  _swigc__p_HostElement_type,
  _swigc__p_IfcGlobalID_optional,
  _swigc__p_IfcGlobalID_traits,
  _swigc__p_IfcGlobalID_type,
  _swigc__p_IfcName_optional,
  _swigc__p_IfcName_traits,
  _swigc__p_IfcName_type,
  _swigc__p_IsAutoGenerated_optional,
  _swigc__p_IsAutoGenerated_traits,
  _swigc__p_IsAutoGenerated_type,
  _swigc__p_IsTemplateObject_optional,
  _swigc__p_IsTemplateObject_traits,
  _swigc__p_IsTemplateObject_type,
  _swigc__p_LocalPlacementRotation_optional,
  _swigc__p_LocalPlacementRotation_traits,
  _swigc__p_LocalPlacementRotation_type,
  _swigc__p_LocalPlacementX_optional,
  _swigc__p_LocalPlacementX_traits,
  _swigc__p_LocalPlacementX_type,
  _swigc__p_LocalPlacementY_optional,
  _swigc__p_LocalPlacementY_traits,
  _swigc__p_LocalPlacementY_type,
  _swigc__p_LocalPlacementZ_optional,
  _swigc__p_LocalPlacementZ_traits,
  _swigc__p_LocalPlacementZ_type,
  _swigc__p_LongName_optional,
  _swigc__p_LongName_traits,
  _swigc__p_LongName_type,
  _swigc__p_MaterialList_optional,
  _swigc__p_MaterialList_traits,
  _swigc__p_MaterialList_type,
  _swigc__p_MemberUsedForDiagrams_optional,
  _swigc__p_MemberUsedForDiagrams_traits,
  _swigc__p_MemberUsedForDiagrams_type,
  _swigc__p_Name_optional,
  _swigc__p_Name_traits,
  _swigc__p_Name_type,
  _swigc__p_NevronSchematicLayout_optional,
  _swigc__p_NevronSchematicLayout_traits,
  _swigc__p_NevronSchematicLayout_type,
  _swigc__p_ObjectCreationParams_optional,
  _swigc__p_ObjectCreationParams_traits,
  _swigc__p_ObjectCreationParams_type,
  _swigc__p_ObjectIndex_optional,
  _swigc__p_ObjectIndex_traits,
  _swigc__p_ObjectIndex_type,
  _swigc__p_ObjectName_optional,
  _swigc__p_ObjectName_traits,
  _swigc__p_ObjectName_type,
  _swigc__p_ObjectOwnerHistory_optional,
  _swigc__p_ObjectOwnerHistory_traits,
  _swigc__p_ObjectOwnerHistory_type,
  _swigc__p_ObjectType_optional,
  _swigc__p_ObjectType_traits,
  _swigc__p_ObjectType_type,
  _swigc__p_OpeningFilledByWindow_optional,
  _swigc__p_OpeningFilledByWindow_traits,
  _swigc__p_OpeningFilledByWindow_type,
  _swigc__p_OverallHeight_optional,
  _swigc__p_OverallHeight_traits,
  _swigc__p_OverallHeight_type,
  _swigc__p_OverallWidth_optional,
  _swigc__p_OverallWidth_traits,
  _swigc__p_OverallWidth_type,
  _swigc__p_ParentGroups_optional,
  _swigc__p_ParentGroups_traits,
  _swigc__p_ParentGroups_type,
  _swigc__p_PlacementRelToContainingTypeDef_optional,
  _swigc__p_PlacementRelToContainingTypeDef_traits,
  _swigc__p_PlacementRelToContainingTypeDef_type,
  _swigc__p_Placement_optional,
  _swigc__p_Placement_traits,
  _swigc__p_Placement_type,
  _swigc__p_ProfileName_optional,
  _swigc__p_ProfileName_traits,
  _swigc__p_ProfileName_type,
  _swigc__p_ProfileType_optional,
  _swigc__p_ProfileType_traits,
  _swigc__p_ProfileType_type,
  _swigc__p_RefId_traits,
  _swigc__p_RefId_type,
  _swigc__p_RepresentationContext_optional,
  _swigc__p_RepresentationContext_traits,
  _swigc__p_RepresentationContext_type,
  _swigc__p_RepresentationIdentifier_optional,
  _swigc__p_RepresentationIdentifier_traits,
  _swigc__p_RepresentationIdentifier_type,
  _swigc__p_RepresentationItems_optional,
  _swigc__p_RepresentationItems_traits,
  _swigc__p_RepresentationItems_type,
  _swigc__p_RepresentationType_optional,
  _swigc__p_RepresentationType_traits,
  _swigc__p_RepresentationType_type,
  _swigc__p_Representation_optional,
  _swigc__p_Representation_traits,
  _swigc__p_Representation_type,
  _swigc__p_SelectedPropertyGroups_optional,
  _swigc__p_SelectedPropertyGroups_traits,
  _swigc__p_SelectedPropertyGroups_type,
  _swigc__p_SimModelName_optional,
  _swigc__p_SimModelName_traits,
  _swigc__p_SimModelName_type,
  _swigc__p_SimModelSubtype_optional,
  _swigc__p_SimModelSubtype_traits,
  _swigc__p_SimModelSubtype_type,
  _swigc__p_SimModelType_optional,
  _swigc__p_SimModelType_traits,
  _swigc__p_SimModelType_type,
  _swigc__p_SimUniqueID_optional,
  _swigc__p_SimUniqueID_traits,
  _swigc__p_SimUniqueID_type,
  _swigc__p_SourceLibraryEntryID_optional,
  _swigc__p_SourceLibraryEntryID_traits,
  _swigc__p_SourceLibraryEntryID_type,
  _swigc__p_SourceLibraryEntryRef_optional,
  _swigc__p_SourceLibraryEntryRef_traits,
  _swigc__p_SourceLibraryEntryRef_type,
  _swigc__p_SourceModelObjectType_optional,
  _swigc__p_SourceModelObjectType_traits,
  _swigc__p_SourceModelObjectType_type,
  _swigc__p_SourceModelSchema_optional,
  _swigc__p_SourceModelSchema_traits,
  _swigc__p_SourceModelSchema_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserClngEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserFloorEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_CentralAirDiffuserWindowEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterStableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterUnstableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterVertWallsNearHeaterEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_ConvectZoneHeaterWindowsEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolChilledClngEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolHeatedFloorEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolStableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolUnstableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolVertWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_FloorHeatClngCoolWindowEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircStableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircUnstableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircVertWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MechZoneFanCircWindowEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyAssistingFlowonWallsEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeBouyancyOppossingFlowonWallsEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableClngEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeStableFloorEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableClngEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeUnstableFloorEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_MixedRegimeWindowEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_Name_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyStableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyUnstableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyVertWallUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_SimpleBouyancyWindowsEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingHeatedWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingStableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingUnstableTiltedEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingVertWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_AdaptModelSelects_WallPanelHeatingWindowEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirChangeRateCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfAirSystemVolFlowRateDivbyZonePerimLengthCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_optional,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_traits,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_HcFuncOfTempDiffDivbyHeightCurveName_type,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_Name_optional,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_Name_traits,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_Name_type,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_optional,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_traits,
  _swigc__p_SurfConvectAlg_Inside_UserCurve_ReferenceTempforConvectHeatTransfer_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_Name_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectStableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectUnstableHorzEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_NaturalConvectVertWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectHorzRoOfUserCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectLeewardVertWallEqtnUserCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardEqtnVertWallUserCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_optional,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_traits,
  _swigc__p_SurfConvectAlg_Outside_AdaptModelSelects_WindConvectWindwardVertWallEqtnSrc_type,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HfFuncOfWindSpeedCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_optional,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_traits,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_HnFuncOfTempDiffDivbyHeightCurveName_type,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_Name_optional,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_Name_traits,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_Name_type,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_optional,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_traits,
  _swigc__p_SurfConvectAlg_Outside_UserCurve_WindSpeedTypeforCurve_type,
  _swigc__p_Tag_optional,
  _swigc__p_Tag_traits,
  _swigc__p_Tag_type,
  _swigc__p_TemplatesForMembers_optional,
  _swigc__p_TemplatesForMembers_traits,
  _swigc__p_TemplatesForMembers_type,
  _swigc__p_TypeDefCreationParams_optional,
  _swigc__p_TypeDefCreationParams_traits,
  _swigc__p_TypeDefCreationParams_type,
  _swigc__p_TypeDefinition_optional,
  _swigc__p_TypeDefinition_traits,
  _swigc__p_TypeDefinition_type,
  _swigc__p_UnitType_String_optional,
  _swigc__p_UnitType_String_traits,
  _swigc__p_UnitType_String_type,
  _swigc__p_VoidsInWindow_optional,
  _swigc__p_VoidsInWindow_traits,
  _swigc__p_VoidsInWindow_type,
  _swigc__p_WindowArea_optional,
  _swigc__p_WindowArea_traits,
  _swigc__p_WindowArea_type,
  _swigc__p_WindowConstructionType_optional,
  _swigc__p_WindowConstructionType_traits,
  _swigc__p_WindowConstructionType_type,
  _swigc__p_WindowFrameDepth_optional,
  _swigc__p_WindowFrameDepth_traits,
  _swigc__p_WindowFrameDepth_type,
  _swigc__p_WindowFrameThickness_optional,
  _swigc__p_WindowFrameThickness_traits,
  _swigc__p_WindowFrameThickness_type,
  _swigc__p_WindowHeight_optional,
  _swigc__p_WindowHeight_traits,
  _swigc__p_WindowHeight_type,
  _swigc__p_WindowIsExternal_optional,
  _swigc__p_WindowIsExternal_traits,
  _swigc__p_WindowIsExternal_type,
  _swigc__p_WindowOperationType_optional,
  _swigc__p_WindowOperationType_traits,
  _swigc__p_WindowOperationType_type,
  _swigc__p_WindowPerimeter_optional,
  _swigc__p_WindowPerimeter_traits,
  _swigc__p_WindowPerimeter_type,
  _swigc__p_WindowTypeTag_optional,
  _swigc__p_WindowTypeTag_traits,
  _swigc__p_WindowTypeTag_type,
  _swigc__p_WindowWidth_optional,
  _swigc__p_WindowWidth_traits,
  _swigc__p_WindowWidth_type,
  _swigc__p_XDirectionX_optional,
  _swigc__p_XDirectionX_traits,
  _swigc__p_XDirectionX_type,
  _swigc__p_XDirectionY_optional,
  _swigc__p_XDirectionY_traits,
  _swigc__p_XDirectionY_type,
  _swigc__p_XDirectionZ_optional,
  _swigc__p_XDirectionZ_traits,
  _swigc__p_XDirectionZ_type,
  _swigc__p__3dHeight_optional,
  _swigc__p__3dHeight_traits,
  _swigc__p__3dHeight_type,
  _swigc__p__3dLength_optional,
  _swigc__p__3dLength_traits,
  _swigc__p__3dLength_type,
  _swigc__p__3dWidth_optional,
  _swigc__p__3dWidth_traits,
  _swigc__p__3dWidth_type,
  _swigc__p_allocator_type,
  _swigc__p_base_const_iterator,
  _swigc__p_base_iterator,
  _swigc__p_base_sequence,
  _swigc__p_bool,
  _swigc__p_bool_convertible,
  _swigc__p_char,
  _swigc__p_const_iterator,
  _swigc__p_const_reverse_iterator,
  _swigc__p_difference_type,
  _swigc__p_dom_content_optional,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_iterator,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__const_reverse_iterator_schema__simxml__BuildingModel__SimWindow_Window_Default_const_t,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__reverse_iterator___schema__simxml__BuildingModel__SimWindow_Window_Default_t,
  _swigc__p_long_long,
  _swigc__p_ptr,
  _swigc__p_reverse_iterator,
  _swigc__p_schema__simxml__BuildingModel__SimWindow,
  _swigc__p_schema__simxml__BuildingModel__SimWindow_Window,
  _swigc__p_schema__simxml__BuildingModel__SimWindow_Window_Default,
  _swigc__p_schema__simxml__MepModel__SimFlowEnergyConverter,
  _swigc__p_schema__simxml__Model__SimModel,
  _swigc__p_schema__simxml__ResourcesGeneral__SimArrayParams,
  _swigc__p_schema__simxml__ResourcesGeneral__SimNode,
  _swigc__p_schema__simxml__ResourcesGeneral__SimPort,
  _swigc__p_schema__simxml__ResourcesGeneral__SimUnitType,
  _swigc__p_schema__simxml__ResourcesGeometry__SimProfileDefinition,
  _swigc__p_schema__simxml__SimModelCore__SelectedPropertyGroups,
  _swigc__p_schema__simxml__SimModelCore__SimActorDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimAppDefault,
  _swigc__p_schema__simxml__SimModelCore__SimBldgModelParams,
  _swigc__p_schema__simxml__SimModelCore__SimBuildingElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionControlElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionFlowElement,
  _swigc__p_schema__simxml__SimModelCore__SimElement,
  _swigc__p_schema__simxml__SimModelCore__SimFeatureElement,
  _swigc__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__SimGroup,
  _swigc__p_schema__simxml__SimModelCore__SimObject,
  _swigc__p_schema__simxml__SimModelCore__SimObjectDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimObjectPlacement,
  _swigc__p_schema__simxml__SimModelCore__SimObjectTypeDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimPropertySetDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimRepresentation,
  _swigc__p_schema__simxml__SimModelCore__SimRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__SimResourceObject,
  _swigc__p_schema__simxml__SimModelCore__SimRoot,
  _swigc__p_schema__simxml__SimModelCore__SimSpatialStructureElement,
  _swigc__p_schema__simxml__SimModelCore__SimTemplate,
  _swigc__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__doubleList,
  _swigc__p_schema__simxml__SimModelCore__integerList,
  _swigc__p_schema__simxml__SimModelCore__logical,
  _swigc__p_self_,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_size_type,
  _swigc__p_std__auto_ptrT_T_t,
  _swigc__p_std__auto_ptrT_schema__simxml__BuildingModel__SimWindow_Window_Default_t,
  _swigc__p_std__auto_ptrT_xml_schema__idref_t,
  _swigc__p_std__auto_ptrT_xml_schema__idrefs_t,
  _swigc__p_std__auto_ptrT_xml_schema__string_t,
  _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_xercesc__DOMElement,
  _swigc__p_xsd__cxx__tree___type,
  _swigc__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__boundsT_char_t,
  _swigc__p_xsd__cxx__tree__bufferT_char_t,
  _swigc__p_xsd__cxx__tree__content_order,
  _swigc__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__diagnosticsT_char_t,
  _swigc__p_xsd__cxx__tree__duplicate_idT_char_t,
  _swigc__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t,
  _swigc__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__errorT_char_t,
  _swigc__p_xsd__cxx__tree__exceptionT_char_t,
  _swigc__p_xsd__cxx__tree__expected_attributeT_char_t,
  _swigc__p_xsd__cxx__tree__expected_elementT_char_t,
  _swigc__p_xsd__cxx__tree__expected_text_contentT_char_t,
  _swigc__p_xsd__cxx__tree__flags,
  _swigc__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,
  _swigc__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t,
  _swigc__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t,
  _swigc__p_xsd__cxx__tree__no_prefix_mappingT_char_t,
  _swigc__p_xsd__cxx__tree__no_type_infoT_char_t,
  _swigc__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t,
  _swigc__p_xsd__cxx__tree__not_derivedT_char_t,
  _swigc__p_xsd__cxx__tree__optionalT_bool_true_t,
  _swigc__p_xsd__cxx__tree__optionalT_double_true_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,
  _swigc__p_xsd__cxx__tree__parsingT_char_t,
  _swigc__p_xsd__cxx__tree__propertiesT_char_t,
  _swigc__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequence_common,
  _swigc__p_xsd__cxx__tree__severity,
  _swigc__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__time_zone,
  _swigc__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t,
  _swigc__p_xsd__cxx__tree__unexpected_elementT_char_t,
  _swigc__p_xsd__cxx__tree__unexpected_enumeratorT_char_t,
  _swigc__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__user_data_keys_templateT_0_t,
  _swigc__p_xsd__cxx__xml__error_handlerT_char_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

