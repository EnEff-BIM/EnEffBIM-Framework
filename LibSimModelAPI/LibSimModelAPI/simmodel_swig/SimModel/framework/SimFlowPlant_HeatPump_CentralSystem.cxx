// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_HeatPump_CentralSystem.hxx"

#include "simflowplant_chillheatmodulesperfcompobjecttype_1_20.hxx"

#include "integerlist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_HeatPump_CentralSystem
      // 

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_Name_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_Name () const
      {
        return this->SimFlowPlant_Name_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_Name_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_Name ()
      {
        return this->SimFlowPlant_Name_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_Name (const SimFlowPlant_Name_type& x)
      {
        this->SimFlowPlant_Name_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_Name (const SimFlowPlant_Name_optional& x)
      {
        this->SimFlowPlant_Name_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_Name (::std::auto_ptr< SimFlowPlant_Name_type > x)
      {
        this->SimFlowPlant_Name_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ControlMethod_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ControlMethod () const
      {
        return this->SimFlowPlant_ControlMethod_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ControlMethod_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ControlMethod ()
      {
        return this->SimFlowPlant_ControlMethod_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ControlMethod (const SimFlowPlant_ControlMethod_type& x)
      {
        this->SimFlowPlant_ControlMethod_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ControlMethod (const SimFlowPlant_ControlMethod_optional& x)
      {
        this->SimFlowPlant_ControlMethod_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ControlMethod (::std::auto_ptr< SimFlowPlant_ControlMethod_type > x)
      {
        this->SimFlowPlant_ControlMethod_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_CoolLoopInletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopInletNodeName () const
      {
        return this->SimFlowPlant_CoolLoopInletNodeName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_CoolLoopInletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopInletNodeName ()
      {
        return this->SimFlowPlant_CoolLoopInletNodeName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopInletNodeName (const SimFlowPlant_CoolLoopInletNodeName_type& x)
      {
        this->SimFlowPlant_CoolLoopInletNodeName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopInletNodeName (const SimFlowPlant_CoolLoopInletNodeName_optional& x)
      {
        this->SimFlowPlant_CoolLoopInletNodeName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopInletNodeName (::std::auto_ptr< SimFlowPlant_CoolLoopInletNodeName_type > x)
      {
        this->SimFlowPlant_CoolLoopInletNodeName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_CoolLoopOutletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopOutletNodeName () const
      {
        return this->SimFlowPlant_CoolLoopOutletNodeName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_CoolLoopOutletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopOutletNodeName ()
      {
        return this->SimFlowPlant_CoolLoopOutletNodeName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopOutletNodeName (const SimFlowPlant_CoolLoopOutletNodeName_type& x)
      {
        this->SimFlowPlant_CoolLoopOutletNodeName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopOutletNodeName (const SimFlowPlant_CoolLoopOutletNodeName_optional& x)
      {
        this->SimFlowPlant_CoolLoopOutletNodeName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_CoolLoopOutletNodeName (::std::auto_ptr< SimFlowPlant_CoolLoopOutletNodeName_type > x)
      {
        this->SimFlowPlant_CoolLoopOutletNodeName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_SourceLoopInletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopInletNodeName () const
      {
        return this->SimFlowPlant_SourceLoopInletNodeName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_SourceLoopInletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopInletNodeName ()
      {
        return this->SimFlowPlant_SourceLoopInletNodeName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopInletNodeName (const SimFlowPlant_SourceLoopInletNodeName_type& x)
      {
        this->SimFlowPlant_SourceLoopInletNodeName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopInletNodeName (const SimFlowPlant_SourceLoopInletNodeName_optional& x)
      {
        this->SimFlowPlant_SourceLoopInletNodeName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopInletNodeName (::std::auto_ptr< SimFlowPlant_SourceLoopInletNodeName_type > x)
      {
        this->SimFlowPlant_SourceLoopInletNodeName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_SourceLoopOutletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopOutletNodeName () const
      {
        return this->SimFlowPlant_SourceLoopOutletNodeName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_SourceLoopOutletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopOutletNodeName ()
      {
        return this->SimFlowPlant_SourceLoopOutletNodeName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopOutletNodeName (const SimFlowPlant_SourceLoopOutletNodeName_type& x)
      {
        this->SimFlowPlant_SourceLoopOutletNodeName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopOutletNodeName (const SimFlowPlant_SourceLoopOutletNodeName_optional& x)
      {
        this->SimFlowPlant_SourceLoopOutletNodeName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_SourceLoopOutletNodeName (::std::auto_ptr< SimFlowPlant_SourceLoopOutletNodeName_type > x)
      {
        this->SimFlowPlant_SourceLoopOutletNodeName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_HeatLoopInletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopInletNodeName () const
      {
        return this->SimFlowPlant_HeatLoopInletNodeName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_HeatLoopInletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopInletNodeName ()
      {
        return this->SimFlowPlant_HeatLoopInletNodeName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopInletNodeName (const SimFlowPlant_HeatLoopInletNodeName_type& x)
      {
        this->SimFlowPlant_HeatLoopInletNodeName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopInletNodeName (const SimFlowPlant_HeatLoopInletNodeName_optional& x)
      {
        this->SimFlowPlant_HeatLoopInletNodeName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopInletNodeName (::std::auto_ptr< SimFlowPlant_HeatLoopInletNodeName_type > x)
      {
        this->SimFlowPlant_HeatLoopInletNodeName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_HeatLoopOutletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopOutletNodeName () const
      {
        return this->SimFlowPlant_HeatLoopOutletNodeName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_HeatLoopOutletNodeName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopOutletNodeName ()
      {
        return this->SimFlowPlant_HeatLoopOutletNodeName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopOutletNodeName (const SimFlowPlant_HeatLoopOutletNodeName_type& x)
      {
        this->SimFlowPlant_HeatLoopOutletNodeName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopOutletNodeName (const SimFlowPlant_HeatLoopOutletNodeName_optional& x)
      {
        this->SimFlowPlant_HeatLoopOutletNodeName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatLoopOutletNodeName (::std::auto_ptr< SimFlowPlant_HeatLoopOutletNodeName_type > x)
      {
        this->SimFlowPlant_HeatLoopOutletNodeName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_AncilPwr_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncilPwr () const
      {
        return this->SimFlowPlant_AncilPwr_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_AncilPwr_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncilPwr ()
      {
        return this->SimFlowPlant_AncilPwr_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncilPwr (const SimFlowPlant_AncilPwr_type& x)
      {
        this->SimFlowPlant_AncilPwr_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncilPwr (const SimFlowPlant_AncilPwr_optional& x)
      {
        this->SimFlowPlant_AncilPwr_ = x;
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_AncillaryOperSchedName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncillaryOperSchedName () const
      {
        return this->SimFlowPlant_AncillaryOperSchedName_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_AncillaryOperSchedName_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncillaryOperSchedName ()
      {
        return this->SimFlowPlant_AncillaryOperSchedName_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncillaryOperSchedName (const SimFlowPlant_AncillaryOperSchedName_type& x)
      {
        this->SimFlowPlant_AncillaryOperSchedName_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncillaryOperSchedName (const SimFlowPlant_AncillaryOperSchedName_optional& x)
      {
        this->SimFlowPlant_AncillaryOperSchedName_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_AncillaryOperSchedName (::std::auto_ptr< SimFlowPlant_AncillaryOperSchedName_type > x)
      {
        this->SimFlowPlant_AncillaryOperSchedName_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20 () const
      {
        return this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20 ()
      {
        return this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20 (const SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_type& x)
      {
        this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20 (const SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_optional& x)
      {
        this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20 (::std::auto_ptr< SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_type > x)
      {
        this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ChillHeatModulesPerfCompName_1_20__optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompName_1_20_ () const
      {
        return this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ChillHeatModulesPerfCompName_1_20__optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompName_1_20_ ()
      {
        return this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompName_1_20_ (const SimFlowPlant_ChillHeatModulesPerfCompName_1_20__type& x)
      {
        this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompName_1_20_ (const SimFlowPlant_ChillHeatModulesPerfCompName_1_20__optional& x)
      {
        this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesPerfCompName_1_20_ (::std::auto_ptr< SimFlowPlant_ChillHeatModulesPerfCompName_1_20__type > x)
      {
        this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ChillHeatModulesControlSchedName_1_20_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesControlSchedName_1_20 () const
      {
        return this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_ChillHeatModulesControlSchedName_1_20_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesControlSchedName_1_20 ()
      {
        return this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesControlSchedName_1_20 (const SimFlowPlant_ChillHeatModulesControlSchedName_1_20_type& x)
      {
        this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesControlSchedName_1_20 (const SimFlowPlant_ChillHeatModulesControlSchedName_1_20_optional& x)
      {
        this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_ChillHeatModulesControlSchedName_1_20 (::std::auto_ptr< SimFlowPlant_ChillHeatModulesControlSchedName_1_20_type > x)
      {
        this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_.set (x);
      }

      const SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_NumofChillHeatModules_1_20_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_NumofChillHeatModules_1_20 () const
      {
        return this->SimFlowPlant_NumofChillHeatModules_1_20_;
      }

      SimFlowPlant_HeatPump_CentralSystem::SimFlowPlant_NumofChillHeatModules_1_20_optional& SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_NumofChillHeatModules_1_20 ()
      {
        return this->SimFlowPlant_NumofChillHeatModules_1_20_;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_NumofChillHeatModules_1_20 (const SimFlowPlant_NumofChillHeatModules_1_20_type& x)
      {
        this->SimFlowPlant_NumofChillHeatModules_1_20_.set (x);
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_NumofChillHeatModules_1_20 (const SimFlowPlant_NumofChillHeatModules_1_20_optional& x)
      {
        this->SimFlowPlant_NumofChillHeatModules_1_20_ = x;
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_NumofChillHeatModules_1_20 (::std::auto_ptr< SimFlowPlant_NumofChillHeatModules_1_20_type > x)
      {
        this->SimFlowPlant_NumofChillHeatModules_1_20_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_HeatPump_CentralSystem
      //

      SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatPump_CentralSystem ()
      : ::schema::simxml::MepModel::SimFlowPlant_HeatPump (),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_ControlMethod_ (this),
        SimFlowPlant_CoolLoopInletNodeName_ (this),
        SimFlowPlant_CoolLoopOutletNodeName_ (this),
        SimFlowPlant_SourceLoopInletNodeName_ (this),
        SimFlowPlant_SourceLoopOutletNodeName_ (this),
        SimFlowPlant_HeatLoopInletNodeName_ (this),
        SimFlowPlant_HeatLoopOutletNodeName_ (this),
        SimFlowPlant_AncilPwr_ (this),
        SimFlowPlant_AncillaryOperSchedName_ (this),
        SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_ (this),
        SimFlowPlant_ChillHeatModulesPerfCompName_1_20__ (this),
        SimFlowPlant_ChillHeatModulesControlSchedName_1_20_ (this),
        SimFlowPlant_NumofChillHeatModules_1_20_ (this)
      {
      }

      SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatPump_CentralSystem (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowPlant_HeatPump (RefId),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_ControlMethod_ (this),
        SimFlowPlant_CoolLoopInletNodeName_ (this),
        SimFlowPlant_CoolLoopOutletNodeName_ (this),
        SimFlowPlant_SourceLoopInletNodeName_ (this),
        SimFlowPlant_SourceLoopOutletNodeName_ (this),
        SimFlowPlant_HeatLoopInletNodeName_ (this),
        SimFlowPlant_HeatLoopOutletNodeName_ (this),
        SimFlowPlant_AncilPwr_ (this),
        SimFlowPlant_AncillaryOperSchedName_ (this),
        SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_ (this),
        SimFlowPlant_ChillHeatModulesPerfCompName_1_20__ (this),
        SimFlowPlant_ChillHeatModulesControlSchedName_1_20_ (this),
        SimFlowPlant_NumofChillHeatModules_1_20_ (this)
      {
      }

      SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatPump_CentralSystem (const SimFlowPlant_HeatPump_CentralSystem& x,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_HeatPump (x, f, c),
        SimFlowPlant_Name_ (x.SimFlowPlant_Name_, f, this),
        SimFlowPlant_ControlMethod_ (x.SimFlowPlant_ControlMethod_, f, this),
        SimFlowPlant_CoolLoopInletNodeName_ (x.SimFlowPlant_CoolLoopInletNodeName_, f, this),
        SimFlowPlant_CoolLoopOutletNodeName_ (x.SimFlowPlant_CoolLoopOutletNodeName_, f, this),
        SimFlowPlant_SourceLoopInletNodeName_ (x.SimFlowPlant_SourceLoopInletNodeName_, f, this),
        SimFlowPlant_SourceLoopOutletNodeName_ (x.SimFlowPlant_SourceLoopOutletNodeName_, f, this),
        SimFlowPlant_HeatLoopInletNodeName_ (x.SimFlowPlant_HeatLoopInletNodeName_, f, this),
        SimFlowPlant_HeatLoopOutletNodeName_ (x.SimFlowPlant_HeatLoopOutletNodeName_, f, this),
        SimFlowPlant_AncilPwr_ (x.SimFlowPlant_AncilPwr_, f, this),
        SimFlowPlant_AncillaryOperSchedName_ (x.SimFlowPlant_AncillaryOperSchedName_, f, this),
        SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_ (x.SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_, f, this),
        SimFlowPlant_ChillHeatModulesPerfCompName_1_20__ (x.SimFlowPlant_ChillHeatModulesPerfCompName_1_20__, f, this),
        SimFlowPlant_ChillHeatModulesControlSchedName_1_20_ (x.SimFlowPlant_ChillHeatModulesControlSchedName_1_20_, f, this),
        SimFlowPlant_NumofChillHeatModules_1_20_ (x.SimFlowPlant_NumofChillHeatModules_1_20_, f, this)
      {
      }

      SimFlowPlant_HeatPump_CentralSystem::
      SimFlowPlant_HeatPump_CentralSystem (const ::xercesc::DOMElement& e,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_HeatPump (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_ControlMethod_ (this),
        SimFlowPlant_CoolLoopInletNodeName_ (this),
        SimFlowPlant_CoolLoopOutletNodeName_ (this),
        SimFlowPlant_SourceLoopInletNodeName_ (this),
        SimFlowPlant_SourceLoopOutletNodeName_ (this),
        SimFlowPlant_HeatLoopInletNodeName_ (this),
        SimFlowPlant_HeatLoopOutletNodeName_ (this),
        SimFlowPlant_AncilPwr_ (this),
        SimFlowPlant_AncillaryOperSchedName_ (this),
        SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_ (this),
        SimFlowPlant_ChillHeatModulesPerfCompName_1_20__ (this),
        SimFlowPlant_ChillHeatModulesControlSchedName_1_20_ (this),
        SimFlowPlant_NumofChillHeatModules_1_20_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_HeatPump_CentralSystem::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowPlant_HeatPump::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_Name
          //
          if (n.name () == "SimFlowPlant_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_Name_type > r (
              SimFlowPlant_Name_traits::create (i, f, this));

            if (!this->SimFlowPlant_Name_)
            {
              this->SimFlowPlant_Name_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ControlMethod
          //
          if (n.name () == "SimFlowPlant_ControlMethod" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ControlMethod_type > r (
              SimFlowPlant_ControlMethod_traits::create (i, f, this));

            if (!this->SimFlowPlant_ControlMethod_)
            {
              this->SimFlowPlant_ControlMethod_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CoolLoopInletNodeName
          //
          if (n.name () == "SimFlowPlant_CoolLoopInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CoolLoopInletNodeName_type > r (
              SimFlowPlant_CoolLoopInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_CoolLoopInletNodeName_)
            {
              this->SimFlowPlant_CoolLoopInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CoolLoopOutletNodeName
          //
          if (n.name () == "SimFlowPlant_CoolLoopOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CoolLoopOutletNodeName_type > r (
              SimFlowPlant_CoolLoopOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_CoolLoopOutletNodeName_)
            {
              this->SimFlowPlant_CoolLoopOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_SourceLoopInletNodeName
          //
          if (n.name () == "SimFlowPlant_SourceLoopInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_SourceLoopInletNodeName_type > r (
              SimFlowPlant_SourceLoopInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_SourceLoopInletNodeName_)
            {
              this->SimFlowPlant_SourceLoopInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_SourceLoopOutletNodeName
          //
          if (n.name () == "SimFlowPlant_SourceLoopOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_SourceLoopOutletNodeName_type > r (
              SimFlowPlant_SourceLoopOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_SourceLoopOutletNodeName_)
            {
              this->SimFlowPlant_SourceLoopOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatLoopInletNodeName
          //
          if (n.name () == "SimFlowPlant_HeatLoopInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatLoopInletNodeName_type > r (
              SimFlowPlant_HeatLoopInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatLoopInletNodeName_)
            {
              this->SimFlowPlant_HeatLoopInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatLoopOutletNodeName
          //
          if (n.name () == "SimFlowPlant_HeatLoopOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatLoopOutletNodeName_type > r (
              SimFlowPlant_HeatLoopOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatLoopOutletNodeName_)
            {
              this->SimFlowPlant_HeatLoopOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_AncilPwr
          //
          if (n.name () == "SimFlowPlant_AncilPwr" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_AncilPwr_)
            {
              this->SimFlowPlant_AncilPwr_.set (SimFlowPlant_AncilPwr_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_AncillaryOperSchedName
          //
          if (n.name () == "SimFlowPlant_AncillaryOperSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_AncillaryOperSchedName_type > r (
              SimFlowPlant_AncillaryOperSchedName_traits::create (i, f, this));

            if (!this->SimFlowPlant_AncillaryOperSchedName_)
            {
              this->SimFlowPlant_AncillaryOperSchedName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20
          //
          if (n.name () == "SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_type > r (
              SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_traits::create (i, f, this));

            if (!this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_)
            {
              this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ChillHeatModulesPerfCompName_1_20_
          //
          if (n.name () == "SimFlowPlant_ChillHeatModulesPerfCompName_1_20_" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ChillHeatModulesPerfCompName_1_20__type > r (
              SimFlowPlant_ChillHeatModulesPerfCompName_1_20__traits::create (i, f, this));

            if (!this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__)
            {
              this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__.set (r);
              continue;
            }
          }

          // SimFlowPlant_ChillHeatModulesControlSchedName_1_20
          //
          if (n.name () == "SimFlowPlant_ChillHeatModulesControlSchedName_1_20" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ChillHeatModulesControlSchedName_1_20_type > r (
              SimFlowPlant_ChillHeatModulesControlSchedName_1_20_traits::create (i, f, this));

            if (!this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_)
            {
              this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_.set (r);
              continue;
            }
          }

          // SimFlowPlant_NumofChillHeatModules_1_20
          //
          if (n.name () == "SimFlowPlant_NumofChillHeatModules_1_20" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_NumofChillHeatModules_1_20_type > r (
              SimFlowPlant_NumofChillHeatModules_1_20_traits::create (i, f, this));

            if (!this->SimFlowPlant_NumofChillHeatModules_1_20_)
            {
              this->SimFlowPlant_NumofChillHeatModules_1_20_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_HeatPump_CentralSystem* SimFlowPlant_HeatPump_CentralSystem::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_HeatPump_CentralSystem (*this, f, c);
      }

      SimFlowPlant_HeatPump_CentralSystem& SimFlowPlant_HeatPump_CentralSystem::
      operator= (const SimFlowPlant_HeatPump_CentralSystem& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowPlant_HeatPump& > (*this) = x;
          this->SimFlowPlant_Name_ = x.SimFlowPlant_Name_;
          this->SimFlowPlant_ControlMethod_ = x.SimFlowPlant_ControlMethod_;
          this->SimFlowPlant_CoolLoopInletNodeName_ = x.SimFlowPlant_CoolLoopInletNodeName_;
          this->SimFlowPlant_CoolLoopOutletNodeName_ = x.SimFlowPlant_CoolLoopOutletNodeName_;
          this->SimFlowPlant_SourceLoopInletNodeName_ = x.SimFlowPlant_SourceLoopInletNodeName_;
          this->SimFlowPlant_SourceLoopOutletNodeName_ = x.SimFlowPlant_SourceLoopOutletNodeName_;
          this->SimFlowPlant_HeatLoopInletNodeName_ = x.SimFlowPlant_HeatLoopInletNodeName_;
          this->SimFlowPlant_HeatLoopOutletNodeName_ = x.SimFlowPlant_HeatLoopOutletNodeName_;
          this->SimFlowPlant_AncilPwr_ = x.SimFlowPlant_AncilPwr_;
          this->SimFlowPlant_AncillaryOperSchedName_ = x.SimFlowPlant_AncillaryOperSchedName_;
          this->SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_ = x.SimFlowPlant_ChillHeatModulesPerfCompObjectType_1_20_;
          this->SimFlowPlant_ChillHeatModulesPerfCompName_1_20__ = x.SimFlowPlant_ChillHeatModulesPerfCompName_1_20__;
          this->SimFlowPlant_ChillHeatModulesControlSchedName_1_20_ = x.SimFlowPlant_ChillHeatModulesControlSchedName_1_20_;
          this->SimFlowPlant_NumofChillHeatModules_1_20_ = x.SimFlowPlant_NumofChillHeatModules_1_20_;
        }

        return *this;
      }

      SimFlowPlant_HeatPump_CentralSystem::
      ~SimFlowPlant_HeatPump_CentralSystem ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

