// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimMaterial_EquivGlazingMaterial_Glazing.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimMaterial_EquivGlazingMaterial_Glazing
      // 

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_OpticalDataType_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_OpticalDataType () const
      {
        return this->SimMaterial_OpticalDataType_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_OpticalDataType_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_OpticalDataType ()
      {
        return this->SimMaterial_OpticalDataType_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_OpticalDataType (const SimMaterial_OpticalDataType_type& x)
      {
        this->SimMaterial_OpticalDataType_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_OpticalDataType (const SimMaterial_OpticalDataType_optional& x)
      {
        this->SimMaterial_OpticalDataType_ = x;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_OpticalDataType (::std::auto_ptr< SimMaterial_OpticalDataType_type > x)
      {
        this->SimMaterial_OpticalDataType_.set (x);
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_WndwGlassSpectralDataSetName_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_WndwGlassSpectralDataSetName () const
      {
        return this->SimMaterial_WndwGlassSpectralDataSetName_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_WndwGlassSpectralDataSetName_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_WndwGlassSpectralDataSetName ()
      {
        return this->SimMaterial_WndwGlassSpectralDataSetName_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_WndwGlassSpectralDataSetName (const SimMaterial_WndwGlassSpectralDataSetName_type& x)
      {
        this->SimMaterial_WndwGlassSpectralDataSetName_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_WndwGlassSpectralDataSetName (const SimMaterial_WndwGlassSpectralDataSetName_optional& x)
      {
        this->SimMaterial_WndwGlassSpectralDataSetName_ = x;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_WndwGlassSpectralDataSetName (::std::auto_ptr< SimMaterial_WndwGlassSpectralDataSetName_type > x)
      {
        this->SimMaterial_WndwGlassSpectralDataSetName_.set (x);
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarTrans () const
      {
        return this->SimMaterial_FrontSideBeam_BeamSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarTrans ()
      {
        return this->SimMaterial_FrontSideBeam_BeamSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarTrans (const SimMaterial_FrontSideBeam_BeamSolarTrans_type& x)
      {
        this->SimMaterial_FrontSideBeam_BeamSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarTrans (const SimMaterial_FrontSideBeam_BeamSolarTrans_optional& x)
      {
        this->SimMaterial_FrontSideBeam_BeamSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarTrans () const
      {
        return this->SimMaterial_BackSideBeam_BeamSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarTrans ()
      {
        return this->SimMaterial_BackSideBeam_BeamSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarTrans (const SimMaterial_BackSideBeam_BeamSolarTrans_type& x)
      {
        this->SimMaterial_BackSideBeam_BeamSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarTrans (const SimMaterial_BackSideBeam_BeamSolarTrans_optional& x)
      {
        this->SimMaterial_BackSideBeam_BeamSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarReflect () const
      {
        return this->SimMaterial_FrontSideBeam_BeamSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarReflect ()
      {
        return this->SimMaterial_FrontSideBeam_BeamSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarReflect (const SimMaterial_FrontSideBeam_BeamSolarReflect_type& x)
      {
        this->SimMaterial_FrontSideBeam_BeamSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamSolarReflect (const SimMaterial_FrontSideBeam_BeamSolarReflect_optional& x)
      {
        this->SimMaterial_FrontSideBeam_BeamSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarReflect () const
      {
        return this->SimMaterial_BackSideBeam_BeamSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarReflect ()
      {
        return this->SimMaterial_BackSideBeam_BeamSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarReflect (const SimMaterial_BackSideBeam_BeamSolarReflect_type& x)
      {
        this->SimMaterial_BackSideBeam_BeamSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamSolarReflect (const SimMaterial_BackSideBeam_BeamSolarReflect_optional& x)
      {
        this->SimMaterial_BackSideBeam_BeamSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarTrans () const
      {
        return this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarTrans ()
      {
        return this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarTrans (const SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_type& x)
      {
        this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarTrans (const SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_optional& x)
      {
        this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarTrans () const
      {
        return this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarTrans ()
      {
        return this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarTrans (const SimMaterial_BackSideBeam_BeamVisibleSolarTrans_type& x)
      {
        this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarTrans (const SimMaterial_BackSideBeam_BeamVisibleSolarTrans_optional& x)
      {
        this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarReflect () const
      {
        return this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarReflect ()
      {
        return this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarReflect (const SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_type& x)
      {
        this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_BeamVisibleSolarReflect (const SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_optional& x)
      {
        this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarReflect () const
      {
        return this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_BeamVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarReflect ()
      {
        return this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarReflect (const SimMaterial_BackSideBeam_BeamVisibleSolarReflect_type& x)
      {
        this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_BeamVisibleSolarReflect (const SimMaterial_BackSideBeam_BeamVisibleSolarReflect_optional& x)
      {
        this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarTrans () const
      {
        return this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarTrans ()
      {
        return this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarTrans (const SimMaterial_FrontSideBeam_DiffuseSolarTrans_type& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarTrans (const SimMaterial_FrontSideBeam_DiffuseSolarTrans_optional& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarTrans () const
      {
        return this->SimMaterial_BackSideBeam_DiffuseSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarTrans ()
      {
        return this->SimMaterial_BackSideBeam_DiffuseSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarTrans (const SimMaterial_BackSideBeam_DiffuseSolarTrans_type& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarTrans (const SimMaterial_BackSideBeam_DiffuseSolarTrans_optional& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarReflect () const
      {
        return this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarReflect ()
      {
        return this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarReflect (const SimMaterial_FrontSideBeam_DiffuseSolarReflect_type& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseSolarReflect (const SimMaterial_FrontSideBeam_DiffuseSolarReflect_optional& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarReflect () const
      {
        return this->SimMaterial_BackSideBeam_DiffuseSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarReflect ()
      {
        return this->SimMaterial_BackSideBeam_DiffuseSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarReflect (const SimMaterial_BackSideBeam_DiffuseSolarReflect_type& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseSolarReflect (const SimMaterial_BackSideBeam_DiffuseSolarReflect_optional& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans () const
      {
        return this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans ()
      {
        return this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans (const SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_type& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans (const SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_optional& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans () const
      {
        return this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans ()
      {
        return this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans (const SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_type& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans (const SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_optional& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect () const
      {
        return this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect ()
      {
        return this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect (const SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_type& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect (const SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_optional& x)
      {
        this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect () const
      {
        return this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect ()
      {
        return this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect (const SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_type& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect (const SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_optional& x)
      {
        this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_Diffuse_DiffuseSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseSolarTrans () const
      {
        return this->SimMaterial_Diffuse_DiffuseSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_Diffuse_DiffuseSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseSolarTrans ()
      {
        return this->SimMaterial_Diffuse_DiffuseSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseSolarTrans (const SimMaterial_Diffuse_DiffuseSolarTrans_type& x)
      {
        this->SimMaterial_Diffuse_DiffuseSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseSolarTrans (const SimMaterial_Diffuse_DiffuseSolarTrans_optional& x)
      {
        this->SimMaterial_Diffuse_DiffuseSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseSolarReflect () const
      {
        return this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseSolarReflect ()
      {
        return this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseSolarReflect (const SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_type& x)
      {
        this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseSolarReflect (const SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_optional& x)
      {
        this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideDiffuse_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseSolarReflect () const
      {
        return this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideDiffuse_DiffuseSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseSolarReflect ()
      {
        return this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseSolarReflect (const SimMaterial_BackSideDiffuse_DiffuseSolarReflect_type& x)
      {
        this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseSolarReflect (const SimMaterial_BackSideDiffuse_DiffuseSolarReflect_optional& x)
      {
        this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_Diffuse_DiffuseVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseVisibleSolarTrans () const
      {
        return this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_Diffuse_DiffuseVisibleSolarTrans_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseVisibleSolarTrans ()
      {
        return this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseVisibleSolarTrans (const SimMaterial_Diffuse_DiffuseVisibleSolarTrans_type& x)
      {
        this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_Diffuse_DiffuseVisibleSolarTrans (const SimMaterial_Diffuse_DiffuseVisibleSolarTrans_optional& x)
      {
        this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect () const
      {
        return this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect ()
      {
        return this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect (const SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_type& x)
      {
        this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect (const SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_optional& x)
      {
        this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect () const
      {
        return this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect ()
      {
        return this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect (const SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_type& x)
      {
        this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect (const SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_optional& x)
      {
        this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_InfraredTrans_FrontAndBack_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_InfraredTrans_FrontAndBack () const
      {
        return this->SimMaterial_InfraredTrans_FrontAndBack_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_InfraredTrans_FrontAndBack_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_InfraredTrans_FrontAndBack ()
      {
        return this->SimMaterial_InfraredTrans_FrontAndBack_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_InfraredTrans_FrontAndBack (const SimMaterial_InfraredTrans_FrontAndBack_type& x)
      {
        this->SimMaterial_InfraredTrans_FrontAndBack_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_InfraredTrans_FrontAndBack (const SimMaterial_InfraredTrans_FrontAndBack_optional& x)
      {
        this->SimMaterial_InfraredTrans_FrontAndBack_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideInfraredEmissivity_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideInfraredEmissivity () const
      {
        return this->SimMaterial_FrontSideInfraredEmissivity_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_FrontSideInfraredEmissivity_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideInfraredEmissivity ()
      {
        return this->SimMaterial_FrontSideInfraredEmissivity_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideInfraredEmissivity (const SimMaterial_FrontSideInfraredEmissivity_type& x)
      {
        this->SimMaterial_FrontSideInfraredEmissivity_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_FrontSideInfraredEmissivity (const SimMaterial_FrontSideInfraredEmissivity_optional& x)
      {
        this->SimMaterial_FrontSideInfraredEmissivity_ = x;
      }

      const SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideInfraredEmissivity_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideInfraredEmissivity () const
      {
        return this->SimMaterial_BackSideInfraredEmissivity_;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::SimMaterial_BackSideInfraredEmissivity_optional& SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideInfraredEmissivity ()
      {
        return this->SimMaterial_BackSideInfraredEmissivity_;
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideInfraredEmissivity (const SimMaterial_BackSideInfraredEmissivity_type& x)
      {
        this->SimMaterial_BackSideInfraredEmissivity_.set (x);
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_BackSideInfraredEmissivity (const SimMaterial_BackSideInfraredEmissivity_optional& x)
      {
        this->SimMaterial_BackSideInfraredEmissivity_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimMaterial_EquivGlazingMaterial_Glazing
      //

      SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_EquivGlazingMaterial_Glazing ()
      : ::schema::simxml::ResourcesGeneral::SimMaterial_EquivGlazingMaterial (),
        SimMaterial_OpticalDataType_ (this),
        SimMaterial_WndwGlassSpectralDataSetName_ (this),
        SimMaterial_FrontSideBeam_BeamSolarTrans_ (this),
        SimMaterial_BackSideBeam_BeamSolarTrans_ (this),
        SimMaterial_FrontSideBeam_BeamSolarReflect_ (this),
        SimMaterial_BackSideBeam_BeamSolarReflect_ (this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_ (this),
        SimMaterial_BackSideBeam_BeamVisibleSolarTrans_ (this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_ (this),
        SimMaterial_BackSideBeam_BeamVisibleSolarReflect_ (this),
        SimMaterial_FrontSideBeam_DiffuseSolarTrans_ (this),
        SimMaterial_BackSideBeam_DiffuseSolarTrans_ (this),
        SimMaterial_FrontSideBeam_DiffuseSolarReflect_ (this),
        SimMaterial_BackSideBeam_DiffuseSolarReflect_ (this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_Diffuse_DiffuseSolarTrans_ (this),
        SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_ (this),
        SimMaterial_BackSideDiffuse_DiffuseSolarReflect_ (this),
        SimMaterial_Diffuse_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_InfraredTrans_FrontAndBack_ (this),
        SimMaterial_FrontSideInfraredEmissivity_ (this),
        SimMaterial_BackSideInfraredEmissivity_ (this)
      {
      }

      SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_EquivGlazingMaterial_Glazing (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimMaterial_EquivGlazingMaterial (RefId),
        SimMaterial_OpticalDataType_ (this),
        SimMaterial_WndwGlassSpectralDataSetName_ (this),
        SimMaterial_FrontSideBeam_BeamSolarTrans_ (this),
        SimMaterial_BackSideBeam_BeamSolarTrans_ (this),
        SimMaterial_FrontSideBeam_BeamSolarReflect_ (this),
        SimMaterial_BackSideBeam_BeamSolarReflect_ (this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_ (this),
        SimMaterial_BackSideBeam_BeamVisibleSolarTrans_ (this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_ (this),
        SimMaterial_BackSideBeam_BeamVisibleSolarReflect_ (this),
        SimMaterial_FrontSideBeam_DiffuseSolarTrans_ (this),
        SimMaterial_BackSideBeam_DiffuseSolarTrans_ (this),
        SimMaterial_FrontSideBeam_DiffuseSolarReflect_ (this),
        SimMaterial_BackSideBeam_DiffuseSolarReflect_ (this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_Diffuse_DiffuseSolarTrans_ (this),
        SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_ (this),
        SimMaterial_BackSideDiffuse_DiffuseSolarReflect_ (this),
        SimMaterial_Diffuse_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_InfraredTrans_FrontAndBack_ (this),
        SimMaterial_FrontSideInfraredEmissivity_ (this),
        SimMaterial_BackSideInfraredEmissivity_ (this)
      {
      }

      SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_EquivGlazingMaterial_Glazing (const SimMaterial_EquivGlazingMaterial_Glazing& x,
                                                ::xml_schema::flags f,
                                                ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimMaterial_EquivGlazingMaterial (x, f, c),
        SimMaterial_OpticalDataType_ (x.SimMaterial_OpticalDataType_, f, this),
        SimMaterial_WndwGlassSpectralDataSetName_ (x.SimMaterial_WndwGlassSpectralDataSetName_, f, this),
        SimMaterial_FrontSideBeam_BeamSolarTrans_ (x.SimMaterial_FrontSideBeam_BeamSolarTrans_, f, this),
        SimMaterial_BackSideBeam_BeamSolarTrans_ (x.SimMaterial_BackSideBeam_BeamSolarTrans_, f, this),
        SimMaterial_FrontSideBeam_BeamSolarReflect_ (x.SimMaterial_FrontSideBeam_BeamSolarReflect_, f, this),
        SimMaterial_BackSideBeam_BeamSolarReflect_ (x.SimMaterial_BackSideBeam_BeamSolarReflect_, f, this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_ (x.SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_, f, this),
        SimMaterial_BackSideBeam_BeamVisibleSolarTrans_ (x.SimMaterial_BackSideBeam_BeamVisibleSolarTrans_, f, this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_ (x.SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_, f, this),
        SimMaterial_BackSideBeam_BeamVisibleSolarReflect_ (x.SimMaterial_BackSideBeam_BeamVisibleSolarReflect_, f, this),
        SimMaterial_FrontSideBeam_DiffuseSolarTrans_ (x.SimMaterial_FrontSideBeam_DiffuseSolarTrans_, f, this),
        SimMaterial_BackSideBeam_DiffuseSolarTrans_ (x.SimMaterial_BackSideBeam_DiffuseSolarTrans_, f, this),
        SimMaterial_FrontSideBeam_DiffuseSolarReflect_ (x.SimMaterial_FrontSideBeam_DiffuseSolarReflect_, f, this),
        SimMaterial_BackSideBeam_DiffuseSolarReflect_ (x.SimMaterial_BackSideBeam_DiffuseSolarReflect_, f, this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_ (x.SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_, f, this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_ (x.SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_, f, this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_ (x.SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_, f, this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_ (x.SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_, f, this),
        SimMaterial_Diffuse_DiffuseSolarTrans_ (x.SimMaterial_Diffuse_DiffuseSolarTrans_, f, this),
        SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_ (x.SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_, f, this),
        SimMaterial_BackSideDiffuse_DiffuseSolarReflect_ (x.SimMaterial_BackSideDiffuse_DiffuseSolarReflect_, f, this),
        SimMaterial_Diffuse_DiffuseVisibleSolarTrans_ (x.SimMaterial_Diffuse_DiffuseVisibleSolarTrans_, f, this),
        SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_ (x.SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_, f, this),
        SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_ (x.SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_, f, this),
        SimMaterial_InfraredTrans_FrontAndBack_ (x.SimMaterial_InfraredTrans_FrontAndBack_, f, this),
        SimMaterial_FrontSideInfraredEmissivity_ (x.SimMaterial_FrontSideInfraredEmissivity_, f, this),
        SimMaterial_BackSideInfraredEmissivity_ (x.SimMaterial_BackSideInfraredEmissivity_, f, this)
      {
      }

      SimMaterial_EquivGlazingMaterial_Glazing::
      SimMaterial_EquivGlazingMaterial_Glazing (const ::xercesc::DOMElement& e,
                                                ::xml_schema::flags f,
                                                ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimMaterial_EquivGlazingMaterial (e, f | ::xml_schema::flags::base, c),
        SimMaterial_OpticalDataType_ (this),
        SimMaterial_WndwGlassSpectralDataSetName_ (this),
        SimMaterial_FrontSideBeam_BeamSolarTrans_ (this),
        SimMaterial_BackSideBeam_BeamSolarTrans_ (this),
        SimMaterial_FrontSideBeam_BeamSolarReflect_ (this),
        SimMaterial_BackSideBeam_BeamSolarReflect_ (this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_ (this),
        SimMaterial_BackSideBeam_BeamVisibleSolarTrans_ (this),
        SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_ (this),
        SimMaterial_BackSideBeam_BeamVisibleSolarReflect_ (this),
        SimMaterial_FrontSideBeam_DiffuseSolarTrans_ (this),
        SimMaterial_BackSideBeam_DiffuseSolarTrans_ (this),
        SimMaterial_FrontSideBeam_DiffuseSolarReflect_ (this),
        SimMaterial_BackSideBeam_DiffuseSolarReflect_ (this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_Diffuse_DiffuseSolarTrans_ (this),
        SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_ (this),
        SimMaterial_BackSideDiffuse_DiffuseSolarReflect_ (this),
        SimMaterial_Diffuse_DiffuseVisibleSolarTrans_ (this),
        SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_ (this),
        SimMaterial_InfraredTrans_FrontAndBack_ (this),
        SimMaterial_FrontSideInfraredEmissivity_ (this),
        SimMaterial_BackSideInfraredEmissivity_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimMaterial_EquivGlazingMaterial_Glazing::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimMaterial_EquivGlazingMaterial::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimMaterial_OpticalDataType
          //
          if (n.name () == "SimMaterial_OpticalDataType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMaterial_OpticalDataType_type > r (
              SimMaterial_OpticalDataType_traits::create (i, f, this));

            if (!this->SimMaterial_OpticalDataType_)
            {
              this->SimMaterial_OpticalDataType_.set (r);
              continue;
            }
          }

          // SimMaterial_WndwGlassSpectralDataSetName
          //
          if (n.name () == "SimMaterial_WndwGlassSpectralDataSetName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMaterial_WndwGlassSpectralDataSetName_type > r (
              SimMaterial_WndwGlassSpectralDataSetName_traits::create (i, f, this));

            if (!this->SimMaterial_WndwGlassSpectralDataSetName_)
            {
              this->SimMaterial_WndwGlassSpectralDataSetName_.set (r);
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_BeamSolarTrans
          //
          if (n.name () == "SimMaterial_FrontSideBeam_BeamSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_BeamSolarTrans_)
            {
              this->SimMaterial_FrontSideBeam_BeamSolarTrans_.set (SimMaterial_FrontSideBeam_BeamSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_BeamSolarTrans
          //
          if (n.name () == "SimMaterial_BackSideBeam_BeamSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_BeamSolarTrans_)
            {
              this->SimMaterial_BackSideBeam_BeamSolarTrans_.set (SimMaterial_BackSideBeam_BeamSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_BeamSolarReflect
          //
          if (n.name () == "SimMaterial_FrontSideBeam_BeamSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_BeamSolarReflect_)
            {
              this->SimMaterial_FrontSideBeam_BeamSolarReflect_.set (SimMaterial_FrontSideBeam_BeamSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_BeamSolarReflect
          //
          if (n.name () == "SimMaterial_BackSideBeam_BeamSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_BeamSolarReflect_)
            {
              this->SimMaterial_BackSideBeam_BeamSolarReflect_.set (SimMaterial_BackSideBeam_BeamSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_BeamVisibleSolarTrans
          //
          if (n.name () == "SimMaterial_FrontSideBeam_BeamVisibleSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_)
            {
              this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_.set (SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_BeamVisibleSolarTrans
          //
          if (n.name () == "SimMaterial_BackSideBeam_BeamVisibleSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_)
            {
              this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_.set (SimMaterial_BackSideBeam_BeamVisibleSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_BeamVisibleSolarReflect
          //
          if (n.name () == "SimMaterial_FrontSideBeam_BeamVisibleSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_)
            {
              this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_.set (SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_BeamVisibleSolarReflect
          //
          if (n.name () == "SimMaterial_BackSideBeam_BeamVisibleSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_)
            {
              this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_.set (SimMaterial_BackSideBeam_BeamVisibleSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_DiffuseSolarTrans
          //
          if (n.name () == "SimMaterial_FrontSideBeam_DiffuseSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_)
            {
              this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_.set (SimMaterial_FrontSideBeam_DiffuseSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_DiffuseSolarTrans
          //
          if (n.name () == "SimMaterial_BackSideBeam_DiffuseSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_DiffuseSolarTrans_)
            {
              this->SimMaterial_BackSideBeam_DiffuseSolarTrans_.set (SimMaterial_BackSideBeam_DiffuseSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_DiffuseSolarReflect
          //
          if (n.name () == "SimMaterial_FrontSideBeam_DiffuseSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_)
            {
              this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_.set (SimMaterial_FrontSideBeam_DiffuseSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_DiffuseSolarReflect
          //
          if (n.name () == "SimMaterial_BackSideBeam_DiffuseSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_DiffuseSolarReflect_)
            {
              this->SimMaterial_BackSideBeam_DiffuseSolarReflect_.set (SimMaterial_BackSideBeam_DiffuseSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans
          //
          if (n.name () == "SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_)
            {
              this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_.set (SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans
          //
          if (n.name () == "SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_)
            {
              this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_.set (SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect
          //
          if (n.name () == "SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_)
            {
              this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_.set (SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect
          //
          if (n.name () == "SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_)
            {
              this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_.set (SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_Diffuse_DiffuseSolarTrans
          //
          if (n.name () == "SimMaterial_Diffuse_DiffuseSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_Diffuse_DiffuseSolarTrans_)
            {
              this->SimMaterial_Diffuse_DiffuseSolarTrans_.set (SimMaterial_Diffuse_DiffuseSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideDiffuse_DiffuseSolarReflect
          //
          if (n.name () == "SimMaterial_FrontSideDiffuse_DiffuseSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_)
            {
              this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_.set (SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideDiffuse_DiffuseSolarReflect
          //
          if (n.name () == "SimMaterial_BackSideDiffuse_DiffuseSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_)
            {
              this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_.set (SimMaterial_BackSideDiffuse_DiffuseSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_Diffuse_DiffuseVisibleSolarTrans
          //
          if (n.name () == "SimMaterial_Diffuse_DiffuseVisibleSolarTrans" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_)
            {
              this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_.set (SimMaterial_Diffuse_DiffuseVisibleSolarTrans_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect
          //
          if (n.name () == "SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_)
            {
              this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_.set (SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect
          //
          if (n.name () == "SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_)
            {
              this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_.set (SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_InfraredTrans_FrontAndBack
          //
          if (n.name () == "SimMaterial_InfraredTrans_FrontAndBack" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_InfraredTrans_FrontAndBack_)
            {
              this->SimMaterial_InfraredTrans_FrontAndBack_.set (SimMaterial_InfraredTrans_FrontAndBack_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_FrontSideInfraredEmissivity
          //
          if (n.name () == "SimMaterial_FrontSideInfraredEmissivity" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_FrontSideInfraredEmissivity_)
            {
              this->SimMaterial_FrontSideInfraredEmissivity_.set (SimMaterial_FrontSideInfraredEmissivity_traits::create (i, f, this));
              continue;
            }
          }

          // SimMaterial_BackSideInfraredEmissivity
          //
          if (n.name () == "SimMaterial_BackSideInfraredEmissivity" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimMaterial_BackSideInfraredEmissivity_)
            {
              this->SimMaterial_BackSideInfraredEmissivity_.set (SimMaterial_BackSideInfraredEmissivity_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimMaterial_EquivGlazingMaterial_Glazing* SimMaterial_EquivGlazingMaterial_Glazing::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimMaterial_EquivGlazingMaterial_Glazing (*this, f, c);
      }

      SimMaterial_EquivGlazingMaterial_Glazing& SimMaterial_EquivGlazingMaterial_Glazing::
      operator= (const SimMaterial_EquivGlazingMaterial_Glazing& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimMaterial_EquivGlazingMaterial& > (*this) = x;
          this->SimMaterial_OpticalDataType_ = x.SimMaterial_OpticalDataType_;
          this->SimMaterial_WndwGlassSpectralDataSetName_ = x.SimMaterial_WndwGlassSpectralDataSetName_;
          this->SimMaterial_FrontSideBeam_BeamSolarTrans_ = x.SimMaterial_FrontSideBeam_BeamSolarTrans_;
          this->SimMaterial_BackSideBeam_BeamSolarTrans_ = x.SimMaterial_BackSideBeam_BeamSolarTrans_;
          this->SimMaterial_FrontSideBeam_BeamSolarReflect_ = x.SimMaterial_FrontSideBeam_BeamSolarReflect_;
          this->SimMaterial_BackSideBeam_BeamSolarReflect_ = x.SimMaterial_BackSideBeam_BeamSolarReflect_;
          this->SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_ = x.SimMaterial_FrontSideBeam_BeamVisibleSolarTrans_;
          this->SimMaterial_BackSideBeam_BeamVisibleSolarTrans_ = x.SimMaterial_BackSideBeam_BeamVisibleSolarTrans_;
          this->SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_ = x.SimMaterial_FrontSideBeam_BeamVisibleSolarReflect_;
          this->SimMaterial_BackSideBeam_BeamVisibleSolarReflect_ = x.SimMaterial_BackSideBeam_BeamVisibleSolarReflect_;
          this->SimMaterial_FrontSideBeam_DiffuseSolarTrans_ = x.SimMaterial_FrontSideBeam_DiffuseSolarTrans_;
          this->SimMaterial_BackSideBeam_DiffuseSolarTrans_ = x.SimMaterial_BackSideBeam_DiffuseSolarTrans_;
          this->SimMaterial_FrontSideBeam_DiffuseSolarReflect_ = x.SimMaterial_FrontSideBeam_DiffuseSolarReflect_;
          this->SimMaterial_BackSideBeam_DiffuseSolarReflect_ = x.SimMaterial_BackSideBeam_DiffuseSolarReflect_;
          this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_ = x.SimMaterial_FrontSideBeam_DiffuseVisibleSolarTrans_;
          this->SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_ = x.SimMaterial_BackSideBeam_DiffuseVisibleSolarTrans_;
          this->SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_ = x.SimMaterial_FrontSideBeam_DiffuseVisibleSolarReflect_;
          this->SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_ = x.SimMaterial_BackSideBeam_DiffuseVisibleSolarReflect_;
          this->SimMaterial_Diffuse_DiffuseSolarTrans_ = x.SimMaterial_Diffuse_DiffuseSolarTrans_;
          this->SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_ = x.SimMaterial_FrontSideDiffuse_DiffuseSolarReflect_;
          this->SimMaterial_BackSideDiffuse_DiffuseSolarReflect_ = x.SimMaterial_BackSideDiffuse_DiffuseSolarReflect_;
          this->SimMaterial_Diffuse_DiffuseVisibleSolarTrans_ = x.SimMaterial_Diffuse_DiffuseVisibleSolarTrans_;
          this->SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_ = x.SimMaterial_FrontSideDiffuse_DiffuseVisibleSolarReflect_;
          this->SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_ = x.SimMaterial_BackSideDiffuse_DiffuseVisibleSolarReflect_;
          this->SimMaterial_InfraredTrans_FrontAndBack_ = x.SimMaterial_InfraredTrans_FrontAndBack_;
          this->SimMaterial_FrontSideInfraredEmissivity_ = x.SimMaterial_FrontSideInfraredEmissivity_;
          this->SimMaterial_BackSideInfraredEmissivity_ = x.SimMaterial_BackSideInfraredEmissivity_;
        }

        return *this;
      }

      SimMaterial_EquivGlazingMaterial_Glazing::
      ~SimMaterial_EquivGlazingMaterial_Glazing ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

