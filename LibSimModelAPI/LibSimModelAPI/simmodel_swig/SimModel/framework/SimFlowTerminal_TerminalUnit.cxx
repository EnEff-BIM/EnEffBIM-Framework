// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowTerminal_TerminalUnit.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowTerminal_TerminalUnit
      // 

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_ZoneTermUnitName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitName () const
      {
        return this->SimFlowTerm_ZoneTermUnitName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_ZoneTermUnitName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitName ()
      {
        return this->SimFlowTerm_ZoneTermUnitName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitName (const SimFlowTerm_ZoneTermUnitName_type& x)
      {
        this->SimFlowTerm_ZoneTermUnitName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitName (const SimFlowTerm_ZoneTermUnitName_optional& x)
      {
        this->SimFlowTerm_ZoneTermUnitName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitName (::std::auto_ptr< SimFlowTerm_ZoneTermUnitName_type > x)
      {
        this->SimFlowTerm_ZoneTermUnitName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_TermUnitAvailschedule_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAvailschedule () const
      {
        return this->SimFlowTerm_TermUnitAvailschedule_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_TermUnitAvailschedule_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAvailschedule ()
      {
        return this->SimFlowTerm_TermUnitAvailschedule_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAvailschedule (const SimFlowTerm_TermUnitAvailschedule_type& x)
      {
        this->SimFlowTerm_TermUnitAvailschedule_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAvailschedule (const SimFlowTerm_TermUnitAvailschedule_optional& x)
      {
        this->SimFlowTerm_TermUnitAvailschedule_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAvailschedule (::std::auto_ptr< SimFlowTerm_TermUnitAvailschedule_type > x)
      {
        this->SimFlowTerm_TermUnitAvailschedule_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_TermUnitAirInletNodeName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirInletNodeName () const
      {
        return this->SimFlowTerm_TermUnitAirInletNodeName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_TermUnitAirInletNodeName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirInletNodeName ()
      {
        return this->SimFlowTerm_TermUnitAirInletNodeName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirInletNodeName (const SimFlowTerm_TermUnitAirInletNodeName_type& x)
      {
        this->SimFlowTerm_TermUnitAirInletNodeName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirInletNodeName (const SimFlowTerm_TermUnitAirInletNodeName_optional& x)
      {
        this->SimFlowTerm_TermUnitAirInletNodeName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirInletNodeName (::std::auto_ptr< SimFlowTerm_TermUnitAirInletNodeName_type > x)
      {
        this->SimFlowTerm_TermUnitAirInletNodeName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_TermUnitAirOutletNodeName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirOutletNodeName () const
      {
        return this->SimFlowTerm_TermUnitAirOutletNodeName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_TermUnitAirOutletNodeName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirOutletNodeName ()
      {
        return this->SimFlowTerm_TermUnitAirOutletNodeName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirOutletNodeName (const SimFlowTerm_TermUnitAirOutletNodeName_type& x)
      {
        this->SimFlowTerm_TermUnitAirOutletNodeName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirOutletNodeName (const SimFlowTerm_TermUnitAirOutletNodeName_optional& x)
      {
        this->SimFlowTerm_TermUnitAirOutletNodeName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_TermUnitAirOutletNodeName (::std::auto_ptr< SimFlowTerm_TermUnitAirOutletNodeName_type > x)
      {
        this->SimFlowTerm_TermUnitAirOutletNodeName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringCoolingOp () const
      {
        return this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringCoolingOp ()
      {
        return this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringCoolingOp (const SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_type& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringCoolingOp (const SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_optional& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded () const
      {
        return this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded ()
      {
        return this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded (const SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_type& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded (const SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_optional& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringHeatingOp () const
      {
        return this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringHeatingOp ()
      {
        return this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringHeatingOp (const SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_type& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateDuringHeatingOp (const SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_optional& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded () const
      {
        return this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded ()
      {
        return this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded (const SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_type& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded (const SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_optional& x)
      {
        this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringCoolingOp () const
      {
        return this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringCoolingOp ()
      {
        return this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringCoolingOp (const SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_type& x)
      {
        this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringCoolingOp (const SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_optional& x)
      {
        this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringHeatingOp () const
      {
        return this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringHeatingOp ()
      {
        return this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringHeatingOp (const SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_type& x)
      {
        this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateDuringHeatingOp (const SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_optional& x)
      {
        this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded () const
      {
        return this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded ()
      {
        return this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded (const SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_type& x)
      {
        this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded (const SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_optional& x)
      {
        this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanOperatModeSchedName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanOperatModeSchedName () const
      {
        return this->SimFlowTerm_SupplyAirFanOperatModeSchedName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanOperatModeSchedName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanOperatModeSchedName ()
      {
        return this->SimFlowTerm_SupplyAirFanOperatModeSchedName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanOperatModeSchedName (const SimFlowTerm_SupplyAirFanOperatModeSchedName_type& x)
      {
        this->SimFlowTerm_SupplyAirFanOperatModeSchedName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanOperatModeSchedName (const SimFlowTerm_SupplyAirFanOperatModeSchedName_optional& x)
      {
        this->SimFlowTerm_SupplyAirFanOperatModeSchedName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanOperatModeSchedName (::std::auto_ptr< SimFlowTerm_SupplyAirFanOperatModeSchedName_type > x)
      {
        this->SimFlowTerm_SupplyAirFanOperatModeSchedName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanPlacement_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanPlacement () const
      {
        return this->SimFlowTerm_SupplyAirFanPlacement_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanPlacement_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanPlacement ()
      {
        return this->SimFlowTerm_SupplyAirFanPlacement_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanPlacement (const SimFlowTerm_SupplyAirFanPlacement_type& x)
      {
        this->SimFlowTerm_SupplyAirFanPlacement_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanPlacement (const SimFlowTerm_SupplyAirFanPlacement_optional& x)
      {
        this->SimFlowTerm_SupplyAirFanPlacement_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanPlacement (::std::auto_ptr< SimFlowTerm_SupplyAirFanPlacement_type > x)
      {
        this->SimFlowTerm_SupplyAirFanPlacement_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjType () const
      {
        return this->SimFlowTerm_SupplyAirFanObjType_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjType ()
      {
        return this->SimFlowTerm_SupplyAirFanObjType_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjType (const SimFlowTerm_SupplyAirFanObjType_type& x)
      {
        this->SimFlowTerm_SupplyAirFanObjType_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjType (const SimFlowTerm_SupplyAirFanObjType_optional& x)
      {
        this->SimFlowTerm_SupplyAirFanObjType_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjType (::std::auto_ptr< SimFlowTerm_SupplyAirFanObjType_type > x)
      {
        this->SimFlowTerm_SupplyAirFanObjType_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjName () const
      {
        return this->SimFlowTerm_SupplyAirFanObjName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_SupplyAirFanObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjName ()
      {
        return this->SimFlowTerm_SupplyAirFanObjName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjName (const SimFlowTerm_SupplyAirFanObjName_type& x)
      {
        this->SimFlowTerm_SupplyAirFanObjName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjName (const SimFlowTerm_SupplyAirFanObjName_optional& x)
      {
        this->SimFlowTerm_SupplyAirFanObjName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_SupplyAirFanObjName (::std::auto_ptr< SimFlowTerm_SupplyAirFanObjName_type > x)
      {
        this->SimFlowTerm_SupplyAirFanObjName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_OutsideAirMixerObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjType () const
      {
        return this->SimFlowTerm_OutsideAirMixerObjType_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_OutsideAirMixerObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjType ()
      {
        return this->SimFlowTerm_OutsideAirMixerObjType_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjType (const SimFlowTerm_OutsideAirMixerObjType_type& x)
      {
        this->SimFlowTerm_OutsideAirMixerObjType_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjType (const SimFlowTerm_OutsideAirMixerObjType_optional& x)
      {
        this->SimFlowTerm_OutsideAirMixerObjType_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjType (::std::auto_ptr< SimFlowTerm_OutsideAirMixerObjType_type > x)
      {
        this->SimFlowTerm_OutsideAirMixerObjType_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_OutsideAirMixerObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjName () const
      {
        return this->SimFlowTerm_OutsideAirMixerObjName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_OutsideAirMixerObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjName ()
      {
        return this->SimFlowTerm_OutsideAirMixerObjName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjName (const SimFlowTerm_OutsideAirMixerObjName_type& x)
      {
        this->SimFlowTerm_OutsideAirMixerObjName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjName (const SimFlowTerm_OutsideAirMixerObjName_optional& x)
      {
        this->SimFlowTerm_OutsideAirMixerObjName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_OutsideAirMixerObjName (::std::auto_ptr< SimFlowTerm_OutsideAirMixerObjName_type > x)
      {
        this->SimFlowTerm_OutsideAirMixerObjName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_CoolingCoilObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolingCoilObjType () const
      {
        return this->SimFlowTerm_CoolingCoilObjType_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_CoolingCoilObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolingCoilObjType ()
      {
        return this->SimFlowTerm_CoolingCoilObjType_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolingCoilObjType (const SimFlowTerm_CoolingCoilObjType_type& x)
      {
        this->SimFlowTerm_CoolingCoilObjType_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolingCoilObjType (const SimFlowTerm_CoolingCoilObjType_optional& x)
      {
        this->SimFlowTerm_CoolingCoilObjType_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolingCoilObjType (::std::auto_ptr< SimFlowTerm_CoolingCoilObjType_type > x)
      {
        this->SimFlowTerm_CoolingCoilObjType_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_CoolCoilObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolCoilObjName () const
      {
        return this->SimFlowTerm_CoolCoilObjName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_CoolCoilObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolCoilObjName ()
      {
        return this->SimFlowTerm_CoolCoilObjName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolCoilObjName (const SimFlowTerm_CoolCoilObjName_type& x)
      {
        this->SimFlowTerm_CoolCoilObjName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolCoilObjName (const SimFlowTerm_CoolCoilObjName_optional& x)
      {
        this->SimFlowTerm_CoolCoilObjName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_CoolCoilObjName (::std::auto_ptr< SimFlowTerm_CoolCoilObjName_type > x)
      {
        this->SimFlowTerm_CoolCoilObjName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_HeatingCoilObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjType () const
      {
        return this->SimFlowTerm_HeatingCoilObjType_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_HeatingCoilObjType_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjType ()
      {
        return this->SimFlowTerm_HeatingCoilObjType_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjType (const SimFlowTerm_HeatingCoilObjType_type& x)
      {
        this->SimFlowTerm_HeatingCoilObjType_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjType (const SimFlowTerm_HeatingCoilObjType_optional& x)
      {
        this->SimFlowTerm_HeatingCoilObjType_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjType (::std::auto_ptr< SimFlowTerm_HeatingCoilObjType_type > x)
      {
        this->SimFlowTerm_HeatingCoilObjType_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_HeatingCoilObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjName () const
      {
        return this->SimFlowTerm_HeatingCoilObjName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_HeatingCoilObjName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjName ()
      {
        return this->SimFlowTerm_HeatingCoilObjName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjName (const SimFlowTerm_HeatingCoilObjName_type& x)
      {
        this->SimFlowTerm_HeatingCoilObjName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjName (const SimFlowTerm_HeatingCoilObjName_optional& x)
      {
        this->SimFlowTerm_HeatingCoilObjName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_HeatingCoilObjName (::std::auto_ptr< SimFlowTerm_HeatingCoilObjName_type > x)
      {
        this->SimFlowTerm_HeatingCoilObjName_.set (x);
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_ZoneTermUnitOnParasiticElec_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOnParasiticElec () const
      {
        return this->SimFlowTerm_ZoneTermUnitOnParasiticElec_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_ZoneTermUnitOnParasiticElec_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOnParasiticElec ()
      {
        return this->SimFlowTerm_ZoneTermUnitOnParasiticElec_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOnParasiticElec (const SimFlowTerm_ZoneTermUnitOnParasiticElec_type& x)
      {
        this->SimFlowTerm_ZoneTermUnitOnParasiticElec_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOnParasiticElec (const SimFlowTerm_ZoneTermUnitOnParasiticElec_optional& x)
      {
        this->SimFlowTerm_ZoneTermUnitOnParasiticElec_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_ZoneTermUnitOffParasiticElec_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOffParasiticElec () const
      {
        return this->SimFlowTerm_ZoneTermUnitOffParasiticElec_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_ZoneTermUnitOffParasiticElec_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOffParasiticElec ()
      {
        return this->SimFlowTerm_ZoneTermUnitOffParasiticElec_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOffParasiticElec (const SimFlowTerm_ZoneTermUnitOffParasiticElec_type& x)
      {
        this->SimFlowTerm_ZoneTermUnitOffParasiticElec_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_ZoneTermUnitOffParasiticElec (const SimFlowTerm_ZoneTermUnitOffParasiticElec_optional& x)
      {
        this->SimFlowTerm_ZoneTermUnitOffParasiticElec_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_RatedHeatCapSizingRatio_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_RatedHeatCapSizingRatio () const
      {
        return this->SimFlowTerm_RatedHeatCapSizingRatio_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_RatedHeatCapSizingRatio_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_RatedHeatCapSizingRatio ()
      {
        return this->SimFlowTerm_RatedHeatCapSizingRatio_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_RatedHeatCapSizingRatio (const SimFlowTerm_RatedHeatCapSizingRatio_type& x)
      {
        this->SimFlowTerm_RatedHeatCapSizingRatio_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_RatedHeatCapSizingRatio (const SimFlowTerm_RatedHeatCapSizingRatio_optional& x)
      {
        this->SimFlowTerm_RatedHeatCapSizingRatio_ = x;
      }

      const SimFlowTerminal_TerminalUnit::SimFlowTerm_AvailMngrListName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_AvailMngrListName () const
      {
        return this->SimFlowTerm_AvailMngrListName_;
      }

      SimFlowTerminal_TerminalUnit::SimFlowTerm_AvailMngrListName_optional& SimFlowTerminal_TerminalUnit::
      SimFlowTerm_AvailMngrListName ()
      {
        return this->SimFlowTerm_AvailMngrListName_;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_AvailMngrListName (const SimFlowTerm_AvailMngrListName_type& x)
      {
        this->SimFlowTerm_AvailMngrListName_.set (x);
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_AvailMngrListName (const SimFlowTerm_AvailMngrListName_optional& x)
      {
        this->SimFlowTerm_AvailMngrListName_ = x;
      }

      void SimFlowTerminal_TerminalUnit::
      SimFlowTerm_AvailMngrListName (::std::auto_ptr< SimFlowTerm_AvailMngrListName_type > x)
      {
        this->SimFlowTerm_AvailMngrListName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowTerminal_TerminalUnit
      //

      SimFlowTerminal_TerminalUnit::
      SimFlowTerminal_TerminalUnit ()
      : ::schema::simxml::MepModel::SimFlowTerminal (),
        SimFlowTerm_ZoneTermUnitName_ (this),
        SimFlowTerm_TermUnitAvailschedule_ (this),
        SimFlowTerm_TermUnitAirInletNodeName_ (this),
        SimFlowTerm_TermUnitAirOutletNodeName_ (this),
        SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_ (this),
        SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_ (this),
        SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_ (this),
        SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_ (this),
        SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_ (this),
        SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_ (this),
        SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (this),
        SimFlowTerm_SupplyAirFanOperatModeSchedName_ (this),
        SimFlowTerm_SupplyAirFanPlacement_ (this),
        SimFlowTerm_SupplyAirFanObjType_ (this),
        SimFlowTerm_SupplyAirFanObjName_ (this),
        SimFlowTerm_OutsideAirMixerObjType_ (this),
        SimFlowTerm_OutsideAirMixerObjName_ (this),
        SimFlowTerm_CoolingCoilObjType_ (this),
        SimFlowTerm_CoolCoilObjName_ (this),
        SimFlowTerm_HeatingCoilObjType_ (this),
        SimFlowTerm_HeatingCoilObjName_ (this),
        SimFlowTerm_ZoneTermUnitOnParasiticElec_ (this),
        SimFlowTerm_ZoneTermUnitOffParasiticElec_ (this),
        SimFlowTerm_RatedHeatCapSizingRatio_ (this),
        SimFlowTerm_AvailMngrListName_ (this)
      {
      }

      SimFlowTerminal_TerminalUnit::
      SimFlowTerminal_TerminalUnit (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowTerminal (RefId),
        SimFlowTerm_ZoneTermUnitName_ (this),
        SimFlowTerm_TermUnitAvailschedule_ (this),
        SimFlowTerm_TermUnitAirInletNodeName_ (this),
        SimFlowTerm_TermUnitAirOutletNodeName_ (this),
        SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_ (this),
        SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_ (this),
        SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_ (this),
        SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_ (this),
        SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_ (this),
        SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_ (this),
        SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (this),
        SimFlowTerm_SupplyAirFanOperatModeSchedName_ (this),
        SimFlowTerm_SupplyAirFanPlacement_ (this),
        SimFlowTerm_SupplyAirFanObjType_ (this),
        SimFlowTerm_SupplyAirFanObjName_ (this),
        SimFlowTerm_OutsideAirMixerObjType_ (this),
        SimFlowTerm_OutsideAirMixerObjName_ (this),
        SimFlowTerm_CoolingCoilObjType_ (this),
        SimFlowTerm_CoolCoilObjName_ (this),
        SimFlowTerm_HeatingCoilObjType_ (this),
        SimFlowTerm_HeatingCoilObjName_ (this),
        SimFlowTerm_ZoneTermUnitOnParasiticElec_ (this),
        SimFlowTerm_ZoneTermUnitOffParasiticElec_ (this),
        SimFlowTerm_RatedHeatCapSizingRatio_ (this),
        SimFlowTerm_AvailMngrListName_ (this)
      {
      }

      SimFlowTerminal_TerminalUnit::
      SimFlowTerminal_TerminalUnit (const SimFlowTerminal_TerminalUnit& x,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowTerminal (x, f, c),
        SimFlowTerm_ZoneTermUnitName_ (x.SimFlowTerm_ZoneTermUnitName_, f, this),
        SimFlowTerm_TermUnitAvailschedule_ (x.SimFlowTerm_TermUnitAvailschedule_, f, this),
        SimFlowTerm_TermUnitAirInletNodeName_ (x.SimFlowTerm_TermUnitAirInletNodeName_, f, this),
        SimFlowTerm_TermUnitAirOutletNodeName_ (x.SimFlowTerm_TermUnitAirOutletNodeName_, f, this),
        SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_ (x.SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_, f, this),
        SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_ (x.SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_, f, this),
        SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_ (x.SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_, f, this),
        SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_ (x.SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_, f, this),
        SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_ (x.SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_, f, this),
        SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_ (x.SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_, f, this),
        SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (x.SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_, f, this),
        SimFlowTerm_SupplyAirFanOperatModeSchedName_ (x.SimFlowTerm_SupplyAirFanOperatModeSchedName_, f, this),
        SimFlowTerm_SupplyAirFanPlacement_ (x.SimFlowTerm_SupplyAirFanPlacement_, f, this),
        SimFlowTerm_SupplyAirFanObjType_ (x.SimFlowTerm_SupplyAirFanObjType_, f, this),
        SimFlowTerm_SupplyAirFanObjName_ (x.SimFlowTerm_SupplyAirFanObjName_, f, this),
        SimFlowTerm_OutsideAirMixerObjType_ (x.SimFlowTerm_OutsideAirMixerObjType_, f, this),
        SimFlowTerm_OutsideAirMixerObjName_ (x.SimFlowTerm_OutsideAirMixerObjName_, f, this),
        SimFlowTerm_CoolingCoilObjType_ (x.SimFlowTerm_CoolingCoilObjType_, f, this),
        SimFlowTerm_CoolCoilObjName_ (x.SimFlowTerm_CoolCoilObjName_, f, this),
        SimFlowTerm_HeatingCoilObjType_ (x.SimFlowTerm_HeatingCoilObjType_, f, this),
        SimFlowTerm_HeatingCoilObjName_ (x.SimFlowTerm_HeatingCoilObjName_, f, this),
        SimFlowTerm_ZoneTermUnitOnParasiticElec_ (x.SimFlowTerm_ZoneTermUnitOnParasiticElec_, f, this),
        SimFlowTerm_ZoneTermUnitOffParasiticElec_ (x.SimFlowTerm_ZoneTermUnitOffParasiticElec_, f, this),
        SimFlowTerm_RatedHeatCapSizingRatio_ (x.SimFlowTerm_RatedHeatCapSizingRatio_, f, this),
        SimFlowTerm_AvailMngrListName_ (x.SimFlowTerm_AvailMngrListName_, f, this)
      {
      }

      SimFlowTerminal_TerminalUnit::
      SimFlowTerminal_TerminalUnit (const ::xercesc::DOMElement& e,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowTerminal (e, f | ::xml_schema::flags::base, c),
        SimFlowTerm_ZoneTermUnitName_ (this),
        SimFlowTerm_TermUnitAvailschedule_ (this),
        SimFlowTerm_TermUnitAirInletNodeName_ (this),
        SimFlowTerm_TermUnitAirOutletNodeName_ (this),
        SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_ (this),
        SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_ (this),
        SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_ (this),
        SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_ (this),
        SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_ (this),
        SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_ (this),
        SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ (this),
        SimFlowTerm_SupplyAirFanOperatModeSchedName_ (this),
        SimFlowTerm_SupplyAirFanPlacement_ (this),
        SimFlowTerm_SupplyAirFanObjType_ (this),
        SimFlowTerm_SupplyAirFanObjName_ (this),
        SimFlowTerm_OutsideAirMixerObjType_ (this),
        SimFlowTerm_OutsideAirMixerObjName_ (this),
        SimFlowTerm_CoolingCoilObjType_ (this),
        SimFlowTerm_CoolCoilObjName_ (this),
        SimFlowTerm_HeatingCoilObjType_ (this),
        SimFlowTerm_HeatingCoilObjName_ (this),
        SimFlowTerm_ZoneTermUnitOnParasiticElec_ (this),
        SimFlowTerm_ZoneTermUnitOffParasiticElec_ (this),
        SimFlowTerm_RatedHeatCapSizingRatio_ (this),
        SimFlowTerm_AvailMngrListName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowTerminal_TerminalUnit::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowTerminal::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowTerm_ZoneTermUnitName
          //
          if (n.name () == "SimFlowTerm_ZoneTermUnitName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_ZoneTermUnitName_type > r (
              SimFlowTerm_ZoneTermUnitName_traits::create (i, f, this));

            if (!this->SimFlowTerm_ZoneTermUnitName_)
            {
              this->SimFlowTerm_ZoneTermUnitName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_TermUnitAvailschedule
          //
          if (n.name () == "SimFlowTerm_TermUnitAvailschedule" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_TermUnitAvailschedule_type > r (
              SimFlowTerm_TermUnitAvailschedule_traits::create (i, f, this));

            if (!this->SimFlowTerm_TermUnitAvailschedule_)
            {
              this->SimFlowTerm_TermUnitAvailschedule_.set (r);
              continue;
            }
          }

          // SimFlowTerm_TermUnitAirInletNodeName
          //
          if (n.name () == "SimFlowTerm_TermUnitAirInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_TermUnitAirInletNodeName_type > r (
              SimFlowTerm_TermUnitAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_TermUnitAirInletNodeName_)
            {
              this->SimFlowTerm_TermUnitAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_TermUnitAirOutletNodeName
          //
          if (n.name () == "SimFlowTerm_TermUnitAirOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_TermUnitAirOutletNodeName_type > r (
              SimFlowTerm_TermUnitAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowTerm_TermUnitAirOutletNodeName_)
            {
              this->SimFlowTerm_TermUnitAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFlowRateDuringCoolingOp
          //
          if (n.name () == "SimFlowTerm_SupplyAirFlowRateDuringCoolingOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_)
            {
              this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_.set (SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded
          //
          if (n.name () == "SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_)
            {
              this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_.set (SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFlowRateDuringHeatingOp
          //
          if (n.name () == "SimFlowTerm_SupplyAirFlowRateDuringHeatingOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_)
            {
              this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_.set (SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded
          //
          if (n.name () == "SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_)
            {
              this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_.set (SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_OutdrAirFlowRateDuringCoolingOp
          //
          if (n.name () == "SimFlowTerm_OutdrAirFlowRateDuringCoolingOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_)
            {
              this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_.set (SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_OutdrAirFlowRateDuringHeatingOp
          //
          if (n.name () == "SimFlowTerm_OutdrAirFlowRateDuringHeatingOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_)
            {
              this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_.set (SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded
          //
          if (n.name () == "SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_)
            {
              this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_.set (SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFanOperatModeSchedName
          //
          if (n.name () == "SimFlowTerm_SupplyAirFanOperatModeSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_SupplyAirFanOperatModeSchedName_type > r (
              SimFlowTerm_SupplyAirFanOperatModeSchedName_traits::create (i, f, this));

            if (!this->SimFlowTerm_SupplyAirFanOperatModeSchedName_)
            {
              this->SimFlowTerm_SupplyAirFanOperatModeSchedName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFanPlacement
          //
          if (n.name () == "SimFlowTerm_SupplyAirFanPlacement" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_SupplyAirFanPlacement_type > r (
              SimFlowTerm_SupplyAirFanPlacement_traits::create (i, f, this));

            if (!this->SimFlowTerm_SupplyAirFanPlacement_)
            {
              this->SimFlowTerm_SupplyAirFanPlacement_.set (r);
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFanObjType
          //
          if (n.name () == "SimFlowTerm_SupplyAirFanObjType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_SupplyAirFanObjType_type > r (
              SimFlowTerm_SupplyAirFanObjType_traits::create (i, f, this));

            if (!this->SimFlowTerm_SupplyAirFanObjType_)
            {
              this->SimFlowTerm_SupplyAirFanObjType_.set (r);
              continue;
            }
          }

          // SimFlowTerm_SupplyAirFanObjName
          //
          if (n.name () == "SimFlowTerm_SupplyAirFanObjName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_SupplyAirFanObjName_type > r (
              SimFlowTerm_SupplyAirFanObjName_traits::create (i, f, this));

            if (!this->SimFlowTerm_SupplyAirFanObjName_)
            {
              this->SimFlowTerm_SupplyAirFanObjName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_OutsideAirMixerObjType
          //
          if (n.name () == "SimFlowTerm_OutsideAirMixerObjType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_OutsideAirMixerObjType_type > r (
              SimFlowTerm_OutsideAirMixerObjType_traits::create (i, f, this));

            if (!this->SimFlowTerm_OutsideAirMixerObjType_)
            {
              this->SimFlowTerm_OutsideAirMixerObjType_.set (r);
              continue;
            }
          }

          // SimFlowTerm_OutsideAirMixerObjName
          //
          if (n.name () == "SimFlowTerm_OutsideAirMixerObjName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_OutsideAirMixerObjName_type > r (
              SimFlowTerm_OutsideAirMixerObjName_traits::create (i, f, this));

            if (!this->SimFlowTerm_OutsideAirMixerObjName_)
            {
              this->SimFlowTerm_OutsideAirMixerObjName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_CoolingCoilObjType
          //
          if (n.name () == "SimFlowTerm_CoolingCoilObjType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_CoolingCoilObjType_type > r (
              SimFlowTerm_CoolingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowTerm_CoolingCoilObjType_)
            {
              this->SimFlowTerm_CoolingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowTerm_CoolCoilObjName
          //
          if (n.name () == "SimFlowTerm_CoolCoilObjName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_CoolCoilObjName_type > r (
              SimFlowTerm_CoolCoilObjName_traits::create (i, f, this));

            if (!this->SimFlowTerm_CoolCoilObjName_)
            {
              this->SimFlowTerm_CoolCoilObjName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_HeatingCoilObjType
          //
          if (n.name () == "SimFlowTerm_HeatingCoilObjType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_HeatingCoilObjType_type > r (
              SimFlowTerm_HeatingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowTerm_HeatingCoilObjType_)
            {
              this->SimFlowTerm_HeatingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowTerm_HeatingCoilObjName
          //
          if (n.name () == "SimFlowTerm_HeatingCoilObjName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_HeatingCoilObjName_type > r (
              SimFlowTerm_HeatingCoilObjName_traits::create (i, f, this));

            if (!this->SimFlowTerm_HeatingCoilObjName_)
            {
              this->SimFlowTerm_HeatingCoilObjName_.set (r);
              continue;
            }
          }

          // SimFlowTerm_ZoneTermUnitOnParasiticElec
          //
          if (n.name () == "SimFlowTerm_ZoneTermUnitOnParasiticElec" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_ZoneTermUnitOnParasiticElec_)
            {
              this->SimFlowTerm_ZoneTermUnitOnParasiticElec_.set (SimFlowTerm_ZoneTermUnitOnParasiticElec_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_ZoneTermUnitOffParasiticElec
          //
          if (n.name () == "SimFlowTerm_ZoneTermUnitOffParasiticElec" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_ZoneTermUnitOffParasiticElec_)
            {
              this->SimFlowTerm_ZoneTermUnitOffParasiticElec_.set (SimFlowTerm_ZoneTermUnitOffParasiticElec_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_RatedHeatCapSizingRatio
          //
          if (n.name () == "SimFlowTerm_RatedHeatCapSizingRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowTerm_RatedHeatCapSizingRatio_)
            {
              this->SimFlowTerm_RatedHeatCapSizingRatio_.set (SimFlowTerm_RatedHeatCapSizingRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowTerm_AvailMngrListName
          //
          if (n.name () == "SimFlowTerm_AvailMngrListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowTerm_AvailMngrListName_type > r (
              SimFlowTerm_AvailMngrListName_traits::create (i, f, this));

            if (!this->SimFlowTerm_AvailMngrListName_)
            {
              this->SimFlowTerm_AvailMngrListName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowTerminal_TerminalUnit* SimFlowTerminal_TerminalUnit::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowTerminal_TerminalUnit (*this, f, c);
      }

      SimFlowTerminal_TerminalUnit& SimFlowTerminal_TerminalUnit::
      operator= (const SimFlowTerminal_TerminalUnit& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowTerminal& > (*this) = x;
          this->SimFlowTerm_ZoneTermUnitName_ = x.SimFlowTerm_ZoneTermUnitName_;
          this->SimFlowTerm_TermUnitAvailschedule_ = x.SimFlowTerm_TermUnitAvailschedule_;
          this->SimFlowTerm_TermUnitAirInletNodeName_ = x.SimFlowTerm_TermUnitAirInletNodeName_;
          this->SimFlowTerm_TermUnitAirOutletNodeName_ = x.SimFlowTerm_TermUnitAirOutletNodeName_;
          this->SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_ = x.SimFlowTerm_SupplyAirFlowRateDuringCoolingOp_;
          this->SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_ = x.SimFlowTerm_SupplyAirFlowRateWhenNoCoolisNeeded_;
          this->SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_ = x.SimFlowTerm_SupplyAirFlowRateDuringHeatingOp_;
          this->SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_ = x.SimFlowTerm_SupplyAirFlowRateWhenNoHeatingisNeeded_;
          this->SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_ = x.SimFlowTerm_OutdrAirFlowRateDuringCoolingOp_;
          this->SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_ = x.SimFlowTerm_OutdrAirFlowRateDuringHeatingOp_;
          this->SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_ = x.SimFlowTerm_OutdrAirFlowRateWhenNoCoolingOrHeatingNeeded_;
          this->SimFlowTerm_SupplyAirFanOperatModeSchedName_ = x.SimFlowTerm_SupplyAirFanOperatModeSchedName_;
          this->SimFlowTerm_SupplyAirFanPlacement_ = x.SimFlowTerm_SupplyAirFanPlacement_;
          this->SimFlowTerm_SupplyAirFanObjType_ = x.SimFlowTerm_SupplyAirFanObjType_;
          this->SimFlowTerm_SupplyAirFanObjName_ = x.SimFlowTerm_SupplyAirFanObjName_;
          this->SimFlowTerm_OutsideAirMixerObjType_ = x.SimFlowTerm_OutsideAirMixerObjType_;
          this->SimFlowTerm_OutsideAirMixerObjName_ = x.SimFlowTerm_OutsideAirMixerObjName_;
          this->SimFlowTerm_CoolingCoilObjType_ = x.SimFlowTerm_CoolingCoilObjType_;
          this->SimFlowTerm_CoolCoilObjName_ = x.SimFlowTerm_CoolCoilObjName_;
          this->SimFlowTerm_HeatingCoilObjType_ = x.SimFlowTerm_HeatingCoilObjType_;
          this->SimFlowTerm_HeatingCoilObjName_ = x.SimFlowTerm_HeatingCoilObjName_;
          this->SimFlowTerm_ZoneTermUnitOnParasiticElec_ = x.SimFlowTerm_ZoneTermUnitOnParasiticElec_;
          this->SimFlowTerm_ZoneTermUnitOffParasiticElec_ = x.SimFlowTerm_ZoneTermUnitOffParasiticElec_;
          this->SimFlowTerm_RatedHeatCapSizingRatio_ = x.SimFlowTerm_RatedHeatCapSizingRatio_;
          this->SimFlowTerm_AvailMngrListName_ = x.SimFlowTerm_AvailMngrListName_;
        }

        return *this;
      }

      SimFlowTerminal_TerminalUnit::
      ~SimFlowTerminal_TerminalUnit ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

