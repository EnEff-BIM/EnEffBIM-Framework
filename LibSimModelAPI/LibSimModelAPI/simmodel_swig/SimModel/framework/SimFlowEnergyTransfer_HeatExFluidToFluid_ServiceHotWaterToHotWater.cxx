// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater
      // 

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_Name () const
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_Name ()
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_type& x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_optional& x)
      {
        this->SimFlowEnergyTrans_Name_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_Name (::std::auto_ptr< SimFlowEnergyTrans_Name_type > x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CntlType_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CntlType () const
      {
        return this->SimFlowEnergyTrans_CntlType_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CntlType_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CntlType ()
      {
        return this->SimFlowEnergyTrans_CntlType_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CntlType (const SimFlowEnergyTrans_CntlType_type& x)
      {
        this->SimFlowEnergyTrans_CntlType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CntlType (const SimFlowEnergyTrans_CntlType_optional& x)
      {
        this->SimFlowEnergyTrans_CntlType_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CntlType (::std::auto_ptr< SimFlowEnergyTrans_CntlType_type > x)
      {
        this->SimFlowEnergyTrans_CntlType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_SizingFactor_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_SizingFactor () const
      {
        return this->SimFlowEnergyTrans_SizingFactor_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_SizingFactor_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_SizingFactor ()
      {
        return this->SimFlowEnergyTrans_SizingFactor_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_SizingFactor (const SimFlowEnergyTrans_SizingFactor_type& x)
      {
        this->SimFlowEnergyTrans_SizingFactor_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_SizingFactor (const SimFlowEnergyTrans_SizingFactor_optional& x)
      {
        this->SimFlowEnergyTrans_SizingFactor_ = x;
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopDemndSideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideInletNodeName () const
      {
        return this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopDemndSideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideInletNodeName ()
      {
        return this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideInletNodeName (const SimFlowEnergyTrans_LoopDemndSideInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideInletNodeName (const SimFlowEnergyTrans_LoopDemndSideInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_LoopDemndSideInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopDemndSideOutletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopDemndSideOutletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideOutletNodeName (const SimFlowEnergyTrans_LoopDemndSideOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideOutletNodeName (const SimFlowEnergyTrans_LoopDemndSideOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_LoopDemndSideOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideDesignFlowRate () const
      {
        return this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideDesignFlowRate ()
      {
        return this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideDesignFlowRate (const SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopDemndSideDesignFlowRate (const SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopSupplySideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideInletNodeName () const
      {
        return this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopSupplySideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideInletNodeName ()
      {
        return this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideInletNodeName (const SimFlowEnergyTrans_LoopSupplySideInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideInletNodeName (const SimFlowEnergyTrans_LoopSupplySideInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_LoopSupplySideInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopSupplySideOutletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopSupplySideOutletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideOutletNodeName (const SimFlowEnergyTrans_LoopSupplySideOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideOutletNodeName (const SimFlowEnergyTrans_LoopSupplySideOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_LoopSupplySideOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideDesignFlowRate () const
      {
        return this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideDesignFlowRate ()
      {
        return this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideDesignFlowRate (const SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_LoopSupplySideDesignFlowRate (const SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatExchangeModelType_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangeModelType () const
      {
        return this->SimFlowEnergyTrans_HeatExchangeModelType_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatExchangeModelType_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangeModelType ()
      {
        return this->SimFlowEnergyTrans_HeatExchangeModelType_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangeModelType (const SimFlowEnergyTrans_HeatExchangeModelType_type& x)
      {
        this->SimFlowEnergyTrans_HeatExchangeModelType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangeModelType (const SimFlowEnergyTrans_HeatExchangeModelType_optional& x)
      {
        this->SimFlowEnergyTrans_HeatExchangeModelType_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangeModelType (::std::auto_ptr< SimFlowEnergyTrans_HeatExchangeModelType_type > x)
      {
        this->SimFlowEnergyTrans_HeatExchangeModelType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal () const
      {
        return this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal ()
      {
        return this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal (const SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_type& x)
      {
        this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal (const SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_optional& x)
      {
        this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_ = x;
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatExchangerSetpointNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangerSetpointNodeName () const
      {
        return this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatExchangerSetpointNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangerSetpointNodeName ()
      {
        return this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangerSetpointNodeName (const SimFlowEnergyTrans_HeatExchangerSetpointNodeName_type& x)
      {
        this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangerSetpointNodeName (const SimFlowEnergyTrans_HeatExchangerSetpointNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatExchangerSetpointNodeName (::std::auto_ptr< SimFlowEnergyTrans_HeatExchangerSetpointNodeName_type > x)
      {
        this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng () const
      {
        return this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng ()
      {
        return this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng (const SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_type& x)
      {
        this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng (const SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_optional& x)
      {
        this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_ = x;
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatTransferMeteringEndUseType_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatTransferMeteringEndUseType () const
      {
        return this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_HeatTransferMeteringEndUseType_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatTransferMeteringEndUseType ()
      {
        return this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatTransferMeteringEndUseType (const SimFlowEnergyTrans_HeatTransferMeteringEndUseType_type& x)
      {
        this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatTransferMeteringEndUseType (const SimFlowEnergyTrans_HeatTransferMeteringEndUseType_optional& x)
      {
        this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_HeatTransferMeteringEndUseType (::std::auto_ptr< SimFlowEnergyTrans_HeatTransferMeteringEndUseType_type > x)
      {
        this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName (const SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName (const SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName (const SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName (const SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CompOverrideCoolControlTempMode_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideCoolControlTempMode () const
      {
        return this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_CompOverrideCoolControlTempMode_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideCoolControlTempMode ()
      {
        return this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideCoolControlTempMode (const SimFlowEnergyTrans_CompOverrideCoolControlTempMode_type& x)
      {
        this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideCoolControlTempMode (const SimFlowEnergyTrans_CompOverrideCoolControlTempMode_optional& x)
      {
        this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_ = x;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_CompOverrideCoolControlTempMode (::std::auto_ptr< SimFlowEnergyTrans_CompOverrideCoolControlTempMode_type > x)
      {
        this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_OperMinTempLimit_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMinTempLimit () const
      {
        return this->SimFlowEnergyTrans_OperMinTempLimit_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_OperMinTempLimit_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMinTempLimit ()
      {
        return this->SimFlowEnergyTrans_OperMinTempLimit_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMinTempLimit (const SimFlowEnergyTrans_OperMinTempLimit_type& x)
      {
        this->SimFlowEnergyTrans_OperMinTempLimit_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMinTempLimit (const SimFlowEnergyTrans_OperMinTempLimit_optional& x)
      {
        this->SimFlowEnergyTrans_OperMinTempLimit_ = x;
      }

      const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_OperMaxTempLimit_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMaxTempLimit () const
      {
        return this->SimFlowEnergyTrans_OperMaxTempLimit_;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::SimFlowEnergyTrans_OperMaxTempLimit_optional& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMaxTempLimit ()
      {
        return this->SimFlowEnergyTrans_OperMaxTempLimit_;
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMaxTempLimit (const SimFlowEnergyTrans_OperMaxTempLimit_type& x)
      {
        this->SimFlowEnergyTrans_OperMaxTempLimit_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTrans_OperMaxTempLimit (const SimFlowEnergyTrans_OperMaxTempLimit_optional& x)
      {
        this->SimFlowEnergyTrans_OperMaxTempLimit_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater
      //

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExFluidToFluid (),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_CntlType_ (this),
        SimFlowEnergyTrans_SizingFactor_ (this),
        SimFlowEnergyTrans_LoopDemndSideInletNodeName_ (this),
        SimFlowEnergyTrans_LoopDemndSideOutletNodeName_ (this),
        SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_ (this),
        SimFlowEnergyTrans_LoopSupplySideInletNodeName_ (this),
        SimFlowEnergyTrans_LoopSupplySideOutletNodeName_ (this),
        SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_ (this),
        SimFlowEnergyTrans_HeatExchangeModelType_ (this),
        SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_HeatExchangerSetpointNodeName_ (this),
        SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_ (this),
        SimFlowEnergyTrans_HeatTransferMeteringEndUseType_ (this),
        SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_ (this),
        SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_ (this),
        SimFlowEnergyTrans_CompOverrideCoolControlTempMode_ (this),
        SimFlowEnergyTrans_OperMinTempLimit_ (this),
        SimFlowEnergyTrans_OperMaxTempLimit_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExFluidToFluid (RefId),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_CntlType_ (this),
        SimFlowEnergyTrans_SizingFactor_ (this),
        SimFlowEnergyTrans_LoopDemndSideInletNodeName_ (this),
        SimFlowEnergyTrans_LoopDemndSideOutletNodeName_ (this),
        SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_ (this),
        SimFlowEnergyTrans_LoopSupplySideInletNodeName_ (this),
        SimFlowEnergyTrans_LoopSupplySideOutletNodeName_ (this),
        SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_ (this),
        SimFlowEnergyTrans_HeatExchangeModelType_ (this),
        SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_HeatExchangerSetpointNodeName_ (this),
        SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_ (this),
        SimFlowEnergyTrans_HeatTransferMeteringEndUseType_ (this),
        SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_ (this),
        SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_ (this),
        SimFlowEnergyTrans_CompOverrideCoolControlTempMode_ (this),
        SimFlowEnergyTrans_OperMinTempLimit_ (this),
        SimFlowEnergyTrans_OperMaxTempLimit_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater (const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater& x,
                                                                          ::xml_schema::flags f,
                                                                          ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExFluidToFluid (x, f, c),
        SimFlowEnergyTrans_Name_ (x.SimFlowEnergyTrans_Name_, f, this),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_CntlType_ (x.SimFlowEnergyTrans_CntlType_, f, this),
        SimFlowEnergyTrans_SizingFactor_ (x.SimFlowEnergyTrans_SizingFactor_, f, this),
        SimFlowEnergyTrans_LoopDemndSideInletNodeName_ (x.SimFlowEnergyTrans_LoopDemndSideInletNodeName_, f, this),
        SimFlowEnergyTrans_LoopDemndSideOutletNodeName_ (x.SimFlowEnergyTrans_LoopDemndSideOutletNodeName_, f, this),
        SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_ (x.SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_, f, this),
        SimFlowEnergyTrans_LoopSupplySideInletNodeName_ (x.SimFlowEnergyTrans_LoopSupplySideInletNodeName_, f, this),
        SimFlowEnergyTrans_LoopSupplySideOutletNodeName_ (x.SimFlowEnergyTrans_LoopSupplySideOutletNodeName_, f, this),
        SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_ (x.SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_, f, this),
        SimFlowEnergyTrans_HeatExchangeModelType_ (x.SimFlowEnergyTrans_HeatExchangeModelType_, f, this),
        SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_ (x.SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_, f, this),
        SimFlowEnergyTrans_HeatExchangerSetpointNodeName_ (x.SimFlowEnergyTrans_HeatExchangerSetpointNodeName_, f, this),
        SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_ (x.SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_, f, this),
        SimFlowEnergyTrans_HeatTransferMeteringEndUseType_ (x.SimFlowEnergyTrans_HeatTransferMeteringEndUseType_, f, this),
        SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_ (x.SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_, f, this),
        SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_ (x.SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_, f, this),
        SimFlowEnergyTrans_CompOverrideCoolControlTempMode_ (x.SimFlowEnergyTrans_CompOverrideCoolControlTempMode_, f, this),
        SimFlowEnergyTrans_OperMinTempLimit_ (x.SimFlowEnergyTrans_OperMinTempLimit_, f, this),
        SimFlowEnergyTrans_OperMaxTempLimit_ (x.SimFlowEnergyTrans_OperMaxTempLimit_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater (const ::xercesc::DOMElement& e,
                                                                          ::xml_schema::flags f,
                                                                          ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExFluidToFluid (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_CntlType_ (this),
        SimFlowEnergyTrans_SizingFactor_ (this),
        SimFlowEnergyTrans_LoopDemndSideInletNodeName_ (this),
        SimFlowEnergyTrans_LoopDemndSideOutletNodeName_ (this),
        SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_ (this),
        SimFlowEnergyTrans_LoopSupplySideInletNodeName_ (this),
        SimFlowEnergyTrans_LoopSupplySideOutletNodeName_ (this),
        SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_ (this),
        SimFlowEnergyTrans_HeatExchangeModelType_ (this),
        SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_HeatExchangerSetpointNodeName_ (this),
        SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_ (this),
        SimFlowEnergyTrans_HeatTransferMeteringEndUseType_ (this),
        SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_ (this),
        SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_ (this),
        SimFlowEnergyTrans_CompOverrideCoolControlTempMode_ (this),
        SimFlowEnergyTrans_OperMinTempLimit_ (this),
        SimFlowEnergyTrans_OperMaxTempLimit_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExFluidToFluid::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_Name
          //
          if (n.name () == "SimFlowEnergyTrans_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Name_type > r (
              SimFlowEnergyTrans_Name_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Name_)
            {
              this->SimFlowEnergyTrans_Name_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CntlType
          //
          if (n.name () == "SimFlowEnergyTrans_CntlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CntlType_type > r (
              SimFlowEnergyTrans_CntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CntlType_)
            {
              this->SimFlowEnergyTrans_CntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SizingFactor
          //
          if (n.name () == "SimFlowEnergyTrans_SizingFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SizingFactor_)
            {
              this->SimFlowEnergyTrans_SizingFactor_.set (SimFlowEnergyTrans_SizingFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_LoopDemndSideInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_LoopDemndSideInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_LoopDemndSideInletNodeName_type > r (
              SimFlowEnergyTrans_LoopDemndSideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_)
            {
              this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_LoopDemndSideOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_LoopDemndSideOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_LoopDemndSideOutletNodeName_type > r (
              SimFlowEnergyTrans_LoopDemndSideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_)
            {
              this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_LoopDemndSideDesignFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_LoopDemndSideDesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_)
            {
              this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_.set (SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_LoopSupplySideInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_LoopSupplySideInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_LoopSupplySideInletNodeName_type > r (
              SimFlowEnergyTrans_LoopSupplySideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_)
            {
              this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_LoopSupplySideOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_LoopSupplySideOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_LoopSupplySideOutletNodeName_type > r (
              SimFlowEnergyTrans_LoopSupplySideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_)
            {
              this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_LoopSupplySideDesignFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_LoopSupplySideDesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_)
            {
              this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_.set (SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatExchangeModelType
          //
          if (n.name () == "SimFlowEnergyTrans_HeatExchangeModelType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatExchangeModelType_type > r (
              SimFlowEnergyTrans_HeatExchangeModelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatExchangeModelType_)
            {
              this->SimFlowEnergyTrans_HeatExchangeModelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal
          //
          if (n.name () == "SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_)
            {
              this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_.set (SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatExchangerSetpointNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatExchangerSetpointNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatExchangerSetpointNodeName_type > r (
              SimFlowEnergyTrans_HeatExchangerSetpointNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_)
            {
              this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng
          //
          if (n.name () == "SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_)
            {
              this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_.set (SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatTransferMeteringEndUseType
          //
          if (n.name () == "SimFlowEnergyTrans_HeatTransferMeteringEndUseType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatTransferMeteringEndUseType_type > r (
              SimFlowEnergyTrans_HeatTransferMeteringEndUseType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_)
            {
              this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_type > r (
              SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_)
            {
              this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_type > r (
              SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_)
            {
              this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CompOverrideCoolControlTempMode
          //
          if (n.name () == "SimFlowEnergyTrans_CompOverrideCoolControlTempMode" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CompOverrideCoolControlTempMode_type > r (
              SimFlowEnergyTrans_CompOverrideCoolControlTempMode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_)
            {
              this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OperMinTempLimit
          //
          if (n.name () == "SimFlowEnergyTrans_OperMinTempLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_OperMinTempLimit_)
            {
              this->SimFlowEnergyTrans_OperMinTempLimit_.set (SimFlowEnergyTrans_OperMinTempLimit_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_OperMaxTempLimit
          //
          if (n.name () == "SimFlowEnergyTrans_OperMaxTempLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_OperMaxTempLimit_)
            {
              this->SimFlowEnergyTrans_OperMaxTempLimit_.set (SimFlowEnergyTrans_OperMaxTempLimit_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater* SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater& SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      operator= (const SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExFluidToFluid& > (*this) = x;
          this->SimFlowEnergyTrans_Name_ = x.SimFlowEnergyTrans_Name_;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_CntlType_ = x.SimFlowEnergyTrans_CntlType_;
          this->SimFlowEnergyTrans_SizingFactor_ = x.SimFlowEnergyTrans_SizingFactor_;
          this->SimFlowEnergyTrans_LoopDemndSideInletNodeName_ = x.SimFlowEnergyTrans_LoopDemndSideInletNodeName_;
          this->SimFlowEnergyTrans_LoopDemndSideOutletNodeName_ = x.SimFlowEnergyTrans_LoopDemndSideOutletNodeName_;
          this->SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_ = x.SimFlowEnergyTrans_LoopDemndSideDesignFlowRate_;
          this->SimFlowEnergyTrans_LoopSupplySideInletNodeName_ = x.SimFlowEnergyTrans_LoopSupplySideInletNodeName_;
          this->SimFlowEnergyTrans_LoopSupplySideOutletNodeName_ = x.SimFlowEnergyTrans_LoopSupplySideOutletNodeName_;
          this->SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_ = x.SimFlowEnergyTrans_LoopSupplySideDesignFlowRate_;
          this->SimFlowEnergyTrans_HeatExchangeModelType_ = x.SimFlowEnergyTrans_HeatExchangeModelType_;
          this->SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_ = x.SimFlowEnergyTrans_HeatExchngUFactorTimesAreaVal_;
          this->SimFlowEnergyTrans_HeatExchangerSetpointNodeName_ = x.SimFlowEnergyTrans_HeatExchangerSetpointNodeName_;
          this->SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_ = x.SimFlowEnergyTrans_MinTempDiffToActivateHeatExchng_;
          this->SimFlowEnergyTrans_HeatTransferMeteringEndUseType_ = x.SimFlowEnergyTrans_HeatTransferMeteringEndUseType_;
          this->SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_ = x.SimFlowEnergyTrans_CompOverrideLoopSupplySideInletNodeName_;
          this->SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_ = x.SimFlowEnergyTrans_CompOverrideLoopDemndSideInletNodeName_;
          this->SimFlowEnergyTrans_CompOverrideCoolControlTempMode_ = x.SimFlowEnergyTrans_CompOverrideCoolControlTempMode_;
          this->SimFlowEnergyTrans_OperMinTempLimit_ = x.SimFlowEnergyTrans_OperMinTempLimit_;
          this->SimFlowEnergyTrans_OperMaxTempLimit_ = x.SimFlowEnergyTrans_OperMaxTempLimit_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater::
      ~SimFlowEnergyTransfer_HeatExFluidToFluid_ServiceHotWaterToHotWater ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

