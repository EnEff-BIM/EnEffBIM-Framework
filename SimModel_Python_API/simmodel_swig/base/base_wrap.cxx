/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler {
#ifdef SWIG_DIRECTOR_UEH
    static void handler() {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.what() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }

      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;

      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will likely abort/terminate." << std::endl;
      throw;
    }

  public:

    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler) {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler() {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ApplicableOccurrence_optional swig_types[0]
#define SWIGTYPE_p_ApplicableOccurrence_traits swig_types[1]
#define SWIGTYPE_p_ApplicableOccurrence_type swig_types[2]
#define SWIGTYPE_p_AssignedToFlowElement_optional swig_types[3]
#define SWIGTYPE_p_AssignedToFlowElement_traits swig_types[4]
#define SWIGTYPE_p_AssignedToFlowElement_type swig_types[5]
#define SWIGTYPE_p_AssignedToGroups_optional swig_types[6]
#define SWIGTYPE_p_AssignedToGroups_traits swig_types[7]
#define SWIGTYPE_p_AssignedToGroups_type swig_types[8]
#define SWIGTYPE_p_ChangeFromTemplate_optional swig_types[9]
#define SWIGTYPE_p_ChangeFromTemplate_traits swig_types[10]
#define SWIGTYPE_p_ChangeFromTemplate_type swig_types[11]
#define SWIGTYPE_p_CompositionType_optional swig_types[12]
#define SWIGTYPE_p_CompositionType_traits swig_types[13]
#define SWIGTYPE_p_CompositionType_type swig_types[14]
#define SWIGTYPE_p_ContainingBuildings_optional swig_types[15]
#define SWIGTYPE_p_ContainingBuildings_traits swig_types[16]
#define SWIGTYPE_p_ContainingBuildings_type swig_types[17]
#define SWIGTYPE_p_ContainingSpatialStructure_optional swig_types[18]
#define SWIGTYPE_p_ContainingSpatialStructure_traits swig_types[19]
#define SWIGTYPE_p_ContainingSpatialStructure_type swig_types[20]
#define SWIGTYPE_p_ControlElementID_optional swig_types[21]
#define SWIGTYPE_p_ControlElementID_traits swig_types[22]
#define SWIGTYPE_p_ControlElementID_type swig_types[23]
#define SWIGTYPE_p_ControlledBy_optional swig_types[24]
#define SWIGTYPE_p_ControlledBy_traits swig_types[25]
#define SWIGTYPE_p_ControlledBy_type swig_types[26]
#define SWIGTYPE_p_DecimalPrecision_optional swig_types[27]
#define SWIGTYPE_p_DecimalPrecision_traits swig_types[28]
#define SWIGTYPE_p_DecimalPrecision_type swig_types[29]
#define SWIGTYPE_p_Decomposes_optional swig_types[30]
#define SWIGTYPE_p_Decomposes_traits swig_types[31]
#define SWIGTYPE_p_Decomposes_type swig_types[32]
#define SWIGTYPE_p_DefaultForPerson_optional swig_types[33]
#define SWIGTYPE_p_DefaultForPerson_traits swig_types[34]
#define SWIGTYPE_p_DefaultForPerson_type swig_types[35]
#define SWIGTYPE_p_DefaultForProject_optional swig_types[36]
#define SWIGTYPE_p_DefaultForProject_traits swig_types[37]
#define SWIGTYPE_p_DefaultForProject_type swig_types[38]
#define SWIGTYPE_p_DefaultForUnitSystem_optional swig_types[39]
#define SWIGTYPE_p_DefaultForUnitSystem_traits swig_types[40]
#define SWIGTYPE_p_DefaultForUnitSystem_type swig_types[41]
#define SWIGTYPE_p_Description_optional swig_types[42]
#define SWIGTYPE_p_Description_traits swig_types[43]
#define SWIGTYPE_p_Description_type swig_types[44]
#define SWIGTYPE_p_DockedToPort_optional swig_types[45]
#define SWIGTYPE_p_DockedToPort_traits swig_types[46]
#define SWIGTYPE_p_DockedToPort_type swig_types[47]
#define SWIGTYPE_p_GeometricRepresentations_optional swig_types[48]
#define SWIGTYPE_p_GeometricRepresentations_traits swig_types[49]
#define SWIGTYPE_p_GeometricRepresentations_type swig_types[50]
#define SWIGTYPE_p_HasPropertySets_optional swig_types[51]
#define SWIGTYPE_p_HasPropertySets_traits swig_types[52]
#define SWIGTYPE_p_HasPropertySets_type swig_types[53]
#define SWIGTYPE_p_HasTemplateChanged_optional swig_types[54]
#define SWIGTYPE_p_HasTemplateChanged_traits swig_types[55]
#define SWIGTYPE_p_HasTemplateChanged_type swig_types[56]
#define SWIGTYPE_p_HostElement_optional swig_types[57]
#define SWIGTYPE_p_HostElement_traits swig_types[58]
#define SWIGTYPE_p_HostElement_type swig_types[59]
#define SWIGTYPE_p_IfcGlobalID_optional swig_types[60]
#define SWIGTYPE_p_IfcGlobalID_traits swig_types[61]
#define SWIGTYPE_p_IfcGlobalID_type swig_types[62]
#define SWIGTYPE_p_IfcName_optional swig_types[63]
#define SWIGTYPE_p_IfcName_traits swig_types[64]
#define SWIGTYPE_p_IfcName_type swig_types[65]
#define SWIGTYPE_p_IsAutoGenerated_optional swig_types[66]
#define SWIGTYPE_p_IsAutoGenerated_traits swig_types[67]
#define SWIGTYPE_p_IsAutoGenerated_type swig_types[68]
#define SWIGTYPE_p_IsTemplateObject_optional swig_types[69]
#define SWIGTYPE_p_IsTemplateObject_traits swig_types[70]
#define SWIGTYPE_p_IsTemplateObject_type swig_types[71]
#define SWIGTYPE_p_LocalPlacementRotation_optional swig_types[72]
#define SWIGTYPE_p_LocalPlacementRotation_traits swig_types[73]
#define SWIGTYPE_p_LocalPlacementRotation_type swig_types[74]
#define SWIGTYPE_p_LocalPlacementX_optional swig_types[75]
#define SWIGTYPE_p_LocalPlacementX_traits swig_types[76]
#define SWIGTYPE_p_LocalPlacementX_type swig_types[77]
#define SWIGTYPE_p_LocalPlacementY_optional swig_types[78]
#define SWIGTYPE_p_LocalPlacementY_traits swig_types[79]
#define SWIGTYPE_p_LocalPlacementY_type swig_types[80]
#define SWIGTYPE_p_LocalPlacementZ_optional swig_types[81]
#define SWIGTYPE_p_LocalPlacementZ_traits swig_types[82]
#define SWIGTYPE_p_LocalPlacementZ_type swig_types[83]
#define SWIGTYPE_p_LongName_optional swig_types[84]
#define SWIGTYPE_p_LongName_traits swig_types[85]
#define SWIGTYPE_p_LongName_type swig_types[86]
#define SWIGTYPE_p_MemberUsedForDiagrams_optional swig_types[87]
#define SWIGTYPE_p_MemberUsedForDiagrams_traits swig_types[88]
#define SWIGTYPE_p_MemberUsedForDiagrams_type swig_types[89]
#define SWIGTYPE_p_Name_optional swig_types[90]
#define SWIGTYPE_p_Name_traits swig_types[91]
#define SWIGTYPE_p_Name_type swig_types[92]
#define SWIGTYPE_p_NevronSchematicLayout_optional swig_types[93]
#define SWIGTYPE_p_NevronSchematicLayout_traits swig_types[94]
#define SWIGTYPE_p_NevronSchematicLayout_type swig_types[95]
#define SWIGTYPE_p_ObjectCreationParams_optional swig_types[96]
#define SWIGTYPE_p_ObjectCreationParams_traits swig_types[97]
#define SWIGTYPE_p_ObjectCreationParams_type swig_types[98]
#define SWIGTYPE_p_ObjectIndex_optional swig_types[99]
#define SWIGTYPE_p_ObjectIndex_traits swig_types[100]
#define SWIGTYPE_p_ObjectIndex_type swig_types[101]
#define SWIGTYPE_p_ObjectName_optional swig_types[102]
#define SWIGTYPE_p_ObjectName_traits swig_types[103]
#define SWIGTYPE_p_ObjectName_type swig_types[104]
#define SWIGTYPE_p_ObjectOwnerHistory_optional swig_types[105]
#define SWIGTYPE_p_ObjectOwnerHistory_traits swig_types[106]
#define SWIGTYPE_p_ObjectOwnerHistory_type swig_types[107]
#define SWIGTYPE_p_ObjectType_optional swig_types[108]
#define SWIGTYPE_p_ObjectType_traits swig_types[109]
#define SWIGTYPE_p_ObjectType_type swig_types[110]
#define SWIGTYPE_p_ParentGroups_optional swig_types[111]
#define SWIGTYPE_p_ParentGroups_traits swig_types[112]
#define SWIGTYPE_p_ParentGroups_type swig_types[113]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_optional swig_types[114]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_traits swig_types[115]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_type swig_types[116]
#define SWIGTYPE_p_Placement_optional swig_types[117]
#define SWIGTYPE_p_Placement_traits swig_types[118]
#define SWIGTYPE_p_Placement_type swig_types[119]
#define SWIGTYPE_p_ProfileName_optional swig_types[120]
#define SWIGTYPE_p_ProfileName_traits swig_types[121]
#define SWIGTYPE_p_ProfileName_type swig_types[122]
#define SWIGTYPE_p_ProfileType_optional swig_types[123]
#define SWIGTYPE_p_ProfileType_traits swig_types[124]
#define SWIGTYPE_p_ProfileType_type swig_types[125]
#define SWIGTYPE_p_RefId_traits swig_types[126]
#define SWIGTYPE_p_RefId_type swig_types[127]
#define SWIGTYPE_p_RepresentationContext_optional swig_types[128]
#define SWIGTYPE_p_RepresentationContext_traits swig_types[129]
#define SWIGTYPE_p_RepresentationContext_type swig_types[130]
#define SWIGTYPE_p_RepresentationIdentifier_optional swig_types[131]
#define SWIGTYPE_p_RepresentationIdentifier_traits swig_types[132]
#define SWIGTYPE_p_RepresentationIdentifier_type swig_types[133]
#define SWIGTYPE_p_RepresentationItems_optional swig_types[134]
#define SWIGTYPE_p_RepresentationItems_traits swig_types[135]
#define SWIGTYPE_p_RepresentationItems_type swig_types[136]
#define SWIGTYPE_p_RepresentationType_optional swig_types[137]
#define SWIGTYPE_p_RepresentationType_traits swig_types[138]
#define SWIGTYPE_p_RepresentationType_type swig_types[139]
#define SWIGTYPE_p_SelectedPropertyGroups_optional swig_types[140]
#define SWIGTYPE_p_SelectedPropertyGroups_traits swig_types[141]
#define SWIGTYPE_p_SelectedPropertyGroups_type swig_types[142]
#define SWIGTYPE_p_SimModelName_optional swig_types[143]
#define SWIGTYPE_p_SimModelName_traits swig_types[144]
#define SWIGTYPE_p_SimModelName_type swig_types[145]
#define SWIGTYPE_p_SimModelSubtype_optional swig_types[146]
#define SWIGTYPE_p_SimModelSubtype_traits swig_types[147]
#define SWIGTYPE_p_SimModelSubtype_type swig_types[148]
#define SWIGTYPE_p_SimModelType_optional swig_types[149]
#define SWIGTYPE_p_SimModelType_traits swig_types[150]
#define SWIGTYPE_p_SimModelType_type swig_types[151]
#define SWIGTYPE_p_SimUniqueID_optional swig_types[152]
#define SWIGTYPE_p_SimUniqueID_traits swig_types[153]
#define SWIGTYPE_p_SimUniqueID_type swig_types[154]
#define SWIGTYPE_p_SourceLibraryEntryID_optional swig_types[155]
#define SWIGTYPE_p_SourceLibraryEntryID_traits swig_types[156]
#define SWIGTYPE_p_SourceLibraryEntryID_type swig_types[157]
#define SWIGTYPE_p_SourceLibraryEntryRef_optional swig_types[158]
#define SWIGTYPE_p_SourceLibraryEntryRef_traits swig_types[159]
#define SWIGTYPE_p_SourceLibraryEntryRef_type swig_types[160]
#define SWIGTYPE_p_SourceModelObjectType_optional swig_types[161]
#define SWIGTYPE_p_SourceModelObjectType_traits swig_types[162]
#define SWIGTYPE_p_SourceModelObjectType_type swig_types[163]
#define SWIGTYPE_p_SourceModelSchema_optional swig_types[164]
#define SWIGTYPE_p_SourceModelSchema_traits swig_types[165]
#define SWIGTYPE_p_SourceModelSchema_type swig_types[166]
#define SWIGTYPE_p_Tag_optional swig_types[167]
#define SWIGTYPE_p_Tag_traits swig_types[168]
#define SWIGTYPE_p_Tag_type swig_types[169]
#define SWIGTYPE_p_TemplatesForMembers_optional swig_types[170]
#define SWIGTYPE_p_TemplatesForMembers_traits swig_types[171]
#define SWIGTYPE_p_TemplatesForMembers_type swig_types[172]
#define SWIGTYPE_p_TypeDefCreationParams_optional swig_types[173]
#define SWIGTYPE_p_TypeDefCreationParams_traits swig_types[174]
#define SWIGTYPE_p_TypeDefCreationParams_type swig_types[175]
#define SWIGTYPE_p_TypeDefinition_optional swig_types[176]
#define SWIGTYPE_p_TypeDefinition_traits swig_types[177]
#define SWIGTYPE_p_TypeDefinition_type swig_types[178]
#define SWIGTYPE_p_UnitType_String_optional swig_types[179]
#define SWIGTYPE_p_UnitType_String_traits swig_types[180]
#define SWIGTYPE_p_UnitType_String_type swig_types[181]
#define SWIGTYPE_p_XDirectionX_optional swig_types[182]
#define SWIGTYPE_p_XDirectionX_traits swig_types[183]
#define SWIGTYPE_p_XDirectionX_type swig_types[184]
#define SWIGTYPE_p_XDirectionY_optional swig_types[185]
#define SWIGTYPE_p_XDirectionY_traits swig_types[186]
#define SWIGTYPE_p_XDirectionY_type swig_types[187]
#define SWIGTYPE_p_XDirectionZ_optional swig_types[188]
#define SWIGTYPE_p_XDirectionZ_traits swig_types[189]
#define SWIGTYPE_p_XDirectionZ_type swig_types[190]
#define SWIGTYPE_p_XMLCh swig_types[191]
#define SWIGTYPE_p__3dHeight_optional swig_types[192]
#define SWIGTYPE_p__3dHeight_traits swig_types[193]
#define SWIGTYPE_p__3dHeight_type swig_types[194]
#define SWIGTYPE_p__3dLength_optional swig_types[195]
#define SWIGTYPE_p__3dLength_traits swig_types[196]
#define SWIGTYPE_p__3dLength_type swig_types[197]
#define SWIGTYPE_p__3dWidth_optional swig_types[198]
#define SWIGTYPE_p__3dWidth_traits swig_types[199]
#define SWIGTYPE_p__3dWidth_type swig_types[200]
#define SWIGTYPE_p_allocator_type swig_types[201]
#define SWIGTYPE_p_base_const_iterator swig_types[202]
#define SWIGTYPE_p_base_iterator swig_types[203]
#define SWIGTYPE_p_base_sequence swig_types[204]
#define SWIGTYPE_p_bool swig_types[205]
#define SWIGTYPE_p_bool_convertible swig_types[206]
#define SWIGTYPE_p_char swig_types[207]
#define SWIGTYPE_p_const_iterator swig_types[208]
#define SWIGTYPE_p_const_reverse_iterator swig_types[209]
#define SWIGTYPE_p_difference_type swig_types[210]
#define SWIGTYPE_p_dom_content_optional swig_types[211]
#define SWIGTYPE_p_double swig_types[212]
#define SWIGTYPE_p_float swig_types[213]
#define SWIGTYPE_p_int swig_types[214]
#define SWIGTYPE_p_iterator swig_types[215]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t swig_types[216]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t swig_types[217]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t swig_types[218]
#define SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t swig_types[219]
#define SWIGTYPE_p_long_long swig_types[220]
#define SWIGTYPE_p_reverse_iterator swig_types[221]
#define SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter swig_types[222]
#define SWIGTYPE_p_schema__simxml__Model__SimModel swig_types[223]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams swig_types[224]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode swig_types[225]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort swig_types[226]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType swig_types[227]
#define SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition swig_types[228]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups swig_types[229]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition swig_types[230]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault swig_types[231]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams swig_types[232]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement swig_types[233]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement swig_types[234]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement swig_types[235]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement swig_types[236]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimElement swig_types[237]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement swig_types[238]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem swig_types[239]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup swig_types[240]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObject swig_types[241]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition swig_types[242]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement swig_types[243]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition swig_types[244]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition swig_types[245]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation swig_types[246]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem swig_types[247]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject swig_types[248]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot swig_types[249]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement swig_types[250]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate swig_types[251]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem swig_types[252]
#define SWIGTYPE_p_schema__simxml__SimModelCore__doubleList swig_types[253]
#define SWIGTYPE_p_schema__simxml__SimModelCore__integerList swig_types[254]
#define SWIGTYPE_p_schema__simxml__SimModelCore__logical swig_types[255]
#define SWIGTYPE_p_self_ swig_types[256]
#define SWIGTYPE_p_short swig_types[257]
#define SWIGTYPE_p_signed_char swig_types[258]
#define SWIGTYPE_p_size_type swig_types[259]
#define SWIGTYPE_p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t swig_types[260]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__id_t swig_types[261]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t swig_types[262]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t swig_types[263]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t swig_types[264]
#define SWIGTYPE_p_std__invalid_argument swig_types[265]
#define SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type swig_types[266]
#define SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t swig_types[267]
#define SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator swig_types[268]
#define SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type swig_types[269]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[270]
#define SWIGTYPE_p_unsigned_char swig_types[271]
#define SWIGTYPE_p_unsigned_int swig_types[272]
#define SWIGTYPE_p_unsigned_long_long swig_types[273]
#define SWIGTYPE_p_unsigned_short swig_types[274]
#define SWIGTYPE_p_value_type swig_types[275]
#define SWIGTYPE_p_xercesc__DOMAttr swig_types[276]
#define SWIGTYPE_p_xercesc__DOMDocument swig_types[277]
#define SWIGTYPE_p_xercesc__DOMElement swig_types[278]
#define SWIGTYPE_p_xercesc__DOMNode swig_types[279]
#define SWIGTYPE_p_xsd__cxx__tree___type swig_types[280]
#define SWIGTYPE_p_xsd__cxx__tree__attribute_set_common swig_types[281]
#define SWIGTYPE_p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t swig_types[282]
#define SWIGTYPE_p_xsd__cxx__tree__boundsT_char_t swig_types[283]
#define SWIGTYPE_p_xsd__cxx__tree__bufferT_char_t swig_types[284]
#define SWIGTYPE_p_xsd__cxx__tree__content_order swig_types[285]
#define SWIGTYPE_p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[286]
#define SWIGTYPE_p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[287]
#define SWIGTYPE_p_xsd__cxx__tree__diagnosticsT_char_t swig_types[288]
#define SWIGTYPE_p_xsd__cxx__tree__duplicate_idT_char_t swig_types[289]
#define SWIGTYPE_p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[290]
#define SWIGTYPE_p_xsd__cxx__tree__element_one swig_types[291]
#define SWIGTYPE_p_xsd__cxx__tree__element_optional swig_types[292]
#define SWIGTYPE_p_xsd__cxx__tree__element_sequence swig_types[293]
#define SWIGTYPE_p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t swig_types[294]
#define SWIGTYPE_p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t swig_types[295]
#define SWIGTYPE_p_xsd__cxx__tree__errorT_char_t swig_types[296]
#define SWIGTYPE_p_xsd__cxx__tree__exceptionT_char_t swig_types[297]
#define SWIGTYPE_p_xsd__cxx__tree__expected_attributeT_char_t swig_types[298]
#define SWIGTYPE_p_xsd__cxx__tree__expected_elementT_char_t swig_types[299]
#define SWIGTYPE_p_xsd__cxx__tree__expected_text_contentT_char_t swig_types[300]
#define SWIGTYPE_p_xsd__cxx__tree__flags swig_types[301]
#define SWIGTYPE_p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[302]
#define SWIGTYPE_p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[303]
#define SWIGTYPE_p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[304]
#define SWIGTYPE_p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[305]
#define SWIGTYPE_p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[306]
#define SWIGTYPE_p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t swig_types[307]
#define SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t swig_types[308]
#define SWIGTYPE_p_xsd__cxx__tree__identity swig_types[309]
#define SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t swig_types[310]
#define SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t swig_types[311]
#define SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t swig_types[312]
#define SWIGTYPE_p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t swig_types[313]
#define SWIGTYPE_p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t swig_types[314]
#define SWIGTYPE_p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t swig_types[315]
#define SWIGTYPE_p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t swig_types[316]
#define SWIGTYPE_p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t swig_types[317]
#define SWIGTYPE_p_xsd__cxx__tree__no_prefix_mappingT_char_t swig_types[318]
#define SWIGTYPE_p_xsd__cxx__tree__no_type_infoT_char_t swig_types[319]
#define SWIGTYPE_p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t swig_types[320]
#define SWIGTYPE_p_xsd__cxx__tree__not_derivedT_char_t swig_types[321]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t swig_types[322]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t swig_types[323]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t swig_types[324]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t swig_types[325]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t swig_types[326]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t swig_types[327]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t swig_types[328]
#define SWIGTYPE_p_xsd__cxx__tree__parsingT_char_t swig_types[329]
#define SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t swig_types[330]
#define SWIGTYPE_p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t swig_types[331]
#define SWIGTYPE_p_xsd__cxx__tree__schema_type swig_types[332]
#define SWIGTYPE_p_xsd__cxx__tree__sequence_common swig_types[333]
#define SWIGTYPE_p_xsd__cxx__tree__severity swig_types[334]
#define SWIGTYPE_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t swig_types[335]
#define SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[336]
#define SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t swig_types[337]
#define SWIGTYPE_p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[338]
#define SWIGTYPE_p_xsd__cxx__tree__time_zone swig_types[339]
#define SWIGTYPE_p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t swig_types[340]
#define SWIGTYPE_p_xsd__cxx__tree__unexpected_elementT_char_t swig_types[341]
#define SWIGTYPE_p_xsd__cxx__tree__unexpected_enumeratorT_char_t swig_types[342]
#define SWIGTYPE_p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t swig_types[343]
#define SWIGTYPE_p_xsd__cxx__tree__user_data_keys_templateT_0_t swig_types[344]
#define SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t swig_types[345]
static swig_type_info *swig_types[347];
static swig_module_info swig_module = {swig_types, 346, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _base.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__base

#else
#  define SWIG_init    init_base

#endif
#define SWIG_name    "_base"

#define SWIGVERSION 0x030007 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <string>


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <stddef.h>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
#if PY_VERSION_HEX >= 0x03000000
      {
        long v = PyLong_AsLong(obj);
        if (!PyErr_Occurred()) {
          if (v < 0) {
            return SWIG_OverflowError;
          }
        } else {
          PyErr_Clear();
        }
      }
#endif
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <algorithm>


#include <vector>


#include <utility>


#include <map>


#include <algorithm>


#define SWIG_FILE_WITH_INIT
#include "../SimModel_Dll_lib/framework/simmodel.hxx"
using namespace xsd::cxx::tree;


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< int >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "base_wrap.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_element_one(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = (xsd::cxx::tree::element_one *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_element_one",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_one, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_element_one" "', argument " "1"" of type '" "xsd::cxx::tree::element_one *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_one__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMDocument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_one *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_element_one",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_one" "', argument " "1"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_one" "', argument " "1"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMDocument * >(argp1);
  result = (xsd::cxx::tree::element_one *)new xsd::cxx::tree::element_one(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_one, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_one__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMElement *arg1 = 0 ;
  xercesc::DOMDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_one *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_element_one",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_one" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_one" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_one" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_one" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMDocument * >(argp2);
  result = (xsd::cxx::tree::element_one *)new xsd::cxx::tree::element_one((xercesc::DOMElement const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_one, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_one__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = 0 ;
  xercesc::DOMDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_one *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_element_one",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_one,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_one" "', argument " "1"" of type '" "xsd::cxx::tree::element_one const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_one" "', argument " "1"" of type '" "xsd::cxx::tree::element_one const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_one" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_one" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMDocument * >(argp2);
  result = (xsd::cxx::tree::element_one *)new xsd::cxx::tree::element_one((xsd::cxx::tree::element_one const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_one, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_one(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_element_one__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_element_one__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_one, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_element_one__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_element_one'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_one::element_one(xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_one::element_one(xercesc::DOMElement const &,xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_one::element_one(xsd::cxx::tree::element_one const &,xercesc::DOMDocument &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_one_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = (xsd::cxx::tree::element_one *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_one_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_one, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_one_get" "', argument " "1"" of type '" "xsd::cxx::tree::element_one const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  result = (xercesc::DOMElement *) &((xsd::cxx::tree::element_one const *)arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_one_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = (xsd::cxx::tree::element_one *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_one_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_one, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_one_get" "', argument " "1"" of type '" "xsd::cxx::tree::element_one *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  result = (xercesc::DOMElement *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_one_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_one, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_one_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_one, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_one_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_one_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_one::get() const\n"
    "    xsd::cxx::tree::element_one::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_one_set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = (xsd::cxx::tree::element_one *) 0 ;
  xercesc::DOMElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_one_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_one, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_one_set" "', argument " "1"" of type '" "xsd::cxx::tree::element_one *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_one_set" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_one_set" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->set((xercesc::DOMElement const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_one_set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = (xsd::cxx::tree::element_one *) 0 ;
  xercesc::DOMElement *arg2 = (xercesc::DOMElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_one_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_one, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_one_set" "', argument " "1"" of type '" "xsd::cxx::tree::element_one *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_one_set" "', argument " "2"" of type '" "xercesc::DOMElement *""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->set(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_one_set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_one, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_one_set__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_one, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_one_set__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_one_set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_one::set(xercesc::DOMElement const &)\n"
    "    xsd::cxx::tree::element_one::set(xercesc::DOMElement *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_one_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_one *arg1 = (xsd::cxx::tree::element_one *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_one_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_one, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_one_present" "', argument " "1"" of type '" "xsd::cxx::tree::element_one const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_one * >(argp1);
  result = (bool)((xsd::cxx::tree::element_one const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *element_one_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__element_one, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_element_optional(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_element_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_element_optional" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_optional__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMDocument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_element_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_optional" "', argument " "1"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_optional" "', argument " "1"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMDocument * >(argp1);
  result = (xsd::cxx::tree::element_optional *)new xsd::cxx::tree::element_optional(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_optional, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_optional__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMElement *arg1 = 0 ;
  xercesc::DOMDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_element_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_optional" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_optional" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_optional" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_optional" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMDocument * >(argp2);
  result = (xsd::cxx::tree::element_optional *)new xsd::cxx::tree::element_optional((xercesc::DOMElement const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_optional, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_optional__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMElement *arg1 = (xercesc::DOMElement *) 0 ;
  xercesc::DOMDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_element_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_optional" "', argument " "1"" of type '" "xercesc::DOMElement *""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_optional" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_optional" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMDocument * >(argp2);
  result = (xsd::cxx::tree::element_optional *)new xsd::cxx::tree::element_optional(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_optional, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_optional__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = 0 ;
  xercesc::DOMDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_element_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_optional,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_optional" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_optional" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_optional" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_optional" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMDocument * >(argp2);
  result = (xsd::cxx::tree::element_optional *)new xsd::cxx::tree::element_optional((xsd::cxx::tree::element_optional const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_optional, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_optional(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_element_optional__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_element_optional__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_element_optional__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_element_optional__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_element_optional'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_optional::element_optional(xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_optional::element_optional(xercesc::DOMElement const &,xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_optional::element_optional(xercesc::DOMElement *,xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_optional::element_optional(xsd::cxx::tree::element_optional const &,xercesc::DOMDocument &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_optional___deref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (xercesc::DOMElement *)((xsd::cxx::tree::element_optional const *)arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional___deref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (xercesc::DOMElement *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional___deref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_optional___deref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_optional___deref____SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_optional___deref__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_optional::operator ->() const\n"
    "    xsd::cxx::tree::element_optional::operator ->()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_optional___ref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (xercesc::DOMElement *) &((xsd::cxx::tree::element_optional const *)arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional___ref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (xercesc::DOMElement *) &(arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional___ref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_optional___ref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_optional___ref____SWIG_0(self, args);
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_element_optional_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional_present" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (bool)((xsd::cxx::tree::element_optional const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (xercesc::DOMElement *) &((xsd::cxx::tree::element_optional const *)arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  result = (xercesc::DOMElement *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_optional_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_optional_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_optional_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_optional::get() const\n"
    "    xsd::cxx::tree::element_optional::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_optional_set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  xercesc::DOMElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_optional_set" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_optional_set" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->set((xercesc::DOMElement const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional_set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  xercesc::DOMElement *arg2 = (xercesc::DOMElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_optional_set" "', argument " "2"" of type '" "xercesc::DOMElement *""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->set(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_optional_set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_optional_set__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_optional_set__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_optional_set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_optional::set(xercesc::DOMElement const &)\n"
    "    xsd::cxx::tree::element_optional::set(xercesc::DOMElement *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_optional_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = (xsd::cxx::tree::element_optional *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_optional_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_optional_reset" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *element_optional_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__element_optional, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = 0 ;
  xsd::cxx::tree::element_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_optional,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__eq__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__element_optional,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__eq__" "', argument " "2"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "2"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp2);
  result = (bool)xsd::cxx::tree::operator ==((xsd::cxx::tree::element_optional const &)*arg1,(xsd::cxx::tree::element_optional const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_optional *arg1 = 0 ;
  xsd::cxx::tree::element_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_optional,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__ne__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "1"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__element_optional,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__ne__" "', argument " "2"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "2"" of type '" "xsd::cxx::tree::element_optional const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::element_optional * >(argp2);
  result = (bool)xsd::cxx::tree::operator !=((xsd::cxx::tree::element_optional const &)*arg1,(xsd::cxx::tree::element_optional const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_sequence__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMDocument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_element_sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_sequence" "', argument " "1"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_sequence" "', argument " "1"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMDocument * >(argp1);
  result = (xsd::cxx::tree::element_sequence *)new xsd::cxx::tree::element_sequence(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_sequence, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_sequence__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg1 ;
  xercesc::DOMElement *arg2 = 0 ;
  xercesc::DOMDocument *arg3 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::element_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_element_sequence",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_sequence" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_sequence" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_element_sequence" "', argument " "3"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_sequence" "', argument " "3"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg3 = reinterpret_cast< xercesc::DOMDocument * >(argp3);
  result = (xsd::cxx::tree::element_sequence *)new xsd::cxx::tree::element_sequence(arg1,(xercesc::DOMElement const &)*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_sequence, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_sequence__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = 0 ;
  xercesc::DOMDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_element_sequence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_sequence,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_element_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_element_sequence" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_element_sequence" "', argument " "2"" of type '" "xercesc::DOMDocument &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMDocument * >(argp2);
  result = (xsd::cxx::tree::element_sequence *)new xsd::cxx::tree::element_sequence((xsd::cxx::tree::element_sequence const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_sequence, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_element_sequence(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_element_sequence__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_element_sequence__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xercesc__DOMDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_element_sequence__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_element_sequence'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::element_sequence(xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_sequence::element_sequence(xsd::cxx::tree::element_sequence::size_type,xercesc::DOMElement const &,xercesc::DOMDocument &)\n"
    "    xsd::cxx::tree::element_sequence::element_sequence(xsd::cxx::tree::element_sequence const &,xercesc::DOMDocument &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg2 ;
  xercesc::DOMElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:element_sequence_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_assign" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_assign" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_assign" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "element_sequence_assign" "', argument " "3"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_assign" "', argument " "3"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg3 = reinterpret_cast< xercesc::DOMElement * >(argp3);
  (arg1)->assign(arg2,(xercesc::DOMElement const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_resize" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_resize" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_resize" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg2 ;
  xercesc::DOMElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:element_sequence_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_resize" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_resize" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_resize" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "element_sequence_resize" "', argument " "3"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_resize" "', argument " "3"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg3 = reinterpret_cast< xercesc::DOMElement * >(argp3);
  (arg1)->resize(arg2,(xercesc::DOMElement const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_sequence_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_element_sequence_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::resize(xsd::cxx::tree::element_sequence::size_type)\n"
    "    xsd::cxx::tree::element_sequence::resize(xsd::cxx::tree::element_sequence::size_type,xercesc::DOMElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_size" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->size();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::size_type(static_cast< const xsd::cxx::tree::element_sequence::size_type& >(result))), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_max_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_max_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_max_size" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->max_size();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::size_type(static_cast< const xsd::cxx::tree::element_sequence::size_type& >(result))), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_capacity" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->capacity();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::size_type(static_cast< const xsd::cxx::tree::element_sequence::size_type& >(result))), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_empty" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (bool)((xsd::cxx::tree::element_sequence const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_reserve" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_reserve" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_reserve" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_clear" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_begin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::const_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_begin" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->begin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::const_iterator(static_cast< const xsd::cxx::tree::element_sequence::const_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_end__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::const_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_end" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->end();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::const_iterator(static_cast< const xsd::cxx::tree::element_sequence::const_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_begin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_begin" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::iterator(static_cast< const xsd::cxx::tree::element_sequence::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_begin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_begin__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_begin__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_begin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::begin() const\n"
    "    xsd::cxx::tree::element_sequence::begin()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_end__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_end" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::iterator(static_cast< const xsd::cxx::tree::element_sequence::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_end(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_end__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_end__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_end'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::end() const\n"
    "    xsd::cxx::tree::element_sequence::end()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_rbegin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::const_reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_rbegin" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->rbegin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::const_reverse_iterator(static_cast< const xsd::cxx::tree::element_sequence::const_reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_rend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::const_reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_rend" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = ((xsd::cxx::tree::element_sequence const *)arg1)->rend();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::const_reverse_iterator(static_cast< const xsd::cxx::tree::element_sequence::const_reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_rbegin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_rbegin" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::reverse_iterator(static_cast< const xsd::cxx::tree::element_sequence::reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_rbegin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_rbegin__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_rbegin__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_rbegin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::rbegin() const\n"
    "    xsd::cxx::tree::element_sequence::rbegin()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_rend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::element_sequence::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_rend" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::reverse_iterator(static_cast< const xsd::cxx::tree::element_sequence::reverse_iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_rend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_rend__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_rend__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_rend'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::rend() const\n"
    "    xsd::cxx::tree::element_sequence::rend()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_at__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_at",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_at" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xercesc::DOMElement *) &(arg1)->at(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_at__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_at",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_at" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_at" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xercesc::DOMElement *) &((xsd::cxx::tree::element_sequence const *)arg1)->at(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_at(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_sequence_at__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_sequence_at__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_at'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::at(xsd::cxx::tree::element_sequence::size_type)\n"
    "    xsd::cxx::tree::element_sequence::at(xsd::cxx::tree::element_sequence::size_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_front__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_front" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (xercesc::DOMElement *) &(arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_front__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_front" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (xercesc::DOMElement *) &((xsd::cxx::tree::element_sequence const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_front(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_front__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_front__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_front'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::front()\n"
    "    xsd::cxx::tree::element_sequence::front() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_back__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_back" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (xercesc::DOMElement *) &(arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_back__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_back" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  result = (xercesc::DOMElement *) &((xsd::cxx::tree::element_sequence const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_back(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_back__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_element_sequence_back__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_back'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::back()\n"
    "    xsd::cxx::tree::element_sequence::back() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_push_back__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xercesc::DOMElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_push_back" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_push_back" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_push_back" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->push_back((xercesc::DOMElement const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_push_back__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xercesc::DOMElement *arg2 = (xercesc::DOMElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_push_back" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_push_back" "', argument " "2"" of type '" "xercesc::DOMElement *""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_push_back(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_sequence_push_back__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_sequence_push_back__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_push_back'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::push_back(xercesc::DOMElement const &)\n"
    "    xsd::cxx::tree::element_sequence::push_back(xercesc::DOMElement *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:element_sequence_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_pop_back" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xsd::cxx::tree::element_sequence::iterator arg2 ;
  xercesc::DOMElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::element_sequence::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:element_sequence_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_insert" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'");
    } else {
      xsd::cxx::tree::element_sequence::iterator * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "element_sequence_insert" "', argument " "3"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_insert" "', argument " "3"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg3 = reinterpret_cast< xercesc::DOMElement * >(argp3);
  result = (arg1)->insert(arg2,(xercesc::DOMElement const &)*arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::iterator(static_cast< const xsd::cxx::tree::element_sequence::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xsd::cxx::tree::element_sequence::iterator arg2 ;
  xercesc::DOMElement *arg3 = (xercesc::DOMElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::element_sequence::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:element_sequence_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_insert" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'");
    } else {
      xsd::cxx::tree::element_sequence::iterator * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "element_sequence_insert" "', argument " "3"" of type '" "xercesc::DOMElement *""'"); 
  }
  arg3 = reinterpret_cast< xercesc::DOMElement * >(argp3);
  result = (arg1)->insert(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::iterator(static_cast< const xsd::cxx::tree::element_sequence::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_insert__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xsd::cxx::tree::element_sequence::iterator arg2 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type > arg3 ;
  xercesc::DOMElement *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:element_sequence_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_insert" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_insert" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'");
    } else {
      xsd::cxx::tree::element_sequence::iterator * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "element_sequence_insert" "', argument " "3"" of type '" "xsd::cxx::tree::element_sequence::size_type""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_insert" "', argument " "3"" of type '" "xsd::cxx::tree::element_sequence::size_type""'");
    } else {
      xsd::cxx::tree::element_sequence::size_type * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::size_type * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "element_sequence_insert" "', argument " "4"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_insert" "', argument " "4"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg4 = reinterpret_cast< xercesc::DOMElement * >(argp4);
  (arg1)->insert(arg2,arg3,(xercesc::DOMElement const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_element_sequence_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xercesc__DOMElement, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_element_sequence_insert__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_element_sequence_insert__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::insert(xsd::cxx::tree::element_sequence::iterator,xercesc::DOMElement const &)\n"
    "    xsd::cxx::tree::element_sequence::insert(xsd::cxx::tree::element_sequence::iterator,xercesc::DOMElement *)\n"
    "    xsd::cxx::tree::element_sequence::insert(xsd::cxx::tree::element_sequence::iterator,xsd::cxx::tree::element_sequence::size_type,xercesc::DOMElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xsd::cxx::tree::element_sequence::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::element_sequence::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_erase" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'");
    } else {
      xsd::cxx::tree::element_sequence::iterator * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::iterator(static_cast< const xsd::cxx::tree::element_sequence::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xsd::cxx::tree::element_sequence::iterator arg2 ;
  xsd::cxx::tree::element_sequence::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::element_sequence::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:element_sequence_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_erase" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_erase" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence::iterator""'");
    } else {
      xsd::cxx::tree::element_sequence::iterator * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "element_sequence_erase" "', argument " "3"" of type '" "xsd::cxx::tree::element_sequence::iterator""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_erase" "', argument " "3"" of type '" "xsd::cxx::tree::element_sequence::iterator""'");
    } else {
      xsd::cxx::tree::element_sequence::iterator * temp = reinterpret_cast< xsd::cxx::tree::element_sequence::iterator * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::element_sequence::iterator(static_cast< const xsd::cxx::tree::element_sequence::iterator& >(result))), SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_element_sequence_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_element_sequence_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_element_sequence_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'element_sequence_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::element_sequence::erase(xsd::cxx::tree::element_sequence::iterator)\n"
    "    xsd::cxx::tree::element_sequence::erase(xsd::cxx::tree::element_sequence::iterator,xsd::cxx::tree::element_sequence::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_element_sequence_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  xsd::cxx::tree::element_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:element_sequence_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "element_sequence_swap" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__element_sequence,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "element_sequence_swap" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "element_sequence_swap" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_element_sequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = (xsd::cxx::tree::element_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_element_sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__element_sequence, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_element_sequence" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *element_sequence_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__element_sequence, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = 0 ;
  xsd::cxx::tree::element_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_sequence,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__eq__" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__element_sequence,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__eq__" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp2);
  result = (bool)xsd::cxx::tree::operator ==((xsd::cxx::tree::element_sequence const &)*arg1,(xsd::cxx::tree::element_sequence const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::element_sequence *arg1 = 0 ;
  xsd::cxx::tree::element_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__element_sequence,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__ne__" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "1"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__element_sequence,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__ne__" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "2"" of type '" "xsd::cxx::tree::element_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::element_sequence * >(argp2);
  result = (bool)xsd::cxx::tree::operator !=((xsd::cxx::tree::element_sequence const &)*arg1,(xsd::cxx::tree::element_sequence const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_attribute_set_common(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::attribute_set_common *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_attribute_set_common")) SWIG_fail;
  result = (xsd::cxx::tree::attribute_set_common *)new xsd::cxx::tree::attribute_set_common();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__attribute_set_common, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_attribute_set_common(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::attribute_set_common *arg1 = (xsd::cxx::tree::attribute_set_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_attribute_set_common",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__attribute_set_common, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_attribute_set_common" "', argument " "1"" of type '" "xsd::cxx::tree::attribute_set_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::attribute_set_common * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *attribute_set_common_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__attribute_set_common, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_flags__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::flags *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_flags",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_flags" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (xsd::cxx::tree::flags *)new xsd::cxx::tree::flags(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__flags, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_flags__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::flags *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_flags")) SWIG_fail;
  result = (xsd::cxx::tree::flags *)new xsd::cxx::tree::flags();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__flags, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_flags(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_flags__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_flags__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_flags'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::flags::flags(unsigned long)\n"
    "    xsd::cxx::tree::flags::flags()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_flags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::flags *arg1 = (xsd::cxx::tree::flags *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_flags",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__flags, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_flags" "', argument " "1"" of type '" "xsd::cxx::tree::flags *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::flags * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *flags_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__flags, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_content_order__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::size_t arg1 ;
  std::size_t arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::content_order *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_content_order",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_content_order" "', argument " "1"" of type '" "std::size_t""'");
  } 
  arg1 = static_cast< std::size_t >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_content_order" "', argument " "2"" of type '" "std::size_t""'");
  } 
  arg2 = static_cast< std::size_t >(val2);
  result = (xsd::cxx::tree::content_order *)new xsd::cxx::tree::content_order(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__content_order, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_content_order__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::content_order *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_content_order",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_content_order" "', argument " "1"" of type '" "std::size_t""'");
  } 
  arg1 = static_cast< std::size_t >(val1);
  result = (xsd::cxx::tree::content_order *)new xsd::cxx::tree::content_order(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__content_order, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_content_order(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_content_order__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_content_order__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_content_order'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::content_order::content_order(std::size_t,std::size_t)\n"
    "    xsd::cxx::tree::content_order::content_order(std::size_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_content_order_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = (xsd::cxx::tree::content_order *) 0 ;
  std::size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:content_order_id_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__content_order, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "content_order_id_set" "', argument " "1"" of type '" "xsd::cxx::tree::content_order *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "content_order_id_set" "', argument " "2"" of type '" "std::size_t""'");
  } 
  arg2 = static_cast< std::size_t >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_content_order_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = (xsd::cxx::tree::content_order *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:content_order_id_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__content_order, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "content_order_id_get" "', argument " "1"" of type '" "xsd::cxx::tree::content_order *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  result =  ((arg1)->id);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_content_order_index_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = (xsd::cxx::tree::content_order *) 0 ;
  std::size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:content_order_index_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__content_order, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "content_order_index_set" "', argument " "1"" of type '" "xsd::cxx::tree::content_order *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "content_order_index_set" "', argument " "2"" of type '" "std::size_t""'");
  } 
  arg2 = static_cast< std::size_t >(val2);
  if (arg1) (arg1)->index = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_content_order_index_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = (xsd::cxx::tree::content_order *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:content_order_index_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__content_order, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "content_order_index_get" "', argument " "1"" of type '" "xsd::cxx::tree::content_order *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  result =  ((arg1)->index);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_content_order(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = (xsd::cxx::tree::content_order *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_content_order",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__content_order, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_content_order" "', argument " "1"" of type '" "xsd::cxx::tree::content_order *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *content_order_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__content_order, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___eq____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = 0 ;
  xsd::cxx::tree::content_order *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__content_order,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__eq__" "', argument " "1"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "1"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__content_order,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__eq__" "', argument " "2"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "2"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp2);
  result = (bool)xsd::cxx::tree::operator ==((xsd::cxx::tree::content_order const &)*arg1,(xsd::cxx::tree::content_order const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___eq__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___eq____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___eq____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__content_order, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__content_order, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___eq____SWIG_3(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap___ne____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = 0 ;
  xsd::cxx::tree::content_order *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__content_order,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__ne__" "', argument " "1"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "1"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__content_order,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__ne__" "', argument " "2"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "2"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp2);
  result = (bool)xsd::cxx::tree::operator !=((xsd::cxx::tree::content_order const &)*arg1,(xsd::cxx::tree::content_order const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___ne__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___ne____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__element_sequence, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___ne____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__content_order, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__content_order, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___ne____SWIG_3(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::content_order *arg1 = 0 ;
  xsd::cxx::tree::content_order *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:__lt__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__content_order,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lt__" "', argument " "1"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lt__" "', argument " "1"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__content_order,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lt__" "', argument " "2"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lt__" "', argument " "2"" of type '" "xsd::cxx::tree::content_order const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::content_order * >(argp2);
  result = (bool)xsd::cxx::tree::operator <((xsd::cxx::tree::content_order const &)*arg1,(xsd::cxx::tree::content_order const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::identity *arg1 = (xsd::cxx::tree::identity *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_identity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__identity, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_identity" "', argument " "1"" of type '" "xsd::cxx::tree::identity *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::identity * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_identity_before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::identity *arg1 = (xsd::cxx::tree::identity *) 0 ;
  xsd::cxx::tree::identity *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:identity_before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__identity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "identity_before" "', argument " "1"" of type '" "xsd::cxx::tree::identity const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::identity * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__identity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "identity_before" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "identity_before" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::identity * >(argp2);
  result = (bool)((xsd::cxx::tree::identity const *)arg1)->before((xsd::cxx::tree::identity const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_identity_throw_duplicate_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::identity *arg1 = (xsd::cxx::tree::identity *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:identity_throw_duplicate_id",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__identity, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "identity_throw_duplicate_id" "', argument " "1"" of type '" "xsd::cxx::tree::identity const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::identity * >(argp1);
  ((xsd::cxx::tree::identity const *)arg1)->throw_duplicate_id();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *identity_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__identity, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete__type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete__type",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete__type" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new__type")) SWIG_fail;
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::type *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new__type",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::type * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new__type" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xsd::cxx::tree::type const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::type *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new__type",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::type * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xsd::cxx::tree::type const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new__type",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::type * >(argp1);
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xsd::cxx::tree::type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_type__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__clone" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_type__clone" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::type *)((xsd::cxx::tree::_type const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__clone" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::type *)((xsd::cxx::tree::_type const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__clone" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::type *)((xsd::cxx::tree::_type const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_type__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__clone" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_type__clone" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::type *)(arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__clone" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__clone" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::type *)(arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__clone" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::type *)(arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__clone__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type__clone__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap__type__clone__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap__type__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_type__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::_clone(xsd::cxx::tree::flags,xsd::cxx::tree::container *) const\n"
    "    xsd::cxx::tree::_type::_clone(xsd::cxx::tree::flags) const\n"
    "    xsd::cxx::tree::_type::_clone() const\n"
    "    xsd::cxx::tree::_type::_clone(xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::_type::_clone(xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::_type::_clone()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMElement *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new__type",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new__type" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMElement *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new__type",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new__type",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMElement * >(argp1);
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMAttr *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new__type",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMAttr,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMAttr const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMAttr const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMAttr * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new__type" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xercesc::DOMAttr const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMAttr *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new__type",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMAttr,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMAttr const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMAttr const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMAttr * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xercesc::DOMAttr const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type__SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xercesc::DOMAttr *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new__type",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMAttr,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMAttr const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__type" "', argument " "1"" of type '" "xercesc::DOMAttr const &""'"); 
  }
  arg1 = reinterpret_cast< xercesc::DOMAttr * >(argp1);
  result = (xsd::cxx::tree::_type *)new xsd::cxx::tree::_type((xercesc::DOMAttr const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__type(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new__type__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new__type__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new__type__SWIG_10(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMAttr, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new__type__SWIG_13(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new__type__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMAttr, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new__type__SWIG_12(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new__type__SWIG_9(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMAttr, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new__type__SWIG_11(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new__type__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new__type__SWIG_8(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new__type'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::_type()\n"
    "    xsd::cxx::tree::_type::_type(xsd::cxx::tree::type const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::_type::_type(xsd::cxx::tree::type const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::_type::_type(xsd::cxx::tree::type const &)\n"
    "    xsd::cxx::tree::_type::_type(xercesc::DOMElement const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::_type::_type(xercesc::DOMElement const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::_type::_type(xercesc::DOMElement const &)\n"
    "    xsd::cxx::tree::_type::_type(xercesc::DOMAttr const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::_type::_type(xercesc::DOMAttr const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::_type::_type(xercesc::DOMAttr const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__type_dom_content__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::_type::dom_content_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type_dom_content",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::_type::dom_content_optional *) &((xsd::cxx::tree::_type const *)arg1)->dom_content();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::_type::dom_content_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type_dom_content",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::_type::dom_content_optional *) &(arg1)->dom_content();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__element_optional, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xercesc::DOMElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type_dom_content",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type_dom_content" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type_dom_content" "', argument " "2"" of type '" "xercesc::DOMElement const &""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->dom_content((xercesc::DOMElement const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xercesc::DOMElement *arg2 = (xercesc::DOMElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type_dom_content",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xercesc__DOMElement, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type_dom_content" "', argument " "2"" of type '" "xercesc::DOMElement *""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMElement * >(argp2);
  (arg1)->dom_content(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::_type::dom_content_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type_dom_content",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__element_optional,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type_dom_content" "', argument " "2"" of type '" "xsd::cxx::tree::_type::dom_content_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type_dom_content" "', argument " "2"" of type '" "xsd::cxx::tree::_type::dom_content_optional const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::_type::dom_content_optional * >(argp2);
  (arg1)->dom_content((xsd::cxx::tree::_type::dom_content_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type_dom_content__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type_dom_content__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type_dom_content__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMElement, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type_dom_content__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__element_optional, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type_dom_content__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_type_dom_content'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::dom_content() const\n"
    "    xsd::cxx::tree::_type::dom_content()\n"
    "    xsd::cxx::tree::_type::dom_content(xercesc::DOMElement const &)\n"
    "    xsd::cxx::tree::_type::dom_content(xercesc::DOMElement *)\n"
    "    xsd::cxx::tree::_type::dom_content(xsd::cxx::tree::_type::dom_content_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__type_dom_content_document__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMDocument *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type_dom_content_document",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content_document" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xercesc::DOMDocument *) &((xsd::cxx::tree::_type const *)arg1)->dom_content_document();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMDocument, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content_document__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMDocument *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type_dom_content_document",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_dom_content_document" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xercesc::DOMDocument *) &(arg1)->dom_content_document();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMDocument, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type_dom_content_document(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type_dom_content_document__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type_dom_content_document__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_type_dom_content_document'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::dom_content_document() const\n"
    "    xsd::cxx::tree::_type::dom_content_document()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__type_null_content(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type_null_content",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type_null_content" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (bool)((xsd::cxx::tree::_type const *)arg1)->null_content();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__container__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__container",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__container" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::container *)((xsd::cxx::tree::_type const *)arg1)->_container();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__container__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__container",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__container" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::container *)(arg1)->_container();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__container__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type__container",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__container" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__container" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  (arg1)->_container(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__container(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__container__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__container__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type__container__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_type__container'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::_container() const\n"
    "    xsd::cxx::tree::_type::_container()\n"
    "    xsd::cxx::tree::_type::_container(xsd::cxx::tree::container *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__type__root__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__root",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__root" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::container *)((xsd::cxx::tree::_type const *)arg1)->_root();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__root__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__root",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__root" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xsd::cxx::tree::container *)(arg1)->_root();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__root(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__root__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__root__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_type__root'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::_root() const\n"
    "    xsd::cxx::tree::_type::_root()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__type__node__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__node",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__node" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xercesc::DOMNode *)((xsd::cxx::tree::_type const *)arg1)->_node();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__node__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xercesc::DOMNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_type__node",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__node" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  result = (xercesc::DOMNode *)(arg1)->_node();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xercesc__DOMNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__node__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xercesc::DOMNode *arg2 = (xercesc::DOMNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type__node",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__node" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xercesc__DOMNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__node" "', argument " "2"" of type '" "xercesc::DOMNode *""'"); 
  }
  arg2 = reinterpret_cast< xercesc::DOMNode * >(argp2);
  (arg1)->_node(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__node(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__node__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap__type__node__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMNode, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap__type__node__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_type__node'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::_type::_node() const\n"
    "    xsd::cxx::tree::_type::_node()\n"
    "    xsd::cxx::tree::_type::_node(xercesc::DOMNode *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__type__register_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::identity *arg2 = 0 ;
  xsd::cxx::tree::type *arg3 = (xsd::cxx::tree::type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_type__register_id",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__register_id" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__identity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__register_id" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__register_id" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::identity * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_type__register_id" "', argument " "3"" of type '" "xsd::cxx::tree::type *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::type * >(argp3);
  (arg1)->_register_id((xsd::cxx::tree::identity const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__unregister_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::identity *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type__unregister_id",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__unregister_id" "', argument " "1"" of type '" "xsd::cxx::tree::_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__identity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__unregister_id" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__unregister_id" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::identity * >(argp2);
  (arg1)->_unregister_id((xsd::cxx::tree::identity const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__type__lookup_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::_type *arg1 = (xsd::cxx::tree::_type *) 0 ;
  xsd::cxx::tree::identity *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_type__lookup_id",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_type__lookup_id" "', argument " "1"" of type '" "xsd::cxx::tree::_type const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::_type * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__identity,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_type__lookup_id" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_type__lookup_id" "', argument " "2"" of type '" "xsd::cxx::tree::identity const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::identity * >(argp2);
  result = (xsd::cxx::tree::type *)((xsd::cxx::tree::_type const *)arg1)->_lookup_id((xsd::cxx::tree::identity const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_type_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree___type, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_schema_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::schema_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_schema_type")) SWIG_fail;
  result = (xsd::cxx::tree::schema_type *)new xsd::cxx::tree::schema_type();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__schema_type, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_schema_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::schema_type *arg1 = (xsd::cxx::tree::schema_type *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_schema_type",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__schema_type, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_schema_type" "', argument " "1"" of type '" "xsd::cxx::tree::schema_type *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::schema_type * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *schema_type_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__schema_type, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_sequence_common__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::sequence_common *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_sequence_common",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sequence_common" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::sequence_common *)new xsd::cxx::tree::sequence_common(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequence_common, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_sequence_common__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg1 ;
  xsd::cxx::tree::type *arg2 = 0 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::sequence_common *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_sequence_common",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sequence_common" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common::size_type""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sequence_common" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common::size_type""'");
    } else {
      xsd::cxx::tree::sequence_common::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence_common::size_type * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_sequence_common" "', argument " "2"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sequence_common" "', argument " "2"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::type * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_sequence_common" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::sequence_common *)new xsd::cxx::tree::sequence_common(arg1,(xsd::cxx::tree::type const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequence_common, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_sequence_common__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::sequence_common *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_sequence_common",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__sequence_common,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sequence_common" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sequence_common" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_sequence_common" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sequence_common" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_sequence_common" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::sequence_common *)new xsd::cxx::tree::sequence_common((xsd::cxx::tree::sequence_common const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequence_common, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_sequence_common(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_sequence_common__SWIG_0(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_sequence_common__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_sequence_common__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_sequence_common'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common::size_type,xsd::cxx::tree::type const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_sequence_common_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_size" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = ((xsd::cxx::tree::sequence_common const *)arg1)->size();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence_common::size_type(static_cast< const xsd::cxx::tree::sequence_common::size_type& >(result))), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_sizeInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_sizeInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_sizeInt" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = (int)((xsd::cxx::tree::sequence_common const *)arg1)->sizeInt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_max_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_max_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_max_size" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = ((xsd::cxx::tree::sequence_common const *)arg1)->max_size();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence_common::size_type(static_cast< const xsd::cxx::tree::sequence_common::size_type& >(result))), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_capacity" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = ((xsd::cxx::tree::sequence_common const *)arg1)->capacity();
  resultobj = SWIG_NewPointerObj((new xsd::cxx::tree::sequence_common::size_type(static_cast< const xsd::cxx::tree::sequence_common::size_type& >(result))), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_empty" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = (bool)((xsd::cxx::tree::sequence_common const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sequence_common_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_reserve" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sequence_common_reserve" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_reserve" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::size_type""'");
    } else {
      xsd::cxx::tree::sequence_common::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence_common::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_clear" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg2 ;
  xsd::cxx::tree::type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:sequence_common_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_assign" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sequence_common_assign" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_assign" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::size_type""'");
    } else {
      xsd::cxx::tree::sequence_common::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence_common::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "sequence_common_assign" "', argument " "3"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_assign" "', argument " "3"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::type * >(argp3);
  (arg1)->assign(arg2,(xsd::cxx::tree::type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_resize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg2 ;
  xsd::cxx::tree::type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:sequence_common_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_resize" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sequence_common_resize" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::size_type""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_resize" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::size_type""'");
    } else {
      xsd::cxx::tree::sequence_common::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence_common::size_type * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "sequence_common_resize" "', argument " "3"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_resize" "', argument " "3"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::type * >(argp3);
  (arg1)->resize(arg2,(xsd::cxx::tree::type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator > arg2 ;
  SwigValueWrapper< std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type > arg3 ;
  xsd::cxx::tree::type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:sequence_common_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_insert" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sequence_common_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::base_iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_insert" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::base_iterator""'");
    } else {
      xsd::cxx::tree::sequence_common::base_iterator * temp = reinterpret_cast< xsd::cxx::tree::sequence_common::base_iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "sequence_common_insert" "', argument " "3"" of type '" "xsd::cxx::tree::sequence_common::size_type""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_insert" "', argument " "3"" of type '" "xsd::cxx::tree::sequence_common::size_type""'");
    } else {
      xsd::cxx::tree::sequence_common::size_type * temp = reinterpret_cast< xsd::cxx::tree::sequence_common::size_type * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree___type,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "sequence_common_insert" "', argument " "4"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sequence_common_insert" "', argument " "4"" of type '" "xsd::cxx::tree::type const &""'"); 
  }
  arg4 = reinterpret_cast< xsd::cxx::tree::type * >(argp4);
  (arg1)->insert(arg2,arg3,(xsd::cxx::tree::type const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_container__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sequence_common_container__set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_container__set" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sequence_common_container__set" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  if (arg1) (arg1)->container_ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_container__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_container__get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_container__get" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = (xsd::cxx::tree::container *) ((arg1)->container_);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_v__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  xsd::cxx::tree::sequence_common::base_sequence *arg2 = (xsd::cxx::tree::sequence_common::base_sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sequence_common_v__set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_v__set" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sequence_common_v__set" "', argument " "2"" of type '" "xsd::cxx::tree::sequence_common::base_sequence *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::sequence_common::base_sequence * >(argp2);
  if (arg1) (arg1)->v_ = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sequence_common_v__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::sequence_common::base_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sequence_common_v__get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sequence_common_v__get" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  result = (xsd::cxx::tree::sequence_common::base_sequence *)& ((arg1)->v_);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_sequence_common(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::sequence_common *arg1 = (xsd::cxx::tree::sequence_common *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_sequence_common",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__sequence_common, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sequence_common" "', argument " "1"" of type '" "xsd::cxx::tree::sequence_common *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::sequence_common * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *sequence_common_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__sequence_common, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_tree_node_key_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable tree_node_key is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_tree_node_key_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(xml_schema::dom::tree_node_key), SWIGTYPE_p_XMLCh,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_SimRoot_Description__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::Description_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_Description",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_Description" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::Description_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->Description();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_Description__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::Description_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_Description",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_Description" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::Description_optional *) &(arg1)->Description();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_Description__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::Description_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_Description",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_Description" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_Description" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::Description_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_Description" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::Description_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::Description_type * >(argp2);
  (arg1)->Description((schema::simxml::SimModelCore::SimRoot::Description_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_Description__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::Description_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_Description",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_Description" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_Description" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::Description_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_Description" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::Description_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::Description_optional * >(argp2);
  (arg1)->Description((schema::simxml::SimModelCore::SimRoot::Description_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_Description__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_Description",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_Description" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_Description" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_Description" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Description(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_Description(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_Description__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_Description__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_Description__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_Description__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_Description__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_Description'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::Description() const\n"
    "    schema::simxml::SimModelCore::SimRoot::Description()\n"
    "    schema::simxml::SimModelCore::SimRoot::Description(schema::simxml::SimModelCore::SimRoot::Description_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::Description(schema::simxml::SimModelCore::SimRoot::Description_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::Description(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_ObjectOwnerHistory__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_ObjectOwnerHistory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->ObjectOwnerHistory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_ObjectOwnerHistory__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_ObjectOwnerHistory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional *) &(arg1)->ObjectOwnerHistory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_ObjectOwnerHistory__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_ObjectOwnerHistory",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type * >(argp2);
  (arg1)->ObjectOwnerHistory((schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_ObjectOwnerHistory__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_ObjectOwnerHistory",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional * >(argp2);
  (arg1)->ObjectOwnerHistory((schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_ObjectOwnerHistory__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_ObjectOwnerHistory",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_ObjectOwnerHistory" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ObjectOwnerHistory(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_ObjectOwnerHistory(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_ObjectOwnerHistory__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_ObjectOwnerHistory__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_ObjectOwnerHistory__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_ObjectOwnerHistory__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_ObjectOwnerHistory__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_ObjectOwnerHistory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory() const\n"
    "    schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory()\n"
    "    schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory(schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory(schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcGlobalID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_IfcGlobalID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcGlobalID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->IfcGlobalID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcGlobalID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_IfcGlobalID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcGlobalID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional *) &(arg1)->IfcGlobalID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcGlobalID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_IfcGlobalID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcGlobalID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_IfcGlobalID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_IfcGlobalID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type * >(argp2);
  (arg1)->IfcGlobalID((schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcGlobalID__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_IfcGlobalID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcGlobalID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_IfcGlobalID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_IfcGlobalID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional * >(argp2);
  (arg1)->IfcGlobalID((schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcGlobalID__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_IfcGlobalID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcGlobalID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_IfcGlobalID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_IfcGlobalID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->IfcGlobalID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcGlobalID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_IfcGlobalID__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_IfcGlobalID__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_IfcGlobalID__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_IfcGlobalID__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_IfcGlobalID__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_IfcGlobalID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcGlobalID() const\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcGlobalID()\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcGlobalID(schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcGlobalID(schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcGlobalID(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_IfcName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::IfcName_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->IfcName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_IfcName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::IfcName_optional *) &(arg1)->IfcName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_IfcName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_IfcName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_IfcName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::IfcName_type * >(argp2);
  (arg1)->IfcName((schema::simxml::SimModelCore::SimRoot::IfcName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::IfcName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_IfcName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_IfcName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_IfcName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::IfcName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::IfcName_optional * >(argp2);
  (arg1)->IfcName((schema::simxml::SimModelCore::SimRoot::IfcName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_IfcName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_IfcName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_IfcName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_IfcName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->IfcName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_IfcName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_IfcName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_IfcName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_IfcName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_IfcName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_IfcName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_IfcName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcName() const\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcName()\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcName(schema::simxml::SimModelCore::SimRoot::IfcName_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcName(schema::simxml::SimModelCore::SimRoot::IfcName_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::IfcName(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimUniqueID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimUniqueID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimUniqueID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SimUniqueID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimUniqueID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimUniqueID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimUniqueID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional *) &(arg1)->SimUniqueID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimUniqueID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimUniqueID_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimUniqueID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimUniqueID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimUniqueID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimUniqueID_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimUniqueID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimUniqueID_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type * >(argp2);
  (arg1)->SimUniqueID((schema::simxml::SimModelCore::SimRoot::SimUniqueID_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimUniqueID__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimUniqueID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimUniqueID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimUniqueID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimUniqueID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional * >(argp2);
  (arg1)->SimUniqueID((schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimUniqueID__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimUniqueID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimUniqueID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimUniqueID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimUniqueID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimUniqueID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimUniqueID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimUniqueID__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimUniqueID__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimUniqueID__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimUniqueID__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimUniqueID__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SimUniqueID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SimUniqueID() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SimUniqueID()\n"
    "    schema::simxml::SimModelCore::SimRoot::SimUniqueID(schema::simxml::SimModelCore::SimRoot::SimUniqueID_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimUniqueID(schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimUniqueID(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimModelType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimModelType_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SimModelType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimModelType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimModelType_optional *) &(arg1)->SimModelType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimModelType_type * >(argp2);
  (arg1)->SimModelType((schema::simxml::SimModelCore::SimRoot::SimModelType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimModelType_optional * >(argp2);
  (arg1)->SimModelType((schema::simxml::SimModelCore::SimRoot::SimModelType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimModelType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimModelType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SimModelType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelType() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelType()\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelType(schema::simxml::SimModelCore::SimRoot::SimModelType_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelType(schema::simxml::SimModelCore::SimRoot::SimModelType_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelType(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelSubtype__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimModelSubtype",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelSubtype" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SimModelSubtype();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelSubtype__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimModelSubtype",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelSubtype" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional *) &(arg1)->SimModelSubtype();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelSubtype__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelSubtype",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelSubtype" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelSubtype" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelSubtype" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type * >(argp2);
  (arg1)->SimModelSubtype((schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelSubtype__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelSubtype",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelSubtype" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelSubtype" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelSubtype" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional * >(argp2);
  (arg1)->SimModelSubtype((schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelSubtype__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelSubtype",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelSubtype" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelSubtype" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelSubtype" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelSubtype(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelSubtype(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimModelSubtype__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimModelSubtype__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelSubtype__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelSubtype__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelSubtype__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SimModelSubtype'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelSubtype() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelSubtype()\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelSubtype(schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelSubtype(schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelSubtype(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimModelName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimModelName_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SimModelName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SimModelName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SimModelName_optional *) &(arg1)->SimModelName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimModelName_type * >(argp2);
  (arg1)->SimModelName((schema::simxml::SimModelCore::SimRoot::SimModelName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SimModelName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SimModelName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SimModelName_optional * >(argp2);
  (arg1)->SimModelName((schema::simxml::SimModelCore::SimRoot::SimModelName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SimModelName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SimModelName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SimModelName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SimModelName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SimModelName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimModelName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SimModelName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SimModelName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SimModelName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelName() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelName()\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelName(schema::simxml::SimModelCore::SimRoot::SimModelName_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelName(schema::simxml::SimModelCore::SimRoot::SimModelName_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimModelName(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelSchema__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceModelSchema",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelSchema" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SourceModelSchema();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelSchema__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceModelSchema",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelSchema" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional *) &(arg1)->SourceModelSchema();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelSchema__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceModelSchema",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelSchema" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceModelSchema" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceModelSchema" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type * >(argp2);
  (arg1)->SourceModelSchema((schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelSchema__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceModelSchema",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelSchema" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceModelSchema" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceModelSchema" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional * >(argp2);
  (arg1)->SourceModelSchema((schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelSchema__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceModelSchema",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelSchema" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceModelSchema" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceModelSchema" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SourceModelSchema(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelSchema(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceModelSchema__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceModelSchema__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceModelSchema__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceModelSchema__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceModelSchema__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SourceModelSchema'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelSchema() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelSchema()\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelSchema(schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelSchema(schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelSchema(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelObjectType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceModelObjectType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SourceModelObjectType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelObjectType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceModelObjectType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional *) &(arg1)->SourceModelObjectType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelObjectType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceModelObjectType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceModelObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceModelObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type * >(argp2);
  (arg1)->SourceModelObjectType((schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelObjectType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceModelObjectType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceModelObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceModelObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional * >(argp2);
  (arg1)->SourceModelObjectType((schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelObjectType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceModelObjectType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceModelObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceModelObjectType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceModelObjectType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SourceModelObjectType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceModelObjectType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceModelObjectType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceModelObjectType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceModelObjectType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceModelObjectType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceModelObjectType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SourceModelObjectType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelObjectType() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelObjectType()\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelObjectType(schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelObjectType(schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceModelObjectType(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceLibraryEntryID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SourceLibraryEntryID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceLibraryEntryID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional *) &(arg1)->SourceLibraryEntryID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceLibraryEntryID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type * >(argp2);
  (arg1)->SourceLibraryEntryID((schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryID__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceLibraryEntryID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional * >(argp2);
  (arg1)->SourceLibraryEntryID((schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryID__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceLibraryEntryID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceLibraryEntryID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SourceLibraryEntryID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceLibraryEntryID__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceLibraryEntryID__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceLibraryEntryID__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceLibraryEntryID__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceLibraryEntryID__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SourceLibraryEntryID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID()\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID(schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID(schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryRef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceLibraryEntryRef",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional *) &((schema::simxml::SimModelCore::SimRoot const *)arg1)->SourceLibraryEntryRef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryRef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_SourceLibraryEntryRef",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional *) &(arg1)->SourceLibraryEntryRef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryRef__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceLibraryEntryRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type * >(argp2);
  (arg1)->SourceLibraryEntryRef((schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryRef__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceLibraryEntryRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional * >(argp2);
  (arg1)->SourceLibraryEntryRef((schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryRef__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_SourceLibraryEntryRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_SourceLibraryEntryRef" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SourceLibraryEntryRef(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_SourceLibraryEntryRef(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceLibraryEntryRef__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_SourceLibraryEntryRef__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceLibraryEntryRef__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceLibraryEntryRef__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_SourceLibraryEntryRef__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_SourceLibraryEntryRef'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef() const\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef()\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef(schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef(schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot_RefId__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_RefId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_RefId" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = ((schema::simxml::SimModelCore::SimRoot const *)arg1)->RefId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_RefId__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot_RefId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_RefId" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (arg1)->RefId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_RefId__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_RefId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_RefId" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_RefId" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_RefId" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp2);
  (arg1)->RefId((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_RefId__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot_RefId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot_RefId" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__id_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot_RefId" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot_RefId" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->RefId(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot_RefId(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_RefId__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot_RefId__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_RefId__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__id_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot_RefId__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot_RefId'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::RefId() const\n"
    "    schema::simxml::SimModelCore::SimRoot::RefId()\n"
    "    schema::simxml::SimModelCore::SimRoot::RefId(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::RefId(::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimRoot")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimRoot",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimRoot" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimRoot",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimRoot" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((schema::simxml::SimModelCore::SimRoot const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((schema::simxml::SimModelCore::SimRoot const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot *)new schema::simxml::SimModelCore::SimRoot((schema::simxml::SimModelCore::SimRoot const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRoot(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimRoot__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRoot__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRoot__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRoot__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimRoot__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimRoot__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimRoot__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimRoot__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimRoot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot()\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(schema::simxml::SimModelCore::SimRoot const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(schema::simxml::SimModelCore::SimRoot const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimRoot::SimRoot(schema::simxml::SimModelCore::SimRoot const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRoot__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimRoot__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimRoot__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRoot *)((schema::simxml::SimModelCore::SimRoot const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRoot__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRoot__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRoot__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRoot *)((schema::simxml::SimModelCore::SimRoot const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRoot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRoot__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRoot__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  result = (schema::simxml::SimModelCore::SimRoot *)((schema::simxml::SimModelCore::SimRoot const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRoot__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRoot__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRoot__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimRoot__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRoot__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRoot::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimRoot::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimRoot::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot *arg1 = (schema::simxml::SimModelCore::SimRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimRoot" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimRoot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimObjectDefinition_Decomposes__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectDefinition_Decomposes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition_Decomposes" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional *) &((schema::simxml::SimModelCore::SimObjectDefinition const *)arg1)->Decomposes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition_Decomposes__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectDefinition_Decomposes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition_Decomposes" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional *) &(arg1)->Decomposes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition_Decomposes__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectDefinition_Decomposes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition_Decomposes" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectDefinition_Decomposes" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectDefinition_Decomposes" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type * >(argp2);
  (arg1)->Decomposes((schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition_Decomposes__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectDefinition_Decomposes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition_Decomposes" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectDefinition_Decomposes" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectDefinition_Decomposes" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional * >(argp2);
  (arg1)->Decomposes((schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition_Decomposes__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectDefinition_Decomposes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition_Decomposes" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectDefinition_Decomposes" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectDefinition_Decomposes" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Decomposes(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition_Decomposes(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectDefinition_Decomposes__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectDefinition_Decomposes__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectDefinition_Decomposes__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectDefinition_Decomposes__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectDefinition_Decomposes__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectDefinition_Decomposes'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::Decomposes() const\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::Decomposes()\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::Decomposes(schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::Decomposes(schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::Decomposes(::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimObjectDefinition")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObjectDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObjectDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObjectDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObjectDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObjectDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((schema::simxml::SimModelCore::SimObjectDefinition const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObjectDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((schema::simxml::SimModelCore::SimObjectDefinition const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)new schema::simxml::SimModelCore::SimObjectDefinition((schema::simxml::SimModelCore::SimObjectDefinition const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectDefinition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimObjectDefinition__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectDefinition__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectDefinition__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectDefinition__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObjectDefinition__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObjectDefinition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObjectDefinition__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObjectDefinition__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimObjectDefinition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition()\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(schema::simxml::SimModelCore::SimObjectDefinition const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(schema::simxml::SimModelCore::SimObjectDefinition const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::SimObjectDefinition(schema::simxml::SimModelCore::SimObjectDefinition const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimObjectDefinition__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimObjectDefinition__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)((schema::simxml::SimModelCore::SimObjectDefinition const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectDefinition__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)((schema::simxml::SimModelCore::SimObjectDefinition const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectDefinition__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectDefinition *)((schema::simxml::SimModelCore::SimObjectDefinition const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectDefinition__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectDefinition__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectDefinition__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimObjectDefinition__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectDefinition__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimObjectDefinition::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimObjectDefinition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimObjectDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimObjectDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectDefinition * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimObjectDefinition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimObject_TypeDefinition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::TypeDefinition_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_TypeDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_TypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::TypeDefinition_optional *) &((schema::simxml::SimModelCore::SimObject const *)arg1)->TypeDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_TypeDefinition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::TypeDefinition_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_TypeDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_TypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::TypeDefinition_optional *) &(arg1)->TypeDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_TypeDefinition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::TypeDefinition_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_TypeDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_TypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_TypeDefinition" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::TypeDefinition_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_TypeDefinition" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::TypeDefinition_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::TypeDefinition_type * >(argp2);
  (arg1)->TypeDefinition((schema::simxml::SimModelCore::SimObject::TypeDefinition_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_TypeDefinition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::TypeDefinition_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_TypeDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_TypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_TypeDefinition" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::TypeDefinition_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_TypeDefinition" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::TypeDefinition_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::TypeDefinition_optional * >(argp2);
  (arg1)->TypeDefinition((schema::simxml::SimModelCore::SimObject::TypeDefinition_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_TypeDefinition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_TypeDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_TypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_TypeDefinition" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_TypeDefinition" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->TypeDefinition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_TypeDefinition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_TypeDefinition__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_TypeDefinition__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_TypeDefinition__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_TypeDefinition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_TypeDefinition__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObject_TypeDefinition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObject::TypeDefinition() const\n"
    "    schema::simxml::SimModelCore::SimObject::TypeDefinition()\n"
    "    schema::simxml::SimModelCore::SimObject::TypeDefinition(schema::simxml::SimModelCore::SimObject::TypeDefinition_type const &)\n"
    "    schema::simxml::SimModelCore::SimObject::TypeDefinition(schema::simxml::SimModelCore::SimObject::TypeDefinition_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObject::TypeDefinition(::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_ObjectType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::ObjectType_optional *) &((schema::simxml::SimModelCore::SimObject const *)arg1)->ObjectType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_ObjectType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::ObjectType_optional *) &(arg1)->ObjectType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_ObjectType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_ObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_ObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::ObjectType_type * >(argp2);
  (arg1)->ObjectType((schema::simxml::SimModelCore::SimObject::ObjectType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_ObjectType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_ObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_ObjectType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::ObjectType_optional * >(argp2);
  (arg1)->ObjectType((schema::simxml::SimModelCore::SimObject::ObjectType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_ObjectType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_ObjectType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_ObjectType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ObjectType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_ObjectType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_ObjectType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_ObjectType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_ObjectType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_ObjectType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObject_ObjectType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectType() const\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectType()\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectType(schema::simxml::SimModelCore::SimObject::ObjectType_type const &)\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectType(schema::simxml::SimModelCore::SimObject::ObjectType_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectType(::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectCreationParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_ObjectCreationParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional *) &((schema::simxml::SimModelCore::SimObject const *)arg1)->ObjectCreationParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectCreationParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_ObjectCreationParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional *) &(arg1)->ObjectCreationParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectCreationParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_ObjectCreationParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_ObjectCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_ObjectCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type * >(argp2);
  (arg1)->ObjectCreationParams((schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectCreationParams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_ObjectCreationParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_ObjectCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_ObjectCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional * >(argp2);
  (arg1)->ObjectCreationParams((schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectCreationParams__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_ObjectCreationParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_ObjectCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_ObjectCreationParams" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_ObjectCreationParams" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ObjectCreationParams(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_ObjectCreationParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_ObjectCreationParams__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_ObjectCreationParams__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_ObjectCreationParams__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_ObjectCreationParams__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_ObjectCreationParams__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObject_ObjectCreationParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectCreationParams() const\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectCreationParams()\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectCreationParams(schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type const &)\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectCreationParams(schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObject::ObjectCreationParams(::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObject_IsTemplateObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_IsTemplateObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional *) &((schema::simxml::SimModelCore::SimObject const *)arg1)->IsTemplateObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_IsTemplateObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject_IsTemplateObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional *) &(arg1)->IsTemplateObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_IsTemplateObject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::IsTemplateObject_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimObject::IsTemplateObject_type temp2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_IsTemplateObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimObject_IsTemplateObject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::IsTemplateObject_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimObject::IsTemplateObject_type >(val2);
  arg2 = &temp2;
  (arg1)->IsTemplateObject((schema::simxml::SimModelCore::SimObject::IsTemplateObject_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_IsTemplateObject__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject_IsTemplateObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject_IsTemplateObject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject_IsTemplateObject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional * >(argp2);
  (arg1)->IsTemplateObject((schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject_IsTemplateObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_IsTemplateObject__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject_IsTemplateObject__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject_IsTemplateObject__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimObject_IsTemplateObject__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObject_IsTemplateObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObject::IsTemplateObject() const\n"
    "    schema::simxml::SimModelCore::SimObject::IsTemplateObject()\n"
    "    schema::simxml::SimModelCore::SimObject::IsTemplateObject(schema::simxml::SimModelCore::SimObject::IsTemplateObject_type const &)\n"
    "    schema::simxml::SimModelCore::SimObject::IsTemplateObject(schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimObject")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObject",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObject" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObject",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObject" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((schema::simxml::SimModelCore::SimObject const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((schema::simxml::SimModelCore::SimObject const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject *)new schema::simxml::SimModelCore::SimObject((schema::simxml::SimModelCore::SimObject const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimObject__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObject__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObject__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObject__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObject__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObject__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObject__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObject__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject()\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(schema::simxml::SimModelCore::SimObject const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(schema::simxml::SimModelCore::SimObject const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObject::SimObject(schema::simxml::SimModelCore::SimObject const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObject__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimObject__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimObject__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObject *)((schema::simxml::SimModelCore::SimObject const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObject__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObject *)((schema::simxml::SimModelCore::SimObject const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObject__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObject__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimObject *)((schema::simxml::SimModelCore::SimObject const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObject__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObject__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObject__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimObject__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObject__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObject::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimObject::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimObject::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObject *arg1 = (schema::simxml::SimModelCore::SimObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObject * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimGroup_ParentGroups__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::ParentGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_ParentGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ParentGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::ParentGroups_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->ParentGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ParentGroups__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::ParentGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_ParentGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ParentGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::ParentGroups_optional *) &(arg1)->ParentGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ParentGroups__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::ParentGroups_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ParentGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ParentGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ParentGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ParentGroups_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ParentGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ParentGroups_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::ParentGroups_type * >(argp2);
  (arg1)->ParentGroups((schema::simxml::SimModelCore::SimGroup::ParentGroups_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ParentGroups__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::ParentGroups_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ParentGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ParentGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ParentGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ParentGroups_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ParentGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ParentGroups_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::ParentGroups_optional * >(argp2);
  (arg1)->ParentGroups((schema::simxml::SimModelCore::SimGroup::ParentGroups_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ParentGroups__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ParentGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ParentGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ParentGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ParentGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ParentGroups(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ParentGroups(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_ParentGroups__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_ParentGroups__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ParentGroups__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ParentGroups__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ParentGroups__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_ParentGroups'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::ParentGroups() const\n"
    "    schema::simxml::SimModelCore::SimGroup::ParentGroups()\n"
    "    schema::simxml::SimModelCore::SimGroup::ParentGroups(schema::simxml::SimModelCore::SimGroup::ParentGroups_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::ParentGroups(schema::simxml::SimModelCore::SimGroup::ParentGroups_optional const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::ParentGroups(::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup_ContainingBuildings__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_ContainingBuildings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ContainingBuildings" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->ContainingBuildings();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ContainingBuildings__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_ContainingBuildings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ContainingBuildings" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional *) &(arg1)->ContainingBuildings();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ContainingBuildings__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ContainingBuildings",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ContainingBuildings" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ContainingBuildings" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ContainingBuildings" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type * >(argp2);
  (arg1)->ContainingBuildings((schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ContainingBuildings__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ContainingBuildings",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ContainingBuildings" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ContainingBuildings" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ContainingBuildings" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional * >(argp2);
  (arg1)->ContainingBuildings((schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ContainingBuildings__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ContainingBuildings",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ContainingBuildings" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ContainingBuildings" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ContainingBuildings" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ContainingBuildings(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ContainingBuildings(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_ContainingBuildings__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_ContainingBuildings__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ContainingBuildings__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ContainingBuildings__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ContainingBuildings__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_ContainingBuildings'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::ContainingBuildings() const\n"
    "    schema::simxml::SimModelCore::SimGroup::ContainingBuildings()\n"
    "    schema::simxml::SimModelCore::SimGroup::ContainingBuildings(schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::ContainingBuildings(schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::ContainingBuildings(::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup_NevronSchematicLayout__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_NevronSchematicLayout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->NevronSchematicLayout();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_NevronSchematicLayout__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_NevronSchematicLayout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional *) &(arg1)->NevronSchematicLayout();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_NevronSchematicLayout__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_NevronSchematicLayout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_NevronSchematicLayout" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type * >(argp2);
  (arg1)->NevronSchematicLayout((schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_NevronSchematicLayout__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_NevronSchematicLayout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_NevronSchematicLayout" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional * >(argp2);
  (arg1)->NevronSchematicLayout((schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_NevronSchematicLayout__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_NevronSchematicLayout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_NevronSchematicLayout" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_NevronSchematicLayout" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->NevronSchematicLayout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_NevronSchematicLayout(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_NevronSchematicLayout__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_NevronSchematicLayout__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_NevronSchematicLayout__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_NevronSchematicLayout__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_NevronSchematicLayout__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_NevronSchematicLayout'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout() const\n"
    "    schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout()\n"
    "    schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout(schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout(schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout(::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup_TemplatesForMembers__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_TemplatesForMembers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_TemplatesForMembers" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->TemplatesForMembers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_TemplatesForMembers__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_TemplatesForMembers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_TemplatesForMembers" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional *) &(arg1)->TemplatesForMembers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_TemplatesForMembers__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_TemplatesForMembers",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_TemplatesForMembers" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_TemplatesForMembers" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_TemplatesForMembers" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type * >(argp2);
  (arg1)->TemplatesForMembers((schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_TemplatesForMembers__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_TemplatesForMembers",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_TemplatesForMembers" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_TemplatesForMembers" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_TemplatesForMembers" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional * >(argp2);
  (arg1)->TemplatesForMembers((schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_TemplatesForMembers__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_TemplatesForMembers",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_TemplatesForMembers" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_TemplatesForMembers" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_TemplatesForMembers" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->TemplatesForMembers(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_TemplatesForMembers(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_TemplatesForMembers__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_TemplatesForMembers__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_TemplatesForMembers__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_TemplatesForMembers__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_TemplatesForMembers__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_TemplatesForMembers'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::TemplatesForMembers() const\n"
    "    schema::simxml::SimModelCore::SimGroup::TemplatesForMembers()\n"
    "    schema::simxml::SimModelCore::SimGroup::TemplatesForMembers(schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::TemplatesForMembers(schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::TemplatesForMembers(::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup_HasTemplateChanged__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_HasTemplateChanged",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_HasTemplateChanged" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->HasTemplateChanged();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_HasTemplateChanged__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_HasTemplateChanged",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_HasTemplateChanged" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional *) &(arg1)->HasTemplateChanged();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_HasTemplateChanged__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_type temp2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_HasTemplateChanged",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_HasTemplateChanged" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimGroup_HasTemplateChanged" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_type >(val2);
  arg2 = &temp2;
  (arg1)->HasTemplateChanged((schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_HasTemplateChanged__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_HasTemplateChanged",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_HasTemplateChanged" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_HasTemplateChanged" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_HasTemplateChanged" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional * >(argp2);
  (arg1)->HasTemplateChanged((schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_HasTemplateChanged(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_HasTemplateChanged__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_HasTemplateChanged__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_HasTemplateChanged__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimGroup_HasTemplateChanged__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_HasTemplateChanged'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::HasTemplateChanged() const\n"
    "    schema::simxml::SimModelCore::SimGroup::HasTemplateChanged()\n"
    "    schema::simxml::SimModelCore::SimGroup::HasTemplateChanged(schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::HasTemplateChanged(schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup_ChangeFromTemplate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_ChangeFromTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->ChangeFromTemplate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ChangeFromTemplate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_ChangeFromTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional *) &(arg1)->ChangeFromTemplate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ChangeFromTemplate__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ChangeFromTemplate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ChangeFromTemplate" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type * >(argp2);
  (arg1)->ChangeFromTemplate((schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ChangeFromTemplate__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ChangeFromTemplate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ChangeFromTemplate" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional * >(argp2);
  (arg1)->ChangeFromTemplate((schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ChangeFromTemplate__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_ChangeFromTemplate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_ChangeFromTemplate" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_ChangeFromTemplate" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ChangeFromTemplate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_ChangeFromTemplate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_ChangeFromTemplate__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_ChangeFromTemplate__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ChangeFromTemplate__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ChangeFromTemplate__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_ChangeFromTemplate__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_ChangeFromTemplate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate() const\n"
    "    schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate()\n"
    "    schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate(schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate(schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate(::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup_MemberUsedForDiagrams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_MemberUsedForDiagrams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional *) &((schema::simxml::SimModelCore::SimGroup const *)arg1)->MemberUsedForDiagrams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_MemberUsedForDiagrams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup_MemberUsedForDiagrams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional *) &(arg1)->MemberUsedForDiagrams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_MemberUsedForDiagrams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_MemberUsedForDiagrams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type * >(argp2);
  (arg1)->MemberUsedForDiagrams((schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_MemberUsedForDiagrams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_MemberUsedForDiagrams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional * >(argp2);
  (arg1)->MemberUsedForDiagrams((schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_MemberUsedForDiagrams__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup_MemberUsedForDiagrams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup_MemberUsedForDiagrams" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->MemberUsedForDiagrams(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup_MemberUsedForDiagrams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_MemberUsedForDiagrams__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup_MemberUsedForDiagrams__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_MemberUsedForDiagrams__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_MemberUsedForDiagrams__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup_MemberUsedForDiagrams__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup_MemberUsedForDiagrams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams() const\n"
    "    schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams()\n"
    "    schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams(schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams(schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams(::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimGroup")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimGroup",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimGroup" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimGroup",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimGroup" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((schema::simxml::SimModelCore::SimGroup const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((schema::simxml::SimModelCore::SimGroup const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup *)new schema::simxml::SimModelCore::SimGroup((schema::simxml::SimModelCore::SimGroup const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimGroup__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimGroup__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimGroup__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimGroup__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimGroup__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimGroup__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimGroup__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup()\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(schema::simxml::SimModelCore::SimGroup const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(schema::simxml::SimModelCore::SimGroup const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimGroup::SimGroup(schema::simxml::SimModelCore::SimGroup const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGroup__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimGroup__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimGroup__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimGroup *)((schema::simxml::SimModelCore::SimGroup const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGroup__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGroup__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGroup__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimGroup *)((schema::simxml::SimModelCore::SimGroup const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGroup__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGroup__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  result = (schema::simxml::SimModelCore::SimGroup *)((schema::simxml::SimModelCore::SimGroup const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGroup__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGroup__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGroup__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimGroup__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGroup__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGroup::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimGroup::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimGroup::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGroup *arg1 = (schema::simxml::SimModelCore::SimGroup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimGroup" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGroup *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGroup * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimGroup_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_LongName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement_LongName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_LongName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional *) &((schema::simxml::SimModelCore::SimSpatialStructureElement const *)arg1)->LongName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_LongName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement_LongName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_LongName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional *) &(arg1)->LongName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_LongName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_LongName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_LongName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_LongName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_LongName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type * >(argp2);
  (arg1)->LongName((schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_LongName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_LongName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_LongName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_LongName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_LongName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional * >(argp2);
  (arg1)->LongName((schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_LongName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_LongName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_LongName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_LongName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_LongName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->LongName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_LongName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement_LongName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement_LongName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_LongName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_LongName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_LongName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimSpatialStructureElement_LongName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::LongName() const\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::LongName()\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::LongName(schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::LongName(schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::LongName(::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_CompositionType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement_CompositionType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional *) &((schema::simxml::SimModelCore::SimSpatialStructureElement const *)arg1)->CompositionType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_CompositionType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement_CompositionType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional *) &(arg1)->CompositionType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_CompositionType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_CompositionType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type * >(argp2);
  (arg1)->CompositionType((schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_CompositionType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_CompositionType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional * >(argp2);
  (arg1)->CompositionType((schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_CompositionType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_CompositionType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_CompositionType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->CompositionType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_CompositionType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement_CompositionType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement_CompositionType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_CompositionType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_CompositionType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_CompositionType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimSpatialStructureElement_CompositionType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType() const\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType()\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType(schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType(schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType(::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_Placement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement_Placement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional *) &((schema::simxml::SimModelCore::SimSpatialStructureElement const *)arg1)->Placement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_Placement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement_Placement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional *) &(arg1)->Placement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_Placement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_Placement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type * >(argp2);
  (arg1)->Placement((schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_Placement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_Placement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional * >(argp2);
  (arg1)->Placement((schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_Placement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement_Placement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement_Placement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement_Placement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Placement(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement_Placement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement_Placement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement_Placement__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_Placement__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_Placement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement_Placement__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimSpatialStructureElement_Placement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::Placement() const\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::Placement()\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::Placement(schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::Placement(schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::Placement(::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimSpatialStructureElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimSpatialStructureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimSpatialStructureElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimSpatialStructureElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimSpatialStructureElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimSpatialStructureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimSpatialStructureElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimSpatialStructureElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((schema::simxml::SimModelCore::SimSpatialStructureElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimSpatialStructureElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((schema::simxml::SimModelCore::SimSpatialStructureElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimSpatialStructureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)new schema::simxml::SimModelCore::SimSpatialStructureElement((schema::simxml::SimModelCore::SimSpatialStructureElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimSpatialStructureElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimSpatialStructureElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimSpatialStructureElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimSpatialStructureElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimSpatialStructureElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimSpatialStructureElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimSpatialStructureElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimSpatialStructureElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimSpatialStructureElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimSpatialStructureElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement()\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(schema::simxml::SimModelCore::SimSpatialStructureElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(schema::simxml::SimModelCore::SimSpatialStructureElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::SimSpatialStructureElement(schema::simxml::SimModelCore::SimSpatialStructureElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimSpatialStructureElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimSpatialStructureElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)((schema::simxml::SimModelCore::SimSpatialStructureElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimSpatialStructureElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimSpatialStructureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimSpatialStructureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)((schema::simxml::SimModelCore::SimSpatialStructureElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimSpatialStructureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimSpatialStructureElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimSpatialStructureElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimSpatialStructureElement *)((schema::simxml::SimModelCore::SimSpatialStructureElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimSpatialStructureElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimSpatialStructureElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimSpatialStructureElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimSpatialStructureElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimSpatialStructureElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimSpatialStructureElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimSpatialStructureElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimSpatialStructureElement *arg1 = (schema::simxml::SimModelCore::SimSpatialStructureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimSpatialStructureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimSpatialStructureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimSpatialStructureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimSpatialStructureElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimSpatialStructureElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimResourceObject_AssignedToGroups__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject_AssignedToGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional *) &((schema::simxml::SimModelCore::SimResourceObject const *)arg1)->AssignedToGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_AssignedToGroups__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject_AssignedToGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional *) &(arg1)->AssignedToGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_AssignedToGroups__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_AssignedToGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type * >(argp2);
  (arg1)->AssignedToGroups((schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_AssignedToGroups__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_AssignedToGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional * >(argp2);
  (arg1)->AssignedToGroups((schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_AssignedToGroups__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_AssignedToGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_AssignedToGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_AssignedToGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->AssignedToGroups(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_AssignedToGroups(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject_AssignedToGroups__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject_AssignedToGroups__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_AssignedToGroups__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_AssignedToGroups__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_AssignedToGroups__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimResourceObject_AssignedToGroups'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups() const\n"
    "    schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups()\n"
    "    schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups(schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups(schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups(::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_SelectedPropertyGroups__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject_SelectedPropertyGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional *) &((schema::simxml::SimModelCore::SimResourceObject const *)arg1)->SelectedPropertyGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_SelectedPropertyGroups__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject_SelectedPropertyGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional *) &(arg1)->SelectedPropertyGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_SelectedPropertyGroups__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_SelectedPropertyGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type * >(argp2);
  (arg1)->SelectedPropertyGroups((schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_SelectedPropertyGroups__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_SelectedPropertyGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional * >(argp2);
  (arg1)->SelectedPropertyGroups((schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_SelectedPropertyGroups__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_SelectedPropertyGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_SelectedPropertyGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SelectedPropertyGroups(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_SelectedPropertyGroups(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject_SelectedPropertyGroups__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject_SelectedPropertyGroups__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_SelectedPropertyGroups__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_SelectedPropertyGroups__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_SelectedPropertyGroups__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimResourceObject_SelectedPropertyGroups'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups() const\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups()\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups(schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups(schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups(::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_IsTemplateObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject_IsTemplateObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional *) &((schema::simxml::SimModelCore::SimResourceObject const *)arg1)->IsTemplateObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_IsTemplateObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject_IsTemplateObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional *) &(arg1)->IsTemplateObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_IsTemplateObject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_type temp2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_IsTemplateObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimResourceObject_IsTemplateObject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_type >(val2);
  arg2 = &temp2;
  (arg1)->IsTemplateObject((schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_IsTemplateObject__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject_IsTemplateObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject_IsTemplateObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject_IsTemplateObject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject_IsTemplateObject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional * >(argp2);
  (arg1)->IsTemplateObject((schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject_IsTemplateObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject_IsTemplateObject__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject_IsTemplateObject__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject_IsTemplateObject__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimResourceObject_IsTemplateObject__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimResourceObject_IsTemplateObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject() const\n"
    "    schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject()\n"
    "    schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject(schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_type const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject(schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimResourceObject")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimResourceObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimResourceObject",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimResourceObject" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimResourceObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimResourceObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimResourceObject",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimResourceObject" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((schema::simxml::SimModelCore::SimResourceObject const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimResourceObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((schema::simxml::SimModelCore::SimResourceObject const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimResourceObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject *)new schema::simxml::SimModelCore::SimResourceObject((schema::simxml::SimModelCore::SimResourceObject const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimResourceObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimResourceObject__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimResourceObject__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimResourceObject__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimResourceObject__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimResourceObject__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimResourceObject__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimResourceObject__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimResourceObject__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimResourceObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject()\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(schema::simxml::SimModelCore::SimResourceObject const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(schema::simxml::SimModelCore::SimResourceObject const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimResourceObject::SimResourceObject(schema::simxml::SimModelCore::SimResourceObject const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimResourceObject__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimResourceObject__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimResourceObject__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimResourceObject *)((schema::simxml::SimModelCore::SimResourceObject const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimResourceObject__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimResourceObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimResourceObject__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimResourceObject *)((schema::simxml::SimModelCore::SimResourceObject const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimResourceObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimResourceObject__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimResourceObject__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  result = (schema::simxml::SimModelCore::SimResourceObject *)((schema::simxml::SimModelCore::SimResourceObject const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimResourceObject__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimResourceObject__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimResourceObject__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimResourceObject__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimResourceObject__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimResourceObject::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimResourceObject::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimResourceObject::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimResourceObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimResourceObject *arg1 = (schema::simxml::SimModelCore::SimResourceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimResourceObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimResourceObject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimResourceObject *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimResourceObject * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimResourceObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForProject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault_DefaultForProject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForProject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional *) &((schema::simxml::SimModelCore::SimAppDefault const *)arg1)->DefaultForProject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForProject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault_DefaultForProject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForProject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional *) &(arg1)->DefaultForProject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForProject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForProject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForProject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForProject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForProject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type * >(argp2);
  (arg1)->DefaultForProject((schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForProject__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForProject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForProject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForProject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForProject" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional * >(argp2);
  (arg1)->DefaultForProject((schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForProject__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForProject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForProject" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForProject" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForProject" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->DefaultForProject(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForProject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault_DefaultForProject__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault_DefaultForProject__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForProject__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForProject__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForProject__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimAppDefault_DefaultForProject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForProject() const\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForProject()\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForProject(schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForProject(schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForProject(::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForPerson__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault_DefaultForPerson",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional *) &((schema::simxml::SimModelCore::SimAppDefault const *)arg1)->DefaultForPerson();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForPerson__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault_DefaultForPerson",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional *) &(arg1)->DefaultForPerson();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForPerson__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForPerson",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForPerson" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type * >(argp2);
  (arg1)->DefaultForPerson((schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForPerson__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForPerson",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForPerson" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional * >(argp2);
  (arg1)->DefaultForPerson((schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForPerson__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForPerson",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForPerson" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForPerson" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->DefaultForPerson(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForPerson(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault_DefaultForPerson__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault_DefaultForPerson__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForPerson__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForPerson__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForPerson__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimAppDefault_DefaultForPerson'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson() const\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson()\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson(schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson(schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson(::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForUnitSystem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault_DefaultForUnitSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional *) &((schema::simxml::SimModelCore::SimAppDefault const *)arg1)->DefaultForUnitSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForUnitSystem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault_DefaultForUnitSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional *) &(arg1)->DefaultForUnitSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForUnitSystem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForUnitSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type * >(argp2);
  (arg1)->DefaultForUnitSystem((schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForUnitSystem__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForUnitSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional * >(argp2);
  (arg1)->DefaultForUnitSystem((schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForUnitSystem__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault_DefaultForUnitSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault_DefaultForUnitSystem" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->DefaultForUnitSystem(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault_DefaultForUnitSystem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault_DefaultForUnitSystem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault_DefaultForUnitSystem__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForUnitSystem__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForUnitSystem__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault_DefaultForUnitSystem__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimAppDefault_DefaultForUnitSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem() const\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem()\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem(schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem(schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem(::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimAppDefault")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimAppDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimAppDefault",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimAppDefault" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimAppDefault",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimAppDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimAppDefault",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimAppDefault" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((schema::simxml::SimModelCore::SimAppDefault const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimAppDefault",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((schema::simxml::SimModelCore::SimAppDefault const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimAppDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault *)new schema::simxml::SimModelCore::SimAppDefault((schema::simxml::SimModelCore::SimAppDefault const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimAppDefault(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimAppDefault__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimAppDefault__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimAppDefault__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimAppDefault__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimAppDefault__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimAppDefault__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimAppDefault__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimAppDefault__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimAppDefault'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault()\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(schema::simxml::SimModelCore::SimAppDefault const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(schema::simxml::SimModelCore::SimAppDefault const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimAppDefault::SimAppDefault(schema::simxml::SimModelCore::SimAppDefault const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimAppDefault__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimAppDefault__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimAppDefault__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimAppDefault *)((schema::simxml::SimModelCore::SimAppDefault const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimAppDefault__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimAppDefault__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimAppDefault__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimAppDefault *)((schema::simxml::SimModelCore::SimAppDefault const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimAppDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimAppDefault__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimAppDefault__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  result = (schema::simxml::SimModelCore::SimAppDefault *)((schema::simxml::SimModelCore::SimAppDefault const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimAppDefault__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimAppDefault__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimAppDefault__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimAppDefault__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimAppDefault__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimAppDefault::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimAppDefault::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimAppDefault::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimAppDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimAppDefault *arg1 = (schema::simxml::SimModelCore::SimAppDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimAppDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimAppDefault" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimAppDefault *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimAppDefault * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimAppDefault_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimRepresentationItem")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimRepresentationItem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimRepresentationItem" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimRepresentationItem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimRepresentationItem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimRepresentationItem" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((schema::simxml::SimModelCore::SimRepresentationItem const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimRepresentationItem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((schema::simxml::SimModelCore::SimRepresentationItem const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)new schema::simxml::SimModelCore::SimRepresentationItem((schema::simxml::SimModelCore::SimRepresentationItem const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentationItem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimRepresentationItem__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRepresentationItem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRepresentationItem__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRepresentationItem__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimRepresentationItem__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimRepresentationItem__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimRepresentationItem__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimRepresentationItem__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimRepresentationItem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem()\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(schema::simxml::SimModelCore::SimRepresentationItem const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(schema::simxml::SimModelCore::SimRepresentationItem const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::SimRepresentationItem(schema::simxml::SimModelCore::SimRepresentationItem const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRepresentationItem__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimRepresentationItem *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimRepresentationItem__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimRepresentationItem__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)((schema::simxml::SimModelCore::SimRepresentationItem const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentationItem__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimRepresentationItem *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentationItem__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)((schema::simxml::SimModelCore::SimRepresentationItem const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentationItem__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimRepresentationItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentationItem__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentationItem *)((schema::simxml::SimModelCore::SimRepresentationItem const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentationItem__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentationItem__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentationItem__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimRepresentationItem__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRepresentationItem__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimRepresentationItem::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimRepresentationItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimRepresentationItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentationItem *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentationItem * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimRepresentationItem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimProfileDefinition_ProfileType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional *) &((schema::simxml::ResourcesGeometry::SimProfileDefinition const *)arg1)->ProfileType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimProfileDefinition_ProfileType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional *) &(arg1)->ProfileType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition_ProfileType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition_ProfileType" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition_ProfileType" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type * >(argp2);
  (arg1)->ProfileType((schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition_ProfileType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition_ProfileType" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition_ProfileType" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional * >(argp2);
  (arg1)->ProfileType((schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition_ProfileType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition_ProfileType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition_ProfileType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ProfileType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimProfileDefinition_ProfileType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimProfileDefinition_ProfileType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition_ProfileType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition_ProfileType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition_ProfileType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimProfileDefinition_ProfileType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType() const\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType()\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType(schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type const &)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType(schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional const &)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType(::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimProfileDefinition_ProfileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileName" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional *) &((schema::simxml::ResourcesGeometry::SimProfileDefinition const *)arg1)->ProfileName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimProfileDefinition_ProfileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileName" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional *) &(arg1)->ProfileName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition_ProfileName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileName" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition_ProfileName" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition_ProfileName" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type * >(argp2);
  (arg1)->ProfileName((schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition_ProfileName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileName" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition_ProfileName" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition_ProfileName" "', argument " "2"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional * >(argp2);
  (arg1)->ProfileName((schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition_ProfileName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition_ProfileName" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition_ProfileName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition_ProfileName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ProfileName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition_ProfileName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimProfileDefinition_ProfileName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimProfileDefinition_ProfileName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition_ProfileName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition_ProfileName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition_ProfileName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimProfileDefinition_ProfileName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName() const\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName()\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName(schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type const &)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName(schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional const &)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName(::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimProfileDefinition")) SWIG_fail;
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimProfileDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimProfileDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimProfileDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimProfileDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimProfileDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimProfileDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimProfileDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((schema::simxml::ResourcesGeometry::SimProfileDefinition const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimProfileDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((schema::simxml::ResourcesGeometry::SimProfileDefinition const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimProfileDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)new schema::simxml::ResourcesGeometry::SimProfileDefinition((schema::simxml::ResourcesGeometry::SimProfileDefinition const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimProfileDefinition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimProfileDefinition__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimProfileDefinition__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimProfileDefinition__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimProfileDefinition__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimProfileDefinition__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimProfileDefinition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimProfileDefinition__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimProfileDefinition__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimProfileDefinition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition()\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(::xercesc::DOMElement const &)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(schema::simxml::ResourcesGeometry::SimProfileDefinition const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(schema::simxml::ResourcesGeometry::SimProfileDefinition const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::SimProfileDefinition(schema::simxml::ResourcesGeometry::SimProfileDefinition const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimProfileDefinition__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimProfileDefinition__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)((schema::simxml::ResourcesGeometry::SimProfileDefinition const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimProfileDefinition__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimProfileDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimProfileDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)((schema::simxml::ResourcesGeometry::SimProfileDefinition const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimProfileDefinition__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimProfileDefinition__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  result = (schema::simxml::ResourcesGeometry::SimProfileDefinition *)((schema::simxml::ResourcesGeometry::SimProfileDefinition const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimProfileDefinition__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimProfileDefinition__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimProfileDefinition__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimProfileDefinition__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimProfileDefinition__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::ResourcesGeometry::SimProfileDefinition::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimProfileDefinition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeometry::SimProfileDefinition *arg1 = (schema::simxml::ResourcesGeometry::SimProfileDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimProfileDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimProfileDefinition" "', argument " "1"" of type '" "schema::simxml::ResourcesGeometry::SimProfileDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeometry::SimProfileDefinition * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimProfileDefinition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectIndex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_ObjectIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->ObjectIndex();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectIndex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_ObjectIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional *) &(arg1)->ObjectIndex();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectIndex__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_ObjectIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_type >(val2);
  arg2 = &temp2;
  (arg1)->ObjectIndex((schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectIndex__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_ObjectIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_ObjectIndex" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional * >(argp2);
  (arg1)->ObjectIndex((schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectIndex(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_ObjectIndex__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_ObjectIndex__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_ObjectIndex__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_ObjectIndex__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_ObjectIndex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex(schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex(schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_ObjectName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->ObjectName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_ObjectName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional *) &(arg1)->ObjectName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_ObjectName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_ObjectName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_ObjectName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type * >(argp2);
  (arg1)->ObjectName((schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_ObjectName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_ObjectName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_ObjectName" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional * >(argp2);
  (arg1)->ObjectName((schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectName__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_ObjectName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_ObjectName" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_ObjectName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_ObjectName" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ObjectName(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_ObjectName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_ObjectName__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_ObjectName__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_ObjectName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_ObjectName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_ObjectName__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_ObjectName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectName() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectName()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectName(schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectName(schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::ObjectName(::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_IsAutoGenerated__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_IsAutoGenerated",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->IsAutoGenerated();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_IsAutoGenerated__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_IsAutoGenerated",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional *) &(arg1)->IsAutoGenerated();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_IsAutoGenerated__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_type temp2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_IsAutoGenerated",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_type >(val2);
  arg2 = &temp2;
  (arg1)->IsAutoGenerated((schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_IsAutoGenerated__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_IsAutoGenerated",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_IsAutoGenerated" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional * >(argp2);
  (arg1)->IsAutoGenerated((schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_IsAutoGenerated(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_IsAutoGenerated__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_IsAutoGenerated__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_IsAutoGenerated__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_IsAutoGenerated__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_IsAutoGenerated'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated(schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated(schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementX__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementX",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->LocalPlacementX();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementX__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementX",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional *) &(arg1)->LocalPlacementX();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementX__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_type >(val2);
  arg2 = &temp2;
  (arg1)->LocalPlacementX((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementX__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_LocalPlacementX" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional * >(argp2);
  (arg1)->LocalPlacementX((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementX(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementX__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementX__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementX__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementX__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_LocalPlacementX'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementY__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->LocalPlacementY();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementY__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional *) &(arg1)->LocalPlacementY();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementY__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_type >(val2);
  arg2 = &temp2;
  (arg1)->LocalPlacementY((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementY__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_LocalPlacementY" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional * >(argp2);
  (arg1)->LocalPlacementY((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementY(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementY__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementY__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementY__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementY__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_LocalPlacementY'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementZ__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->LocalPlacementZ();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementZ__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional *) &(arg1)->LocalPlacementZ();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementZ__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_type >(val2);
  arg2 = &temp2;
  (arg1)->LocalPlacementZ((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementZ__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_LocalPlacementZ" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional * >(argp2);
  (arg1)->LocalPlacementZ((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementZ(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementZ__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementZ__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementZ__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementZ__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_LocalPlacementZ'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementRotation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->LocalPlacementRotation();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_LocalPlacementRotation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional *) &(arg1)->LocalPlacementRotation();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementRotation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_type >(val2);
  arg2 = &temp2;
  (arg1)->LocalPlacementRotation((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_LocalPlacementRotation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_LocalPlacementRotation" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional * >(argp2);
  (arg1)->LocalPlacementRotation((schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_LocalPlacementRotation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_LocalPlacementRotation__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_LocalPlacementRotation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation(schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionX__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_XDirectionX",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->XDirectionX();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionX__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_XDirectionX",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional *) &(arg1)->XDirectionX();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionX__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_XDirectionX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_XDirectionX" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_type >(val2);
  arg2 = &temp2;
  (arg1)->XDirectionX((schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionX__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_XDirectionX",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionX" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_XDirectionX" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_XDirectionX" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional * >(argp2);
  (arg1)->XDirectionX((schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionX(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_XDirectionX__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_XDirectionX__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_XDirectionX__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_XDirectionX__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_XDirectionX'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX(schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX(schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionY__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_XDirectionY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->XDirectionY();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionY__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_XDirectionY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional *) &(arg1)->XDirectionY();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionY__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_XDirectionY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_XDirectionY" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_type >(val2);
  arg2 = &temp2;
  (arg1)->XDirectionY((schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionY__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_XDirectionY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionY" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_XDirectionY" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_XDirectionY" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional * >(argp2);
  (arg1)->XDirectionY((schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionY(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_XDirectionY__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_XDirectionY__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_XDirectionY__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_XDirectionY__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_XDirectionY'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY(schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY(schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionZ__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_XDirectionZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional *) &((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->XDirectionZ();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionZ__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams_XDirectionZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional *) &(arg1)->XDirectionZ();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionZ__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_XDirectionZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_type >(val2);
  arg2 = &temp2;
  (arg1)->XDirectionZ((schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionZ__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams_XDirectionZ",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams_XDirectionZ" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional * >(argp2);
  (arg1)->XDirectionZ((schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams_XDirectionZ(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_XDirectionZ__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams_XDirectionZ__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams_XDirectionZ__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimBldgModelParams_XDirectionZ__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams_XDirectionZ'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ() const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ(schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ(schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimBldgModelParams")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimBldgModelParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimBldgModelParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimBldgModelParams" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimBldgModelParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimBldgModelParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimBldgModelParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimBldgModelParams" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((schema::simxml::SimModelCore::SimBldgModelParams const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimBldgModelParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((schema::simxml::SimModelCore::SimBldgModelParams const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimBldgModelParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)new schema::simxml::SimModelCore::SimBldgModelParams((schema::simxml::SimModelCore::SimBldgModelParams const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBldgModelParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimBldgModelParams__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimBldgModelParams__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimBldgModelParams__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimBldgModelParams__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimBldgModelParams__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimBldgModelParams__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimBldgModelParams__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimBldgModelParams__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimBldgModelParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams()\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(schema::simxml::SimModelCore::SimBldgModelParams const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(schema::simxml::SimModelCore::SimBldgModelParams const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::SimBldgModelParams(schema::simxml::SimModelCore::SimBldgModelParams const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimBldgModelParams__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimBldgModelParams__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBldgModelParams__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBldgModelParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBldgModelParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBldgModelParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBldgModelParams__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBldgModelParams__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  result = (schema::simxml::SimModelCore::SimBldgModelParams *)((schema::simxml::SimModelCore::SimBldgModelParams const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBldgModelParams__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBldgModelParams__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBldgModelParams__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimBldgModelParams__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBldgModelParams__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimBldgModelParams::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimBldgModelParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBldgModelParams *arg1 = (schema::simxml::SimModelCore::SimBldgModelParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimBldgModelParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimBldgModelParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBldgModelParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBldgModelParams * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimBldgModelParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimTopologicalRepresentationItem")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimTopologicalRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimTopologicalRepresentationItem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimTopologicalRepresentationItem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimTopologicalRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimTopologicalRepresentationItem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimTopologicalRepresentationItem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimTopologicalRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)new schema::simxml::SimModelCore::SimTopologicalRepresentationItem((schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTopologicalRepresentationItem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimTopologicalRepresentationItem__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimTopologicalRepresentationItem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimTopologicalRepresentationItem__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimTopologicalRepresentationItem__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimTopologicalRepresentationItem__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimTopologicalRepresentationItem__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimTopologicalRepresentationItem__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimTopologicalRepresentationItem__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimTopologicalRepresentationItem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem()\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::SimTopologicalRepresentationItem(schema::simxml::SimModelCore::SimTopologicalRepresentationItem const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimTopologicalRepresentationItem__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimTopologicalRepresentationItem__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)((schema::simxml::SimModelCore::SimTopologicalRepresentationItem const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimTopologicalRepresentationItem__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimTopologicalRepresentationItem__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)((schema::simxml::SimModelCore::SimTopologicalRepresentationItem const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimTopologicalRepresentationItem__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimTopologicalRepresentationItem__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimTopologicalRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  result = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *)((schema::simxml::SimModelCore::SimTopologicalRepresentationItem const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimTopologicalRepresentationItem__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimTopologicalRepresentationItem__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimTopologicalRepresentationItem__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimTopologicalRepresentationItem__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimTopologicalRepresentationItem__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimTopologicalRepresentationItem::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimTopologicalRepresentationItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTopologicalRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimTopologicalRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimTopologicalRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTopologicalRepresentationItem *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTopologicalRepresentationItem * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimTopologicalRepresentationItem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimElement_GeometricRepresentations__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_GeometricRepresentations",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_GeometricRepresentations" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional *) &((schema::simxml::SimModelCore::SimElement const *)arg1)->GeometricRepresentations();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_GeometricRepresentations__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_GeometricRepresentations",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_GeometricRepresentations" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional *) &(arg1)->GeometricRepresentations();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_GeometricRepresentations__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_GeometricRepresentations",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_GeometricRepresentations" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_GeometricRepresentations" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_GeometricRepresentations" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type * >(argp2);
  (arg1)->GeometricRepresentations((schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_GeometricRepresentations__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_GeometricRepresentations",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_GeometricRepresentations" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_GeometricRepresentations" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_GeometricRepresentations" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional * >(argp2);
  (arg1)->GeometricRepresentations((schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_GeometricRepresentations__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_GeometricRepresentations",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_GeometricRepresentations" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_GeometricRepresentations" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_GeometricRepresentations" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->GeometricRepresentations(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_GeometricRepresentations(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_GeometricRepresentations__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_GeometricRepresentations__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_GeometricRepresentations__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_GeometricRepresentations__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_GeometricRepresentations__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement_GeometricRepresentations'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::GeometricRepresentations() const\n"
    "    schema::simxml::SimModelCore::SimElement::GeometricRepresentations()\n"
    "    schema::simxml::SimModelCore::SimElement::GeometricRepresentations(schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::GeometricRepresentations(schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional const &)\n"
    "    schema::simxml::SimModelCore::SimElement::GeometricRepresentations(::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimElement_ContainingSpatialStructure__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_ContainingSpatialStructure",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional *) &((schema::simxml::SimModelCore::SimElement const *)arg1)->ContainingSpatialStructure();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_ContainingSpatialStructure__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_ContainingSpatialStructure",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional *) &(arg1)->ContainingSpatialStructure();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_ContainingSpatialStructure__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_ContainingSpatialStructure",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_ContainingSpatialStructure" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type * >(argp2);
  (arg1)->ContainingSpatialStructure((schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_ContainingSpatialStructure__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_ContainingSpatialStructure",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_ContainingSpatialStructure" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional * >(argp2);
  (arg1)->ContainingSpatialStructure((schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_ContainingSpatialStructure__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_ContainingSpatialStructure",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_ContainingSpatialStructure" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_ContainingSpatialStructure" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ContainingSpatialStructure(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_ContainingSpatialStructure(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_ContainingSpatialStructure__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_ContainingSpatialStructure__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_ContainingSpatialStructure__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_ContainingSpatialStructure__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_ContainingSpatialStructure__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement_ContainingSpatialStructure'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure() const\n"
    "    schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure()\n"
    "    schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure(schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure(schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional const &)\n"
    "    schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure(::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimElement_AssignedToGroups__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_AssignedToGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional *) &((schema::simxml::SimModelCore::SimElement const *)arg1)->AssignedToGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_AssignedToGroups__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_AssignedToGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional *) &(arg1)->AssignedToGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_AssignedToGroups__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::AssignedToGroups_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_AssignedToGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::AssignedToGroups_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::AssignedToGroups_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type * >(argp2);
  (arg1)->AssignedToGroups((schema::simxml::SimModelCore::SimElement::AssignedToGroups_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_AssignedToGroups__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_AssignedToGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_AssignedToGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional * >(argp2);
  (arg1)->AssignedToGroups((schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_AssignedToGroups__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_AssignedToGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_AssignedToGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_AssignedToGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_AssignedToGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->AssignedToGroups(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_AssignedToGroups(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_AssignedToGroups__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_AssignedToGroups__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_AssignedToGroups__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_AssignedToGroups__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_AssignedToGroups__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement_AssignedToGroups'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::AssignedToGroups() const\n"
    "    schema::simxml::SimModelCore::SimElement::AssignedToGroups()\n"
    "    schema::simxml::SimModelCore::SimElement::AssignedToGroups(schema::simxml::SimModelCore::SimElement::AssignedToGroups_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::AssignedToGroups(schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional const &)\n"
    "    schema::simxml::SimModelCore::SimElement::AssignedToGroups(::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimElement_Placement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::Placement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_Placement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::Placement_optional *) &((schema::simxml::SimModelCore::SimElement const *)arg1)->Placement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Placement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::Placement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_Placement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::Placement_optional *) &(arg1)->Placement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Placement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::Placement_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_Placement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Placement_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Placement_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::Placement_type * >(argp2);
  (arg1)->Placement((schema::simxml::SimModelCore::SimElement::Placement_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Placement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::Placement_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_Placement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Placement_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_Placement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Placement_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::Placement_optional * >(argp2);
  (arg1)->Placement((schema::simxml::SimModelCore::SimElement::Placement_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Placement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_Placement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Placement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_Placement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_Placement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Placement(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Placement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_Placement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_Placement__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_Placement__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_Placement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_Placement__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement_Placement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::Placement() const\n"
    "    schema::simxml::SimModelCore::SimElement::Placement()\n"
    "    schema::simxml::SimModelCore::SimElement::Placement(schema::simxml::SimModelCore::SimElement::Placement_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::Placement(schema::simxml::SimModelCore::SimElement::Placement_optional const &)\n"
    "    schema::simxml::SimModelCore::SimElement::Placement(::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimElement_Tag__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::Tag_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_Tag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Tag" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::Tag_optional *) &((schema::simxml::SimModelCore::SimElement const *)arg1)->Tag();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Tag__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::Tag_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_Tag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Tag" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::Tag_optional *) &(arg1)->Tag();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Tag__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::Tag_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_Tag",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Tag" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_Tag" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Tag_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_Tag" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Tag_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::Tag_type * >(argp2);
  (arg1)->Tag((schema::simxml::SimModelCore::SimElement::Tag_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Tag__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::Tag_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_Tag",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Tag" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_Tag" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Tag_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_Tag" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::Tag_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::Tag_optional * >(argp2);
  (arg1)->Tag((schema::simxml::SimModelCore::SimElement::Tag_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Tag__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_Tag",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_Tag" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_Tag" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_Tag" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Tag(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_Tag(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_Tag__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_Tag__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_Tag__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_Tag__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_Tag__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement_Tag'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::Tag() const\n"
    "    schema::simxml::SimModelCore::SimElement::Tag()\n"
    "    schema::simxml::SimModelCore::SimElement::Tag(schema::simxml::SimModelCore::SimElement::Tag_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::Tag(schema::simxml::SimModelCore::SimElement::Tag_optional const &)\n"
    "    schema::simxml::SimModelCore::SimElement::Tag(::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimElement_SelectedPropertyGroups__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_SelectedPropertyGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional *) &((schema::simxml::SimModelCore::SimElement const *)arg1)->SelectedPropertyGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_SelectedPropertyGroups__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement_SelectedPropertyGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional *) &(arg1)->SelectedPropertyGroups();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_SelectedPropertyGroups__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_SelectedPropertyGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type * >(argp2);
  (arg1)->SelectedPropertyGroups((schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_SelectedPropertyGroups__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_SelectedPropertyGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_SelectedPropertyGroups" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional * >(argp2);
  (arg1)->SelectedPropertyGroups((schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_SelectedPropertyGroups__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement_SelectedPropertyGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement_SelectedPropertyGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement_SelectedPropertyGroups" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SelectedPropertyGroups(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement_SelectedPropertyGroups(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_SelectedPropertyGroups__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement_SelectedPropertyGroups__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_SelectedPropertyGroups__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_SelectedPropertyGroups__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement_SelectedPropertyGroups__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement_SelectedPropertyGroups'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups() const\n"
    "    schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups()\n"
    "    schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups(schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups(schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional const &)\n"
    "    schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups(::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((schema::simxml::SimModelCore::SimElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((schema::simxml::SimModelCore::SimElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement *)new schema::simxml::SimModelCore::SimElement((schema::simxml::SimModelCore::SimElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement()\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(schema::simxml::SimModelCore::SimElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(schema::simxml::SimModelCore::SimElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimElement::SimElement(schema::simxml::SimModelCore::SimElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimElement *)((schema::simxml::SimModelCore::SimElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimElement *)((schema::simxml::SimModelCore::SimElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimElement *)((schema::simxml::SimModelCore::SimElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimElement *arg1 = (schema::simxml::SimModelCore::SimElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimDistributionElement_DockedToPort__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionElement_DockedToPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement_DockedToPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional *) &((schema::simxml::SimModelCore::SimDistributionElement const *)arg1)->DockedToPort();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement_DockedToPort__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionElement_DockedToPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement_DockedToPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional *) &(arg1)->DockedToPort();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement_DockedToPort__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionElement_DockedToPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement_DockedToPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionElement_DockedToPort" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionElement_DockedToPort" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type * >(argp2);
  (arg1)->DockedToPort((schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement_DockedToPort__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionElement_DockedToPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement_DockedToPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionElement_DockedToPort" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionElement_DockedToPort" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional * >(argp2);
  (arg1)->DockedToPort((schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement_DockedToPort__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionElement_DockedToPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement_DockedToPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionElement_DockedToPort" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionElement_DockedToPort" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->DockedToPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement_DockedToPort(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionElement_DockedToPort__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionElement_DockedToPort__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionElement_DockedToPort__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionElement_DockedToPort__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionElement_DockedToPort__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionElement_DockedToPort'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::DockedToPort() const\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::DockedToPort()\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::DockedToPort(schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::DockedToPort(schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::DockedToPort(::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimDistributionElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimDistributionElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimDistributionElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimDistributionElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimDistributionElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimDistributionElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((schema::simxml::SimModelCore::SimDistributionElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimDistributionElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((schema::simxml::SimModelCore::SimDistributionElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)new schema::simxml::SimModelCore::SimDistributionElement((schema::simxml::SimModelCore::SimDistributionElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimDistributionElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimDistributionElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimDistributionElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimDistributionElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimDistributionElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimDistributionElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement()\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(schema::simxml::SimModelCore::SimDistributionElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(schema::simxml::SimModelCore::SimDistributionElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::SimDistributionElement(schema::simxml::SimModelCore::SimDistributionElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimDistributionElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimDistributionElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)((schema::simxml::SimModelCore::SimDistributionElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionElement *)((schema::simxml::SimModelCore::SimDistributionElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionElement *)((schema::simxml::SimModelCore::SimDistributionElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimDistributionElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimDistributionElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimDistributionElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionElement *arg1 = (schema::simxml::SimModelCore::SimDistributionElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimDistributionElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimDistributionElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimDistributionElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionControlElement_AssignedToFlowElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional *) &((schema::simxml::SimModelCore::SimDistributionControlElement const *)arg1)->AssignedToFlowElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionControlElement_AssignedToFlowElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional *) &(arg1)->AssignedToFlowElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement_AssignedToFlowElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type * >(argp2);
  (arg1)->AssignedToFlowElement((schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement_AssignedToFlowElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional * >(argp2);
  (arg1)->AssignedToFlowElement((schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement_AssignedToFlowElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement_AssignedToFlowElement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->AssignedToFlowElement(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_AssignedToFlowElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement_AssignedToFlowElement__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionControlElement_AssignedToFlowElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement() const\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement()\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement(schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement(schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement(::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_ControlElementID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionControlElement_ControlElementID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional *) &((schema::simxml::SimModelCore::SimDistributionControlElement const *)arg1)->ControlElementID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_ControlElementID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionControlElement_ControlElementID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional *) &(arg1)->ControlElementID();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_ControlElementID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement_ControlElementID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type * >(argp2);
  (arg1)->ControlElementID((schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_ControlElementID__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement_ControlElementID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional * >(argp2);
  (arg1)->ControlElementID((schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_ControlElementID__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement_ControlElementID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement_ControlElementID" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ControlElementID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement_ControlElementID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionControlElement_ControlElementID__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionControlElement_ControlElementID__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement_ControlElementID__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement_ControlElementID__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement_ControlElementID__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionControlElement_ControlElementID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID() const\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID()\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID(schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID(schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID(::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimDistributionControlElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionControlElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimDistributionControlElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimDistributionControlElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimDistributionControlElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionControlElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimDistributionControlElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimDistributionControlElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((schema::simxml::SimModelCore::SimDistributionControlElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimDistributionControlElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((schema::simxml::SimModelCore::SimDistributionControlElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionControlElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)new schema::simxml::SimModelCore::SimDistributionControlElement((schema::simxml::SimModelCore::SimDistributionControlElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionControlElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimDistributionControlElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionControlElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionControlElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionControlElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimDistributionControlElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimDistributionControlElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimDistributionControlElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimDistributionControlElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimDistributionControlElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement()\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(schema::simxml::SimModelCore::SimDistributionControlElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(schema::simxml::SimModelCore::SimDistributionControlElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::SimDistributionControlElement(schema::simxml::SimModelCore::SimDistributionControlElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimDistributionControlElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimDistributionControlElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)((schema::simxml::SimModelCore::SimDistributionControlElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionControlElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionControlElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionControlElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)((schema::simxml::SimModelCore::SimDistributionControlElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionControlElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionControlElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionControlElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionControlElement *)((schema::simxml::SimModelCore::SimDistributionControlElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionControlElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionControlElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionControlElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimDistributionControlElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionControlElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimDistributionControlElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimDistributionControlElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionControlElement *arg1 = (schema::simxml::SimModelCore::SimDistributionControlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimDistributionControlElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimDistributionControlElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionControlElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionControlElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimDistributionControlElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimUnitType_UnitType_String__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType_UnitType_String",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_UnitType_String" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional *) &((schema::simxml::ResourcesGeneral::SimUnitType const *)arg1)->UnitType_String();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_UnitType_String__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType_UnitType_String",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_UnitType_String" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional *) &(arg1)->UnitType_String();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_UnitType_String__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_UnitType_String",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_UnitType_String" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_UnitType_String" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_UnitType_String" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type * >(argp2);
  (arg1)->UnitType_String((schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_UnitType_String__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_UnitType_String",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_UnitType_String" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_UnitType_String" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_UnitType_String" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional * >(argp2);
  (arg1)->UnitType_String((schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_UnitType_String__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_UnitType_String",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_UnitType_String" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_UnitType_String" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_UnitType_String" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->UnitType_String(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_UnitType_String(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType_UnitType_String__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType_UnitType_String__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_UnitType_String__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_UnitType_String__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_UnitType_String__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimUnitType_UnitType_String'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String() const\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String()\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String(schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String(schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String(::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimUnitType_Name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_Name" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType::Name_optional *) &((schema::simxml::ResourcesGeneral::SimUnitType const *)arg1)->Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_Name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::Name_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType_Name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_Name" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType::Name_optional *) &(arg1)->Name();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_Name__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::Name_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_Name" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_Name" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::Name_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_Name" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::Name_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType::Name_type * >(argp2);
  (arg1)->Name((schema::simxml::ResourcesGeneral::SimUnitType::Name_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_Name__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::Name_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_Name" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_Name" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::Name_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_Name" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::Name_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType::Name_optional * >(argp2);
  (arg1)->Name((schema::simxml::ResourcesGeneral::SimUnitType::Name_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_Name__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_Name",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_Name" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_Name" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->Name(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_Name(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType_Name__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType_Name__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_Name__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_Name__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_Name__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimUnitType_Name'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::Name() const\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::Name()\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::Name(schema::simxml::ResourcesGeneral::SimUnitType::Name_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::Name(schema::simxml::ResourcesGeneral::SimUnitType::Name_optional const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::Name(::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimUnitType_DecimalPrecision__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType_DecimalPrecision",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_DecimalPrecision" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional *) &((schema::simxml::ResourcesGeneral::SimUnitType const *)arg1)->DecimalPrecision();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_DecimalPrecision__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType_DecimalPrecision",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_DecimalPrecision" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional *) &(arg1)->DecimalPrecision();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_DecimalPrecision__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_DecimalPrecision",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_DecimalPrecision" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimUnitType_DecimalPrecision" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_type""'");
  } 
  temp2 = static_cast< schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_type >(val2);
  arg2 = &temp2;
  (arg1)->DecimalPrecision((schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_DecimalPrecision__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType_DecimalPrecision",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType_DecimalPrecision" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType_DecimalPrecision" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType_DecimalPrecision" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional * >(argp2);
  (arg1)->DecimalPrecision((schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType_DecimalPrecision(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType_DecimalPrecision__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType_DecimalPrecision__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType_DecimalPrecision__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimUnitType_DecimalPrecision__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimUnitType_DecimalPrecision'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision() const\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision()\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision(schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision(schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimUnitType")) SWIG_fail;
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimUnitType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimUnitType",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimUnitType" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimUnitType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimUnitType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimUnitType",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimUnitType" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((schema::simxml::ResourcesGeneral::SimUnitType const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimUnitType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((schema::simxml::ResourcesGeneral::SimUnitType const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimUnitType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)new schema::simxml::ResourcesGeneral::SimUnitType((schema::simxml::ResourcesGeneral::SimUnitType const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimUnitType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimUnitType__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimUnitType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimUnitType__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimUnitType__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimUnitType__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimUnitType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimUnitType__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimUnitType__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimUnitType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType()\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(::xercesc::DOMElement const &)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(schema::simxml::ResourcesGeneral::SimUnitType const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(schema::simxml::ResourcesGeneral::SimUnitType const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::SimUnitType(schema::simxml::ResourcesGeneral::SimUnitType const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimUnitType__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimUnitType__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimUnitType__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)((schema::simxml::ResourcesGeneral::SimUnitType const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimUnitType__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimUnitType__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimUnitType__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)((schema::simxml::ResourcesGeneral::SimUnitType const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimUnitType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimUnitType__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimUnitType__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimUnitType *)((schema::simxml::ResourcesGeneral::SimUnitType const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimUnitType__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimUnitType__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimUnitType__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimUnitType__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimUnitType__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::ResourcesGeneral::SimUnitType::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimUnitType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimUnitType *arg1 = (schema::simxml::ResourcesGeneral::SimUnitType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimUnitType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimUnitType" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimUnitType *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimUnitType * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimUnitType_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimNode_HostElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode::HostElement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimNode_HostElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode_HostElement" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimNode::HostElement_optional *) &((schema::simxml::ResourcesGeneral::SimNode const *)arg1)->HostElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode_HostElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode::HostElement_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimNode_HostElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode_HostElement" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimNode::HostElement_optional *) &(arg1)->HostElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode_HostElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  schema::simxml::ResourcesGeneral::SimNode::HostElement_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimNode_HostElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode_HostElement" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimNode_HostElement" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimNode::HostElement_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimNode_HostElement" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimNode::HostElement_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode::HostElement_type * >(argp2);
  (arg1)->HostElement((schema::simxml::ResourcesGeneral::SimNode::HostElement_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode_HostElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  schema::simxml::ResourcesGeneral::SimNode::HostElement_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimNode_HostElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode_HostElement" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimNode_HostElement" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimNode::HostElement_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimNode_HostElement" "', argument " "2"" of type '" "schema::simxml::ResourcesGeneral::SimNode::HostElement_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode::HostElement_optional * >(argp2);
  (arg1)->HostElement((schema::simxml::ResourcesGeneral::SimNode::HostElement_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode_HostElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimNode_HostElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode_HostElement" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimNode_HostElement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimNode_HostElement" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->HostElement(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode_HostElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimNode_HostElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimNode_HostElement__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimNode_HostElement__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimNode_HostElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimNode_HostElement__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimNode_HostElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimNode::HostElement() const\n"
    "    schema::simxml::ResourcesGeneral::SimNode::HostElement()\n"
    "    schema::simxml::ResourcesGeneral::SimNode::HostElement(schema::simxml::ResourcesGeneral::SimNode::HostElement_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::HostElement(schema::simxml::ResourcesGeneral::SimNode::HostElement_optional const &)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::HostElement(::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimNode")) SWIG_fail;
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimNode",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimNode" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimNode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimNode",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimNode" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((schema::simxml::ResourcesGeneral::SimNode const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimNode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((schema::simxml::ResourcesGeneral::SimNode const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimNode *)new schema::simxml::ResourcesGeneral::SimNode((schema::simxml::ResourcesGeneral::SimNode const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimNode(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimNode__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimNode__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimNode__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimNode__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimNode__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimNode__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimNode__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimNode__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimNode'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode()\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(::xercesc::DOMElement const &)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(schema::simxml::ResourcesGeneral::SimNode const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(schema::simxml::ResourcesGeneral::SimNode const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimNode::SimNode(schema::simxml::ResourcesGeneral::SimNode const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimNode__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimNode__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimNode__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimNode__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimNode__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimNode *)((schema::simxml::ResourcesGeneral::SimNode const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimNode__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimNode__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimNode__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimNode *)((schema::simxml::ResourcesGeneral::SimNode const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimNode__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimNode__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimNode *)((schema::simxml::ResourcesGeneral::SimNode const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimNode__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimNode__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimNode__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimNode__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimNode__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimNode::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::ResourcesGeneral::SimNode::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::ResourcesGeneral::SimNode::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimNode *arg1 = (schema::simxml::ResourcesGeneral::SimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimNode" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimNode *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimNode * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimPort")) SWIG_fail;
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimPort",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimPort" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimPort",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimPort" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((schema::simxml::ResourcesGeneral::SimPort const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((schema::simxml::ResourcesGeneral::SimPort const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimPort *)new schema::simxml::ResourcesGeneral::SimPort((schema::simxml::ResourcesGeneral::SimPort const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPort(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimPort__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimPort__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimPort__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimPort__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimPort__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimPort__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimPort__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimPort__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimPort'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort()\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(::xercesc::DOMElement const &)\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(schema::simxml::ResourcesGeneral::SimPort const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(schema::simxml::ResourcesGeneral::SimPort const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimPort::SimPort(schema::simxml::ResourcesGeneral::SimPort const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimPort__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = (schema::simxml::ResourcesGeneral::SimPort *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimPort__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimPort__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimPort__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimPort__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimPort__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimPort *)((schema::simxml::ResourcesGeneral::SimPort const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimPort__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = (schema::simxml::ResourcesGeneral::SimPort *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimPort__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimPort__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimPort__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimPort__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimPort *)((schema::simxml::ResourcesGeneral::SimPort const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimPort__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = (schema::simxml::ResourcesGeneral::SimPort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimPort__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimPort__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimPort *)((schema::simxml::ResourcesGeneral::SimPort const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimPort__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimPort__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimPort__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimPort__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimPort__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimPort::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::ResourcesGeneral::SimPort::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::ResourcesGeneral::SimPort::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimPort *arg1 = (schema::simxml::ResourcesGeneral::SimPort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimPort" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimPort *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimPort * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimPort_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimFeatureElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimFeatureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimFeatureElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimFeatureElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimFeatureElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimFeatureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimFeatureElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimFeatureElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((schema::simxml::SimModelCore::SimFeatureElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimFeatureElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((schema::simxml::SimModelCore::SimFeatureElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimFeatureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)new schema::simxml::SimModelCore::SimFeatureElement((schema::simxml::SimModelCore::SimFeatureElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFeatureElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimFeatureElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimFeatureElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimFeatureElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimFeatureElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimFeatureElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimFeatureElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimFeatureElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimFeatureElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimFeatureElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement()\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(schema::simxml::SimModelCore::SimFeatureElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(schema::simxml::SimModelCore::SimFeatureElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::SimFeatureElement(schema::simxml::SimModelCore::SimFeatureElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimFeatureElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = (schema::simxml::SimModelCore::SimFeatureElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimFeatureElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimFeatureElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimFeatureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimFeatureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimFeatureElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)((schema::simxml::SimModelCore::SimFeatureElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimFeatureElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = (schema::simxml::SimModelCore::SimFeatureElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimFeatureElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimFeatureElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimFeatureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimFeatureElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimFeatureElement *)((schema::simxml::SimModelCore::SimFeatureElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimFeatureElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = (schema::simxml::SimModelCore::SimFeatureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimFeatureElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimFeatureElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimFeatureElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimFeatureElement *)((schema::simxml::SimModelCore::SimFeatureElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimFeatureElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimFeatureElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimFeatureElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimFeatureElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimFeatureElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimFeatureElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimFeatureElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimFeatureElement *arg1 = (schema::simxml::SimModelCore::SimFeatureElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimFeatureElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimFeatureElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimFeatureElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimFeatureElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimFeatureElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimDistributionFlowElement_ControlledBy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement_ControlledBy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional *) &((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->ControlledBy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement_ControlledBy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement_ControlledBy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional *) &(arg1)->ControlledBy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement_ControlledBy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement_ControlledBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type * >(argp2);
  (arg1)->ControlledBy((schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement_ControlledBy__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement_ControlledBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional * >(argp2);
  (arg1)->ControlledBy((schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement_ControlledBy__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement_ControlledBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement_ControlledBy" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ControlledBy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement_ControlledBy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement_ControlledBy__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement_ControlledBy__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement_ControlledBy__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement_ControlledBy__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement_ControlledBy__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionFlowElement_ControlledBy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy() const\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy()\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy(schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy(schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy(::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dLength__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__3dLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dLength" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional *) &((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->_3dLength();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dLength__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__3dLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dLength" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional *) &(arg1)->_3dLength();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dLength__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__3dLength",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dLength" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimDistributionFlowElement__3dLength" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_type >(val2);
  arg2 = &temp2;
  (arg1)->_3dLength((schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dLength__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__3dLength",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dLength" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement__3dLength" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement__3dLength" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional * >(argp2);
  (arg1)->_3dLength((schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dLength(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__3dLength__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__3dLength__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement__3dLength__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimDistributionFlowElement__3dLength__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionFlowElement__3dLength'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength() const\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength()\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength(schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength(schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__3dWidth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional *) &((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->_3dWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__3dWidth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional *) &(arg1)->_3dWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dWidth__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__3dWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_type >(val2);
  arg2 = &temp2;
  (arg1)->_3dWidth((schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dWidth__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__3dWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement__3dWidth" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional * >(argp2);
  (arg1)->_3dWidth((schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dWidth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__3dWidth__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__3dWidth__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement__3dWidth__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimDistributionFlowElement__3dWidth__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionFlowElement__3dWidth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth() const\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth()\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth(schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth(schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__3dHeight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional *) &((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->_3dHeight();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__3dHeight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional *) &(arg1)->_3dHeight();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dHeight__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__3dHeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_type""'");
  } 
  temp2 = static_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_type >(val2);
  arg2 = &temp2;
  (arg1)->_3dHeight((schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dHeight__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__3dHeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement__3dHeight" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional * >(argp2);
  (arg1)->_3dHeight((schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__3dHeight(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__3dHeight__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__3dHeight__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement__3dHeight__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SimDistributionFlowElement__3dHeight__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionFlowElement__3dHeight'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight() const\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight()\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight(schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight(schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimDistributionFlowElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionFlowElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimDistributionFlowElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimDistributionFlowElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimDistributionFlowElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionFlowElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimDistributionFlowElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimDistributionFlowElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((schema::simxml::SimModelCore::SimDistributionFlowElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimDistributionFlowElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((schema::simxml::SimModelCore::SimDistributionFlowElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimDistributionFlowElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)new schema::simxml::SimModelCore::SimDistributionFlowElement((schema::simxml::SimModelCore::SimDistributionFlowElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimDistributionFlowElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimDistributionFlowElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionFlowElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionFlowElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimDistributionFlowElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimDistributionFlowElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimDistributionFlowElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimDistributionFlowElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimDistributionFlowElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimDistributionFlowElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement()\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(schema::simxml::SimModelCore::SimDistributionFlowElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(schema::simxml::SimModelCore::SimDistributionFlowElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::SimDistributionFlowElement(schema::simxml::SimModelCore::SimDistributionFlowElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimDistributionFlowElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimDistributionFlowElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimDistributionFlowElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimDistributionFlowElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimDistributionFlowElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimDistributionFlowElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimDistributionFlowElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimDistributionFlowElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimDistributionFlowElement *)((schema::simxml::SimModelCore::SimDistributionFlowElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimDistributionFlowElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimDistributionFlowElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimDistributionFlowElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimDistributionFlowElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimDistributionFlowElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimDistributionFlowElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimDistributionFlowElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimDistributionFlowElement *arg1 = (schema::simxml::SimModelCore::SimDistributionFlowElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimDistributionFlowElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimDistributionFlowElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimDistributionFlowElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimDistributionFlowElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimDistributionFlowElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimFlowEnergyConverter")) SWIG_fail;
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimFlowEnergyConverter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimFlowEnergyConverter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimFlowEnergyConverter" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimFlowEnergyConverter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimFlowEnergyConverter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimFlowEnergyConverter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimFlowEnergyConverter" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((schema::simxml::MepModel::SimFlowEnergyConverter const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimFlowEnergyConverter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((schema::simxml::MepModel::SimFlowEnergyConverter const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimFlowEnergyConverter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)new schema::simxml::MepModel::SimFlowEnergyConverter((schema::simxml::MepModel::SimFlowEnergyConverter const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimFlowEnergyConverter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimFlowEnergyConverter__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimFlowEnergyConverter__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimFlowEnergyConverter__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimFlowEnergyConverter__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimFlowEnergyConverter__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimFlowEnergyConverter__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimFlowEnergyConverter__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimFlowEnergyConverter__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimFlowEnergyConverter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter()\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(::xercesc::DOMElement const &)\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(schema::simxml::MepModel::SimFlowEnergyConverter const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(schema::simxml::MepModel::SimFlowEnergyConverter const &,::xml_schema::flags)\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::SimFlowEnergyConverter(schema::simxml::MepModel::SimFlowEnergyConverter const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimFlowEnergyConverter__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = (schema::simxml::MepModel::SimFlowEnergyConverter *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimFlowEnergyConverter__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimFlowEnergyConverter__clone" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimFlowEnergyConverter__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimFlowEnergyConverter__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimFlowEnergyConverter__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)((schema::simxml::MepModel::SimFlowEnergyConverter const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimFlowEnergyConverter__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = (schema::simxml::MepModel::SimFlowEnergyConverter *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimFlowEnergyConverter__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimFlowEnergyConverter__clone" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimFlowEnergyConverter__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimFlowEnergyConverter__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)((schema::simxml::MepModel::SimFlowEnergyConverter const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimFlowEnergyConverter__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = (schema::simxml::MepModel::SimFlowEnergyConverter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::MepModel::SimFlowEnergyConverter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimFlowEnergyConverter__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimFlowEnergyConverter__clone" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  result = (schema::simxml::MepModel::SimFlowEnergyConverter *)((schema::simxml::MepModel::SimFlowEnergyConverter const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimFlowEnergyConverter__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimFlowEnergyConverter__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimFlowEnergyConverter__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimFlowEnergyConverter__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimFlowEnergyConverter__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::MepModel::SimFlowEnergyConverter::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimFlowEnergyConverter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::MepModel::SimFlowEnergyConverter *arg1 = (schema::simxml::MepModel::SimFlowEnergyConverter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimFlowEnergyConverter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimFlowEnergyConverter" "', argument " "1"" of type '" "schema::simxml::MepModel::SimFlowEnergyConverter *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::MepModel::SimFlowEnergyConverter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimFlowEnergyConverter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimGeometricRepresentationItem")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimGeometricRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimGeometricRepresentationItem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimGeometricRepresentationItem" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimGeometricRepresentationItem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimGeometricRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimGeometricRepresentationItem",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimGeometricRepresentationItem" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((schema::simxml::SimModelCore::SimGeometricRepresentationItem const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimGeometricRepresentationItem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((schema::simxml::SimModelCore::SimGeometricRepresentationItem const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimGeometricRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)new schema::simxml::SimModelCore::SimGeometricRepresentationItem((schema::simxml::SimModelCore::SimGeometricRepresentationItem const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimGeometricRepresentationItem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimGeometricRepresentationItem__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimGeometricRepresentationItem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimGeometricRepresentationItem__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimGeometricRepresentationItem__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimGeometricRepresentationItem__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimGeometricRepresentationItem__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimGeometricRepresentationItem__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimGeometricRepresentationItem__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimGeometricRepresentationItem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem()\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(schema::simxml::SimModelCore::SimGeometricRepresentationItem const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(schema::simxml::SimModelCore::SimGeometricRepresentationItem const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::SimGeometricRepresentationItem(schema::simxml::SimModelCore::SimGeometricRepresentationItem const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimGeometricRepresentationItem__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimGeometricRepresentationItem__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGeometricRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGeometricRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGeometricRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimGeometricRepresentationItem__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)((schema::simxml::SimModelCore::SimGeometricRepresentationItem const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGeometricRepresentationItem__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimGeometricRepresentationItem__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGeometricRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimGeometricRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimGeometricRepresentationItem__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)((schema::simxml::SimModelCore::SimGeometricRepresentationItem const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGeometricRepresentationItem__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimGeometricRepresentationItem__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimGeometricRepresentationItem__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  result = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *)((schema::simxml::SimModelCore::SimGeometricRepresentationItem const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimGeometricRepresentationItem__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimGeometricRepresentationItem__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimGeometricRepresentationItem__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimGeometricRepresentationItem__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimGeometricRepresentationItem__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimGeometricRepresentationItem::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimGeometricRepresentationItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimGeometricRepresentationItem *arg1 = (schema::simxml::SimModelCore::SimGeometricRepresentationItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimGeometricRepresentationItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimGeometricRepresentationItem" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimGeometricRepresentationItem *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimGeometricRepresentationItem * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimGeometricRepresentationItem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimObjectPlacement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectPlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObjectPlacement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObjectPlacement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObjectPlacement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectPlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObjectPlacement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObjectPlacement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((schema::simxml::SimModelCore::SimObjectPlacement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObjectPlacement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((schema::simxml::SimModelCore::SimObjectPlacement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectPlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)new schema::simxml::SimModelCore::SimObjectPlacement((schema::simxml::SimModelCore::SimObjectPlacement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectPlacement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimObjectPlacement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectPlacement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectPlacement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectPlacement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObjectPlacement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObjectPlacement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObjectPlacement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObjectPlacement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimObjectPlacement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement()\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(schema::simxml::SimModelCore::SimObjectPlacement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(schema::simxml::SimModelCore::SimObjectPlacement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::SimObjectPlacement(schema::simxml::SimModelCore::SimObjectPlacement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObjectPlacement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = (schema::simxml::SimModelCore::SimObjectPlacement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimObjectPlacement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectPlacement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectPlacement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectPlacement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimObjectPlacement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)((schema::simxml::SimModelCore::SimObjectPlacement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectPlacement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = (schema::simxml::SimModelCore::SimObjectPlacement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectPlacement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectPlacement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectPlacement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectPlacement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)((schema::simxml::SimModelCore::SimObjectPlacement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectPlacement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = (schema::simxml::SimModelCore::SimObjectPlacement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectPlacement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectPlacement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectPlacement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectPlacement *)((schema::simxml::SimModelCore::SimObjectPlacement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectPlacement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectPlacement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectPlacement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimObjectPlacement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectPlacement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimObjectPlacement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimObjectPlacement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectPlacement *arg1 = (schema::simxml::SimModelCore::SimObjectPlacement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimObjectPlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimObjectPlacement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectPlacement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectPlacement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimObjectPlacement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimActorDefinition")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimActorDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimActorDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimActorDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimActorDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimActorDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimActorDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimActorDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((schema::simxml::SimModelCore::SimActorDefinition const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimActorDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((schema::simxml::SimModelCore::SimActorDefinition const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimActorDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)new schema::simxml::SimModelCore::SimActorDefinition((schema::simxml::SimModelCore::SimActorDefinition const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimActorDefinition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimActorDefinition__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimActorDefinition__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimActorDefinition__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimActorDefinition__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimActorDefinition__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimActorDefinition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimActorDefinition__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimActorDefinition__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimActorDefinition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition()\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(schema::simxml::SimModelCore::SimActorDefinition const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(schema::simxml::SimModelCore::SimActorDefinition const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::SimActorDefinition(schema::simxml::SimModelCore::SimActorDefinition const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimActorDefinition__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = (schema::simxml::SimModelCore::SimActorDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimActorDefinition__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimActorDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimActorDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimActorDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimActorDefinition__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)((schema::simxml::SimModelCore::SimActorDefinition const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimActorDefinition__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = (schema::simxml::SimModelCore::SimActorDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimActorDefinition__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimActorDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimActorDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimActorDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimActorDefinition *)((schema::simxml::SimModelCore::SimActorDefinition const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimActorDefinition__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = (schema::simxml::SimModelCore::SimActorDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimActorDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimActorDefinition__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimActorDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimActorDefinition *)((schema::simxml::SimModelCore::SimActorDefinition const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimActorDefinition__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimActorDefinition__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimActorDefinition__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimActorDefinition__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimActorDefinition__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimActorDefinition::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimActorDefinition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimActorDefinition *arg1 = (schema::simxml::SimModelCore::SimActorDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimActorDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimActorDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimActorDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimActorDefinition * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimActorDefinition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationContext__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationContext",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationContext" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional *) &((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->RepresentationContext();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationContext__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationContext",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationContext" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional *) &(arg1)->RepresentationContext();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationContext__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationContext",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationContext" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationContext" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationContext" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type * >(argp2);
  (arg1)->RepresentationContext((schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationContext__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationContext",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationContext" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationContext" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationContext" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional * >(argp2);
  (arg1)->RepresentationContext((schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationContext__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationContext",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationContext" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationContext" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationContext" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->RepresentationContext(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationContext(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationContext__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationContext__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationContext__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationContext__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationContext__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRepresentation_RepresentationContext'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationContext() const\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationContext()\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationContext(schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationContext(schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationContext(::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationIdentifier__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationIdentifier",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional *) &((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->RepresentationIdentifier();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationIdentifier__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationIdentifier",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional *) &(arg1)->RepresentationIdentifier();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationIdentifier__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationIdentifier",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type * >(argp2);
  (arg1)->RepresentationIdentifier((schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationIdentifier__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationIdentifier",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional * >(argp2);
  (arg1)->RepresentationIdentifier((schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationIdentifier__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationIdentifier",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationIdentifier" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->RepresentationIdentifier(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationIdentifier(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationIdentifier__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationIdentifier__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationIdentifier__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationIdentifier__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationIdentifier__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRepresentation_RepresentationIdentifier'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier() const\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier()\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier(schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier(schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier(::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional *) &((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->RepresentationType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional *) &(arg1)->RepresentationType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type * >(argp2);
  (arg1)->RepresentationType((schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationType__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationType" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional * >(argp2);
  (arg1)->RepresentationType((schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationType__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationType" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationType" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->RepresentationType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationType__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationType__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationType__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRepresentation_RepresentationType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationType() const\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationType()\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationType(schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationType(schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationType(::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationItems__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationItems",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationItems" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional *) &((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->RepresentationItems();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationItems__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation_RepresentationItems",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationItems" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional *) &(arg1)->RepresentationItems();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationItems__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationItems",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationItems" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationItems" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationItems" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type * >(argp2);
  (arg1)->RepresentationItems((schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationItems__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationItems",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationItems" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationItems" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationItems" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional * >(argp2);
  (arg1)->RepresentationItems((schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationItems__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation_RepresentationItems",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation_RepresentationItems" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation_RepresentationItems" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation_RepresentationItems" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->RepresentationItems(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation_RepresentationItems(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationItems__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation_RepresentationItems__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationItems__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationItems__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation_RepresentationItems__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRepresentation_RepresentationItems'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationItems() const\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationItems()\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationItems(schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationItems(schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::RepresentationItems(::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimRepresentation")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRepresentation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimRepresentation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimRepresentation" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimRepresentation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRepresentation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimRepresentation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimRepresentation" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((schema::simxml::SimModelCore::SimRepresentation const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimRepresentation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((schema::simxml::SimModelCore::SimRepresentation const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimRepresentation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation *)new schema::simxml::SimModelCore::SimRepresentation((schema::simxml::SimModelCore::SimRepresentation const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimRepresentation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimRepresentation__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRepresentation__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRepresentation__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimRepresentation__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimRepresentation__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimRepresentation__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimRepresentation__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimRepresentation__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimRepresentation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation()\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(schema::simxml::SimModelCore::SimRepresentation const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(schema::simxml::SimModelCore::SimRepresentation const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimRepresentation::SimRepresentation(schema::simxml::SimModelCore::SimRepresentation const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimRepresentation__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimRepresentation__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimRepresentation__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimRepresentation *)((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimRepresentation__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimRepresentation__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimRepresentation__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimRepresentation *)((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimRepresentation *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimRepresentation__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimRepresentation__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  result = (schema::simxml::SimModelCore::SimRepresentation *)((schema::simxml::SimModelCore::SimRepresentation const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimRepresentation__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimRepresentation__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimRepresentation__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimRepresentation__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimRepresentation__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimRepresentation::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimRepresentation::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimRepresentation::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimRepresentation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRepresentation *arg1 = (schema::simxml::SimModelCore::SimRepresentation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimRepresentation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimRepresentation" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRepresentation *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRepresentation * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimRepresentation_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimBuildingElement")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimBuildingElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimBuildingElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimBuildingElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimBuildingElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimBuildingElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimBuildingElement",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimBuildingElement" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((schema::simxml::SimModelCore::SimBuildingElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimBuildingElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((schema::simxml::SimModelCore::SimBuildingElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimBuildingElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)new schema::simxml::SimModelCore::SimBuildingElement((schema::simxml::SimModelCore::SimBuildingElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimBuildingElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimBuildingElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimBuildingElement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimBuildingElement__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimBuildingElement__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimBuildingElement__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimBuildingElement__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimBuildingElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimBuildingElement__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimBuildingElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement()\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(schema::simxml::SimModelCore::SimBuildingElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(schema::simxml::SimModelCore::SimBuildingElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::SimBuildingElement(schema::simxml::SimModelCore::SimBuildingElement const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimBuildingElement__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = (schema::simxml::SimModelCore::SimBuildingElement *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimBuildingElement__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBuildingElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBuildingElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBuildingElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimBuildingElement__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)((schema::simxml::SimModelCore::SimBuildingElement const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBuildingElement__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = (schema::simxml::SimModelCore::SimBuildingElement *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimBuildingElement__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBuildingElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimBuildingElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimBuildingElement__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimBuildingElement *)((schema::simxml::SimModelCore::SimBuildingElement const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBuildingElement__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = (schema::simxml::SimModelCore::SimBuildingElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimBuildingElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimBuildingElement__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimBuildingElement__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimBuildingElement *)((schema::simxml::SimModelCore::SimBuildingElement const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimBuildingElement__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimBuildingElement__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimBuildingElement__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimBuildingElement__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimBuildingElement__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimBuildingElement::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimBuildingElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimBuildingElement *arg1 = (schema::simxml::SimModelCore::SimBuildingElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimBuildingElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimBuildingElement" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimBuildingElement *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimBuildingElement * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimBuildingElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimTemplate")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimTemplate",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimTemplate" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimTemplate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimTemplate",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimTemplate" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((schema::simxml::SimModelCore::SimTemplate const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimTemplate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((schema::simxml::SimModelCore::SimTemplate const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  result = (schema::simxml::SimModelCore::SimTemplate *)new schema::simxml::SimModelCore::SimTemplate((schema::simxml::SimModelCore::SimTemplate const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimTemplate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimTemplate__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimTemplate__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimTemplate__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimTemplate__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimTemplate__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimTemplate__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimTemplate__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimTemplate__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimTemplate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate()\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(schema::simxml::SimModelCore::SimTemplate const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(schema::simxml::SimModelCore::SimTemplate const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimTemplate::SimTemplate(schema::simxml::SimModelCore::SimTemplate const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimTemplate__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = (schema::simxml::SimModelCore::SimTemplate *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimTemplate__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimTemplate__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimTemplate__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimTemplate__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimTemplate__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimTemplate *)((schema::simxml::SimModelCore::SimTemplate const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimTemplate__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = (schema::simxml::SimModelCore::SimTemplate *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimTemplate__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimTemplate__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimTemplate__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimTemplate__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimTemplate *)((schema::simxml::SimModelCore::SimTemplate const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimTemplate__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = (schema::simxml::SimModelCore::SimTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimTemplate__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimTemplate__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  result = (schema::simxml::SimModelCore::SimTemplate *)((schema::simxml::SimModelCore::SimTemplate const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimTemplate__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimTemplate__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimTemplate__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimTemplate__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimTemplate__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimTemplate::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimTemplate::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimTemplate::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimTemplate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimTemplate *arg1 = (schema::simxml::SimModelCore::SimTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimTemplate" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimTemplate *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimTemplate * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimTemplate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_ApplicableOccurrence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional *) &((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->ApplicableOccurrence();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_ApplicableOccurrence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional *) &(arg1)->ApplicableOccurrence();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_ApplicableOccurrence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type * >(argp2);
  (arg1)->ApplicableOccurrence((schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_ApplicableOccurrence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional * >(argp2);
  (arg1)->ApplicableOccurrence((schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_ApplicableOccurrence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_ApplicableOccurrence" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ApplicableOccurrence(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_ApplicableOccurrence(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_ApplicableOccurrence__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectTypeDefinition_ApplicableOccurrence'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence() const\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence()\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence(schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence(schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence(::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_HasPropertySets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional *) &((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->HasPropertySets();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_HasPropertySets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional *) &(arg1)->HasPropertySets();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_HasPropertySets",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type * >(argp2);
  (arg1)->HasPropertySets((schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_HasPropertySets",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional * >(argp2);
  (arg1)->HasPropertySets((schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_HasPropertySets",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_HasPropertySets" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->HasPropertySets(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_HasPropertySets(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idrefs_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_HasPropertySets__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectTypeDefinition_HasPropertySets'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets() const\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets()\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets(schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets(schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets(::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_TypeDefCreationParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional *) &((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->TypeDefCreationParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_TypeDefCreationParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional *) &(arg1)->TypeDefCreationParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_TypeDefCreationParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type * >(argp2);
  (arg1)->TypeDefCreationParams((schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_TypeDefCreationParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional * >(argp2);
  (arg1)->TypeDefCreationParams((schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_TypeDefCreationParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_TypeDefCreationParams" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->TypeDefCreationParams(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_TypeDefCreationParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_TypeDefCreationParams__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectTypeDefinition_TypeDefCreationParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams() const\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams()\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams(schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams(schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams(::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_PlacementRelToContainingTypeDef",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional *) &((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->PlacementRelToContainingTypeDef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition_PlacementRelToContainingTypeDef",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional *) &(arg1)->PlacementRelToContainingTypeDef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_PlacementRelToContainingTypeDef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type * >(argp2);
  (arg1)->PlacementRelToContainingTypeDef((schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_PlacementRelToContainingTypeDef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "2"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional * >(argp2);
  (arg1)->PlacementRelToContainingTypeDef((schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition_PlacementRelToContainingTypeDef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition_PlacementRelToContainingTypeDef" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->PlacementRelToContainingTypeDef(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__idref_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectTypeDefinition_PlacementRelToContainingTypeDef'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef() const\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef()\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef(schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef(schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef(::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimObjectTypeDefinition")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectTypeDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObjectTypeDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObjectTypeDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObjectTypeDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectTypeDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimObjectTypeDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimObjectTypeDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((schema::simxml::SimModelCore::SimObjectTypeDefinition const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimObjectTypeDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((schema::simxml::SimModelCore::SimObjectTypeDefinition const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimObjectTypeDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)new schema::simxml::SimModelCore::SimObjectTypeDefinition((schema::simxml::SimModelCore::SimObjectTypeDefinition const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimObjectTypeDefinition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimObjectTypeDefinition__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectTypeDefinition__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectTypeDefinition__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimObjectTypeDefinition__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObjectTypeDefinition__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimObjectTypeDefinition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObjectTypeDefinition__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimObjectTypeDefinition__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimObjectTypeDefinition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition()\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(schema::simxml::SimModelCore::SimObjectTypeDefinition const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(schema::simxml::SimModelCore::SimObjectTypeDefinition const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::SimObjectTypeDefinition(schema::simxml::SimModelCore::SimObjectTypeDefinition const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimObjectTypeDefinition__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimObjectTypeDefinition__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimObjectTypeDefinition__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimObjectTypeDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimObjectTypeDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimObjectTypeDefinition__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimObjectTypeDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimObjectTypeDefinition *)((schema::simxml::SimModelCore::SimObjectTypeDefinition const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimObjectTypeDefinition__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimObjectTypeDefinition__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimObjectTypeDefinition__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimObjectTypeDefinition__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimObjectTypeDefinition__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimObjectTypeDefinition::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimObjectTypeDefinition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimObjectTypeDefinition *arg1 = (schema::simxml::SimModelCore::SimObjectTypeDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimObjectTypeDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimObjectTypeDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimObjectTypeDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimObjectTypeDefinition * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimObjectTypeDefinition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimArrayParams")) SWIG_fail;
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimArrayParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimArrayParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimArrayParams" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimArrayParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimArrayParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimArrayParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimArrayParams" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((schema::simxml::ResourcesGeneral::SimArrayParams const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimArrayParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((schema::simxml::ResourcesGeneral::SimArrayParams const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimArrayParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)new schema::simxml::ResourcesGeneral::SimArrayParams((schema::simxml::ResourcesGeneral::SimArrayParams const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimArrayParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimArrayParams__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimArrayParams__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimArrayParams__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimArrayParams__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimArrayParams__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimArrayParams__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimArrayParams__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimArrayParams__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimArrayParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams()\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(::xercesc::DOMElement const &)\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(schema::simxml::ResourcesGeneral::SimArrayParams const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(schema::simxml::ResourcesGeneral::SimArrayParams const &,::xml_schema::flags)\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::SimArrayParams(schema::simxml::ResourcesGeneral::SimArrayParams const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimArrayParams__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = (schema::simxml::ResourcesGeneral::SimArrayParams *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimArrayParams__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimArrayParams__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimArrayParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimArrayParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimArrayParams__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)((schema::simxml::ResourcesGeneral::SimArrayParams const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimArrayParams__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = (schema::simxml::ResourcesGeneral::SimArrayParams *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimArrayParams__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimArrayParams__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimArrayParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimArrayParams__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)((schema::simxml::ResourcesGeneral::SimArrayParams const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimArrayParams__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = (schema::simxml::ResourcesGeneral::SimArrayParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::ResourcesGeneral::SimArrayParams *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimArrayParams__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimArrayParams__clone" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  result = (schema::simxml::ResourcesGeneral::SimArrayParams *)((schema::simxml::ResourcesGeneral::SimArrayParams const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimArrayParams__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimArrayParams__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimArrayParams__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimArrayParams__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimArrayParams__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::ResourcesGeneral::SimArrayParams::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimArrayParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::ResourcesGeneral::SimArrayParams *arg1 = (schema::simxml::ResourcesGeneral::SimArrayParams *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimArrayParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimArrayParams" "', argument " "1"" of type '" "schema::simxml::ResourcesGeneral::SimArrayParams *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::ResourcesGeneral::SimArrayParams * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimArrayParams_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimPropertySetDefinition")) SWIG_fail;
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimRoot::RefId_type *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimPropertySetDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimRoot::RefId_type const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimRoot::RefId_type * >(argp1);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((schema::simxml::SimModelCore::SimRoot::RefId_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimPropertySetDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimPropertySetDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimPropertySetDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimPropertySetDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimPropertySetDefinition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimPropertySetDefinition" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((schema::simxml::SimModelCore::SimPropertySetDefinition const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimPropertySetDefinition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((schema::simxml::SimModelCore::SimPropertySetDefinition const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimPropertySetDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)new schema::simxml::SimModelCore::SimPropertySetDefinition((schema::simxml::SimModelCore::SimPropertySetDefinition const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimPropertySetDefinition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimPropertySetDefinition__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimPropertySetDefinition__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimPropertySetDefinition__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimPropertySetDefinition__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimPropertySetDefinition__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimPropertySetDefinition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimPropertySetDefinition__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimPropertySetDefinition__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimPropertySetDefinition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition()\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(schema::simxml::SimModelCore::SimRoot::RefId_type const &)\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(::xercesc::DOMElement const &)\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(schema::simxml::SimModelCore::SimPropertySetDefinition const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(schema::simxml::SimModelCore::SimPropertySetDefinition const &,::xml_schema::flags)\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::SimPropertySetDefinition(schema::simxml::SimModelCore::SimPropertySetDefinition const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimPropertySetDefinition__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = (schema::simxml::SimModelCore::SimPropertySetDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimPropertySetDefinition__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimPropertySetDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimPropertySetDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimPropertySetDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimPropertySetDefinition__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)((schema::simxml::SimModelCore::SimPropertySetDefinition const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimPropertySetDefinition__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = (schema::simxml::SimModelCore::SimPropertySetDefinition *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimPropertySetDefinition__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimPropertySetDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimPropertySetDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimPropertySetDefinition__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)((schema::simxml::SimModelCore::SimPropertySetDefinition const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimPropertySetDefinition__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = (schema::simxml::SimModelCore::SimPropertySetDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::SimModelCore::SimPropertySetDefinition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimPropertySetDefinition__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimPropertySetDefinition__clone" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  result = (schema::simxml::SimModelCore::SimPropertySetDefinition *)((schema::simxml::SimModelCore::SimPropertySetDefinition const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimPropertySetDefinition__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimPropertySetDefinition__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimPropertySetDefinition__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimPropertySetDefinition__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimPropertySetDefinition__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::SimModelCore::SimPropertySetDefinition::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimPropertySetDefinition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::SimModelCore::SimPropertySetDefinition *arg1 = (schema::simxml::SimModelCore::SimPropertySetDefinition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimPropertySetDefinition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimPropertySetDefinition" "', argument " "1"" of type '" "schema::simxml::SimModelCore::SimPropertySetDefinition *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::SimModelCore::SimPropertySetDefinition * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimPropertySetDefinition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_decimal_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_decimal_optional")) SWIG_fail;
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  double temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_decimal_optional",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_decimal_optional" "', argument " "1"" of type '" "double""'");
  } 
  temp1 = static_cast< double >(val1);
  arg1 = &temp1;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_decimal_optional" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >((double const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = 0 ;
  double temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_decimal_optional",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_decimal_optional" "', argument " "1"" of type '" "double""'");
  } 
  temp1 = static_cast< double >(val1);
  arg1 = &temp1;
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >((double const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_decimal_optional",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_decimal_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_decimal_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_decimal_optional" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_decimal_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_decimal_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_decimal_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_decimal_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *)new xsd::cxx::tree::optional< ::xml_schema::decimal,true >((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_decimal_optional(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_decimal_optional__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_decimal_optional__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_decimal_optional__SWIG_6(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_decimal_optional__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_decimal_optional__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_decimal_optional__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_decimal_optional__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_decimal_optional'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional()\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional(double const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional(double const &)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional(xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional(xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::optional(xsd::cxx::tree::optional< ::xml_schema::decimal,true > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_decimal_optional___deref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double *)((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *)arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional___deref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional___deref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_decimal_optional___deref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_decimal_optional___deref____SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'decimal_optional___deref__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::operator ->() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::operator ->()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_decimal_optional___ref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double *) &((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *)arg1)->operator *();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional___ref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double *) &(arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional___ref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_decimal_optional___ref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_decimal_optional___ref____SWIG_0(self, args);
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_decimal_optional_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional_present" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (bool)((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double *) &((xsd::cxx::tree::optional< ::xml_schema::decimal,true > const *)arg1)->get();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_decimal_optional_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_decimal_optional_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'decimal_optional_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::get() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::decimal,true >::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_decimal_optional_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional_getValue" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  result = (double)(arg1)->getValue();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:decimal_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "decimal_optional_set" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  (arg1)->set((double const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_decimal_optional_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:decimal_optional_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "decimal_optional_reset" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_decimal_optional(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::decimal,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::decimal,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_decimal_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_decimal_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::decimal,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::decimal,true > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *decimal_optional_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__optionalT_double_true_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_int_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_int_optional")) SWIG_fail;
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  int temp1 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_int_optional",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_int_optional" "', argument " "1"" of type '" "int""'");
  } 
  temp1 = static_cast< int >(val1);
  arg1 = &temp1;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_int_optional" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >((int const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = 0 ;
  int temp1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_int_optional",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_int_optional" "', argument " "1"" of type '" "int""'");
  } 
  temp1 = static_cast< int >(val1);
  arg1 = &temp1;
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >((int const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_int_optional",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_int_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_int_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_int_optional" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >((xsd::cxx::tree::optional< ::xml_schema::int_,true > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_int_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_int_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_int_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >((xsd::cxx::tree::optional< ::xml_schema::int_,true > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_int_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *)new xsd::cxx::tree::optional< ::xml_schema::int_,true >((xsd::cxx::tree::optional< ::xml_schema::int_,true > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_int_optional(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_int_optional__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_int_optional__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_int_optional__SWIG_6(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_int_optional__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_int_optional__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_int_optional__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_int_optional__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_int_optional'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional()\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional(int const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional(int const &)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional(xsd::cxx::tree::optional< ::xml_schema::int_,true > const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional(xsd::cxx::tree::optional< ::xml_schema::int_,true > const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::optional(xsd::cxx::tree::optional< ::xml_schema::int_,true > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_int_optional___deref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int *)((xsd::cxx::tree::optional< ::xml_schema::int_,true > const *)arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional___deref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional___deref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_int_optional___deref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_int_optional___deref____SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'int_optional___deref__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::operator ->() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::operator ->()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_int_optional___ref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int *) &((xsd::cxx::tree::optional< ::xml_schema::int_,true > const *)arg1)->operator *();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional___ref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int *) &(arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional___ref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_int_optional___ref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_int_optional___ref____SWIG_0(self, args);
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_int_optional_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional_present" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (bool)((xsd::cxx::tree::optional< ::xml_schema::int_,true > const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int *) &((xsd::cxx::tree::optional< ::xml_schema::int_,true > const *)arg1)->get();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_int_optional_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_int_optional_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'int_optional_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::get() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::int_,true >::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_int_optional_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional_getValue" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  result = (int)(arg1)->getValue();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:int_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "int_optional_set" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  (arg1)->set((int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_int_optional_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:int_optional_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "int_optional_reset" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_int_optional(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::int_,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::int_,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_int_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_int_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::int_,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::int_,true > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *int_optional_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__optionalT_int_true_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_bool_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_bool_optional")) SWIG_fail;
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool *arg1 = 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  bool temp1 ;
  bool val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_bool_optional",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_bool_optional" "', argument " "1"" of type '" "bool""'");
  } 
  temp1 = static_cast< bool >(val1);
  arg1 = &temp1;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_bool_optional" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >((bool const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool *arg1 = 0 ;
  bool temp1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_bool_optional",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_bool_optional" "', argument " "1"" of type '" "bool""'");
  } 
  temp1 = static_cast< bool >(val1);
  arg1 = &temp1;
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >((bool const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_bool_optional",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_bool_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_bool_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_bool_optional" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_bool_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_bool_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_bool_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_bool_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *)new xsd::cxx::tree::optional< ::xml_schema::boolean,true >((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bool_optional(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_bool_optional__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_bool_optional__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_bool_optional__SWIG_6(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_bool_optional__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_bool_optional__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_bool_optional__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_bool_optional__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_bool_optional'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional()\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional(bool const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional(bool const &)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional(xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional(xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::optional(xsd::cxx::tree::optional< ::xml_schema::boolean,true > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_bool_optional___deref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool *)((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *)arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional___deref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional___deref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_bool_optional___deref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_bool_optional___deref____SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'bool_optional___deref__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::operator ->() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::operator ->()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_bool_optional___ref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool *) &((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *)arg1)->operator *();
  resultobj = SWIG_From_bool(static_cast< bool >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional___ref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool *) &(arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional___ref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_bool_optional___ref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_bool_optional___ref____SWIG_0(self, args);
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_bool_optional_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional_present" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool)((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool *) &((xsd::cxx::tree::optional< ::xml_schema::boolean,true > const *)arg1)->get();
  resultobj = SWIG_From_bool(static_cast< bool >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_bool_optional_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_bool_optional_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'bool_optional_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::get() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::boolean,true >::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_bool_optional_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional_getValue" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  result = (bool)(arg1)->getValue();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  bool *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bool_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bool_optional_set" "', argument " "2"" of type '" "bool""'");
  } 
  temp2 = static_cast< bool >(val2);
  arg2 = &temp2;
  (arg1)->set((bool const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bool_optional_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bool_optional_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bool_optional_reset" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_bool_optional(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::boolean,true > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::boolean,true > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_bool_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bool_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::boolean,true > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::boolean,true > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *bool_optional_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__optionalT_bool_true_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_string_optional(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_string_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_string_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_string_optional")) SWIG_fail;
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *arg1 = 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_string_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_string_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &""'"); 
  }
  arg1 = reinterpret_cast< ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_string_optional" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >((::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_string_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_string_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &""'"); 
  }
  arg1 = reinterpret_cast< ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >((::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_string_optional",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_string_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_string_optional" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >((xsd::cxx::tree::optional< ::xml_schema::string,false > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_string_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_string_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >((xsd::cxx::tree::optional< ::xml_schema::string,false > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_string_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_string_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::string,false > *)new xsd::cxx::tree::optional< ::xml_schema::string,false >((xsd::cxx::tree::optional< ::xml_schema::string,false > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_string_optional(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_string_optional__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_string_optional__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_string_optional__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_string_optional__SWIG_6(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_string_optional__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_string_optional__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_string_optional__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_string_optional'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional()\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional(::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional(::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional(xsd::cxx::tree::optional< ::xml_schema::string,false > const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional(xsd::cxx::tree::optional< ::xml_schema::string,false > const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::optional(xsd::cxx::tree::optional< ::xml_schema::string,false > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_string_optional___deref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *)((xsd::cxx::tree::optional< ::xml_schema::string,false > const *)arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional___deref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional___deref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_string_optional___deref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_string_optional___deref____SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'string_optional___deref__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::operator ->() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::operator ->()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_string_optional___ref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *) &((xsd::cxx::tree::optional< ::xml_schema::string,false > const *)arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional___ref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *) &(arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional___ref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_string_optional___ref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_string_optional___ref____SWIG_0(self, args);
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_string_optional_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_present" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (bool)((xsd::cxx::tree::optional< ::xml_schema::string,false > const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *) &((xsd::cxx::tree::optional< ::xml_schema::string,false > const *)arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_string_optional_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_string_optional_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'string_optional_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::get() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::string,false >::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_string_optional_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_getValue" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (arg1)->getValue();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:string_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "string_optional_set" "', argument " "2"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "string_optional_set" "', argument " "2"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &""'"); 
  }
  arg2 = reinterpret_cast< ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > * >(argp2);
  (arg1)->set((::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_reset" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_x__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *arg2 = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:string_optional_x__set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_x__set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "string_optional_x__set" "', argument " "2"" of type '" "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *""'"); 
  }
  arg2 = reinterpret_cast< ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > * >(argp2);
  if (arg1) (arg1)->x_ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_x__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_x__get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_x__get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *) ((arg1)->x_);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_container__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:string_optional_container__set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_container__set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "string_optional_container__set" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  if (arg1) (arg1)->container_ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_string_optional_container__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::string,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::string,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:string_optional_container__get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "string_optional_container__get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::string,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::string,false > * >(argp1);
  result = (xsd::cxx::tree::container *) ((arg1)->container_);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *string_optional_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_idref_optional(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_idref_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::container *arg1 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_idref_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::container * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_idref_optional")) SWIG_fail;
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *arg1 = 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_idref_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_idref_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &""'"); 
  }
  arg1 = reinterpret_cast< ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_idref_optional" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >((::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_idref_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_idref_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "1"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &""'"); 
  }
  arg1 = reinterpret_cast< ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >((::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  xsd::cxx::tree::container *arg3 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_idref_optional",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_idref_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_idref_optional" "', argument " "3"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg3 = reinterpret_cast< xsd::cxx::tree::container * >(argp3);
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >((xsd::cxx::tree::optional< ::xml_schema::idref,false > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = 0 ;
  xsd::cxx::tree::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_idref_optional",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_idref_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "2"" of type '" "xsd::cxx::tree::flags""'");
    } else {
      xsd::cxx::tree::flags * temp = reinterpret_cast< xsd::cxx::tree::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >((xsd::cxx::tree::optional< ::xml_schema::idref,false > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_idref_optional",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_idref_optional" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const &""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *)new xsd::cxx::tree::optional< ::xml_schema::idref,false >((xsd::cxx::tree::optional< ::xml_schema::idref,false > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_idref_optional(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_idref_optional__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_idref_optional__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_idref_optional__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_idref_optional__SWIG_6(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_idref_optional__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_idref_optional__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_idref_optional__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_idref_optional'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional(xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional()\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional(::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional(::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional(xsd::cxx::tree::optional< ::xml_schema::idref,false > const &,xsd::cxx::tree::flags,xsd::cxx::tree::container *)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional(xsd::cxx::tree::optional< ::xml_schema::idref,false > const &,xsd::cxx::tree::flags)\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::optional(xsd::cxx::tree::optional< ::xml_schema::idref,false > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_idref_optional___deref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *)((xsd::cxx::tree::optional< ::xml_schema::idref,false > const *)arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional___deref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional___deref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional___deref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_idref_optional___deref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_idref_optional___deref____SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'idref_optional___deref__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::operator ->() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::operator ->()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_idref_optional___ref____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *) &((xsd::cxx::tree::optional< ::xml_schema::idref,false > const *)arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional___ref____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional___ref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional___ref__" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *) &(arg1)->operator *();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional___ref__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_idref_optional___ref____SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_idref_optional___ref____SWIG_0(self, args);
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_idref_optional_present(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_present",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_present" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (bool)((xsd::cxx::tree::optional< ::xml_schema::idref,false > const *)arg1)->present();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > const *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *) &((xsd::cxx::tree::optional< ::xml_schema::idref,false > const *)arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *) &(arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_idref_optional_get__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_idref_optional_get__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'idref_optional_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::get() const\n"
    "    xsd::cxx::tree::optional< ::xml_schema::idref,false >::get()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_idref_optional_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_getValue" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (arg1)->getValue();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:idref_optional_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "idref_optional_set" "', argument " "2"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "idref_optional_set" "', argument " "2"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &""'"); 
  }
  arg2 = reinterpret_cast< ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > * >(argp2);
  (arg1)->set((::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_reset" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_x__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *arg2 = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:idref_optional_x__set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_x__set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "idref_optional_x__set" "', argument " "2"" of type '" "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *""'"); 
  }
  arg2 = reinterpret_cast< ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > * >(argp2);
  if (arg1) (arg1)->x_ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_x__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_x__get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_x__get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *) ((arg1)->x_);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_container__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  xsd::cxx::tree::container *arg2 = (xsd::cxx::tree::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:idref_optional_container__set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_container__set" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_xsd__cxx__tree___type, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "idref_optional_container__set" "', argument " "2"" of type '" "xsd::cxx::tree::container *""'"); 
  }
  arg2 = reinterpret_cast< xsd::cxx::tree::container * >(argp2);
  if (arg1) (arg1)->container_ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_idref_optional_container__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  xsd::cxx::tree::optional< ::xml_schema::idref,false > *arg1 = (xsd::cxx::tree::optional< ::xml_schema::idref,false > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  xsd::cxx::tree::container *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:idref_optional_container__get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "idref_optional_container__get" "', argument " "1"" of type '" "xsd::cxx::tree::optional< ::xml_schema::idref,false > *""'"); 
  }
  arg1 = reinterpret_cast< xsd::cxx::tree::optional< ::xml_schema::idref,false > * >(argp1);
  result = (xsd::cxx::tree::container *) ((arg1)->container_);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *idref_optional_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_element_one", _wrap_delete_element_one, METH_VARARGS, NULL},
	 { (char *)"new_element_one", _wrap_new_element_one, METH_VARARGS, NULL},
	 { (char *)"element_one_get", _wrap_element_one_get, METH_VARARGS, NULL},
	 { (char *)"element_one_set", _wrap_element_one_set, METH_VARARGS, NULL},
	 { (char *)"element_one_present", _wrap_element_one_present, METH_VARARGS, NULL},
	 { (char *)"element_one_swigregister", element_one_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_element_optional", _wrap_delete_element_optional, METH_VARARGS, NULL},
	 { (char *)"new_element_optional", _wrap_new_element_optional, METH_VARARGS, NULL},
	 { (char *)"element_optional___deref__", _wrap_element_optional___deref__, METH_VARARGS, NULL},
	 { (char *)"element_optional___ref__", _wrap_element_optional___ref__, METH_VARARGS, NULL},
	 { (char *)"element_optional_present", _wrap_element_optional_present, METH_VARARGS, NULL},
	 { (char *)"element_optional_get", _wrap_element_optional_get, METH_VARARGS, NULL},
	 { (char *)"element_optional_set", _wrap_element_optional_set, METH_VARARGS, NULL},
	 { (char *)"element_optional_reset", _wrap_element_optional_reset, METH_VARARGS, NULL},
	 { (char *)"element_optional_swigregister", element_optional_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_element_sequence", _wrap_new_element_sequence, METH_VARARGS, NULL},
	 { (char *)"element_sequence_assign", _wrap_element_sequence_assign, METH_VARARGS, NULL},
	 { (char *)"element_sequence_resize", _wrap_element_sequence_resize, METH_VARARGS, NULL},
	 { (char *)"element_sequence_size", _wrap_element_sequence_size, METH_VARARGS, NULL},
	 { (char *)"element_sequence_max_size", _wrap_element_sequence_max_size, METH_VARARGS, NULL},
	 { (char *)"element_sequence_capacity", _wrap_element_sequence_capacity, METH_VARARGS, NULL},
	 { (char *)"element_sequence_empty", _wrap_element_sequence_empty, METH_VARARGS, NULL},
	 { (char *)"element_sequence_reserve", _wrap_element_sequence_reserve, METH_VARARGS, NULL},
	 { (char *)"element_sequence_clear", _wrap_element_sequence_clear, METH_VARARGS, NULL},
	 { (char *)"element_sequence_begin", _wrap_element_sequence_begin, METH_VARARGS, NULL},
	 { (char *)"element_sequence_end", _wrap_element_sequence_end, METH_VARARGS, NULL},
	 { (char *)"element_sequence_rbegin", _wrap_element_sequence_rbegin, METH_VARARGS, NULL},
	 { (char *)"element_sequence_rend", _wrap_element_sequence_rend, METH_VARARGS, NULL},
	 { (char *)"element_sequence_at", _wrap_element_sequence_at, METH_VARARGS, NULL},
	 { (char *)"element_sequence_front", _wrap_element_sequence_front, METH_VARARGS, NULL},
	 { (char *)"element_sequence_back", _wrap_element_sequence_back, METH_VARARGS, NULL},
	 { (char *)"element_sequence_push_back", _wrap_element_sequence_push_back, METH_VARARGS, NULL},
	 { (char *)"element_sequence_pop_back", _wrap_element_sequence_pop_back, METH_VARARGS, NULL},
	 { (char *)"element_sequence_insert", _wrap_element_sequence_insert, METH_VARARGS, NULL},
	 { (char *)"element_sequence_erase", _wrap_element_sequence_erase, METH_VARARGS, NULL},
	 { (char *)"element_sequence_swap", _wrap_element_sequence_swap, METH_VARARGS, NULL},
	 { (char *)"delete_element_sequence", _wrap_delete_element_sequence, METH_VARARGS, NULL},
	 { (char *)"element_sequence_swigregister", element_sequence_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_attribute_set_common", _wrap_new_attribute_set_common, METH_VARARGS, NULL},
	 { (char *)"delete_attribute_set_common", _wrap_delete_attribute_set_common, METH_VARARGS, NULL},
	 { (char *)"attribute_set_common_swigregister", attribute_set_common_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_flags", _wrap_new_flags, METH_VARARGS, NULL},
	 { (char *)"delete_flags", _wrap_delete_flags, METH_VARARGS, NULL},
	 { (char *)"flags_swigregister", flags_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_content_order", _wrap_new_content_order, METH_VARARGS, NULL},
	 { (char *)"content_order_id_set", _wrap_content_order_id_set, METH_VARARGS, NULL},
	 { (char *)"content_order_id_get", _wrap_content_order_id_get, METH_VARARGS, NULL},
	 { (char *)"content_order_index_set", _wrap_content_order_index_set, METH_VARARGS, NULL},
	 { (char *)"content_order_index_get", _wrap_content_order_index_get, METH_VARARGS, NULL},
	 { (char *)"delete_content_order", _wrap_delete_content_order, METH_VARARGS, NULL},
	 { (char *)"content_order_swigregister", content_order_swigregister, METH_VARARGS, NULL},
	 { (char *)"__eq__", _wrap___eq__, METH_VARARGS, NULL},
	 { (char *)"__ne__", _wrap___ne__, METH_VARARGS, NULL},
	 { (char *)"__lt__", _wrap___lt__, METH_VARARGS, NULL},
	 { (char *)"delete_identity", _wrap_delete_identity, METH_VARARGS, NULL},
	 { (char *)"identity_before", _wrap_identity_before, METH_VARARGS, NULL},
	 { (char *)"identity_throw_duplicate_id", _wrap_identity_throw_duplicate_id, METH_VARARGS, NULL},
	 { (char *)"identity_swigregister", identity_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete__type", _wrap_delete__type, METH_VARARGS, NULL},
	 { (char *)"_type__clone", _wrap__type__clone, METH_VARARGS, NULL},
	 { (char *)"new__type", _wrap_new__type, METH_VARARGS, NULL},
	 { (char *)"_type_dom_content", _wrap__type_dom_content, METH_VARARGS, NULL},
	 { (char *)"_type_dom_content_document", _wrap__type_dom_content_document, METH_VARARGS, NULL},
	 { (char *)"_type_null_content", _wrap__type_null_content, METH_VARARGS, NULL},
	 { (char *)"_type__container", _wrap__type__container, METH_VARARGS, NULL},
	 { (char *)"_type__root", _wrap__type__root, METH_VARARGS, NULL},
	 { (char *)"_type__node", _wrap__type__node, METH_VARARGS, NULL},
	 { (char *)"_type__register_id", _wrap__type__register_id, METH_VARARGS, NULL},
	 { (char *)"_type__unregister_id", _wrap__type__unregister_id, METH_VARARGS, NULL},
	 { (char *)"_type__lookup_id", _wrap__type__lookup_id, METH_VARARGS, NULL},
	 { (char *)"_type_swigregister", _type_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_schema_type", _wrap_new_schema_type, METH_VARARGS, NULL},
	 { (char *)"delete_schema_type", _wrap_delete_schema_type, METH_VARARGS, NULL},
	 { (char *)"schema_type_swigregister", schema_type_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_sequence_common", _wrap_new_sequence_common, METH_VARARGS, NULL},
	 { (char *)"sequence_common_size", _wrap_sequence_common_size, METH_VARARGS, NULL},
	 { (char *)"sequence_common_sizeInt", _wrap_sequence_common_sizeInt, METH_VARARGS, NULL},
	 { (char *)"sequence_common_max_size", _wrap_sequence_common_max_size, METH_VARARGS, NULL},
	 { (char *)"sequence_common_capacity", _wrap_sequence_common_capacity, METH_VARARGS, NULL},
	 { (char *)"sequence_common_empty", _wrap_sequence_common_empty, METH_VARARGS, NULL},
	 { (char *)"sequence_common_reserve", _wrap_sequence_common_reserve, METH_VARARGS, NULL},
	 { (char *)"sequence_common_clear", _wrap_sequence_common_clear, METH_VARARGS, NULL},
	 { (char *)"sequence_common_assign", _wrap_sequence_common_assign, METH_VARARGS, NULL},
	 { (char *)"sequence_common_resize", _wrap_sequence_common_resize, METH_VARARGS, NULL},
	 { (char *)"sequence_common_insert", _wrap_sequence_common_insert, METH_VARARGS, NULL},
	 { (char *)"sequence_common_container__set", _wrap_sequence_common_container__set, METH_VARARGS, NULL},
	 { (char *)"sequence_common_container__get", _wrap_sequence_common_container__get, METH_VARARGS, NULL},
	 { (char *)"sequence_common_v__set", _wrap_sequence_common_v__set, METH_VARARGS, NULL},
	 { (char *)"sequence_common_v__get", _wrap_sequence_common_v__get, METH_VARARGS, NULL},
	 { (char *)"delete_sequence_common", _wrap_delete_sequence_common, METH_VARARGS, NULL},
	 { (char *)"sequence_common_swigregister", sequence_common_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimRoot_Description", _wrap_SimRoot_Description, METH_VARARGS, NULL},
	 { (char *)"SimRoot_ObjectOwnerHistory", _wrap_SimRoot_ObjectOwnerHistory, METH_VARARGS, NULL},
	 { (char *)"SimRoot_IfcGlobalID", _wrap_SimRoot_IfcGlobalID, METH_VARARGS, NULL},
	 { (char *)"SimRoot_IfcName", _wrap_SimRoot_IfcName, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SimUniqueID", _wrap_SimRoot_SimUniqueID, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SimModelType", _wrap_SimRoot_SimModelType, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SimModelSubtype", _wrap_SimRoot_SimModelSubtype, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SimModelName", _wrap_SimRoot_SimModelName, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SourceModelSchema", _wrap_SimRoot_SourceModelSchema, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SourceModelObjectType", _wrap_SimRoot_SourceModelObjectType, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SourceLibraryEntryID", _wrap_SimRoot_SourceLibraryEntryID, METH_VARARGS, NULL},
	 { (char *)"SimRoot_SourceLibraryEntryRef", _wrap_SimRoot_SourceLibraryEntryRef, METH_VARARGS, NULL},
	 { (char *)"SimRoot_RefId", _wrap_SimRoot_RefId, METH_VARARGS, NULL},
	 { (char *)"new_SimRoot", _wrap_new_SimRoot, METH_VARARGS, NULL},
	 { (char *)"SimRoot__clone", _wrap_SimRoot__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimRoot", _wrap_delete_SimRoot, METH_VARARGS, NULL},
	 { (char *)"SimRoot_swigregister", SimRoot_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimObjectDefinition_Decomposes", _wrap_SimObjectDefinition_Decomposes, METH_VARARGS, NULL},
	 { (char *)"new_SimObjectDefinition", _wrap_new_SimObjectDefinition, METH_VARARGS, NULL},
	 { (char *)"SimObjectDefinition__clone", _wrap_SimObjectDefinition__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimObjectDefinition", _wrap_delete_SimObjectDefinition, METH_VARARGS, NULL},
	 { (char *)"SimObjectDefinition_swigregister", SimObjectDefinition_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimObject_TypeDefinition", _wrap_SimObject_TypeDefinition, METH_VARARGS, NULL},
	 { (char *)"SimObject_ObjectType", _wrap_SimObject_ObjectType, METH_VARARGS, NULL},
	 { (char *)"SimObject_ObjectCreationParams", _wrap_SimObject_ObjectCreationParams, METH_VARARGS, NULL},
	 { (char *)"SimObject_IsTemplateObject", _wrap_SimObject_IsTemplateObject, METH_VARARGS, NULL},
	 { (char *)"new_SimObject", _wrap_new_SimObject, METH_VARARGS, NULL},
	 { (char *)"SimObject__clone", _wrap_SimObject__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimObject", _wrap_delete_SimObject, METH_VARARGS, NULL},
	 { (char *)"SimObject_swigregister", SimObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimGroup_ParentGroups", _wrap_SimGroup_ParentGroups, METH_VARARGS, NULL},
	 { (char *)"SimGroup_ContainingBuildings", _wrap_SimGroup_ContainingBuildings, METH_VARARGS, NULL},
	 { (char *)"SimGroup_NevronSchematicLayout", _wrap_SimGroup_NevronSchematicLayout, METH_VARARGS, NULL},
	 { (char *)"SimGroup_TemplatesForMembers", _wrap_SimGroup_TemplatesForMembers, METH_VARARGS, NULL},
	 { (char *)"SimGroup_HasTemplateChanged", _wrap_SimGroup_HasTemplateChanged, METH_VARARGS, NULL},
	 { (char *)"SimGroup_ChangeFromTemplate", _wrap_SimGroup_ChangeFromTemplate, METH_VARARGS, NULL},
	 { (char *)"SimGroup_MemberUsedForDiagrams", _wrap_SimGroup_MemberUsedForDiagrams, METH_VARARGS, NULL},
	 { (char *)"new_SimGroup", _wrap_new_SimGroup, METH_VARARGS, NULL},
	 { (char *)"SimGroup__clone", _wrap_SimGroup__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimGroup", _wrap_delete_SimGroup, METH_VARARGS, NULL},
	 { (char *)"SimGroup_swigregister", SimGroup_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimSpatialStructureElement_LongName", _wrap_SimSpatialStructureElement_LongName, METH_VARARGS, NULL},
	 { (char *)"SimSpatialStructureElement_CompositionType", _wrap_SimSpatialStructureElement_CompositionType, METH_VARARGS, NULL},
	 { (char *)"SimSpatialStructureElement_Placement", _wrap_SimSpatialStructureElement_Placement, METH_VARARGS, NULL},
	 { (char *)"new_SimSpatialStructureElement", _wrap_new_SimSpatialStructureElement, METH_VARARGS, NULL},
	 { (char *)"SimSpatialStructureElement__clone", _wrap_SimSpatialStructureElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimSpatialStructureElement", _wrap_delete_SimSpatialStructureElement, METH_VARARGS, NULL},
	 { (char *)"SimSpatialStructureElement_swigregister", SimSpatialStructureElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimResourceObject_AssignedToGroups", _wrap_SimResourceObject_AssignedToGroups, METH_VARARGS, NULL},
	 { (char *)"SimResourceObject_SelectedPropertyGroups", _wrap_SimResourceObject_SelectedPropertyGroups, METH_VARARGS, NULL},
	 { (char *)"SimResourceObject_IsTemplateObject", _wrap_SimResourceObject_IsTemplateObject, METH_VARARGS, NULL},
	 { (char *)"new_SimResourceObject", _wrap_new_SimResourceObject, METH_VARARGS, NULL},
	 { (char *)"SimResourceObject__clone", _wrap_SimResourceObject__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimResourceObject", _wrap_delete_SimResourceObject, METH_VARARGS, NULL},
	 { (char *)"SimResourceObject_swigregister", SimResourceObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimAppDefault_DefaultForProject", _wrap_SimAppDefault_DefaultForProject, METH_VARARGS, NULL},
	 { (char *)"SimAppDefault_DefaultForPerson", _wrap_SimAppDefault_DefaultForPerson, METH_VARARGS, NULL},
	 { (char *)"SimAppDefault_DefaultForUnitSystem", _wrap_SimAppDefault_DefaultForUnitSystem, METH_VARARGS, NULL},
	 { (char *)"new_SimAppDefault", _wrap_new_SimAppDefault, METH_VARARGS, NULL},
	 { (char *)"SimAppDefault__clone", _wrap_SimAppDefault__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimAppDefault", _wrap_delete_SimAppDefault, METH_VARARGS, NULL},
	 { (char *)"SimAppDefault_swigregister", SimAppDefault_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimRepresentationItem", _wrap_new_SimRepresentationItem, METH_VARARGS, NULL},
	 { (char *)"SimRepresentationItem__clone", _wrap_SimRepresentationItem__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimRepresentationItem", _wrap_delete_SimRepresentationItem, METH_VARARGS, NULL},
	 { (char *)"SimRepresentationItem_swigregister", SimRepresentationItem_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimProfileDefinition_ProfileType", _wrap_SimProfileDefinition_ProfileType, METH_VARARGS, NULL},
	 { (char *)"SimProfileDefinition_ProfileName", _wrap_SimProfileDefinition_ProfileName, METH_VARARGS, NULL},
	 { (char *)"new_SimProfileDefinition", _wrap_new_SimProfileDefinition, METH_VARARGS, NULL},
	 { (char *)"SimProfileDefinition__clone", _wrap_SimProfileDefinition__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimProfileDefinition", _wrap_delete_SimProfileDefinition, METH_VARARGS, NULL},
	 { (char *)"SimProfileDefinition_swigregister", SimProfileDefinition_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_ObjectIndex", _wrap_SimBldgModelParams_ObjectIndex, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_ObjectName", _wrap_SimBldgModelParams_ObjectName, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_IsAutoGenerated", _wrap_SimBldgModelParams_IsAutoGenerated, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_LocalPlacementX", _wrap_SimBldgModelParams_LocalPlacementX, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_LocalPlacementY", _wrap_SimBldgModelParams_LocalPlacementY, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_LocalPlacementZ", _wrap_SimBldgModelParams_LocalPlacementZ, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_LocalPlacementRotation", _wrap_SimBldgModelParams_LocalPlacementRotation, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_XDirectionX", _wrap_SimBldgModelParams_XDirectionX, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_XDirectionY", _wrap_SimBldgModelParams_XDirectionY, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_XDirectionZ", _wrap_SimBldgModelParams_XDirectionZ, METH_VARARGS, NULL},
	 { (char *)"new_SimBldgModelParams", _wrap_new_SimBldgModelParams, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams__clone", _wrap_SimBldgModelParams__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimBldgModelParams", _wrap_delete_SimBldgModelParams, METH_VARARGS, NULL},
	 { (char *)"SimBldgModelParams_swigregister", SimBldgModelParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimTopologicalRepresentationItem", _wrap_new_SimTopologicalRepresentationItem, METH_VARARGS, NULL},
	 { (char *)"SimTopologicalRepresentationItem__clone", _wrap_SimTopologicalRepresentationItem__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimTopologicalRepresentationItem", _wrap_delete_SimTopologicalRepresentationItem, METH_VARARGS, NULL},
	 { (char *)"SimTopologicalRepresentationItem_swigregister", SimTopologicalRepresentationItem_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimElement_GeometricRepresentations", _wrap_SimElement_GeometricRepresentations, METH_VARARGS, NULL},
	 { (char *)"SimElement_ContainingSpatialStructure", _wrap_SimElement_ContainingSpatialStructure, METH_VARARGS, NULL},
	 { (char *)"SimElement_AssignedToGroups", _wrap_SimElement_AssignedToGroups, METH_VARARGS, NULL},
	 { (char *)"SimElement_Placement", _wrap_SimElement_Placement, METH_VARARGS, NULL},
	 { (char *)"SimElement_Tag", _wrap_SimElement_Tag, METH_VARARGS, NULL},
	 { (char *)"SimElement_SelectedPropertyGroups", _wrap_SimElement_SelectedPropertyGroups, METH_VARARGS, NULL},
	 { (char *)"new_SimElement", _wrap_new_SimElement, METH_VARARGS, NULL},
	 { (char *)"SimElement__clone", _wrap_SimElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimElement", _wrap_delete_SimElement, METH_VARARGS, NULL},
	 { (char *)"SimElement_swigregister", SimElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimDistributionElement_DockedToPort", _wrap_SimDistributionElement_DockedToPort, METH_VARARGS, NULL},
	 { (char *)"new_SimDistributionElement", _wrap_new_SimDistributionElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionElement__clone", _wrap_SimDistributionElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimDistributionElement", _wrap_delete_SimDistributionElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionElement_swigregister", SimDistributionElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimDistributionControlElement_AssignedToFlowElement", _wrap_SimDistributionControlElement_AssignedToFlowElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionControlElement_ControlElementID", _wrap_SimDistributionControlElement_ControlElementID, METH_VARARGS, NULL},
	 { (char *)"new_SimDistributionControlElement", _wrap_new_SimDistributionControlElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionControlElement__clone", _wrap_SimDistributionControlElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimDistributionControlElement", _wrap_delete_SimDistributionControlElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionControlElement_swigregister", SimDistributionControlElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimUnitType_UnitType_String", _wrap_SimUnitType_UnitType_String, METH_VARARGS, NULL},
	 { (char *)"SimUnitType_Name", _wrap_SimUnitType_Name, METH_VARARGS, NULL},
	 { (char *)"SimUnitType_DecimalPrecision", _wrap_SimUnitType_DecimalPrecision, METH_VARARGS, NULL},
	 { (char *)"new_SimUnitType", _wrap_new_SimUnitType, METH_VARARGS, NULL},
	 { (char *)"SimUnitType__clone", _wrap_SimUnitType__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimUnitType", _wrap_delete_SimUnitType, METH_VARARGS, NULL},
	 { (char *)"SimUnitType_swigregister", SimUnitType_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimNode_HostElement", _wrap_SimNode_HostElement, METH_VARARGS, NULL},
	 { (char *)"new_SimNode", _wrap_new_SimNode, METH_VARARGS, NULL},
	 { (char *)"SimNode__clone", _wrap_SimNode__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimNode", _wrap_delete_SimNode, METH_VARARGS, NULL},
	 { (char *)"SimNode_swigregister", SimNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimPort", _wrap_new_SimPort, METH_VARARGS, NULL},
	 { (char *)"SimPort__clone", _wrap_SimPort__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimPort", _wrap_delete_SimPort, METH_VARARGS, NULL},
	 { (char *)"SimPort_swigregister", SimPort_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimFeatureElement", _wrap_new_SimFeatureElement, METH_VARARGS, NULL},
	 { (char *)"SimFeatureElement__clone", _wrap_SimFeatureElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimFeatureElement", _wrap_delete_SimFeatureElement, METH_VARARGS, NULL},
	 { (char *)"SimFeatureElement_swigregister", SimFeatureElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimDistributionFlowElement_ControlledBy", _wrap_SimDistributionFlowElement_ControlledBy, METH_VARARGS, NULL},
	 { (char *)"SimDistributionFlowElement__3dLength", _wrap_SimDistributionFlowElement__3dLength, METH_VARARGS, NULL},
	 { (char *)"SimDistributionFlowElement__3dWidth", _wrap_SimDistributionFlowElement__3dWidth, METH_VARARGS, NULL},
	 { (char *)"SimDistributionFlowElement__3dHeight", _wrap_SimDistributionFlowElement__3dHeight, METH_VARARGS, NULL},
	 { (char *)"new_SimDistributionFlowElement", _wrap_new_SimDistributionFlowElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionFlowElement__clone", _wrap_SimDistributionFlowElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimDistributionFlowElement", _wrap_delete_SimDistributionFlowElement, METH_VARARGS, NULL},
	 { (char *)"SimDistributionFlowElement_swigregister", SimDistributionFlowElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimFlowEnergyConverter", _wrap_new_SimFlowEnergyConverter, METH_VARARGS, NULL},
	 { (char *)"SimFlowEnergyConverter__clone", _wrap_SimFlowEnergyConverter__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimFlowEnergyConverter", _wrap_delete_SimFlowEnergyConverter, METH_VARARGS, NULL},
	 { (char *)"SimFlowEnergyConverter_swigregister", SimFlowEnergyConverter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimGeometricRepresentationItem", _wrap_new_SimGeometricRepresentationItem, METH_VARARGS, NULL},
	 { (char *)"SimGeometricRepresentationItem__clone", _wrap_SimGeometricRepresentationItem__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimGeometricRepresentationItem", _wrap_delete_SimGeometricRepresentationItem, METH_VARARGS, NULL},
	 { (char *)"SimGeometricRepresentationItem_swigregister", SimGeometricRepresentationItem_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimObjectPlacement", _wrap_new_SimObjectPlacement, METH_VARARGS, NULL},
	 { (char *)"SimObjectPlacement__clone", _wrap_SimObjectPlacement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimObjectPlacement", _wrap_delete_SimObjectPlacement, METH_VARARGS, NULL},
	 { (char *)"SimObjectPlacement_swigregister", SimObjectPlacement_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimActorDefinition", _wrap_new_SimActorDefinition, METH_VARARGS, NULL},
	 { (char *)"SimActorDefinition__clone", _wrap_SimActorDefinition__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimActorDefinition", _wrap_delete_SimActorDefinition, METH_VARARGS, NULL},
	 { (char *)"SimActorDefinition_swigregister", SimActorDefinition_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimRepresentation_RepresentationContext", _wrap_SimRepresentation_RepresentationContext, METH_VARARGS, NULL},
	 { (char *)"SimRepresentation_RepresentationIdentifier", _wrap_SimRepresentation_RepresentationIdentifier, METH_VARARGS, NULL},
	 { (char *)"SimRepresentation_RepresentationType", _wrap_SimRepresentation_RepresentationType, METH_VARARGS, NULL},
	 { (char *)"SimRepresentation_RepresentationItems", _wrap_SimRepresentation_RepresentationItems, METH_VARARGS, NULL},
	 { (char *)"new_SimRepresentation", _wrap_new_SimRepresentation, METH_VARARGS, NULL},
	 { (char *)"SimRepresentation__clone", _wrap_SimRepresentation__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimRepresentation", _wrap_delete_SimRepresentation, METH_VARARGS, NULL},
	 { (char *)"SimRepresentation_swigregister", SimRepresentation_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimBuildingElement", _wrap_new_SimBuildingElement, METH_VARARGS, NULL},
	 { (char *)"SimBuildingElement__clone", _wrap_SimBuildingElement__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimBuildingElement", _wrap_delete_SimBuildingElement, METH_VARARGS, NULL},
	 { (char *)"SimBuildingElement_swigregister", SimBuildingElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimTemplate", _wrap_new_SimTemplate, METH_VARARGS, NULL},
	 { (char *)"SimTemplate__clone", _wrap_SimTemplate__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimTemplate", _wrap_delete_SimTemplate, METH_VARARGS, NULL},
	 { (char *)"SimTemplate_swigregister", SimTemplate_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimObjectTypeDefinition_ApplicableOccurrence", _wrap_SimObjectTypeDefinition_ApplicableOccurrence, METH_VARARGS, NULL},
	 { (char *)"SimObjectTypeDefinition_HasPropertySets", _wrap_SimObjectTypeDefinition_HasPropertySets, METH_VARARGS, NULL},
	 { (char *)"SimObjectTypeDefinition_TypeDefCreationParams", _wrap_SimObjectTypeDefinition_TypeDefCreationParams, METH_VARARGS, NULL},
	 { (char *)"SimObjectTypeDefinition_PlacementRelToContainingTypeDef", _wrap_SimObjectTypeDefinition_PlacementRelToContainingTypeDef, METH_VARARGS, NULL},
	 { (char *)"new_SimObjectTypeDefinition", _wrap_new_SimObjectTypeDefinition, METH_VARARGS, NULL},
	 { (char *)"SimObjectTypeDefinition__clone", _wrap_SimObjectTypeDefinition__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimObjectTypeDefinition", _wrap_delete_SimObjectTypeDefinition, METH_VARARGS, NULL},
	 { (char *)"SimObjectTypeDefinition_swigregister", SimObjectTypeDefinition_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimArrayParams", _wrap_new_SimArrayParams, METH_VARARGS, NULL},
	 { (char *)"SimArrayParams__clone", _wrap_SimArrayParams__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimArrayParams", _wrap_delete_SimArrayParams, METH_VARARGS, NULL},
	 { (char *)"SimArrayParams_swigregister", SimArrayParams_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimPropertySetDefinition", _wrap_new_SimPropertySetDefinition, METH_VARARGS, NULL},
	 { (char *)"SimPropertySetDefinition__clone", _wrap_SimPropertySetDefinition__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimPropertySetDefinition", _wrap_delete_SimPropertySetDefinition, METH_VARARGS, NULL},
	 { (char *)"SimPropertySetDefinition_swigregister", SimPropertySetDefinition_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_decimal_optional", _wrap_new_decimal_optional, METH_VARARGS, NULL},
	 { (char *)"decimal_optional___deref__", _wrap_decimal_optional___deref__, METH_VARARGS, NULL},
	 { (char *)"decimal_optional___ref__", _wrap_decimal_optional___ref__, METH_VARARGS, NULL},
	 { (char *)"decimal_optional_present", _wrap_decimal_optional_present, METH_VARARGS, NULL},
	 { (char *)"decimal_optional_get", _wrap_decimal_optional_get, METH_VARARGS, NULL},
	 { (char *)"decimal_optional_getValue", _wrap_decimal_optional_getValue, METH_VARARGS, NULL},
	 { (char *)"decimal_optional_set", _wrap_decimal_optional_set, METH_VARARGS, NULL},
	 { (char *)"decimal_optional_reset", _wrap_decimal_optional_reset, METH_VARARGS, NULL},
	 { (char *)"delete_decimal_optional", _wrap_delete_decimal_optional, METH_VARARGS, NULL},
	 { (char *)"decimal_optional_swigregister", decimal_optional_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_int_optional", _wrap_new_int_optional, METH_VARARGS, NULL},
	 { (char *)"int_optional___deref__", _wrap_int_optional___deref__, METH_VARARGS, NULL},
	 { (char *)"int_optional___ref__", _wrap_int_optional___ref__, METH_VARARGS, NULL},
	 { (char *)"int_optional_present", _wrap_int_optional_present, METH_VARARGS, NULL},
	 { (char *)"int_optional_get", _wrap_int_optional_get, METH_VARARGS, NULL},
	 { (char *)"int_optional_getValue", _wrap_int_optional_getValue, METH_VARARGS, NULL},
	 { (char *)"int_optional_set", _wrap_int_optional_set, METH_VARARGS, NULL},
	 { (char *)"int_optional_reset", _wrap_int_optional_reset, METH_VARARGS, NULL},
	 { (char *)"delete_int_optional", _wrap_delete_int_optional, METH_VARARGS, NULL},
	 { (char *)"int_optional_swigregister", int_optional_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_bool_optional", _wrap_new_bool_optional, METH_VARARGS, NULL},
	 { (char *)"bool_optional___deref__", _wrap_bool_optional___deref__, METH_VARARGS, NULL},
	 { (char *)"bool_optional___ref__", _wrap_bool_optional___ref__, METH_VARARGS, NULL},
	 { (char *)"bool_optional_present", _wrap_bool_optional_present, METH_VARARGS, NULL},
	 { (char *)"bool_optional_get", _wrap_bool_optional_get, METH_VARARGS, NULL},
	 { (char *)"bool_optional_getValue", _wrap_bool_optional_getValue, METH_VARARGS, NULL},
	 { (char *)"bool_optional_set", _wrap_bool_optional_set, METH_VARARGS, NULL},
	 { (char *)"bool_optional_reset", _wrap_bool_optional_reset, METH_VARARGS, NULL},
	 { (char *)"delete_bool_optional", _wrap_delete_bool_optional, METH_VARARGS, NULL},
	 { (char *)"bool_optional_swigregister", bool_optional_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_string_optional", _wrap_delete_string_optional, METH_VARARGS, NULL},
	 { (char *)"new_string_optional", _wrap_new_string_optional, METH_VARARGS, NULL},
	 { (char *)"string_optional___deref__", _wrap_string_optional___deref__, METH_VARARGS, NULL},
	 { (char *)"string_optional___ref__", _wrap_string_optional___ref__, METH_VARARGS, NULL},
	 { (char *)"string_optional_present", _wrap_string_optional_present, METH_VARARGS, NULL},
	 { (char *)"string_optional_get", _wrap_string_optional_get, METH_VARARGS, NULL},
	 { (char *)"string_optional_getValue", _wrap_string_optional_getValue, METH_VARARGS, NULL},
	 { (char *)"string_optional_set", _wrap_string_optional_set, METH_VARARGS, NULL},
	 { (char *)"string_optional_reset", _wrap_string_optional_reset, METH_VARARGS, NULL},
	 { (char *)"string_optional_x__set", _wrap_string_optional_x__set, METH_VARARGS, NULL},
	 { (char *)"string_optional_x__get", _wrap_string_optional_x__get, METH_VARARGS, NULL},
	 { (char *)"string_optional_container__set", _wrap_string_optional_container__set, METH_VARARGS, NULL},
	 { (char *)"string_optional_container__get", _wrap_string_optional_container__get, METH_VARARGS, NULL},
	 { (char *)"string_optional_swigregister", string_optional_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_idref_optional", _wrap_delete_idref_optional, METH_VARARGS, NULL},
	 { (char *)"new_idref_optional", _wrap_new_idref_optional, METH_VARARGS, NULL},
	 { (char *)"idref_optional___deref__", _wrap_idref_optional___deref__, METH_VARARGS, NULL},
	 { (char *)"idref_optional___ref__", _wrap_idref_optional___ref__, METH_VARARGS, NULL},
	 { (char *)"idref_optional_present", _wrap_idref_optional_present, METH_VARARGS, NULL},
	 { (char *)"idref_optional_get", _wrap_idref_optional_get, METH_VARARGS, NULL},
	 { (char *)"idref_optional_getValue", _wrap_idref_optional_getValue, METH_VARARGS, NULL},
	 { (char *)"idref_optional_set", _wrap_idref_optional_set, METH_VARARGS, NULL},
	 { (char *)"idref_optional_reset", _wrap_idref_optional_reset, METH_VARARGS, NULL},
	 { (char *)"idref_optional_x__set", _wrap_idref_optional_x__set, METH_VARARGS, NULL},
	 { (char *)"idref_optional_x__get", _wrap_idref_optional_x__get, METH_VARARGS, NULL},
	 { (char *)"idref_optional_container__set", _wrap_idref_optional_container__set, METH_VARARGS, NULL},
	 { (char *)"idref_optional_container__get", _wrap_idref_optional_container__get, METH_VARARGS, NULL},
	 { (char *)"idref_optional_swigregister", idref_optional_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimActorDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *) (schema::simxml::SimModelCore::SimBldgModelParams *) ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *) (schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTemplateTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimTemplate *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimNodeTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::ResourcesGeneral::SimNode *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimBldgModelParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *) (schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimAppDefaultTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimAppDefault *) x));
}
static void *_p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimPropertySetDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *) (schema::simxml::ResourcesGeneral::SimNode *) ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::ResourcesGeneral::SimUnitType *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimObjectPlacement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimFeatureElementTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimFeatureElement *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *) (schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationTo_p_schema__simxml__SimModelCore__SimResourceObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimResourceObject *)  ((schema::simxml::SimModelCore::SimRepresentation *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *)  ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *)  ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *)  ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObject *) (schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *)  ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *)  ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimElement *) (schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimDistributionElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimDistributionElement *)  ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimDistributionElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimDistributionElement *)  ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimDistributionElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimDistributionElement *) (schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimDistributionFlowElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimDistributionFlowElement *)  ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *) ((schema::simxml::SimModelCore::SimObjectDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimActorDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimBldgModelParams *) ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimNodeTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimNode *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTemplateTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimTemplate *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimBldgModelParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimAppDefaultTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimAppDefault *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimPropertySetDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::ResourcesGeneral::SimNode *) ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimUnitType *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimObjectPlacement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimResourceObjectTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *) ((schema::simxml::SimModelCore::SimResourceObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimFeatureElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimFeatureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRootTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *)  ((schema::simxml::SimModelCore::SimRoot *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentation *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *)  ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *) (schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimObjectDefinition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimObjectDefinition *)  ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimRepresentationItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRepresentationItem *)  ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimRepresentationItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRepresentationItem *)  ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimRepresentationItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRepresentationItem *)  ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimBldgModelParams(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimBldgModelParams *)  ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__ResourcesGeneral__SimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::ResourcesGeneral::SimNode *)  ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *)  ((schema::simxml::SimModelCore::SimObjectDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimActorDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimBldgModelParams *) ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimNodeTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimNode *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTemplateTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimTemplate *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimBldgModelParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimAppDefaultTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimAppDefault *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimPropertySetDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::ResourcesGeneral::SimNode *) ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimUnitType *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimObjectPlacement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimResourceObjectTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *)  ((schema::simxml::SimModelCore::SimResourceObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimFeatureElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimFeatureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationTo_p_schema__simxml__SimModelCore__SimRoot(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((schema::simxml::SimModelCore::SimRoot *) (schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentation *) x));
}
static swig_type_info _swigt__p_ApplicableOccurrence_optional = {"_p_ApplicableOccurrence_optional", "ApplicableOccurrence_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ApplicableOccurrence_traits = {"_p_ApplicableOccurrence_traits", "ApplicableOccurrence_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ApplicableOccurrence_type = {"_p_ApplicableOccurrence_type", "ApplicableOccurrence_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_optional = {"_p_AssignedToFlowElement_optional", "AssignedToFlowElement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_traits = {"_p_AssignedToFlowElement_traits", "AssignedToFlowElement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_type = {"_p_AssignedToFlowElement_type", "AssignedToFlowElement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_optional = {"_p_AssignedToGroups_optional", "AssignedToGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_traits = {"_p_AssignedToGroups_traits", "AssignedToGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_type = {"_p_AssignedToGroups_type", "AssignedToGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_optional = {"_p_ChangeFromTemplate_optional", "ChangeFromTemplate_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_traits = {"_p_ChangeFromTemplate_traits", "ChangeFromTemplate_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_type = {"_p_ChangeFromTemplate_type", "ChangeFromTemplate_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_optional = {"_p_CompositionType_optional", "CompositionType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_traits = {"_p_CompositionType_traits", "CompositionType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_type = {"_p_CompositionType_type", "CompositionType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_optional = {"_p_ContainingBuildings_optional", "ContainingBuildings_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_traits = {"_p_ContainingBuildings_traits", "ContainingBuildings_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_type = {"_p_ContainingBuildings_type", "ContainingBuildings_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_optional = {"_p_ContainingSpatialStructure_optional", "ContainingSpatialStructure_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_traits = {"_p_ContainingSpatialStructure_traits", "ContainingSpatialStructure_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_type = {"_p_ContainingSpatialStructure_type", "ContainingSpatialStructure_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_optional = {"_p_ControlElementID_optional", "ControlElementID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_traits = {"_p_ControlElementID_traits", "ControlElementID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_type = {"_p_ControlElementID_type", "ControlElementID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_optional = {"_p_ControlledBy_optional", "ControlledBy_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_traits = {"_p_ControlledBy_traits", "ControlledBy_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_type = {"_p_ControlledBy_type", "ControlledBy_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_optional = {"_p_DecimalPrecision_optional", "DecimalPrecision_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_traits = {"_p_DecimalPrecision_traits", "DecimalPrecision_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_type = {"_p_DecimalPrecision_type", "DecimalPrecision_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_optional = {"_p_Decomposes_optional", "Decomposes_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_traits = {"_p_Decomposes_traits", "Decomposes_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_type = {"_p_Decomposes_type", "Decomposes_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForPerson_optional = {"_p_DefaultForPerson_optional", "DefaultForPerson_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForPerson_traits = {"_p_DefaultForPerson_traits", "DefaultForPerson_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForPerson_type = {"_p_DefaultForPerson_type", "DefaultForPerson_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForProject_optional = {"_p_DefaultForProject_optional", "DefaultForProject_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForProject_traits = {"_p_DefaultForProject_traits", "DefaultForProject_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForProject_type = {"_p_DefaultForProject_type", "DefaultForProject_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForUnitSystem_optional = {"_p_DefaultForUnitSystem_optional", "DefaultForUnitSystem_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForUnitSystem_traits = {"_p_DefaultForUnitSystem_traits", "DefaultForUnitSystem_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DefaultForUnitSystem_type = {"_p_DefaultForUnitSystem_type", "DefaultForUnitSystem_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_optional = {"_p_Description_optional", "Description_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_traits = {"_p_Description_traits", "Description_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_type = {"_p_Description_type", "Description_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_optional = {"_p_DockedToPort_optional", "DockedToPort_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_traits = {"_p_DockedToPort_traits", "DockedToPort_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_type = {"_p_DockedToPort_type", "DockedToPort_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_optional = {"_p_GeometricRepresentations_optional", "GeometricRepresentations_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_traits = {"_p_GeometricRepresentations_traits", "GeometricRepresentations_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_type = {"_p_GeometricRepresentations_type", "GeometricRepresentations_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_optional = {"_p_HasPropertySets_optional", "HasPropertySets_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_traits = {"_p_HasPropertySets_traits", "HasPropertySets_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_type = {"_p_HasPropertySets_type", "HasPropertySets_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_optional = {"_p_HasTemplateChanged_optional", "HasTemplateChanged_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_traits = {"_p_HasTemplateChanged_traits", "HasTemplateChanged_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_type = {"_p_HasTemplateChanged_type", "HasTemplateChanged_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_optional = {"_p_HostElement_optional", "HostElement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_traits = {"_p_HostElement_traits", "HostElement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_type = {"_p_HostElement_type", "HostElement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_optional = {"_p_IfcGlobalID_optional", "IfcGlobalID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_traits = {"_p_IfcGlobalID_traits", "IfcGlobalID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_type = {"_p_IfcGlobalID_type", "IfcGlobalID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_optional = {"_p_IfcName_optional", "IfcName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_traits = {"_p_IfcName_traits", "IfcName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_type = {"_p_IfcName_type", "IfcName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_optional = {"_p_IsAutoGenerated_optional", "IsAutoGenerated_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_traits = {"_p_IsAutoGenerated_traits", "IsAutoGenerated_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_type = {"_p_IsAutoGenerated_type", "IsAutoGenerated_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_optional = {"_p_IsTemplateObject_optional", "IsTemplateObject_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_traits = {"_p_IsTemplateObject_traits", "IsTemplateObject_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_type = {"_p_IsTemplateObject_type", "IsTemplateObject_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_optional = {"_p_LocalPlacementRotation_optional", "LocalPlacementRotation_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_traits = {"_p_LocalPlacementRotation_traits", "LocalPlacementRotation_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_type = {"_p_LocalPlacementRotation_type", "LocalPlacementRotation_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_optional = {"_p_LocalPlacementX_optional", "LocalPlacementX_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_traits = {"_p_LocalPlacementX_traits", "LocalPlacementX_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_type = {"_p_LocalPlacementX_type", "LocalPlacementX_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_optional = {"_p_LocalPlacementY_optional", "LocalPlacementY_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_traits = {"_p_LocalPlacementY_traits", "LocalPlacementY_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_type = {"_p_LocalPlacementY_type", "LocalPlacementY_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_optional = {"_p_LocalPlacementZ_optional", "LocalPlacementZ_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_traits = {"_p_LocalPlacementZ_traits", "LocalPlacementZ_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_type = {"_p_LocalPlacementZ_type", "LocalPlacementZ_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_optional = {"_p_LongName_optional", "LongName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_traits = {"_p_LongName_traits", "LongName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_type = {"_p_LongName_type", "LongName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_optional = {"_p_MemberUsedForDiagrams_optional", "MemberUsedForDiagrams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_traits = {"_p_MemberUsedForDiagrams_traits", "MemberUsedForDiagrams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_type = {"_p_MemberUsedForDiagrams_type", "MemberUsedForDiagrams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_optional = {"_p_Name_optional", "Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_traits = {"_p_Name_traits", "Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_type = {"_p_Name_type", "Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_optional = {"_p_NevronSchematicLayout_optional", "NevronSchematicLayout_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_traits = {"_p_NevronSchematicLayout_traits", "NevronSchematicLayout_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_type = {"_p_NevronSchematicLayout_type", "NevronSchematicLayout_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_optional = {"_p_ObjectCreationParams_optional", "ObjectCreationParams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_traits = {"_p_ObjectCreationParams_traits", "ObjectCreationParams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_type = {"_p_ObjectCreationParams_type", "ObjectCreationParams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_optional = {"_p_ObjectIndex_optional", "ObjectIndex_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_traits = {"_p_ObjectIndex_traits", "ObjectIndex_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_type = {"_p_ObjectIndex_type", "ObjectIndex_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_optional = {"_p_ObjectName_optional", "ObjectName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_traits = {"_p_ObjectName_traits", "ObjectName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_type = {"_p_ObjectName_type", "ObjectName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_optional = {"_p_ObjectOwnerHistory_optional", "ObjectOwnerHistory_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_traits = {"_p_ObjectOwnerHistory_traits", "ObjectOwnerHistory_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_type = {"_p_ObjectOwnerHistory_type", "ObjectOwnerHistory_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_optional = {"_p_ObjectType_optional", "ObjectType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_traits = {"_p_ObjectType_traits", "ObjectType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_type = {"_p_ObjectType_type", "ObjectType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_optional = {"_p_ParentGroups_optional", "ParentGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_traits = {"_p_ParentGroups_traits", "ParentGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_type = {"_p_ParentGroups_type", "ParentGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_optional = {"_p_PlacementRelToContainingTypeDef_optional", "PlacementRelToContainingTypeDef_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_traits = {"_p_PlacementRelToContainingTypeDef_traits", "PlacementRelToContainingTypeDef_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_type = {"_p_PlacementRelToContainingTypeDef_type", "PlacementRelToContainingTypeDef_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_optional = {"_p_Placement_optional", "Placement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_traits = {"_p_Placement_traits", "Placement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_type = {"_p_Placement_type", "Placement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_optional = {"_p_ProfileName_optional", "ProfileName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_traits = {"_p_ProfileName_traits", "ProfileName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_type = {"_p_ProfileName_type", "ProfileName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_optional = {"_p_ProfileType_optional", "ProfileType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_traits = {"_p_ProfileType_traits", "ProfileType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_type = {"_p_ProfileType_type", "ProfileType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefId_traits = {"_p_RefId_traits", "RefId_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefId_type = {"_p_RefId_type", "RefId_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_optional = {"_p_RepresentationContext_optional", "RepresentationContext_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_traits = {"_p_RepresentationContext_traits", "RepresentationContext_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_type = {"_p_RepresentationContext_type", "RepresentationContext_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_optional = {"_p_RepresentationIdentifier_optional", "RepresentationIdentifier_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_traits = {"_p_RepresentationIdentifier_traits", "RepresentationIdentifier_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_type = {"_p_RepresentationIdentifier_type", "RepresentationIdentifier_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_optional = {"_p_RepresentationItems_optional", "RepresentationItems_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_traits = {"_p_RepresentationItems_traits", "RepresentationItems_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_type = {"_p_RepresentationItems_type", "RepresentationItems_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_optional = {"_p_RepresentationType_optional", "RepresentationType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_traits = {"_p_RepresentationType_traits", "RepresentationType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_type = {"_p_RepresentationType_type", "RepresentationType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_optional = {"_p_SelectedPropertyGroups_optional", "SelectedPropertyGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_traits = {"_p_SelectedPropertyGroups_traits", "SelectedPropertyGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_type = {"_p_SelectedPropertyGroups_type", "SelectedPropertyGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_optional = {"_p_SimModelName_optional", "SimModelName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_traits = {"_p_SimModelName_traits", "SimModelName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_type = {"_p_SimModelName_type", "SimModelName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_optional = {"_p_SimModelSubtype_optional", "SimModelSubtype_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_traits = {"_p_SimModelSubtype_traits", "SimModelSubtype_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_type = {"_p_SimModelSubtype_type", "SimModelSubtype_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_optional = {"_p_SimModelType_optional", "SimModelType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_traits = {"_p_SimModelType_traits", "SimModelType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_type = {"_p_SimModelType_type", "SimModelType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_optional = {"_p_SimUniqueID_optional", "SimUniqueID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_traits = {"_p_SimUniqueID_traits", "SimUniqueID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_type = {"_p_SimUniqueID_type", "SimUniqueID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_optional = {"_p_SourceLibraryEntryID_optional", "SourceLibraryEntryID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_traits = {"_p_SourceLibraryEntryID_traits", "SourceLibraryEntryID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_type = {"_p_SourceLibraryEntryID_type", "SourceLibraryEntryID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_optional = {"_p_SourceLibraryEntryRef_optional", "SourceLibraryEntryRef_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_traits = {"_p_SourceLibraryEntryRef_traits", "SourceLibraryEntryRef_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_type = {"_p_SourceLibraryEntryRef_type", "SourceLibraryEntryRef_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_optional = {"_p_SourceModelObjectType_optional", "SourceModelObjectType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_traits = {"_p_SourceModelObjectType_traits", "SourceModelObjectType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_type = {"_p_SourceModelObjectType_type", "SourceModelObjectType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_optional = {"_p_SourceModelSchema_optional", "SourceModelSchema_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_traits = {"_p_SourceModelSchema_traits", "SourceModelSchema_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_type = {"_p_SourceModelSchema_type", "SourceModelSchema_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_optional = {"_p_Tag_optional", "Tag_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_traits = {"_p_Tag_traits", "Tag_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_type = {"_p_Tag_type", "Tag_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_optional = {"_p_TemplatesForMembers_optional", "TemplatesForMembers_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_traits = {"_p_TemplatesForMembers_traits", "TemplatesForMembers_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_type = {"_p_TemplatesForMembers_type", "TemplatesForMembers_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_optional = {"_p_TypeDefCreationParams_optional", "TypeDefCreationParams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_traits = {"_p_TypeDefCreationParams_traits", "TypeDefCreationParams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_type = {"_p_TypeDefCreationParams_type", "TypeDefCreationParams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_optional = {"_p_TypeDefinition_optional", "TypeDefinition_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_traits = {"_p_TypeDefinition_traits", "TypeDefinition_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_type = {"_p_TypeDefinition_type", "TypeDefinition_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_optional = {"_p_UnitType_String_optional", "UnitType_String_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_traits = {"_p_UnitType_String_traits", "UnitType_String_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_type = {"_p_UnitType_String_type", "UnitType_String_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_optional = {"_p_XDirectionX_optional", "XDirectionX_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_traits = {"_p_XDirectionX_traits", "XDirectionX_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_type = {"_p_XDirectionX_type", "XDirectionX_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_optional = {"_p_XDirectionY_optional", "XDirectionY_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_traits = {"_p_XDirectionY_traits", "XDirectionY_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_type = {"_p_XDirectionY_type", "XDirectionY_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_optional = {"_p_XDirectionZ_optional", "XDirectionZ_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_traits = {"_p_XDirectionZ_traits", "XDirectionZ_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_type = {"_p_XDirectionZ_type", "XDirectionZ_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XMLCh = {"_p_XMLCh", "XMLCh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_optional = {"_p__3dHeight_optional", "_3dHeight_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_traits = {"_p__3dHeight_traits", "_3dHeight_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_type = {"_p__3dHeight_type", "_3dHeight_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_optional = {"_p__3dLength_optional", "_3dLength_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_traits = {"_p__3dLength_traits", "_3dLength_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_type = {"_p__3dLength_type", "_3dLength_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_optional = {"_p__3dWidth_optional", "_3dWidth_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_traits = {"_p__3dWidth_traits", "_3dWidth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_type = {"_p__3dWidth_type", "_3dWidth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_const_iterator = {"_p_base_const_iterator", "base_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_iterator = {"_p_base_iterator", "base_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_sequence = {"_p_base_sequence", "base_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *|xml_schema::boolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool_convertible = {"_p_bool_convertible", "bool_convertible *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_iterator = {"_p_const_iterator", "const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reverse_iterator = {"_p_const_reverse_iterator", "const_reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dom_content_optional = {"_p_dom_content_optional", "dom_content_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "xml_schema::double_ *|double *|xml_schema::decimal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|xml_schema::float_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|xml_schema::int_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator = {"_p_iterator", "iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t", "xsd::cxx::tree::element_sequence::const_iterator *|iterator_adapter< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::const_iterator,xercesc::DOMElement const > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t", "xsd::cxx::tree::element_sequence::const_reverse_iterator *|iterator_adapter< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::const_reverse_iterator,xercesc::DOMElement const > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t", "xsd::cxx::tree::element_sequence::iterator *|iterator_adapter< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::iterator,xercesc::DOMElement > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t = {"_p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t", "xsd::cxx::tree::element_sequence::reverse_iterator *|iterator_adapter< std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::reverse_iterator,xercesc::DOMElement > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "long long *|xml_schema::long_ *|xml_schema::integer *|xml_schema::non_positive_integer *|xml_schema::negative_integer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reverse_iterator = {"_p_reverse_iterator", "reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter = {"_p_schema__simxml__MepModel__SimFlowEnergyConverter", "schema::simxml::MepModel::SimFlowEnergyConverter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__Model__SimModel = {"_p_schema__simxml__Model__SimModel", "::schema::simxml::Model::SimModel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams = {"_p_schema__simxml__ResourcesGeneral__SimArrayParams", "schema::simxml::ResourcesGeneral::SimArrayParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimNode = {"_p_schema__simxml__ResourcesGeneral__SimNode", "schema::simxml::ResourcesGeneral::SimNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimPort = {"_p_schema__simxml__ResourcesGeneral__SimPort", "schema::simxml::ResourcesGeneral::SimPort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimUnitType = {"_p_schema__simxml__ResourcesGeneral__SimUnitType", "schema::simxml::ResourcesGeneral::SimUnitType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition = {"_p_schema__simxml__ResourcesGeometry__SimProfileDefinition", "schema::simxml::ResourcesGeometry::SimProfileDefinition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups = {"_p_schema__simxml__SimModelCore__SelectedPropertyGroups", "schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type *|schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type *|::schema::simxml::SimModelCore::SelectedPropertyGroups *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimActorDefinition = {"_p_schema__simxml__SimModelCore__SimActorDefinition", "schema::simxml::SimModelCore::SimActorDefinition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimAppDefault = {"_p_schema__simxml__SimModelCore__SimAppDefault", "schema::simxml::SimModelCore::SimAppDefault *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimBldgModelParams = {"_p_schema__simxml__SimModelCore__SimBldgModelParams", "schema::simxml::SimModelCore::SimBldgModelParams *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimBuildingElement = {"_p_schema__simxml__SimModelCore__SimBuildingElement", "schema::simxml::SimModelCore::SimBuildingElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement = {"_p_schema__simxml__SimModelCore__SimDistributionControlElement", "schema::simxml::SimModelCore::SimDistributionControlElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionElement = {"_p_schema__simxml__SimModelCore__SimDistributionElement", "schema::simxml::SimModelCore::SimDistributionElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement = {"_p_schema__simxml__SimModelCore__SimDistributionFlowElement", "schema::simxml::SimModelCore::SimDistributionFlowElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimElement = {"_p_schema__simxml__SimModelCore__SimElement", "schema::simxml::SimModelCore::SimElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimFeatureElement = {"_p_schema__simxml__SimModelCore__SimFeatureElement", "schema::simxml::SimModelCore::SimFeatureElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem = {"_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem", "schema::simxml::SimModelCore::SimGeometricRepresentationItem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimGroup = {"_p_schema__simxml__SimModelCore__SimGroup", "schema::simxml::SimModelCore::SimGroup *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObject = {"_p_schema__simxml__SimModelCore__SimObject", "schema::simxml::SimModelCore::SimObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectDefinition = {"_p_schema__simxml__SimModelCore__SimObjectDefinition", "schema::simxml::SimModelCore::SimObjectDefinition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectPlacement = {"_p_schema__simxml__SimModelCore__SimObjectPlacement", "schema::simxml::SimModelCore::SimObjectPlacement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition = {"_p_schema__simxml__SimModelCore__SimObjectTypeDefinition", "schema::simxml::SimModelCore::SimObjectTypeDefinition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition = {"_p_schema__simxml__SimModelCore__SimPropertySetDefinition", "schema::simxml::SimModelCore::SimPropertySetDefinition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRepresentation = {"_p_schema__simxml__SimModelCore__SimRepresentation", "schema::simxml::SimModelCore::SimRepresentation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRepresentationItem = {"_p_schema__simxml__SimModelCore__SimRepresentationItem", "schema::simxml::SimModelCore::SimRepresentationItem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimResourceObject = {"_p_schema__simxml__SimModelCore__SimResourceObject", "schema::simxml::SimModelCore::SimResourceObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRoot = {"_p_schema__simxml__SimModelCore__SimRoot", "schema::simxml::SimModelCore::SimRoot *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement = {"_p_schema__simxml__SimModelCore__SimSpatialStructureElement", "schema::simxml::SimModelCore::SimSpatialStructureElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimTemplate = {"_p_schema__simxml__SimModelCore__SimTemplate", "schema::simxml::SimModelCore::SimTemplate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem = {"_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem", "schema::simxml::SimModelCore::SimTopologicalRepresentationItem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__doubleList = {"_p_schema__simxml__SimModelCore__doubleList", "::schema::simxml::SimModelCore::doubleList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__integerList = {"_p_schema__simxml__SimModelCore__integerList", "::schema::simxml::SimModelCore::integerList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__logical = {"_p_schema__simxml__SimModelCore__logical", "::schema::simxml::SimModelCore::logical *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_self_ = {"_p_self_", "self_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|xml_schema::short_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|xml_schema::byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t = {"_p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t", "::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_type > *|std::auto_ptr< ::schema::simxml::SimModelCore::SelectedPropertyGroups > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__id_t = {"_p_std__auto_ptrT_xml_schema__id_t", "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::RefId_type > *|std::auto_ptr< ::xml_schema::id > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__idref_t = {"_p_std__auto_ptrT_xml_schema__idref_t", "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObject::TypeDefinition_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Placement_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type > *|std::auto_ptr< ::xml_schema::idref > *|::std::auto_ptr< schema::simxml::ResourcesGeneral::SimNode::HostElement_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__idrefs_t = {"_p_std__auto_ptrT_xml_schema__idrefs_t", "std::auto_ptr< ::xml_schema::idrefs > *|::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ParentGroups_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimElement::AssignedToGroups_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__string_t = {"_p_std__auto_ptrT_xml_schema__string_t", "::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimUniqueID_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelType_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SimModelName_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObject::ObjectType_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcName_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRoot::Description_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimElement::Tag_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type > *|::std::auto_ptr< schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type > *|::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type > *|::std::auto_ptr< schema::simxml::ResourcesGeneral::SimUnitType::Name_type > *|::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type > *|::std::auto_ptr< schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type > *|std::auto_ptr< ::xml_schema::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type = {"_p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type", "xsd::cxx::tree::element_sequence::size_type *|std::vector< xsd::cxx::tree::element_sequence::ptr,std::allocator< xsd::cxx::tree::element_sequence::ptr > >::size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t = {"_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t", "std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > > *|xsd::cxx::tree::sequence_common::base_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator = {"_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator", "std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::iterator *|xsd::cxx::tree::sequence_common::base_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type = {"_p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type", "xsd::cxx::tree::sequence_common::size_type *|std::vector< xsd::cxx::tree::sequence_common::ptr,std::allocator< xsd::cxx::tree::sequence_common::ptr > >::size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|xml_schema::unsigned_byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "xml_schema::unsigned_int *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "xml_schema::unsigned_long *|unsigned long long *|xml_schema::non_negative_integer *|xml_schema::positive_integer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|xml_schema::unsigned_short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMAttr = {"_p_xercesc__DOMAttr", "xercesc::DOMAttr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMDocument = {"_p_xercesc__DOMDocument", "xercesc::DOMDocument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMElement = {"_p_xercesc__DOMElement", "xercesc::DOMElement *|::xercesc::DOMElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMNode = {"_p_xercesc__DOMNode", "xercesc::DOMNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree___type = {"_p_xsd__cxx__tree___type", "xsd::cxx::tree::_type *|xsd::cxx::tree::type *|xml_schema::type *|xsd::cxx::tree::container *|xml_schema::container *|::xml_schema::container *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__attribute_set_common = {"_p_xsd__cxx__tree__attribute_set_common", "xsd::cxx::tree::attribute_set_common *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t", "xml_schema::base64_binary *|::xsd::cxx::tree::base64_binary< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__boundsT_char_t = {"_p_xsd__cxx__tree__boundsT_char_t", "::xsd::cxx::tree::bounds< char > *|xml_schema::bounds *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__bufferT_char_t = {"_p_xsd__cxx__tree__bufferT_char_t", "::xsd::cxx::tree::buffer< char > *|xml_schema::buffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__content_order = {"_p_xsd__cxx__tree__content_order", "xsd::cxx::tree::content_order *|::xsd::cxx::tree::content_order *|xml_schema::content_order *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::date< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::date *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xml_schema::date_time *|xsd::cxx::tree::date_time< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__diagnosticsT_char_t = {"_p_xsd__cxx__tree__diagnosticsT_char_t", "xml_schema::diagnostics *|::xsd::cxx::tree::diagnostics< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__duplicate_idT_char_t = {"_p_xsd__cxx__tree__duplicate_idT_char_t", "::xsd::cxx::tree::duplicate_id< char > *|xml_schema::duplicate_id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::duration< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::duration *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__element_one = {"_p_xsd__cxx__tree__element_one", "xsd::cxx::tree::element_one *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__element_optional = {"_p_xsd__cxx__tree__element_optional", "xsd::cxx::tree::element_optional *|xsd::cxx::tree::_type::dom_content_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__element_sequence = {"_p_xsd__cxx__tree__element_sequence", "xsd::cxx::tree::element_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t = {"_p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t", "xml_schema::entities *|::xsd::cxx::tree::entities< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::entity > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t", "xml_schema::entity *|::xsd::cxx::tree::entity< char,xsd::cxx::tree::ncname > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__errorT_char_t = {"_p_xsd__cxx__tree__errorT_char_t", "xml_schema::error *|::xsd::cxx::tree::error< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__exceptionT_char_t = {"_p_xsd__cxx__tree__exceptionT_char_t", "::xsd::cxx::tree::exception< char > *|xml_schema::exception *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_attributeT_char_t = {"_p_xsd__cxx__tree__expected_attributeT_char_t", "::xsd::cxx::tree::expected_attribute< char > *|xml_schema::expected_attribute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_elementT_char_t = {"_p_xsd__cxx__tree__expected_elementT_char_t", "::xsd::cxx::tree::expected_element< char > *|xml_schema::expected_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_text_contentT_char_t = {"_p_xsd__cxx__tree__expected_text_contentT_char_t", "::xsd::cxx::tree::expected_text_content< char > *|xml_schema::expected_text_content *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__flags = {"_p_xsd__cxx__tree__flags", "xsd::cxx::tree::flags *|::xsd::cxx::tree::flags *|xml_schema::flags *|::xml_schema::flags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gday< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gday *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xml_schema::gmonth *|xsd::cxx::tree::gmonth< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gmonth_day< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gmonth_day *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gyear< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gyear *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gyear_month< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gyear_month *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t", "::xsd::cxx::tree::hex_binary< char,xsd::cxx::tree::simple_type > *|xml_schema::hex_binary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t", "::xsd::cxx::tree::id< char,xsd::cxx::tree::ncname > *|::xml_schema::id *|xml_schema::id *|schema::simxml::SimModelCore::SimRoot::RefId_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__identity = {"_p_xsd__cxx__tree__identity", "xsd::cxx::tree::identity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t", "::xsd::cxx::tree::idref< char,::xsd::cxx::tree::ncname< char,::xsd::cxx::tree::name< char,::xsd::cxx::tree::token< char,::xsd::cxx::tree::normalized_string< char,::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > > > > >,xsd::cxx::tree::_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t", "schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_type *|schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_type *|schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_type *|schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_type *|schema::simxml::SimModelCore::SimObject::ObjectCreationParams_type *|schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_type *|schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_type *|schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_type *|schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_type *|schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_type *|schema::simxml::ResourcesGeneral::SimNode::HostElement_type *|schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_type *|xsd::cxx::tree::idref< char,xsd::cxx::tree::ncname,xsd::cxx::tree::_type > *|schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_type *|schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_type *|schema::simxml::SimModelCore::SimElement::Placement_type *|xml_schema::idref *|::xml_schema::idref *|schema::simxml::SimModelCore::SimObject::TypeDefinition_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t = {"_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t", "schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_type *|schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_type *|schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_type *|schema::simxml::SimModelCore::SimGroup::ParentGroups_type *|::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref > *|schema::simxml::SimModelCore::SimElement::GeometricRepresentations_type *|schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_type *|schema::simxml::SimModelCore::SimElement::AssignedToGroups_type *|schema::simxml::SimModelCore::SimGroup::ContainingBuildings_type *|xml_schema::idrefs *|::xml_schema::idrefs *|schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_type *|schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t", "xml_schema::language *|::xsd::cxx::tree::language< char,xsd::cxx::tree::token > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t", "xml_schema::name *|::xsd::cxx::tree::name< char,xsd::cxx::tree::token > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t = {"_p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t", "xml_schema::ncname *|::xsd::cxx::tree::ncname< char,xsd::cxx::tree::name > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t", "::xsd::cxx::tree::nmtoken< char,xsd::cxx::tree::token > *|xml_schema::nmtoken *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t = {"_p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t", "::xsd::cxx::tree::nmtokens< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::nmtoken > *|xml_schema::nmtokens *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t = {"_p_xsd__cxx__tree__no_prefix_mappingT_char_t", "::xsd::cxx::tree::no_prefix_mapping< char > *|xml_schema::no_prefix_mapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__no_type_infoT_char_t = {"_p_xsd__cxx__tree__no_type_infoT_char_t", "xml_schema::no_type_info *|::xsd::cxx::tree::no_type_info< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t = {"_p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t", "::xsd::cxx::tree::normalized_string< char,xsd::cxx::tree::string > *|xml_schema::normalized_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__not_derivedT_char_t = {"_p_xsd__cxx__tree__not_derivedT_char_t", "::xsd::cxx::tree::not_derived< char > *|xml_schema::not_derived *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_bool_true_t = {"_p_xsd__cxx__tree__optionalT_bool_true_t", "schema::simxml::SimModelCore::SimBldgModelParams::IsAutoGenerated_optional *|xsd::cxx::tree::optional< bool,true > *|xsd::cxx::tree::optional< bool,xsd::cxx::tree::fundamental_p< bool >::r > *|schema::simxml::SimModelCore::SimGroup::HasTemplateChanged_optional *|schema::simxml::SimModelCore::SimObject::IsTemplateObject_optional *|xsd::cxx::tree::optional< ::xml_schema::boolean,true > *|schema::simxml::SimModelCore::SimResourceObject::IsTemplateObject_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_double_true_t = {"_p_xsd__cxx__tree__optionalT_double_true_t", "schema::simxml::SimModelCore::SimDistributionFlowElement::_3dLength_optional *|schema::simxml::SimModelCore::SimDistributionFlowElement::_3dWidth_optional *|schema::simxml::SimModelCore::SimDistributionFlowElement::_3dHeight_optional *|xsd::cxx::tree::optional< double,true > *|schema::simxml::SimModelCore::SimBldgModelParams::XDirectionZ_optional *|schema::simxml::SimModelCore::SimBldgModelParams::XDirectionY_optional *|schema::simxml::SimModelCore::SimBldgModelParams::XDirectionX_optional *|schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementX_optional *|schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementY_optional *|schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementZ_optional *|schema::simxml::SimModelCore::SimBldgModelParams::LocalPlacementRotation_optional *|xsd::cxx::tree::optional< ::xml_schema::decimal,true > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_int_true_t = {"_p_xsd__cxx__tree__optionalT_int_true_t", "schema::simxml::ResourcesGeneral::SimUnitType::DecimalPrecision_optional *|xsd::cxx::tree::optional< int,true > *|schema::simxml::SimModelCore::SimBldgModelParams::ObjectIndex_optional *|xsd::cxx::tree::optional< ::xml_schema::int_,true > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t = {"_p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t", "schema::simxml::SimModelCore::SimResourceObject::SelectedPropertyGroups_optional *|schema::simxml::SimModelCore::SimElement::SelectedPropertyGroups_optional *|xsd::cxx::tree::optional< ::schema::simxml::SimModelCore::SelectedPropertyGroups,xsd::cxx::tree::fundamental_p< ::schema::simxml::SimModelCore::SelectedPropertyGroups >::r > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t", "xsd::cxx::tree::optional< ::xml_schema::idref,false > *|schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryRef_optional *|xsd::cxx::tree::optional< xsd::cxx::tree::idref< char,xsd::cxx::tree::ncname,xsd::cxx::tree::_type >,false > *|schema::simxml::SimModelCore::SimElement::ContainingSpatialStructure_optional *|schema::simxml::SimModelCore::SimRepresentation::RepresentationContext_optional *|schema::simxml::SimModelCore::SimObjectDefinition::Decomposes_optional *|schema::simxml::SimModelCore::SimObject::ObjectCreationParams_optional *|schema::simxml::SimModelCore::SimObjectTypeDefinition::PlacementRelToContainingTypeDef_optional *|schema::simxml::SimModelCore::SimObjectTypeDefinition::TypeDefCreationParams_optional *|schema::simxml::SimModelCore::SimRoot::ObjectOwnerHistory_optional *|schema::simxml::SimModelCore::SimSpatialStructureElement::Placement_optional *|schema::simxml::SimModelCore::SimDistributionElement::DockedToPort_optional *|schema::simxml::ResourcesGeneral::SimNode::HostElement_optional *|schema::simxml::SimModelCore::SimGroup::MemberUsedForDiagrams_optional *|schema::simxml::SimModelCore::SimAppDefault::DefaultForProject_optional *|schema::simxml::SimModelCore::SimAppDefault::DefaultForPerson_optional *|schema::simxml::SimModelCore::SimElement::Placement_optional *|schema::simxml::SimModelCore::SimObject::TypeDefinition_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t", "schema::simxml::SimModelCore::SimDistributionFlowElement::ControlledBy_optional *|schema::simxml::SimModelCore::SimGroup::ParentGroups_optional *|schema::simxml::SimModelCore::SimGroup::TemplatesForMembers_optional *|schema::simxml::SimModelCore::SimDistributionControlElement::AssignedToFlowElement_optional *|schema::simxml::SimModelCore::SimElement::GeometricRepresentations_optional *|schema::simxml::SimModelCore::SimRepresentation::RepresentationItems_optional *|schema::simxml::SimModelCore::SimElement::AssignedToGroups_optional *|xsd::cxx::tree::optional< ::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref >,xsd::cxx::tree::fundamental_p< ::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref > >::r > *|schema::simxml::SimModelCore::SimResourceObject::AssignedToGroups_optional *|schema::simxml::SimModelCore::SimGroup::ContainingBuildings_optional *|schema::simxml::SimModelCore::SimObjectTypeDefinition::HasPropertySets_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t", "schema::simxml::ResourcesGeneral::SimUnitType::Name_optional *|schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_optional *|schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_optional *|schema::simxml::SimModelCore::SimRoot::SimModelName_optional *|schema::simxml::SimModelCore::SimObject::ObjectType_optional *|schema::simxml::SimModelCore::SimRepresentation::RepresentationType_optional *|schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_optional *|schema::simxml::SimModelCore::SimRoot::SimModelSubtype_optional *|schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_optional *|schema::simxml::SimModelCore::SimRoot::SimUniqueID_optional *|xsd::cxx::tree::optional< ::xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type >,false > *|schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_optional *|schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_optional *|schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_optional *|schema::simxml::SimModelCore::SimRoot::IfcName_optional *|schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_optional *|schema::simxml::SimModelCore::SimRoot::Description_optional *|schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_optional *|schema::simxml::SimModelCore::SimRoot::SimModelType_optional *|schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_optional *|schema::simxml::SimModelCore::SimRoot::SourceModelSchema_optional *|xsd::cxx::tree::optional< ::xml_schema::string,false > *|schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_optional *|schema::simxml::SimModelCore::SimElement::Tag_optional *|schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_optional *|schema::simxml::SimModelCore::SimRoot::IfcGlobalID_optional *|schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_optional *|schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__parsingT_char_t = {"_p_xsd__cxx__tree__parsingT_char_t", "xml_schema::parsing *|::xsd::cxx::tree::parsing< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__propertiesT_char_t = {"_p_xsd__cxx__tree__propertiesT_char_t", "::xsd::cxx::tree::properties< char > *|xml_schema::properties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t", "xml_schema::qname *|::xsd::cxx::tree::qname< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::uri,xsd::cxx::tree::ncname > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__schema_type = {"_p_xsd__cxx__tree__schema_type", "xsd::cxx::tree::schema_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequence_common = {"_p_xsd__cxx__tree__sequence_common", "xsd::cxx::tree::sequence_common *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__severity = {"_p_xsd__cxx__tree__severity", "::xsd::cxx::tree::severity *|xml_schema::severity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t", "xml_schema::simple_type *|xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "::xsd::cxx::tree::string< char,::xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t", "::xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type > *|schema::simxml::SimModelCore::SimGroup::NevronSchematicLayout_type *|schema::simxml::ResourcesGeneral::SimUnitType::Name_type *|schema::simxml::SimModelCore::SimRoot::SourceLibraryEntryID_type *|schema::simxml::SimModelCore::SimRoot::SimModelName_type *|schema::simxml::SimModelCore::SimObject::ObjectType_type *|schema::simxml::SimModelCore::SimRepresentation::RepresentationIdentifier_type *|schema::simxml::SimModelCore::SimRepresentation::RepresentationType_type *|schema::simxml::SimModelCore::SimRoot::SimModelSubtype_type *|schema::simxml::SimModelCore::SimRoot::SimUniqueID_type *|schema::simxml::SimModelCore::SimObjectTypeDefinition::ApplicableOccurrence_type *|schema::simxml::SimModelCore::SimDistributionControlElement::ControlElementID_type *|schema::simxml::SimModelCore::SimSpatialStructureElement::CompositionType_type *|schema::simxml::SimModelCore::SimSpatialStructureElement::LongName_type *|schema::simxml::SimModelCore::SimRoot::IfcName_type *|schema::simxml::SimModelCore::SimRoot::Description_type *|schema::simxml::SimModelCore::SimBldgModelParams::ObjectName_type *|schema::simxml::SimModelCore::SimAppDefault::DefaultForUnitSystem_type *|schema::simxml::SimModelCore::SimRoot::SimModelType_type *|schema::simxml::SimModelCore::SimRoot::SourceModelSchema_type *|schema::simxml::SimModelCore::SimRoot::SourceModelObjectType_type *|schema::simxml::SimModelCore::SimElement::Tag_type *|schema::simxml::SimModelCore::SimGroup::ChangeFromTemplate_type *|::xml_schema::string *|xml_schema::string *|schema::simxml::ResourcesGeneral::SimUnitType::UnitType_String_type *|schema::simxml::SimModelCore::SimRoot::IfcGlobalID_type *|schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileType_type *|schema::simxml::ResourcesGeometry::SimProfileDefinition::ProfileName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::time< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::time *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__time_zone = {"_p_xsd__cxx__tree__time_zone", "::xsd::cxx::tree::time_zone *|xml_schema::time_zone *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t = {"_p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t", "::xsd::cxx::tree::token< char,xsd::cxx::tree::normalized_string > *|xml_schema::token *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__unexpected_elementT_char_t = {"_p_xsd__cxx__tree__unexpected_elementT_char_t", "::xsd::cxx::tree::unexpected_element< char > *|xml_schema::unexpected_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t = {"_p_xsd__cxx__tree__unexpected_enumeratorT_char_t", "::xsd::cxx::tree::unexpected_enumerator< char > *|xml_schema::unexpected_enumerator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t", "xml_schema::uri *|::xsd::cxx::tree::uri< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t = {"_p_xsd__cxx__tree__user_data_keys_templateT_0_t", "xsd::cxx::tree::user_data_keys_template< 0 > *|xsd::cxx::tree::user_data_keys *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__xml__error_handlerT_char_t = {"_p_xsd__cxx__xml__error_handlerT_char_t", "::xsd::cxx::xml::error_handler< char > *|xml_schema::error_handler *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ApplicableOccurrence_optional,
  &_swigt__p_ApplicableOccurrence_traits,
  &_swigt__p_ApplicableOccurrence_type,
  &_swigt__p_AssignedToFlowElement_optional,
  &_swigt__p_AssignedToFlowElement_traits,
  &_swigt__p_AssignedToFlowElement_type,
  &_swigt__p_AssignedToGroups_optional,
  &_swigt__p_AssignedToGroups_traits,
  &_swigt__p_AssignedToGroups_type,
  &_swigt__p_ChangeFromTemplate_optional,
  &_swigt__p_ChangeFromTemplate_traits,
  &_swigt__p_ChangeFromTemplate_type,
  &_swigt__p_CompositionType_optional,
  &_swigt__p_CompositionType_traits,
  &_swigt__p_CompositionType_type,
  &_swigt__p_ContainingBuildings_optional,
  &_swigt__p_ContainingBuildings_traits,
  &_swigt__p_ContainingBuildings_type,
  &_swigt__p_ContainingSpatialStructure_optional,
  &_swigt__p_ContainingSpatialStructure_traits,
  &_swigt__p_ContainingSpatialStructure_type,
  &_swigt__p_ControlElementID_optional,
  &_swigt__p_ControlElementID_traits,
  &_swigt__p_ControlElementID_type,
  &_swigt__p_ControlledBy_optional,
  &_swigt__p_ControlledBy_traits,
  &_swigt__p_ControlledBy_type,
  &_swigt__p_DecimalPrecision_optional,
  &_swigt__p_DecimalPrecision_traits,
  &_swigt__p_DecimalPrecision_type,
  &_swigt__p_Decomposes_optional,
  &_swigt__p_Decomposes_traits,
  &_swigt__p_Decomposes_type,
  &_swigt__p_DefaultForPerson_optional,
  &_swigt__p_DefaultForPerson_traits,
  &_swigt__p_DefaultForPerson_type,
  &_swigt__p_DefaultForProject_optional,
  &_swigt__p_DefaultForProject_traits,
  &_swigt__p_DefaultForProject_type,
  &_swigt__p_DefaultForUnitSystem_optional,
  &_swigt__p_DefaultForUnitSystem_traits,
  &_swigt__p_DefaultForUnitSystem_type,
  &_swigt__p_Description_optional,
  &_swigt__p_Description_traits,
  &_swigt__p_Description_type,
  &_swigt__p_DockedToPort_optional,
  &_swigt__p_DockedToPort_traits,
  &_swigt__p_DockedToPort_type,
  &_swigt__p_GeometricRepresentations_optional,
  &_swigt__p_GeometricRepresentations_traits,
  &_swigt__p_GeometricRepresentations_type,
  &_swigt__p_HasPropertySets_optional,
  &_swigt__p_HasPropertySets_traits,
  &_swigt__p_HasPropertySets_type,
  &_swigt__p_HasTemplateChanged_optional,
  &_swigt__p_HasTemplateChanged_traits,
  &_swigt__p_HasTemplateChanged_type,
  &_swigt__p_HostElement_optional,
  &_swigt__p_HostElement_traits,
  &_swigt__p_HostElement_type,
  &_swigt__p_IfcGlobalID_optional,
  &_swigt__p_IfcGlobalID_traits,
  &_swigt__p_IfcGlobalID_type,
  &_swigt__p_IfcName_optional,
  &_swigt__p_IfcName_traits,
  &_swigt__p_IfcName_type,
  &_swigt__p_IsAutoGenerated_optional,
  &_swigt__p_IsAutoGenerated_traits,
  &_swigt__p_IsAutoGenerated_type,
  &_swigt__p_IsTemplateObject_optional,
  &_swigt__p_IsTemplateObject_traits,
  &_swigt__p_IsTemplateObject_type,
  &_swigt__p_LocalPlacementRotation_optional,
  &_swigt__p_LocalPlacementRotation_traits,
  &_swigt__p_LocalPlacementRotation_type,
  &_swigt__p_LocalPlacementX_optional,
  &_swigt__p_LocalPlacementX_traits,
  &_swigt__p_LocalPlacementX_type,
  &_swigt__p_LocalPlacementY_optional,
  &_swigt__p_LocalPlacementY_traits,
  &_swigt__p_LocalPlacementY_type,
  &_swigt__p_LocalPlacementZ_optional,
  &_swigt__p_LocalPlacementZ_traits,
  &_swigt__p_LocalPlacementZ_type,
  &_swigt__p_LongName_optional,
  &_swigt__p_LongName_traits,
  &_swigt__p_LongName_type,
  &_swigt__p_MemberUsedForDiagrams_optional,
  &_swigt__p_MemberUsedForDiagrams_traits,
  &_swigt__p_MemberUsedForDiagrams_type,
  &_swigt__p_Name_optional,
  &_swigt__p_Name_traits,
  &_swigt__p_Name_type,
  &_swigt__p_NevronSchematicLayout_optional,
  &_swigt__p_NevronSchematicLayout_traits,
  &_swigt__p_NevronSchematicLayout_type,
  &_swigt__p_ObjectCreationParams_optional,
  &_swigt__p_ObjectCreationParams_traits,
  &_swigt__p_ObjectCreationParams_type,
  &_swigt__p_ObjectIndex_optional,
  &_swigt__p_ObjectIndex_traits,
  &_swigt__p_ObjectIndex_type,
  &_swigt__p_ObjectName_optional,
  &_swigt__p_ObjectName_traits,
  &_swigt__p_ObjectName_type,
  &_swigt__p_ObjectOwnerHistory_optional,
  &_swigt__p_ObjectOwnerHistory_traits,
  &_swigt__p_ObjectOwnerHistory_type,
  &_swigt__p_ObjectType_optional,
  &_swigt__p_ObjectType_traits,
  &_swigt__p_ObjectType_type,
  &_swigt__p_ParentGroups_optional,
  &_swigt__p_ParentGroups_traits,
  &_swigt__p_ParentGroups_type,
  &_swigt__p_PlacementRelToContainingTypeDef_optional,
  &_swigt__p_PlacementRelToContainingTypeDef_traits,
  &_swigt__p_PlacementRelToContainingTypeDef_type,
  &_swigt__p_Placement_optional,
  &_swigt__p_Placement_traits,
  &_swigt__p_Placement_type,
  &_swigt__p_ProfileName_optional,
  &_swigt__p_ProfileName_traits,
  &_swigt__p_ProfileName_type,
  &_swigt__p_ProfileType_optional,
  &_swigt__p_ProfileType_traits,
  &_swigt__p_ProfileType_type,
  &_swigt__p_RefId_traits,
  &_swigt__p_RefId_type,
  &_swigt__p_RepresentationContext_optional,
  &_swigt__p_RepresentationContext_traits,
  &_swigt__p_RepresentationContext_type,
  &_swigt__p_RepresentationIdentifier_optional,
  &_swigt__p_RepresentationIdentifier_traits,
  &_swigt__p_RepresentationIdentifier_type,
  &_swigt__p_RepresentationItems_optional,
  &_swigt__p_RepresentationItems_traits,
  &_swigt__p_RepresentationItems_type,
  &_swigt__p_RepresentationType_optional,
  &_swigt__p_RepresentationType_traits,
  &_swigt__p_RepresentationType_type,
  &_swigt__p_SelectedPropertyGroups_optional,
  &_swigt__p_SelectedPropertyGroups_traits,
  &_swigt__p_SelectedPropertyGroups_type,
  &_swigt__p_SimModelName_optional,
  &_swigt__p_SimModelName_traits,
  &_swigt__p_SimModelName_type,
  &_swigt__p_SimModelSubtype_optional,
  &_swigt__p_SimModelSubtype_traits,
  &_swigt__p_SimModelSubtype_type,
  &_swigt__p_SimModelType_optional,
  &_swigt__p_SimModelType_traits,
  &_swigt__p_SimModelType_type,
  &_swigt__p_SimUniqueID_optional,
  &_swigt__p_SimUniqueID_traits,
  &_swigt__p_SimUniqueID_type,
  &_swigt__p_SourceLibraryEntryID_optional,
  &_swigt__p_SourceLibraryEntryID_traits,
  &_swigt__p_SourceLibraryEntryID_type,
  &_swigt__p_SourceLibraryEntryRef_optional,
  &_swigt__p_SourceLibraryEntryRef_traits,
  &_swigt__p_SourceLibraryEntryRef_type,
  &_swigt__p_SourceModelObjectType_optional,
  &_swigt__p_SourceModelObjectType_traits,
  &_swigt__p_SourceModelObjectType_type,
  &_swigt__p_SourceModelSchema_optional,
  &_swigt__p_SourceModelSchema_traits,
  &_swigt__p_SourceModelSchema_type,
  &_swigt__p_Tag_optional,
  &_swigt__p_Tag_traits,
  &_swigt__p_Tag_type,
  &_swigt__p_TemplatesForMembers_optional,
  &_swigt__p_TemplatesForMembers_traits,
  &_swigt__p_TemplatesForMembers_type,
  &_swigt__p_TypeDefCreationParams_optional,
  &_swigt__p_TypeDefCreationParams_traits,
  &_swigt__p_TypeDefCreationParams_type,
  &_swigt__p_TypeDefinition_optional,
  &_swigt__p_TypeDefinition_traits,
  &_swigt__p_TypeDefinition_type,
  &_swigt__p_UnitType_String_optional,
  &_swigt__p_UnitType_String_traits,
  &_swigt__p_UnitType_String_type,
  &_swigt__p_XDirectionX_optional,
  &_swigt__p_XDirectionX_traits,
  &_swigt__p_XDirectionX_type,
  &_swigt__p_XDirectionY_optional,
  &_swigt__p_XDirectionY_traits,
  &_swigt__p_XDirectionY_type,
  &_swigt__p_XDirectionZ_optional,
  &_swigt__p_XDirectionZ_traits,
  &_swigt__p_XDirectionZ_type,
  &_swigt__p_XMLCh,
  &_swigt__p__3dHeight_optional,
  &_swigt__p__3dHeight_traits,
  &_swigt__p__3dHeight_type,
  &_swigt__p__3dLength_optional,
  &_swigt__p__3dLength_traits,
  &_swigt__p__3dLength_type,
  &_swigt__p__3dWidth_optional,
  &_swigt__p__3dWidth_traits,
  &_swigt__p__3dWidth_type,
  &_swigt__p_allocator_type,
  &_swigt__p_base_const_iterator,
  &_swigt__p_base_iterator,
  &_swigt__p_base_sequence,
  &_swigt__p_bool,
  &_swigt__p_bool_convertible,
  &_swigt__p_char,
  &_swigt__p_const_iterator,
  &_swigt__p_const_reverse_iterator,
  &_swigt__p_difference_type,
  &_swigt__p_dom_content_optional,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_iterator,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,
  &_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t,
  &_swigt__p_long_long,
  &_swigt__p_reverse_iterator,
  &_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter,
  &_swigt__p_schema__simxml__Model__SimModel,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimNode,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimPort,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType,
  &_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups,
  &_swigt__p_schema__simxml__SimModelCore__SimActorDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimAppDefault,
  &_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams,
  &_swigt__p_schema__simxml__SimModelCore__SimBuildingElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement,
  &_swigt__p_schema__simxml__SimModelCore__SimElement,
  &_swigt__p_schema__simxml__SimModelCore__SimFeatureElement,
  &_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__SimGroup,
  &_swigt__p_schema__simxml__SimModelCore__SimObject,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimRepresentation,
  &_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__SimResourceObject,
  &_swigt__p_schema__simxml__SimModelCore__SimRoot,
  &_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement,
  &_swigt__p_schema__simxml__SimModelCore__SimTemplate,
  &_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__doubleList,
  &_swigt__p_schema__simxml__SimModelCore__integerList,
  &_swigt__p_schema__simxml__SimModelCore__logical,
  &_swigt__p_self_,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_size_type,
  &_swigt__p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t,
  &_swigt__p_std__auto_ptrT_xml_schema__id_t,
  &_swigt__p_std__auto_ptrT_xml_schema__idref_t,
  &_swigt__p_std__auto_ptrT_xml_schema__idrefs_t,
  &_swigt__p_std__auto_ptrT_xml_schema__string_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,
  &_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t,
  &_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator,
  &_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_xercesc__DOMAttr,
  &_swigt__p_xercesc__DOMDocument,
  &_swigt__p_xercesc__DOMElement,
  &_swigt__p_xercesc__DOMNode,
  &_swigt__p_xsd__cxx__tree___type,
  &_swigt__p_xsd__cxx__tree__attribute_set_common,
  &_swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__boundsT_char_t,
  &_swigt__p_xsd__cxx__tree__bufferT_char_t,
  &_swigt__p_xsd__cxx__tree__content_order,
  &_swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__diagnosticsT_char_t,
  &_swigt__p_xsd__cxx__tree__duplicate_idT_char_t,
  &_swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__element_one,
  &_swigt__p_xsd__cxx__tree__element_optional,
  &_swigt__p_xsd__cxx__tree__element_sequence,
  &_swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t,
  &_swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__errorT_char_t,
  &_swigt__p_xsd__cxx__tree__exceptionT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_attributeT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_elementT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_text_contentT_char_t,
  &_swigt__p_xsd__cxx__tree__flags,
  &_swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__identity,
  &_swigt__p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,
  &_swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t,
  &_swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t,
  &_swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t,
  &_swigt__p_xsd__cxx__tree__no_type_infoT_char_t,
  &_swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t,
  &_swigt__p_xsd__cxx__tree__not_derivedT_char_t,
  &_swigt__p_xsd__cxx__tree__optionalT_bool_true_t,
  &_swigt__p_xsd__cxx__tree__optionalT_double_true_t,
  &_swigt__p_xsd__cxx__tree__optionalT_int_true_t,
  &_swigt__p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,
  &_swigt__p_xsd__cxx__tree__parsingT_char_t,
  &_swigt__p_xsd__cxx__tree__propertiesT_char_t,
  &_swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__schema_type,
  &_swigt__p_xsd__cxx__tree__sequence_common,
  &_swigt__p_xsd__cxx__tree__severity,
  &_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__time_zone,
  &_swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t,
  &_swigt__p_xsd__cxx__tree__unexpected_elementT_char_t,
  &_swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t,
  &_swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t,
  &_swigt__p_xsd__cxx__xml__error_handlerT_char_t,
};

static swig_cast_info _swigc__p_ApplicableOccurrence_optional[] = {  {&_swigt__p_ApplicableOccurrence_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ApplicableOccurrence_traits[] = {  {&_swigt__p_ApplicableOccurrence_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ApplicableOccurrence_type[] = {  {&_swigt__p_ApplicableOccurrence_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_optional[] = {  {&_swigt__p_AssignedToFlowElement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_traits[] = {  {&_swigt__p_AssignedToFlowElement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_type[] = {  {&_swigt__p_AssignedToFlowElement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_optional[] = {  {&_swigt__p_AssignedToGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_traits[] = {  {&_swigt__p_AssignedToGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_type[] = {  {&_swigt__p_AssignedToGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_optional[] = {  {&_swigt__p_ChangeFromTemplate_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_traits[] = {  {&_swigt__p_ChangeFromTemplate_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_type[] = {  {&_swigt__p_ChangeFromTemplate_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_optional[] = {  {&_swigt__p_CompositionType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_traits[] = {  {&_swigt__p_CompositionType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_type[] = {  {&_swigt__p_CompositionType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_optional[] = {  {&_swigt__p_ContainingBuildings_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_traits[] = {  {&_swigt__p_ContainingBuildings_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_type[] = {  {&_swigt__p_ContainingBuildings_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_optional[] = {  {&_swigt__p_ContainingSpatialStructure_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_traits[] = {  {&_swigt__p_ContainingSpatialStructure_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_type[] = {  {&_swigt__p_ContainingSpatialStructure_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_optional[] = {  {&_swigt__p_ControlElementID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_traits[] = {  {&_swigt__p_ControlElementID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_type[] = {  {&_swigt__p_ControlElementID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_optional[] = {  {&_swigt__p_ControlledBy_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_traits[] = {  {&_swigt__p_ControlledBy_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_type[] = {  {&_swigt__p_ControlledBy_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_optional[] = {  {&_swigt__p_DecimalPrecision_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_traits[] = {  {&_swigt__p_DecimalPrecision_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_type[] = {  {&_swigt__p_DecimalPrecision_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_optional[] = {  {&_swigt__p_Decomposes_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_traits[] = {  {&_swigt__p_Decomposes_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_type[] = {  {&_swigt__p_Decomposes_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForPerson_optional[] = {  {&_swigt__p_DefaultForPerson_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForPerson_traits[] = {  {&_swigt__p_DefaultForPerson_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForPerson_type[] = {  {&_swigt__p_DefaultForPerson_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForProject_optional[] = {  {&_swigt__p_DefaultForProject_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForProject_traits[] = {  {&_swigt__p_DefaultForProject_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForProject_type[] = {  {&_swigt__p_DefaultForProject_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForUnitSystem_optional[] = {  {&_swigt__p_DefaultForUnitSystem_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForUnitSystem_traits[] = {  {&_swigt__p_DefaultForUnitSystem_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DefaultForUnitSystem_type[] = {  {&_swigt__p_DefaultForUnitSystem_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_optional[] = {  {&_swigt__p_Description_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_traits[] = {  {&_swigt__p_Description_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_type[] = {  {&_swigt__p_Description_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_optional[] = {  {&_swigt__p_DockedToPort_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_traits[] = {  {&_swigt__p_DockedToPort_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_type[] = {  {&_swigt__p_DockedToPort_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_optional[] = {  {&_swigt__p_GeometricRepresentations_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_traits[] = {  {&_swigt__p_GeometricRepresentations_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_type[] = {  {&_swigt__p_GeometricRepresentations_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_optional[] = {  {&_swigt__p_HasPropertySets_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_traits[] = {  {&_swigt__p_HasPropertySets_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_type[] = {  {&_swigt__p_HasPropertySets_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_optional[] = {  {&_swigt__p_HasTemplateChanged_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_traits[] = {  {&_swigt__p_HasTemplateChanged_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_type[] = {  {&_swigt__p_HasTemplateChanged_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_optional[] = {  {&_swigt__p_HostElement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_traits[] = {  {&_swigt__p_HostElement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_type[] = {  {&_swigt__p_HostElement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_optional[] = {  {&_swigt__p_IfcGlobalID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_traits[] = {  {&_swigt__p_IfcGlobalID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_type[] = {  {&_swigt__p_IfcGlobalID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_optional[] = {  {&_swigt__p_IfcName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_traits[] = {  {&_swigt__p_IfcName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_type[] = {  {&_swigt__p_IfcName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_optional[] = {  {&_swigt__p_IsAutoGenerated_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_traits[] = {  {&_swigt__p_IsAutoGenerated_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_type[] = {  {&_swigt__p_IsAutoGenerated_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_optional[] = {  {&_swigt__p_IsTemplateObject_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_traits[] = {  {&_swigt__p_IsTemplateObject_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_type[] = {  {&_swigt__p_IsTemplateObject_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_optional[] = {  {&_swigt__p_LocalPlacementRotation_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_traits[] = {  {&_swigt__p_LocalPlacementRotation_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_type[] = {  {&_swigt__p_LocalPlacementRotation_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_optional[] = {  {&_swigt__p_LocalPlacementX_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_traits[] = {  {&_swigt__p_LocalPlacementX_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_type[] = {  {&_swigt__p_LocalPlacementX_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_optional[] = {  {&_swigt__p_LocalPlacementY_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_traits[] = {  {&_swigt__p_LocalPlacementY_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_type[] = {  {&_swigt__p_LocalPlacementY_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_optional[] = {  {&_swigt__p_LocalPlacementZ_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_traits[] = {  {&_swigt__p_LocalPlacementZ_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_type[] = {  {&_swigt__p_LocalPlacementZ_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_optional[] = {  {&_swigt__p_LongName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_traits[] = {  {&_swigt__p_LongName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_type[] = {  {&_swigt__p_LongName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_optional[] = {  {&_swigt__p_MemberUsedForDiagrams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_traits[] = {  {&_swigt__p_MemberUsedForDiagrams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_type[] = {  {&_swigt__p_MemberUsedForDiagrams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_optional[] = {  {&_swigt__p_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_traits[] = {  {&_swigt__p_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_type[] = {  {&_swigt__p_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_optional[] = {  {&_swigt__p_NevronSchematicLayout_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_traits[] = {  {&_swigt__p_NevronSchematicLayout_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_type[] = {  {&_swigt__p_NevronSchematicLayout_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_optional[] = {  {&_swigt__p_ObjectCreationParams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_traits[] = {  {&_swigt__p_ObjectCreationParams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_type[] = {  {&_swigt__p_ObjectCreationParams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_optional[] = {  {&_swigt__p_ObjectIndex_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_traits[] = {  {&_swigt__p_ObjectIndex_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_type[] = {  {&_swigt__p_ObjectIndex_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_optional[] = {  {&_swigt__p_ObjectName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_traits[] = {  {&_swigt__p_ObjectName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_type[] = {  {&_swigt__p_ObjectName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_optional[] = {  {&_swigt__p_ObjectOwnerHistory_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_traits[] = {  {&_swigt__p_ObjectOwnerHistory_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_type[] = {  {&_swigt__p_ObjectOwnerHistory_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_optional[] = {  {&_swigt__p_ObjectType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_traits[] = {  {&_swigt__p_ObjectType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_type[] = {  {&_swigt__p_ObjectType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_optional[] = {  {&_swigt__p_ParentGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_traits[] = {  {&_swigt__p_ParentGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_type[] = {  {&_swigt__p_ParentGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_optional[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_traits[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_type[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_optional[] = {  {&_swigt__p_Placement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_traits[] = {  {&_swigt__p_Placement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_type[] = {  {&_swigt__p_Placement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_optional[] = {  {&_swigt__p_ProfileName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_traits[] = {  {&_swigt__p_ProfileName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_type[] = {  {&_swigt__p_ProfileName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_optional[] = {  {&_swigt__p_ProfileType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_traits[] = {  {&_swigt__p_ProfileType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_type[] = {  {&_swigt__p_ProfileType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefId_traits[] = {  {&_swigt__p_RefId_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefId_type[] = {  {&_swigt__p_RefId_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_optional[] = {  {&_swigt__p_RepresentationContext_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_traits[] = {  {&_swigt__p_RepresentationContext_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_type[] = {  {&_swigt__p_RepresentationContext_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_optional[] = {  {&_swigt__p_RepresentationIdentifier_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_traits[] = {  {&_swigt__p_RepresentationIdentifier_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_type[] = {  {&_swigt__p_RepresentationIdentifier_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_optional[] = {  {&_swigt__p_RepresentationItems_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_traits[] = {  {&_swigt__p_RepresentationItems_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_type[] = {  {&_swigt__p_RepresentationItems_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_optional[] = {  {&_swigt__p_RepresentationType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_traits[] = {  {&_swigt__p_RepresentationType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_type[] = {  {&_swigt__p_RepresentationType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_optional[] = {  {&_swigt__p_SelectedPropertyGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_traits[] = {  {&_swigt__p_SelectedPropertyGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_type[] = {  {&_swigt__p_SelectedPropertyGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_optional[] = {  {&_swigt__p_SimModelName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_traits[] = {  {&_swigt__p_SimModelName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_type[] = {  {&_swigt__p_SimModelName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_optional[] = {  {&_swigt__p_SimModelSubtype_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_traits[] = {  {&_swigt__p_SimModelSubtype_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_type[] = {  {&_swigt__p_SimModelSubtype_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_optional[] = {  {&_swigt__p_SimModelType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_traits[] = {  {&_swigt__p_SimModelType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_type[] = {  {&_swigt__p_SimModelType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_optional[] = {  {&_swigt__p_SimUniqueID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_traits[] = {  {&_swigt__p_SimUniqueID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_type[] = {  {&_swigt__p_SimUniqueID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_optional[] = {  {&_swigt__p_SourceLibraryEntryID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_traits[] = {  {&_swigt__p_SourceLibraryEntryID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_type[] = {  {&_swigt__p_SourceLibraryEntryID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_optional[] = {  {&_swigt__p_SourceLibraryEntryRef_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_traits[] = {  {&_swigt__p_SourceLibraryEntryRef_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_type[] = {  {&_swigt__p_SourceLibraryEntryRef_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_optional[] = {  {&_swigt__p_SourceModelObjectType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_traits[] = {  {&_swigt__p_SourceModelObjectType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_type[] = {  {&_swigt__p_SourceModelObjectType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_optional[] = {  {&_swigt__p_SourceModelSchema_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_traits[] = {  {&_swigt__p_SourceModelSchema_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_type[] = {  {&_swigt__p_SourceModelSchema_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_optional[] = {  {&_swigt__p_Tag_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_traits[] = {  {&_swigt__p_Tag_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_type[] = {  {&_swigt__p_Tag_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_optional[] = {  {&_swigt__p_TemplatesForMembers_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_traits[] = {  {&_swigt__p_TemplatesForMembers_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_type[] = {  {&_swigt__p_TemplatesForMembers_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_optional[] = {  {&_swigt__p_TypeDefCreationParams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_traits[] = {  {&_swigt__p_TypeDefCreationParams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_type[] = {  {&_swigt__p_TypeDefCreationParams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_optional[] = {  {&_swigt__p_TypeDefinition_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_traits[] = {  {&_swigt__p_TypeDefinition_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_type[] = {  {&_swigt__p_TypeDefinition_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_optional[] = {  {&_swigt__p_UnitType_String_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_traits[] = {  {&_swigt__p_UnitType_String_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_type[] = {  {&_swigt__p_UnitType_String_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_optional[] = {  {&_swigt__p_XDirectionX_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_traits[] = {  {&_swigt__p_XDirectionX_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_type[] = {  {&_swigt__p_XDirectionX_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_optional[] = {  {&_swigt__p_XDirectionY_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_traits[] = {  {&_swigt__p_XDirectionY_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_type[] = {  {&_swigt__p_XDirectionY_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_optional[] = {  {&_swigt__p_XDirectionZ_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_traits[] = {  {&_swigt__p_XDirectionZ_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_type[] = {  {&_swigt__p_XDirectionZ_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XMLCh[] = {  {&_swigt__p_XMLCh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_optional[] = {  {&_swigt__p__3dHeight_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_traits[] = {  {&_swigt__p__3dHeight_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_type[] = {  {&_swigt__p__3dHeight_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_optional[] = {  {&_swigt__p__3dLength_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_traits[] = {  {&_swigt__p__3dLength_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_type[] = {  {&_swigt__p__3dLength_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_optional[] = {  {&_swigt__p__3dWidth_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_traits[] = {  {&_swigt__p__3dWidth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_type[] = {  {&_swigt__p__3dWidth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_const_iterator[] = {  {&_swigt__p_base_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_iterator[] = {  {&_swigt__p_base_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_sequence[] = {  {&_swigt__p_base_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool_convertible[] = {  {&_swigt__p_bool_convertible, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_iterator[] = {  {&_swigt__p_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reverse_iterator[] = {  {&_swigt__p_const_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dom_content_optional[] = {  {&_swigt__p_dom_content_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator[] = {  {&_swigt__p_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t[] = {  {&_swigt__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reverse_iterator[] = {  {&_swigt__p_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__MepModel__SimFlowEnergyConverter[] = {  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__Model__SimModel[] = {  {&_swigt__p_schema__simxml__Model__SimModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimArrayParams[] = {  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimNode[] = {  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, 0, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__ResourcesGeneral__SimNode, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimPort[] = {  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimUnitType[] = {  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeometry__SimProfileDefinition[] = {  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SelectedPropertyGroups[] = {  {&_swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimActorDefinition[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimAppDefault[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimBldgModelParams[] = {  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimBldgModelParams, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimBuildingElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionControlElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimDistributionElement, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimDistributionElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimDistributionElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionFlowElement[] = {  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimElement, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimElement, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimFeatureElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimGroup[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObject[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectDefinition[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectPlacement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectTypeDefinition[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimPropertySetDefinition[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRepresentation[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRepresentationItem[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, 0, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimRepresentationItem, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimRepresentationItem, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimRepresentationItem, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimResourceObject[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, _p_schema__simxml__SimModelCore__SimTemplateTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, _p_schema__simxml__ResourcesGeneral__SimNodeTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, _p_schema__simxml__SimModelCore__SimAppDefaultTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, _p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, _p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, _p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, _p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, _p_schema__simxml__SimModelCore__SimFeatureElementTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, _p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, _p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, _p_schema__simxml__SimModelCore__SimRepresentationTo_p_schema__simxml__SimModelCore__SimResourceObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRoot[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, _p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, _p_schema__simxml__SimModelCore__SimTemplateTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, _p_schema__simxml__ResourcesGeneral__SimNodeTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, _p_schema__simxml__SimModelCore__SimAppDefaultTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, _p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, _p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, _p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, _p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, _p_schema__simxml__SimModelCore__SimResourceObjectTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, _p_schema__simxml__SimModelCore__SimFeatureElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, _p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRoot, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, _p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, _p_schema__simxml__SimModelCore__SimRepresentationTo_p_schema__simxml__SimModelCore__SimRoot, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimSpatialStructureElement[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimTemplate[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__doubleList[] = {  {&_swigt__p_schema__simxml__SimModelCore__doubleList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__integerList[] = {  {&_swigt__p_schema__simxml__SimModelCore__integerList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__logical[] = {  {&_swigt__p_schema__simxml__SimModelCore__logical, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_self_[] = {  {&_swigt__p_self_, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t[] = {  {&_swigt__p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__id_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__id_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__idref_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__idref_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__idrefs_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__idrefs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__string_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type[] = {  {&_swigt__p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t[] = {  {&_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator[] = {  {&_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type[] = {  {&_swigt__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMAttr[] = {  {&_swigt__p_xercesc__DOMAttr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMDocument[] = {  {&_swigt__p_xercesc__DOMDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMElement[] = {  {&_swigt__p_xercesc__DOMElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMNode[] = {  {&_swigt__p_xercesc__DOMNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree___type[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, _p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, _p_schema__simxml__SimModelCore__SimTemplateTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, _p_schema__simxml__ResourcesGeneral__SimNodeTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, _p_schema__simxml__SimModelCore__SimAppDefaultTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, _p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, _p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, _p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, _p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, _p_schema__simxml__SimModelCore__SimResourceObjectTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, _p_schema__simxml__SimModelCore__SimFeatureElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, _p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_xsd__cxx__tree___type, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, _p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, _p_schema__simxml__SimModelCore__SimRepresentationTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRoot, _p_schema__simxml__SimModelCore__SimRootTo_p_xsd__cxx__tree___type, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__attribute_set_common[] = {  {&_swigt__p_xsd__cxx__tree__attribute_set_common, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__boundsT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__boundsT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__bufferT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__bufferT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__content_order[] = {  {&_swigt__p_xsd__cxx__tree__content_order, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__diagnosticsT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__diagnosticsT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__duplicate_idT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__duplicate_idT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__element_one[] = {  {&_swigt__p_xsd__cxx__tree__element_one, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__element_optional[] = {  {&_swigt__p_xsd__cxx__tree__element_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__element_sequence[] = {  {&_swigt__p_xsd__cxx__tree__element_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t[] = {  {&_swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__errorT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__errorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__exceptionT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__exceptionT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_attributeT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_attributeT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_elementT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_elementT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_text_contentT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_text_contentT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__flags[] = {  {&_swigt__p_xsd__cxx__tree__flags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__identity[] = {  {&_swigt__p_xsd__cxx__tree__identity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t[] = {  {&_swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t[] = {  {&_swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__no_prefix_mappingT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__no_type_infoT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__no_type_infoT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t[] = {  {&_swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__not_derivedT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__not_derivedT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_bool_true_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_bool_true_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_double_true_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_double_true_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_int_true_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_int_true_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__parsingT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__parsingT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__propertiesT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__propertiesT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__schema_type[] = {  {&_swigt__p_xsd__cxx__tree__schema_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequence_common[] = {  {&_swigt__p_xsd__cxx__tree__sequence_common, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__severity[] = {  {&_swigt__p_xsd__cxx__tree__severity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__time_zone[] = {  {&_swigt__p_xsd__cxx__tree__time_zone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t[] = {  {&_swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__unexpected_elementT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__unexpected_elementT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__unexpected_enumeratorT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__user_data_keys_templateT_0_t[] = {  {&_swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__xml__error_handlerT_char_t[] = {  {&_swigt__p_xsd__cxx__xml__error_handlerT_char_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ApplicableOccurrence_optional,
  _swigc__p_ApplicableOccurrence_traits,
  _swigc__p_ApplicableOccurrence_type,
  _swigc__p_AssignedToFlowElement_optional,
  _swigc__p_AssignedToFlowElement_traits,
  _swigc__p_AssignedToFlowElement_type,
  _swigc__p_AssignedToGroups_optional,
  _swigc__p_AssignedToGroups_traits,
  _swigc__p_AssignedToGroups_type,
  _swigc__p_ChangeFromTemplate_optional,
  _swigc__p_ChangeFromTemplate_traits,
  _swigc__p_ChangeFromTemplate_type,
  _swigc__p_CompositionType_optional,
  _swigc__p_CompositionType_traits,
  _swigc__p_CompositionType_type,
  _swigc__p_ContainingBuildings_optional,
  _swigc__p_ContainingBuildings_traits,
  _swigc__p_ContainingBuildings_type,
  _swigc__p_ContainingSpatialStructure_optional,
  _swigc__p_ContainingSpatialStructure_traits,
  _swigc__p_ContainingSpatialStructure_type,
  _swigc__p_ControlElementID_optional,
  _swigc__p_ControlElementID_traits,
  _swigc__p_ControlElementID_type,
  _swigc__p_ControlledBy_optional,
  _swigc__p_ControlledBy_traits,
  _swigc__p_ControlledBy_type,
  _swigc__p_DecimalPrecision_optional,
  _swigc__p_DecimalPrecision_traits,
  _swigc__p_DecimalPrecision_type,
  _swigc__p_Decomposes_optional,
  _swigc__p_Decomposes_traits,
  _swigc__p_Decomposes_type,
  _swigc__p_DefaultForPerson_optional,
  _swigc__p_DefaultForPerson_traits,
  _swigc__p_DefaultForPerson_type,
  _swigc__p_DefaultForProject_optional,
  _swigc__p_DefaultForProject_traits,
  _swigc__p_DefaultForProject_type,
  _swigc__p_DefaultForUnitSystem_optional,
  _swigc__p_DefaultForUnitSystem_traits,
  _swigc__p_DefaultForUnitSystem_type,
  _swigc__p_Description_optional,
  _swigc__p_Description_traits,
  _swigc__p_Description_type,
  _swigc__p_DockedToPort_optional,
  _swigc__p_DockedToPort_traits,
  _swigc__p_DockedToPort_type,
  _swigc__p_GeometricRepresentations_optional,
  _swigc__p_GeometricRepresentations_traits,
  _swigc__p_GeometricRepresentations_type,
  _swigc__p_HasPropertySets_optional,
  _swigc__p_HasPropertySets_traits,
  _swigc__p_HasPropertySets_type,
  _swigc__p_HasTemplateChanged_optional,
  _swigc__p_HasTemplateChanged_traits,
  _swigc__p_HasTemplateChanged_type,
  _swigc__p_HostElement_optional,
  _swigc__p_HostElement_traits,
  _swigc__p_HostElement_type,
  _swigc__p_IfcGlobalID_optional,
  _swigc__p_IfcGlobalID_traits,
  _swigc__p_IfcGlobalID_type,
  _swigc__p_IfcName_optional,
  _swigc__p_IfcName_traits,
  _swigc__p_IfcName_type,
  _swigc__p_IsAutoGenerated_optional,
  _swigc__p_IsAutoGenerated_traits,
  _swigc__p_IsAutoGenerated_type,
  _swigc__p_IsTemplateObject_optional,
  _swigc__p_IsTemplateObject_traits,
  _swigc__p_IsTemplateObject_type,
  _swigc__p_LocalPlacementRotation_optional,
  _swigc__p_LocalPlacementRotation_traits,
  _swigc__p_LocalPlacementRotation_type,
  _swigc__p_LocalPlacementX_optional,
  _swigc__p_LocalPlacementX_traits,
  _swigc__p_LocalPlacementX_type,
  _swigc__p_LocalPlacementY_optional,
  _swigc__p_LocalPlacementY_traits,
  _swigc__p_LocalPlacementY_type,
  _swigc__p_LocalPlacementZ_optional,
  _swigc__p_LocalPlacementZ_traits,
  _swigc__p_LocalPlacementZ_type,
  _swigc__p_LongName_optional,
  _swigc__p_LongName_traits,
  _swigc__p_LongName_type,
  _swigc__p_MemberUsedForDiagrams_optional,
  _swigc__p_MemberUsedForDiagrams_traits,
  _swigc__p_MemberUsedForDiagrams_type,
  _swigc__p_Name_optional,
  _swigc__p_Name_traits,
  _swigc__p_Name_type,
  _swigc__p_NevronSchematicLayout_optional,
  _swigc__p_NevronSchematicLayout_traits,
  _swigc__p_NevronSchematicLayout_type,
  _swigc__p_ObjectCreationParams_optional,
  _swigc__p_ObjectCreationParams_traits,
  _swigc__p_ObjectCreationParams_type,
  _swigc__p_ObjectIndex_optional,
  _swigc__p_ObjectIndex_traits,
  _swigc__p_ObjectIndex_type,
  _swigc__p_ObjectName_optional,
  _swigc__p_ObjectName_traits,
  _swigc__p_ObjectName_type,
  _swigc__p_ObjectOwnerHistory_optional,
  _swigc__p_ObjectOwnerHistory_traits,
  _swigc__p_ObjectOwnerHistory_type,
  _swigc__p_ObjectType_optional,
  _swigc__p_ObjectType_traits,
  _swigc__p_ObjectType_type,
  _swigc__p_ParentGroups_optional,
  _swigc__p_ParentGroups_traits,
  _swigc__p_ParentGroups_type,
  _swigc__p_PlacementRelToContainingTypeDef_optional,
  _swigc__p_PlacementRelToContainingTypeDef_traits,
  _swigc__p_PlacementRelToContainingTypeDef_type,
  _swigc__p_Placement_optional,
  _swigc__p_Placement_traits,
  _swigc__p_Placement_type,
  _swigc__p_ProfileName_optional,
  _swigc__p_ProfileName_traits,
  _swigc__p_ProfileName_type,
  _swigc__p_ProfileType_optional,
  _swigc__p_ProfileType_traits,
  _swigc__p_ProfileType_type,
  _swigc__p_RefId_traits,
  _swigc__p_RefId_type,
  _swigc__p_RepresentationContext_optional,
  _swigc__p_RepresentationContext_traits,
  _swigc__p_RepresentationContext_type,
  _swigc__p_RepresentationIdentifier_optional,
  _swigc__p_RepresentationIdentifier_traits,
  _swigc__p_RepresentationIdentifier_type,
  _swigc__p_RepresentationItems_optional,
  _swigc__p_RepresentationItems_traits,
  _swigc__p_RepresentationItems_type,
  _swigc__p_RepresentationType_optional,
  _swigc__p_RepresentationType_traits,
  _swigc__p_RepresentationType_type,
  _swigc__p_SelectedPropertyGroups_optional,
  _swigc__p_SelectedPropertyGroups_traits,
  _swigc__p_SelectedPropertyGroups_type,
  _swigc__p_SimModelName_optional,
  _swigc__p_SimModelName_traits,
  _swigc__p_SimModelName_type,
  _swigc__p_SimModelSubtype_optional,
  _swigc__p_SimModelSubtype_traits,
  _swigc__p_SimModelSubtype_type,
  _swigc__p_SimModelType_optional,
  _swigc__p_SimModelType_traits,
  _swigc__p_SimModelType_type,
  _swigc__p_SimUniqueID_optional,
  _swigc__p_SimUniqueID_traits,
  _swigc__p_SimUniqueID_type,
  _swigc__p_SourceLibraryEntryID_optional,
  _swigc__p_SourceLibraryEntryID_traits,
  _swigc__p_SourceLibraryEntryID_type,
  _swigc__p_SourceLibraryEntryRef_optional,
  _swigc__p_SourceLibraryEntryRef_traits,
  _swigc__p_SourceLibraryEntryRef_type,
  _swigc__p_SourceModelObjectType_optional,
  _swigc__p_SourceModelObjectType_traits,
  _swigc__p_SourceModelObjectType_type,
  _swigc__p_SourceModelSchema_optional,
  _swigc__p_SourceModelSchema_traits,
  _swigc__p_SourceModelSchema_type,
  _swigc__p_Tag_optional,
  _swigc__p_Tag_traits,
  _swigc__p_Tag_type,
  _swigc__p_TemplatesForMembers_optional,
  _swigc__p_TemplatesForMembers_traits,
  _swigc__p_TemplatesForMembers_type,
  _swigc__p_TypeDefCreationParams_optional,
  _swigc__p_TypeDefCreationParams_traits,
  _swigc__p_TypeDefCreationParams_type,
  _swigc__p_TypeDefinition_optional,
  _swigc__p_TypeDefinition_traits,
  _swigc__p_TypeDefinition_type,
  _swigc__p_UnitType_String_optional,
  _swigc__p_UnitType_String_traits,
  _swigc__p_UnitType_String_type,
  _swigc__p_XDirectionX_optional,
  _swigc__p_XDirectionX_traits,
  _swigc__p_XDirectionX_type,
  _swigc__p_XDirectionY_optional,
  _swigc__p_XDirectionY_traits,
  _swigc__p_XDirectionY_type,
  _swigc__p_XDirectionZ_optional,
  _swigc__p_XDirectionZ_traits,
  _swigc__p_XDirectionZ_type,
  _swigc__p_XMLCh,
  _swigc__p__3dHeight_optional,
  _swigc__p__3dHeight_traits,
  _swigc__p__3dHeight_type,
  _swigc__p__3dLength_optional,
  _swigc__p__3dLength_traits,
  _swigc__p__3dLength_type,
  _swigc__p__3dWidth_optional,
  _swigc__p__3dWidth_traits,
  _swigc__p__3dWidth_type,
  _swigc__p_allocator_type,
  _swigc__p_base_const_iterator,
  _swigc__p_base_iterator,
  _swigc__p_base_sequence,
  _swigc__p_bool,
  _swigc__p_bool_convertible,
  _swigc__p_char,
  _swigc__p_const_iterator,
  _swigc__p_const_reverse_iterator,
  _swigc__p_difference_type,
  _swigc__p_dom_content_optional,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_iterator,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_iterator_xercesc__DOMElement_const_t,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__const_reverse_iterator_xercesc__DOMElement_const_t,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__iterator_xercesc__DOMElement_t,
  _swigc__p_iterator_adapterT_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__reverse_iterator_xercesc__DOMElement_t,
  _swigc__p_long_long,
  _swigc__p_reverse_iterator,
  _swigc__p_schema__simxml__MepModel__SimFlowEnergyConverter,
  _swigc__p_schema__simxml__Model__SimModel,
  _swigc__p_schema__simxml__ResourcesGeneral__SimArrayParams,
  _swigc__p_schema__simxml__ResourcesGeneral__SimNode,
  _swigc__p_schema__simxml__ResourcesGeneral__SimPort,
  _swigc__p_schema__simxml__ResourcesGeneral__SimUnitType,
  _swigc__p_schema__simxml__ResourcesGeometry__SimProfileDefinition,
  _swigc__p_schema__simxml__SimModelCore__SelectedPropertyGroups,
  _swigc__p_schema__simxml__SimModelCore__SimActorDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimAppDefault,
  _swigc__p_schema__simxml__SimModelCore__SimBldgModelParams,
  _swigc__p_schema__simxml__SimModelCore__SimBuildingElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionControlElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionFlowElement,
  _swigc__p_schema__simxml__SimModelCore__SimElement,
  _swigc__p_schema__simxml__SimModelCore__SimFeatureElement,
  _swigc__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__SimGroup,
  _swigc__p_schema__simxml__SimModelCore__SimObject,
  _swigc__p_schema__simxml__SimModelCore__SimObjectDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimObjectPlacement,
  _swigc__p_schema__simxml__SimModelCore__SimObjectTypeDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimPropertySetDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimRepresentation,
  _swigc__p_schema__simxml__SimModelCore__SimRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__SimResourceObject,
  _swigc__p_schema__simxml__SimModelCore__SimRoot,
  _swigc__p_schema__simxml__SimModelCore__SimSpatialStructureElement,
  _swigc__p_schema__simxml__SimModelCore__SimTemplate,
  _swigc__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__doubleList,
  _swigc__p_schema__simxml__SimModelCore__integerList,
  _swigc__p_schema__simxml__SimModelCore__logical,
  _swigc__p_self_,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_size_type,
  _swigc__p_std__auto_ptrT_schema__simxml__SimModelCore__SelectedPropertyGroups_t,
  _swigc__p_std__auto_ptrT_xml_schema__id_t,
  _swigc__p_std__auto_ptrT_xml_schema__idref_t,
  _swigc__p_std__auto_ptrT_xml_schema__idrefs_t,
  _swigc__p_std__auto_ptrT_xml_schema__string_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__vectorT_xsd__cxx__tree__element_sequence__ptr_std__allocatorT_xsd__cxx__tree__element_sequence__ptr_t_t__size_type,
  _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t,
  _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__iterator,
  _swigc__p_std__vectorT_xsd__cxx__tree__sequence_common__ptr_std__allocatorT_xsd__cxx__tree__sequence_common__ptr_t_t__size_type,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_xercesc__DOMAttr,
  _swigc__p_xercesc__DOMDocument,
  _swigc__p_xercesc__DOMElement,
  _swigc__p_xercesc__DOMNode,
  _swigc__p_xsd__cxx__tree___type,
  _swigc__p_xsd__cxx__tree__attribute_set_common,
  _swigc__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__boundsT_char_t,
  _swigc__p_xsd__cxx__tree__bufferT_char_t,
  _swigc__p_xsd__cxx__tree__content_order,
  _swigc__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__diagnosticsT_char_t,
  _swigc__p_xsd__cxx__tree__duplicate_idT_char_t,
  _swigc__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__element_one,
  _swigc__p_xsd__cxx__tree__element_optional,
  _swigc__p_xsd__cxx__tree__element_sequence,
  _swigc__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t,
  _swigc__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__errorT_char_t,
  _swigc__p_xsd__cxx__tree__exceptionT_char_t,
  _swigc__p_xsd__cxx__tree__expected_attributeT_char_t,
  _swigc__p_xsd__cxx__tree__expected_elementT_char_t,
  _swigc__p_xsd__cxx__tree__expected_text_contentT_char_t,
  _swigc__p_xsd__cxx__tree__flags,
  _swigc__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__identity,
  _swigc__p_xsd__cxx__tree__idrefT_char___xsd__cxx__tree__ncnameT_char___xsd__cxx__tree__nameT_char___xsd__cxx__tree__tokenT_char___xsd__cxx__tree__normalized_stringT_char___xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t_t_t_t_t_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,
  _swigc__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t,
  _swigc__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t,
  _swigc__p_xsd__cxx__tree__no_prefix_mappingT_char_t,
  _swigc__p_xsd__cxx__tree__no_type_infoT_char_t,
  _swigc__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t,
  _swigc__p_xsd__cxx__tree__not_derivedT_char_t,
  _swigc__p_xsd__cxx__tree__optionalT_bool_true_t,
  _swigc__p_xsd__cxx__tree__optionalT_double_true_t,
  _swigc__p_xsd__cxx__tree__optionalT_int_true_t,
  _swigc__p_xsd__cxx__tree__optionalT_schema__simxml__SimModelCore__SelectedPropertyGroups_xsd__cxx__tree__fundamental_pT_schema__simxml__SimModelCore__SelectedPropertyGroups_t__r_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t_false_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_xsd__cxx__tree__fundamental_pT_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t_t__r_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,
  _swigc__p_xsd__cxx__tree__parsingT_char_t,
  _swigc__p_xsd__cxx__tree__propertiesT_char_t,
  _swigc__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__schema_type,
  _swigc__p_xsd__cxx__tree__sequence_common,
  _swigc__p_xsd__cxx__tree__severity,
  _swigc__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__stringT_char___xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__time_zone,
  _swigc__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t,
  _swigc__p_xsd__cxx__tree__unexpected_elementT_char_t,
  _swigc__p_xsd__cxx__tree__unexpected_enumeratorT_char_t,
  _swigc__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__user_data_keys_templateT_0_t,
  _swigc__p_xsd__cxx__xml__error_handlerT_char_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "flags_keep_dom",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::keep_dom)));
  SWIG_Python_SetConstant(d, "flags_own_dom",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::own_dom)));
  SWIG_Python_SetConstant(d, "flags_dont_validate",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::dont_validate)));
  SWIG_Python_SetConstant(d, "flags_extract_content",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::extract_content)));
  SWIG_Python_SetConstant(d, "flags_dont_initialize",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::dont_initialize)));
  SWIG_Python_SetConstant(d, "flags_no_xml_declaration",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::no_xml_declaration)));
  SWIG_Python_SetConstant(d, "flags_dont_pretty_print",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::dont_pretty_print)));
  SWIG_Python_SetConstant(d, "flags_base",SWIG_From_unsigned_SS_long(static_cast< unsigned long >(xsd::cxx::tree::flags::base)));
  SWIG_Python_SetConstant(d, "schema_type_other",SWIG_From_int(static_cast< int >(xsd::cxx::tree::schema_type::other)));
  SWIG_Python_SetConstant(d, "schema_type_double_",SWIG_From_int(static_cast< int >(xsd::cxx::tree::schema_type::double_)));
  SWIG_Python_SetConstant(d, "schema_type_decimal",SWIG_From_int(static_cast< int >(xsd::cxx::tree::schema_type::decimal)));
  PyDict_SetItemString(md,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"tree_node_key",Swig_var_tree_node_key_get, Swig_var_tree_node_key_set);
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

