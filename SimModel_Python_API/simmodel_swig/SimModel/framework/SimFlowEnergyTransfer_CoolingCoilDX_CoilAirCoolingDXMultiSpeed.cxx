// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed
      // 

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Name () const
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Name ()
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_type& x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_optional& x)
      {
        this->SimFlowEnergyTrans_Name_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Name (::std::auto_ptr< SimFlowEnergyTrans_Name_type > x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_FuelType_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType () const
      {
        return this->SimFlowEnergyTrans_FuelType_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_FuelType_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType ()
      {
        return this->SimFlowEnergyTrans_FuelType_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType (const SimFlowEnergyTrans_FuelType_type& x)
      {
        this->SimFlowEnergyTrans_FuelType_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType (const SimFlowEnergyTrans_FuelType_optional& x)
      {
        this->SimFlowEnergyTrans_FuelType_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_FuelType (::std::auto_ptr< SimFlowEnergyTrans_FuelType_type > x)
      {
        this->SimFlowEnergyTrans_FuelType_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName () const
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName ()
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirInNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName () const
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName ()
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_AirOutNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName () const
      {
        return this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName ()
      {
        return this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type& x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CondAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CondAirInletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CondAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CondAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName (const SimFlowEnergyTrans_CondAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CondAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName (const SimFlowEnergyTrans_CondAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CondAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CondAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CondType_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondType () const
      {
        return this->SimFlowEnergyTrans_CondType_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CondType_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondType ()
      {
        return this->SimFlowEnergyTrans_CondType_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondType (const SimFlowEnergyTrans_CondType_type& x)
      {
        this->SimFlowEnergyTrans_CondType_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondType (const SimFlowEnergyTrans_CondType_optional& x)
      {
        this->SimFlowEnergyTrans_CondType_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CondType (::std::auto_ptr< SimFlowEnergyTrans_CondType_type > x)
      {
        this->SimFlowEnergyTrans_CondType_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap () const
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap ()
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SupWaterStoTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName () const
      {
        return this->SimFlowEnergyTrans_SupWaterStoTankName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SupWaterStoTankName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName ()
      {
        return this->SimFlowEnergyTrans_SupWaterStoTankName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName (const SimFlowEnergyTrans_SupWaterStoTankName_type& x)
      {
        this->SimFlowEnergyTrans_SupWaterStoTankName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName (const SimFlowEnergyTrans_SupWaterStoTankName_optional& x)
      {
        this->SimFlowEnergyTrans_SupWaterStoTankName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SupWaterStoTankName (::std::auto_ptr< SimFlowEnergyTrans_SupWaterStoTankName_type > x)
      {
        this->SimFlowEnergyTrans_SupWaterStoTankName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_BasinHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatCap () const
      {
        return this->SimFlowEnergyTrans_BasinHeatCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_BasinHeatCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatCap ()
      {
        return this->SimFlowEnergyTrans_BasinHeatCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatCap (const SimFlowEnergyTrans_BasinHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_BasinHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatCap (const SimFlowEnergyTrans_BasinHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_BasinHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp () const
      {
        return this->SimFlowEnergyTrans_BasinHeatSetpointTemp_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp ()
      {
        return this->SimFlowEnergyTrans_BasinHeatSetpointTemp_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp (const SimFlowEnergyTrans_BasinHeatSetpointTemp_type& x)
      {
        this->SimFlowEnergyTrans_BasinHeatSetpointTemp_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatSetpointTemp (const SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& x)
      {
        this->SimFlowEnergyTrans_BasinHeatSetpointTemp_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_BasinHeatOperatSchedName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName () const
      {
        return this->SimFlowEnergyTrans_BasinHeatOperatSchedName_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_BasinHeatOperatSchedName_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName ()
      {
        return this->SimFlowEnergyTrans_BasinHeatOperatSchedName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName (const SimFlowEnergyTrans_BasinHeatOperatSchedName_type& x)
      {
        this->SimFlowEnergyTrans_BasinHeatOperatSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName (const SimFlowEnergyTrans_BasinHeatOperatSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_BasinHeatOperatSchedName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_BasinHeatOperatSchedName (::std::auto_ptr< SimFlowEnergyTrans_BasinHeatOperatSchedName_type > x)
      {
        this->SimFlowEnergyTrans_BasinHeatOperatSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 () const
      {
        return this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 ()
      {
        return this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 (const SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_type& x)
      {
        this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 (const SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_optional& x)
      {
        this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1 (::std::auto_ptr< SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_type > x)
      {
        this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1 () const
      {
        return this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1 ()
      {
        return this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1 (const SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_type& x)
      {
        this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1 (const SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_optional& x)
      {
        this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1 (::std::auto_ptr< SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_type > x)
      {
        this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds () const
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds ()
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_type& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_optional& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap () const
      {
        return this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap ()
      {
        return this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap (const SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap (const SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio () const
      {
        return this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio ()
      {
        return this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio (const SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio (const SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP () const
      {
        return this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP ()
      {
        return this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP (const SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP (const SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4 (const SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4 (const SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate () const
      {
        return this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate ()
      {
        return this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate (const SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate (const SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate (::std::auto_ptr< SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_type > x)
      {
        this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4 (const SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4 (const SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4 (const SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4 (const SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4 (const SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4 (const SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4 (const SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4 (const SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4 (const SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4 (const SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4 (const SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4 (const SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4 (const SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4 (const SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4 (const SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4 (const SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondEffect_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondEffect_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondEffect_1_4 (const SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondEffect_1_4 (const SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondEffect_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4 (const SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4 (const SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4 () const
      {
        return this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_optional& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4 ()
      {
        return this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4 (const SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_type& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4 (const SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_optional& x)
      {
        this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4 (::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_type > x)
      {
        this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed
      //

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (this),
        SimFlowEnergyTrans_CondType_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (this),
        SimFlowEnergyTrans_BasinHeatCap_ (this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_ (this),
        SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_ (this),
        SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_ (this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_ (this),
        SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_ (this),
        SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_ (this),
        SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_ (this),
        SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_ (this),
        SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_ (this),
        SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_ (this),
        SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (RefId),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (this),
        SimFlowEnergyTrans_CondType_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (this),
        SimFlowEnergyTrans_BasinHeatCap_ (this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_ (this),
        SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_ (this),
        SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_ (this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_ (this),
        SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_ (this),
        SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_ (this),
        SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_ (this),
        SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_ (this),
        SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_ (this),
        SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_ (this),
        SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed& x,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (x, f, c),
        SimFlowEnergyTrans_Name_ (x.SimFlowEnergyTrans_Name_, f, this),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_FuelType_ (x.SimFlowEnergyTrans_FuelType_, f, this),
        SimFlowEnergyTrans_AirInNodeName_ (x.SimFlowEnergyTrans_AirInNodeName_, f, this),
        SimFlowEnergyTrans_AirOutNodeName_ (x.SimFlowEnergyTrans_AirOutNodeName_, f, this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (x.SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_, f, this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (x.SimFlowEnergyTrans_CondAirInletNodeName_, f, this),
        SimFlowEnergyTrans_CondType_ (x.SimFlowEnergyTrans_CondType_, f, this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (x.SimFlowEnergyTrans_CrankcaseHeatCap_, f, this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_, f, this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (x.SimFlowEnergyTrans_SupWaterStoTankName_, f, this),
        SimFlowEnergyTrans_BasinHeatCap_ (x.SimFlowEnergyTrans_BasinHeatCap_, f, this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (x.SimFlowEnergyTrans_BasinHeatSetpointTemp_, f, this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (x.SimFlowEnergyTrans_BasinHeatOperatSchedName_, f, this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (x.SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_, f, this),
        SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_ (x.SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_, f, this),
        SimFlowEnergyTrans_NumSpeeds_ (x.SimFlowEnergyTrans_NumSpeeds_, f, this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_ (x.SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_, f, this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_ (x.SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_, f, this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_ (x.SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_, f, this),
        SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_ (x.SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_, f, this),
        SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_ (x.SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_, f, this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_ (x.SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_, f, this),
        SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_ (x.SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_, f, this),
        SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_ (x.SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_, f, this),
        SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_ (x.SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_, f, this),
        SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_ (x.SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_, f, this),
        SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_ (x.SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_, f, this),
        SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_ (x.SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_, f, this),
        SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_ (x.SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_, f, this),
        SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_ (x.SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_, f, this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed (const ::xercesc::DOMElement& e,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_CondAirInletNodeName_ (this),
        SimFlowEnergyTrans_CondType_ (this),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_SupWaterStoTankName_ (this),
        SimFlowEnergyTrans_BasinHeatCap_ (this),
        SimFlowEnergyTrans_BasinHeatSetpointTemp_ (this),
        SimFlowEnergyTrans_BasinHeatOperatSchedName_ (this),
        SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_ (this),
        SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_ (this),
        SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_ (this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_ (this),
        SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_ (this),
        SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_ (this),
        SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_ (this),
        SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_ (this),
        SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_ (this),
        SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_ (this),
        SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_ (this),
        SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_Name
          //
          if (n.name () == "SimFlowEnergyTrans_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Name_type > r (
              SimFlowEnergyTrans_Name_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Name_)
            {
              this->SimFlowEnergyTrans_Name_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FuelType
          //
          if (n.name () == "SimFlowEnergyTrans_FuelType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FuelType_type > r (
              SimFlowEnergyTrans_FuelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FuelType_)
            {
              this->SimFlowEnergyTrans_FuelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirInNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > r (
              SimFlowEnergyTrans_AirInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirInNodeName_)
            {
              this->SimFlowEnergyTrans_AirInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirOutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirOutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > r (
              SimFlowEnergyTrans_AirOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirOutNodeName_)
            {
              this->SimFlowEnergyTrans_AirOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondsCollectionWaterStorageTankName
          //
          if (n.name () == "SimFlowEnergyTrans_CondsCollectionWaterStorageTankName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > r (
              SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_)
            {
              this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CondAirInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondAirInletNodeName_type > r (
              SimFlowEnergyTrans_CondAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_CondAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondType
          //
          if (n.name () == "SimFlowEnergyTrans_CondType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondType_type > r (
              SimFlowEnergyTrans_CondType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondType_)
            {
              this->SimFlowEnergyTrans_CondType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CrankcaseHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_CrankcaseHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CrankcaseHeatCap_)
            {
              this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (SimFlowEnergyTrans_CrankcaseHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_)
            {
              this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SupWaterStoTankName
          //
          if (n.name () == "SimFlowEnergyTrans_SupWaterStoTankName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SupWaterStoTankName_type > r (
              SimFlowEnergyTrans_SupWaterStoTankName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SupWaterStoTankName_)
            {
              this->SimFlowEnergyTrans_SupWaterStoTankName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_BasinHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_BasinHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BasinHeatCap_)
            {
              this->SimFlowEnergyTrans_BasinHeatCap_.set (SimFlowEnergyTrans_BasinHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BasinHeatSetpointTemp
          //
          if (n.name () == "SimFlowEnergyTrans_BasinHeatSetpointTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BasinHeatSetpointTemp_)
            {
              this->SimFlowEnergyTrans_BasinHeatSetpointTemp_.set (SimFlowEnergyTrans_BasinHeatSetpointTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BasinHeatOperatSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_BasinHeatOperatSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_BasinHeatOperatSchedName_type > r (
              SimFlowEnergyTrans_BasinHeatOperatSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_BasinHeatOperatSchedName_)
            {
              this->SimFlowEnergyTrans_BasinHeatOperatSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1
          //
          if (n.name () == "SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_type > r (
              SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_)
            {
              this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1
          //
          if (n.name () == "SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_type > r (
              SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_)
            {
              this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_NumSpeeds
          //
          if (n.name () == "SimFlowEnergyTrans_NumSpeeds" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumSpeeds_)
            {
              this->SimFlowEnergyTrans_NumSpeeds_.set (SimFlowEnergyTrans_NumSpeeds_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_type > r (
              SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_)
            {
              this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_type > r (
              SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_)
            {
              this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_type > r (
              SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_)
            {
              this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_type > r (
              SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_type > r (
              SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_)
            {
              this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_type > r (
              SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_type > r (
              SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_)
            {
              this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_type > r (
              SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_type > r (
              SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_type > r (
              SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_type > r (
              SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedEvapCondEffect_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedEvapCondEffect_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_type > r (
              SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_type > r (
              SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4
          //
          if (n.name () == "SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_type > r (
              SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_)
            {
              this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed* SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed (*this, f, c);
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed& SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      operator= (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX& > (*this) = x;
          this->SimFlowEnergyTrans_Name_ = x.SimFlowEnergyTrans_Name_;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_FuelType_ = x.SimFlowEnergyTrans_FuelType_;
          this->SimFlowEnergyTrans_AirInNodeName_ = x.SimFlowEnergyTrans_AirInNodeName_;
          this->SimFlowEnergyTrans_AirOutNodeName_ = x.SimFlowEnergyTrans_AirOutNodeName_;
          this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ = x.SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
          this->SimFlowEnergyTrans_CondAirInletNodeName_ = x.SimFlowEnergyTrans_CondAirInletNodeName_;
          this->SimFlowEnergyTrans_CondType_ = x.SimFlowEnergyTrans_CondType_;
          this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x.SimFlowEnergyTrans_CrankcaseHeatCap_;
          this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
          this->SimFlowEnergyTrans_SupWaterStoTankName_ = x.SimFlowEnergyTrans_SupWaterStoTankName_;
          this->SimFlowEnergyTrans_BasinHeatCap_ = x.SimFlowEnergyTrans_BasinHeatCap_;
          this->SimFlowEnergyTrans_BasinHeatSetpointTemp_ = x.SimFlowEnergyTrans_BasinHeatSetpointTemp_;
          this->SimFlowEnergyTrans_BasinHeatOperatSchedName_ = x.SimFlowEnergyTrans_BasinHeatOperatSchedName_;
          this->SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_ = x.SimFlowEnergyTrans_ApplyPartLoadFractToSpeedsGrtrThan1_;
          this->SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_ = x.SimFlowEnergyTrans_ApplyLatentDegradToSpeedsGrtrThan1_;
          this->SimFlowEnergyTrans_NumSpeeds_ = x.SimFlowEnergyTrans_NumSpeeds_;
          this->SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_ = x.SimFlowEnergyTrans_Speed_1_4_GrossRatedTotalCoolCap_;
          this->SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_ = x.SimFlowEnergyTrans_Speed_1_4_GrossRatedSensHeatRatio_;
          this->SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_ = x.SimFlowEnergyTrans_Speed_1_4_GrossRatedCoolCOP_;
          this->SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_ = x.SimFlowEnergyTrans_SpeedRatedAirFlowRate_1_4_;
          this->SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_ = x.SimFlowEnergyTrans_Spd_1_4_RatedEvapFanPwrPerVolumeFlowRate_;
          this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedTotalCoolingCapFuncTempCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedTotalCoolingCapFuncFlowFractCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedEnergyInputRatioFuncTempCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedEnergyInputRatioFuncFlowFractCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedPartLoadFractCorrelCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_ = x.SimFlowEnergyTrans_SpeedNomTimeForCondsRemovToBegin_1_4_;
          this->SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_ = x.SimFlowEnergyTrans_SpdRatioOfInitMoistEvapRate_SteadyStateLtntCap_1_4_;
          this->SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_ = x.SimFlowEnergyTrans_SpeedMaxCyclingRate_1_4_;
          this->SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_ = x.SimFlowEnergyTrans_SpeedLatentCapTimeConst_1_4_;
          this->SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_ = x.SimFlowEnergyTrans_SpeedRatedWasteHeatFractPwrInput_1_4_;
          this->SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_ = x.SimFlowEnergyTrans_SpeedWasteHeatFuncTempCurveName_1_4_;
          this->SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_ = x.SimFlowEnergyTrans_SpeedEvapCondEffect_1_4_;
          this->SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_ = x.SimFlowEnergyTrans_SpeedEvapCondAirFlowRate_1_4_;
          this->SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_ = x.SimFlowEnergyTrans_SpeedRatedEvapCondPumpPwrConsump_1_4_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed::
      ~SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXMultiSpeed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

