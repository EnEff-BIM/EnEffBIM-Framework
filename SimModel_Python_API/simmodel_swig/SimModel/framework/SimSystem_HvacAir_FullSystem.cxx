// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSystem_HvacAir_FullSystem.hxx"

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimSystem_HvacAir_FullSystem
      // 

      const SimSystem_HvacAir_FullSystem::SimSys_ContListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_ContListName () const
      {
        return this->SimSys_ContListName_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_ContListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_ContListName ()
      {
        return this->SimSys_ContListName_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_ContListName (const SimSys_ContListName_type& x)
      {
        this->SimSys_ContListName_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_ContListName (const SimSys_ContListName_optional& x)
      {
        this->SimSys_ContListName_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_ContListName (::std::auto_ptr< SimSys_ContListName_type > x)
      {
        this->SimSys_ContListName_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_AvailMngrListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_AvailMngrListName () const
      {
        return this->SimSys_AvailMngrListName_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_AvailMngrListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_AvailMngrListName ()
      {
        return this->SimSys_AvailMngrListName_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_AvailMngrListName (const SimSys_AvailMngrListName_type& x)
      {
        this->SimSys_AvailMngrListName_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_AvailMngrListName (const SimSys_AvailMngrListName_optional& x)
      {
        this->SimSys_AvailMngrListName_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_AvailMngrListName (::std::auto_ptr< SimSys_AvailMngrListName_type > x)
      {
        this->SimSys_AvailMngrListName_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_DesignSupAirFlowRate_optional& SimSystem_HvacAir_FullSystem::
      SimSys_DesignSupAirFlowRate () const
      {
        return this->SimSys_DesignSupAirFlowRate_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_DesignSupAirFlowRate_optional& SimSystem_HvacAir_FullSystem::
      SimSys_DesignSupAirFlowRate ()
      {
        return this->SimSys_DesignSupAirFlowRate_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DesignSupAirFlowRate (const SimSys_DesignSupAirFlowRate_type& x)
      {
        this->SimSys_DesignSupAirFlowRate_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DesignSupAirFlowRate (const SimSys_DesignSupAirFlowRate_optional& x)
      {
        this->SimSys_DesignSupAirFlowRate_ = x;
      }

      const SimSystem_HvacAir_FullSystem::SimSys_BranchListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_BranchListName () const
      {
        return this->SimSys_BranchListName_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_BranchListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_BranchListName ()
      {
        return this->SimSys_BranchListName_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_BranchListName (const SimSys_BranchListName_type& x)
      {
        this->SimSys_BranchListName_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_BranchListName (const SimSys_BranchListName_optional& x)
      {
        this->SimSys_BranchListName_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_BranchListName (::std::auto_ptr< SimSys_BranchListName_type > x)
      {
        this->SimSys_BranchListName_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_ConnListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_ConnListName () const
      {
        return this->SimSys_ConnListName_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_ConnListName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_ConnListName ()
      {
        return this->SimSys_ConnListName_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_ConnListName (const SimSys_ConnListName_type& x)
      {
        this->SimSys_ConnListName_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_ConnListName (const SimSys_ConnListName_optional& x)
      {
        this->SimSys_ConnListName_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_ConnListName (::std::auto_ptr< SimSys_ConnListName_type > x)
      {
        this->SimSys_ConnListName_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_SupSideInNodeName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_SupSideInNodeName () const
      {
        return this->SimSys_SupSideInNodeName_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_SupSideInNodeName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_SupSideInNodeName ()
      {
        return this->SimSys_SupSideInNodeName_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_SupSideInNodeName (const SimSys_SupSideInNodeName_type& x)
      {
        this->SimSys_SupSideInNodeName_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_SupSideInNodeName (const SimSys_SupSideInNodeName_optional& x)
      {
        this->SimSys_SupSideInNodeName_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_SupSideInNodeName (::std::auto_ptr< SimSys_SupSideInNodeName_type > x)
      {
        this->SimSys_SupSideInNodeName_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_DemandSideOutNodeName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideOutNodeName () const
      {
        return this->SimSys_DemandSideOutNodeName_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_DemandSideOutNodeName_optional& SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideOutNodeName ()
      {
        return this->SimSys_DemandSideOutNodeName_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideOutNodeName (const SimSys_DemandSideOutNodeName_type& x)
      {
        this->SimSys_DemandSideOutNodeName_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideOutNodeName (const SimSys_DemandSideOutNodeName_optional& x)
      {
        this->SimSys_DemandSideOutNodeName_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideOutNodeName (::std::auto_ptr< SimSys_DemandSideOutNodeName_type > x)
      {
        this->SimSys_DemandSideOutNodeName_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_DemandSideInNodeNames_optional& SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideInNodeNames () const
      {
        return this->SimSys_DemandSideInNodeNames_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_DemandSideInNodeNames_optional& SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideInNodeNames ()
      {
        return this->SimSys_DemandSideInNodeNames_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideInNodeNames (const SimSys_DemandSideInNodeNames_type& x)
      {
        this->SimSys_DemandSideInNodeNames_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideInNodeNames (const SimSys_DemandSideInNodeNames_optional& x)
      {
        this->SimSys_DemandSideInNodeNames_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_DemandSideInNodeNames (::std::auto_ptr< SimSys_DemandSideInNodeNames_type > x)
      {
        this->SimSys_DemandSideInNodeNames_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::SimSys_SupSideOutNodeNames_optional& SimSystem_HvacAir_FullSystem::
      SimSys_SupSideOutNodeNames () const
      {
        return this->SimSys_SupSideOutNodeNames_;
      }

      SimSystem_HvacAir_FullSystem::SimSys_SupSideOutNodeNames_optional& SimSystem_HvacAir_FullSystem::
      SimSys_SupSideOutNodeNames ()
      {
        return this->SimSys_SupSideOutNodeNames_;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_SupSideOutNodeNames (const SimSys_SupSideOutNodeNames_type& x)
      {
        this->SimSys_SupSideOutNodeNames_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_SupSideOutNodeNames (const SimSys_SupSideOutNodeNames_optional& x)
      {
        this->SimSys_SupSideOutNodeNames_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      SimSys_SupSideOutNodeNames (::std::auto_ptr< SimSys_SupSideOutNodeNames_type > x)
      {
        this->SimSys_SupSideOutNodeNames_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24AcceptTestReq_optional& SimSystem_HvacAir_FullSystem::
      T24AcceptTestReq () const
      {
        return this->T24AcceptTestReq_;
      }

      SimSystem_HvacAir_FullSystem::T24AcceptTestReq_optional& SimSystem_HvacAir_FullSystem::
      T24AcceptTestReq ()
      {
        return this->T24AcceptTestReq_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AcceptTestReq (const T24AcceptTestReq_type& x)
      {
        this->T24AcceptTestReq_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24AcceptTestReq (const T24AcceptTestReq_optional& x)
      {
        this->T24AcceptTestReq_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24AirSysCntrlSysType_optional& SimSystem_HvacAir_FullSystem::
      T24AirSysCntrlSysType () const
      {
        return this->T24AirSysCntrlSysType_;
      }

      SimSystem_HvacAir_FullSystem::T24AirSysCntrlSysType_optional& SimSystem_HvacAir_FullSystem::
      T24AirSysCntrlSysType ()
      {
        return this->T24AirSysCntrlSysType_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysCntrlSysType (const T24AirSysCntrlSysType_type& x)
      {
        this->T24AirSysCntrlSysType_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysCntrlSysType (const T24AirSysCntrlSysType_optional& x)
      {
        this->T24AirSysCntrlSysType_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysCntrlSysType (::std::auto_ptr< T24AirSysCntrlSysType_type > x)
      {
        this->T24AirSysCntrlSysType_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24DuctInsul_optional& SimSystem_HvacAir_FullSystem::
      T24DuctInsul () const
      {
        return this->T24DuctInsul_;
      }

      SimSystem_HvacAir_FullSystem::T24DuctInsul_optional& SimSystem_HvacAir_FullSystem::
      T24DuctInsul ()
      {
        return this->T24DuctInsul_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24DuctInsul (const T24DuctInsul_type& x)
      {
        this->T24DuctInsul_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24DuctInsul (const T24DuctInsul_optional& x)
      {
        this->T24DuctInsul_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24DuctLoc_optional& SimSystem_HvacAir_FullSystem::
      T24DuctLoc () const
      {
        return this->T24DuctLoc_;
      }

      SimSystem_HvacAir_FullSystem::T24DuctLoc_optional& SimSystem_HvacAir_FullSystem::
      T24DuctLoc ()
      {
        return this->T24DuctLoc_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24DuctLoc (const T24DuctLoc_type& x)
      {
        this->T24DuctLoc_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24DuctLoc (const T24DuctLoc_optional& x)
      {
        this->T24DuctLoc_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      T24DuctLoc (::std::auto_ptr< T24DuctLoc_type > x)
      {
        this->T24DuctLoc_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24AirSysExhCtrlMthd_optional& SimSystem_HvacAir_FullSystem::
      T24AirSysExhCtrlMthd () const
      {
        return this->T24AirSysExhCtrlMthd_;
      }

      SimSystem_HvacAir_FullSystem::T24AirSysExhCtrlMthd_optional& SimSystem_HvacAir_FullSystem::
      T24AirSysExhCtrlMthd ()
      {
        return this->T24AirSysExhCtrlMthd_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysExhCtrlMthd (const T24AirSysExhCtrlMthd_type& x)
      {
        this->T24AirSysExhCtrlMthd_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysExhCtrlMthd (const T24AirSysExhCtrlMthd_optional& x)
      {
        this->T24AirSysExhCtrlMthd_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysExhCtrlMthd (::std::auto_ptr< T24AirSysExhCtrlMthd_type > x)
      {
        this->T24AirSysExhCtrlMthd_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24AirSysExhSysType_optional& SimSystem_HvacAir_FullSystem::
      T24AirSysExhSysType () const
      {
        return this->T24AirSysExhSysType_;
      }

      SimSystem_HvacAir_FullSystem::T24AirSysExhSysType_optional& SimSystem_HvacAir_FullSystem::
      T24AirSysExhSysType ()
      {
        return this->T24AirSysExhSysType_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysExhSysType (const T24AirSysExhSysType_type& x)
      {
        this->T24AirSysExhSysType_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysExhSysType (const T24AirSysExhSysType_optional& x)
      {
        this->T24AirSysExhSysType_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AirSysExhSysType (::std::auto_ptr< T24AirSysExhSysType_type > x)
      {
        this->T24AirSysExhSysType_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24HERSDuctReq_optional& SimSystem_HvacAir_FullSystem::
      T24HERSDuctReq () const
      {
        return this->T24HERSDuctReq_;
      }

      SimSystem_HvacAir_FullSystem::T24HERSDuctReq_optional& SimSystem_HvacAir_FullSystem::
      T24HERSDuctReq ()
      {
        return this->T24HERSDuctReq_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24HERSDuctReq (const T24HERSDuctReq_type& x)
      {
        this->T24HERSDuctReq_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24HERSDuctReq (const T24HERSDuctReq_optional& x)
      {
        this->T24HERSDuctReq_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch03A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch03A () const
      {
        return this->T24Mch03A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch03A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch03A ()
      {
        return this->T24Mch03A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch03A (const T24Mch03A_type& x)
      {
        this->T24Mch03A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch03A (const T24Mch03A_optional& x)
      {
        this->T24Mch03A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch04A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch04A () const
      {
        return this->T24Mch04A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch04A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch04A ()
      {
        return this->T24Mch04A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch04A (const T24Mch04A_type& x)
      {
        this->T24Mch04A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch04A (const T24Mch04A_optional& x)
      {
        this->T24Mch04A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch05A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch05A () const
      {
        return this->T24Mch05A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch05A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch05A ()
      {
        return this->T24Mch05A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch05A (const T24Mch05A_type& x)
      {
        this->T24Mch05A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch05A (const T24Mch05A_optional& x)
      {
        this->T24Mch05A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch09A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch09A () const
      {
        return this->T24Mch09A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch09A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch09A ()
      {
        return this->T24Mch09A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch09A (const T24Mch09A_type& x)
      {
        this->T24Mch09A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch09A (const T24Mch09A_optional& x)
      {
        this->T24Mch09A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch15A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch15A () const
      {
        return this->T24Mch15A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch15A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch15A ()
      {
        return this->T24Mch15A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch15A (const T24Mch15A_type& x)
      {
        this->T24Mch15A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch15A (const T24Mch15A_optional& x)
      {
        this->T24Mch15A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch17A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch17A () const
      {
        return this->T24Mch17A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch17A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch17A ()
      {
        return this->T24Mch17A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch17A (const T24Mch17A_type& x)
      {
        this->T24Mch17A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch17A (const T24Mch17A_optional& x)
      {
        this->T24Mch17A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24ConstructStatus3_optional& SimSystem_HvacAir_FullSystem::
      T24ConstructStatus3 () const
      {
        return this->T24ConstructStatus3_;
      }

      SimSystem_HvacAir_FullSystem::T24ConstructStatus3_optional& SimSystem_HvacAir_FullSystem::
      T24ConstructStatus3 ()
      {
        return this->T24ConstructStatus3_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24ConstructStatus3 (const T24ConstructStatus3_type& x)
      {
        this->T24ConstructStatus3_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24ConstructStatus3 (const T24ConstructStatus3_optional& x)
      {
        this->T24ConstructStatus3_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      T24ConstructStatus3 (::std::auto_ptr< T24ConstructStatus3_type > x)
      {
        this->T24ConstructStatus3_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24AHUSubType_optional& SimSystem_HvacAir_FullSystem::
      T24AHUSubType () const
      {
        return this->T24AHUSubType_;
      }

      SimSystem_HvacAir_FullSystem::T24AHUSubType_optional& SimSystem_HvacAir_FullSystem::
      T24AHUSubType ()
      {
        return this->T24AHUSubType_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AHUSubType (const T24AHUSubType_type& x)
      {
        this->T24AHUSubType_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24AHUSubType (const T24AHUSubType_optional& x)
      {
        this->T24AHUSubType_ = x;
      }

      void SimSystem_HvacAir_FullSystem::
      T24AHUSubType (::std::auto_ptr< T24AHUSubType_type > x)
      {
        this->T24AHUSubType_.set (x);
      }

      const SimSystem_HvacAir_FullSystem::T24Mch02A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch02A () const
      {
        return this->T24Mch02A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch02A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch02A ()
      {
        return this->T24Mch02A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch02A (const T24Mch02A_type& x)
      {
        this->T24Mch02A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch02A (const T24Mch02A_optional& x)
      {
        this->T24Mch02A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch06A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch06A () const
      {
        return this->T24Mch06A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch06A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch06A ()
      {
        return this->T24Mch06A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch06A (const T24Mch06A_type& x)
      {
        this->T24Mch06A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch06A (const T24Mch06A_optional& x)
      {
        this->T24Mch06A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch07A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch07A () const
      {
        return this->T24Mch07A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch07A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch07A ()
      {
        return this->T24Mch07A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch07A (const T24Mch07A_type& x)
      {
        this->T24Mch07A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch07A (const T24Mch07A_optional& x)
      {
        this->T24Mch07A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch08A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch08A () const
      {
        return this->T24Mch08A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch08A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch08A ()
      {
        return this->T24Mch08A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch08A (const T24Mch08A_type& x)
      {
        this->T24Mch08A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch08A (const T24Mch08A_optional& x)
      {
        this->T24Mch08A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch10A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch10A () const
      {
        return this->T24Mch10A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch10A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch10A ()
      {
        return this->T24Mch10A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch10A (const T24Mch10A_type& x)
      {
        this->T24Mch10A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch10A (const T24Mch10A_optional& x)
      {
        this->T24Mch10A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch11A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch11A () const
      {
        return this->T24Mch11A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch11A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch11A ()
      {
        return this->T24Mch11A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch11A (const T24Mch11A_type& x)
      {
        this->T24Mch11A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch11A (const T24Mch11A_optional& x)
      {
        this->T24Mch11A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch12A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch12A () const
      {
        return this->T24Mch12A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch12A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch12A ()
      {
        return this->T24Mch12A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch12A (const T24Mch12A_type& x)
      {
        this->T24Mch12A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch12A (const T24Mch12A_optional& x)
      {
        this->T24Mch12A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch13A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch13A () const
      {
        return this->T24Mch13A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch13A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch13A ()
      {
        return this->T24Mch13A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch13A (const T24Mch13A_type& x)
      {
        this->T24Mch13A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch13A (const T24Mch13A_optional& x)
      {
        this->T24Mch13A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch14A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch14A () const
      {
        return this->T24Mch14A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch14A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch14A ()
      {
        return this->T24Mch14A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch14A (const T24Mch14A_type& x)
      {
        this->T24Mch14A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch14A (const T24Mch14A_optional& x)
      {
        this->T24Mch14A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch16A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch16A () const
      {
        return this->T24Mch16A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch16A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch16A ()
      {
        return this->T24Mch16A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch16A (const T24Mch16A_type& x)
      {
        this->T24Mch16A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch16A (const T24Mch16A_optional& x)
      {
        this->T24Mch16A_ = x;
      }

      const SimSystem_HvacAir_FullSystem::T24Mch18A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch18A () const
      {
        return this->T24Mch18A_;
      }

      SimSystem_HvacAir_FullSystem::T24Mch18A_optional& SimSystem_HvacAir_FullSystem::
      T24Mch18A ()
      {
        return this->T24Mch18A_;
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch18A (const T24Mch18A_type& x)
      {
        this->T24Mch18A_.set (x);
      }

      void SimSystem_HvacAir_FullSystem::
      T24Mch18A (const T24Mch18A_optional& x)
      {
        this->T24Mch18A_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimSystem_HvacAir_FullSystem
      //

      SimSystem_HvacAir_FullSystem::
      SimSystem_HvacAir_FullSystem ()
      : ::schema::simxml::BuildingModel::SimSystem_HvacAir (),
        SimSys_ContListName_ (this),
        SimSys_AvailMngrListName_ (this),
        SimSys_DesignSupAirFlowRate_ (this),
        SimSys_BranchListName_ (this),
        SimSys_ConnListName_ (this),
        SimSys_SupSideInNodeName_ (this),
        SimSys_DemandSideOutNodeName_ (this),
        SimSys_DemandSideInNodeNames_ (this),
        SimSys_SupSideOutNodeNames_ (this),
        T24AcceptTestReq_ (this),
        T24AirSysCntrlSysType_ (this),
        T24DuctInsul_ (this),
        T24DuctLoc_ (this),
        T24AirSysExhCtrlMthd_ (this),
        T24AirSysExhSysType_ (this),
        T24HERSDuctReq_ (this),
        T24Mch03A_ (this),
        T24Mch04A_ (this),
        T24Mch05A_ (this),
        T24Mch09A_ (this),
        T24Mch15A_ (this),
        T24Mch17A_ (this),
        T24ConstructStatus3_ (this),
        T24AHUSubType_ (this),
        T24Mch02A_ (this),
        T24Mch06A_ (this),
        T24Mch07A_ (this),
        T24Mch08A_ (this),
        T24Mch10A_ (this),
        T24Mch11A_ (this),
        T24Mch12A_ (this),
        T24Mch13A_ (this),
        T24Mch14A_ (this),
        T24Mch16A_ (this),
        T24Mch18A_ (this)
      {
      }

      SimSystem_HvacAir_FullSystem::
      SimSystem_HvacAir_FullSystem (const RefId_type& RefId)
      : ::schema::simxml::BuildingModel::SimSystem_HvacAir (RefId),
        SimSys_ContListName_ (this),
        SimSys_AvailMngrListName_ (this),
        SimSys_DesignSupAirFlowRate_ (this),
        SimSys_BranchListName_ (this),
        SimSys_ConnListName_ (this),
        SimSys_SupSideInNodeName_ (this),
        SimSys_DemandSideOutNodeName_ (this),
        SimSys_DemandSideInNodeNames_ (this),
        SimSys_SupSideOutNodeNames_ (this),
        T24AcceptTestReq_ (this),
        T24AirSysCntrlSysType_ (this),
        T24DuctInsul_ (this),
        T24DuctLoc_ (this),
        T24AirSysExhCtrlMthd_ (this),
        T24AirSysExhSysType_ (this),
        T24HERSDuctReq_ (this),
        T24Mch03A_ (this),
        T24Mch04A_ (this),
        T24Mch05A_ (this),
        T24Mch09A_ (this),
        T24Mch15A_ (this),
        T24Mch17A_ (this),
        T24ConstructStatus3_ (this),
        T24AHUSubType_ (this),
        T24Mch02A_ (this),
        T24Mch06A_ (this),
        T24Mch07A_ (this),
        T24Mch08A_ (this),
        T24Mch10A_ (this),
        T24Mch11A_ (this),
        T24Mch12A_ (this),
        T24Mch13A_ (this),
        T24Mch14A_ (this),
        T24Mch16A_ (this),
        T24Mch18A_ (this)
      {
      }

      SimSystem_HvacAir_FullSystem::
      SimSystem_HvacAir_FullSystem (const SimSystem_HvacAir_FullSystem& x,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimSystem_HvacAir (x, f, c),
        SimSys_ContListName_ (x.SimSys_ContListName_, f, this),
        SimSys_AvailMngrListName_ (x.SimSys_AvailMngrListName_, f, this),
        SimSys_DesignSupAirFlowRate_ (x.SimSys_DesignSupAirFlowRate_, f, this),
        SimSys_BranchListName_ (x.SimSys_BranchListName_, f, this),
        SimSys_ConnListName_ (x.SimSys_ConnListName_, f, this),
        SimSys_SupSideInNodeName_ (x.SimSys_SupSideInNodeName_, f, this),
        SimSys_DemandSideOutNodeName_ (x.SimSys_DemandSideOutNodeName_, f, this),
        SimSys_DemandSideInNodeNames_ (x.SimSys_DemandSideInNodeNames_, f, this),
        SimSys_SupSideOutNodeNames_ (x.SimSys_SupSideOutNodeNames_, f, this),
        T24AcceptTestReq_ (x.T24AcceptTestReq_, f, this),
        T24AirSysCntrlSysType_ (x.T24AirSysCntrlSysType_, f, this),
        T24DuctInsul_ (x.T24DuctInsul_, f, this),
        T24DuctLoc_ (x.T24DuctLoc_, f, this),
        T24AirSysExhCtrlMthd_ (x.T24AirSysExhCtrlMthd_, f, this),
        T24AirSysExhSysType_ (x.T24AirSysExhSysType_, f, this),
        T24HERSDuctReq_ (x.T24HERSDuctReq_, f, this),
        T24Mch03A_ (x.T24Mch03A_, f, this),
        T24Mch04A_ (x.T24Mch04A_, f, this),
        T24Mch05A_ (x.T24Mch05A_, f, this),
        T24Mch09A_ (x.T24Mch09A_, f, this),
        T24Mch15A_ (x.T24Mch15A_, f, this),
        T24Mch17A_ (x.T24Mch17A_, f, this),
        T24ConstructStatus3_ (x.T24ConstructStatus3_, f, this),
        T24AHUSubType_ (x.T24AHUSubType_, f, this),
        T24Mch02A_ (x.T24Mch02A_, f, this),
        T24Mch06A_ (x.T24Mch06A_, f, this),
        T24Mch07A_ (x.T24Mch07A_, f, this),
        T24Mch08A_ (x.T24Mch08A_, f, this),
        T24Mch10A_ (x.T24Mch10A_, f, this),
        T24Mch11A_ (x.T24Mch11A_, f, this),
        T24Mch12A_ (x.T24Mch12A_, f, this),
        T24Mch13A_ (x.T24Mch13A_, f, this),
        T24Mch14A_ (x.T24Mch14A_, f, this),
        T24Mch16A_ (x.T24Mch16A_, f, this),
        T24Mch18A_ (x.T24Mch18A_, f, this)
      {
      }

      SimSystem_HvacAir_FullSystem::
      SimSystem_HvacAir_FullSystem (const ::xercesc::DOMElement& e,
                                    ::xml_schema::flags f,
                                    ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimSystem_HvacAir (e, f | ::xml_schema::flags::base, c),
        SimSys_ContListName_ (this),
        SimSys_AvailMngrListName_ (this),
        SimSys_DesignSupAirFlowRate_ (this),
        SimSys_BranchListName_ (this),
        SimSys_ConnListName_ (this),
        SimSys_SupSideInNodeName_ (this),
        SimSys_DemandSideOutNodeName_ (this),
        SimSys_DemandSideInNodeNames_ (this),
        SimSys_SupSideOutNodeNames_ (this),
        T24AcceptTestReq_ (this),
        T24AirSysCntrlSysType_ (this),
        T24DuctInsul_ (this),
        T24DuctLoc_ (this),
        T24AirSysExhCtrlMthd_ (this),
        T24AirSysExhSysType_ (this),
        T24HERSDuctReq_ (this),
        T24Mch03A_ (this),
        T24Mch04A_ (this),
        T24Mch05A_ (this),
        T24Mch09A_ (this),
        T24Mch15A_ (this),
        T24Mch17A_ (this),
        T24ConstructStatus3_ (this),
        T24AHUSubType_ (this),
        T24Mch02A_ (this),
        T24Mch06A_ (this),
        T24Mch07A_ (this),
        T24Mch08A_ (this),
        T24Mch10A_ (this),
        T24Mch11A_ (this),
        T24Mch12A_ (this),
        T24Mch13A_ (this),
        T24Mch14A_ (this),
        T24Mch16A_ (this),
        T24Mch18A_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSystem_HvacAir_FullSystem::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::BuildingModel::SimSystem_HvacAir::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSys_ContListName
          //
          if (n.name () == "SimSys_ContListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_ContListName_type > r (
              SimSys_ContListName_traits::create (i, f, this));

            if (!this->SimSys_ContListName_)
            {
              this->SimSys_ContListName_.set (r);
              continue;
            }
          }

          // SimSys_AvailMngrListName
          //
          if (n.name () == "SimSys_AvailMngrListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_AvailMngrListName_type > r (
              SimSys_AvailMngrListName_traits::create (i, f, this));

            if (!this->SimSys_AvailMngrListName_)
            {
              this->SimSys_AvailMngrListName_.set (r);
              continue;
            }
          }

          // SimSys_DesignSupAirFlowRate
          //
          if (n.name () == "SimSys_DesignSupAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSys_DesignSupAirFlowRate_)
            {
              this->SimSys_DesignSupAirFlowRate_.set (SimSys_DesignSupAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimSys_BranchListName
          //
          if (n.name () == "SimSys_BranchListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_BranchListName_type > r (
              SimSys_BranchListName_traits::create (i, f, this));

            if (!this->SimSys_BranchListName_)
            {
              this->SimSys_BranchListName_.set (r);
              continue;
            }
          }

          // SimSys_ConnListName
          //
          if (n.name () == "SimSys_ConnListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_ConnListName_type > r (
              SimSys_ConnListName_traits::create (i, f, this));

            if (!this->SimSys_ConnListName_)
            {
              this->SimSys_ConnListName_.set (r);
              continue;
            }
          }

          // SimSys_SupSideInNodeName
          //
          if (n.name () == "SimSys_SupSideInNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_SupSideInNodeName_type > r (
              SimSys_SupSideInNodeName_traits::create (i, f, this));

            if (!this->SimSys_SupSideInNodeName_)
            {
              this->SimSys_SupSideInNodeName_.set (r);
              continue;
            }
          }

          // SimSys_DemandSideOutNodeName
          //
          if (n.name () == "SimSys_DemandSideOutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_DemandSideOutNodeName_type > r (
              SimSys_DemandSideOutNodeName_traits::create (i, f, this));

            if (!this->SimSys_DemandSideOutNodeName_)
            {
              this->SimSys_DemandSideOutNodeName_.set (r);
              continue;
            }
          }

          // SimSys_DemandSideInNodeNames
          //
          if (n.name () == "SimSys_DemandSideInNodeNames" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_DemandSideInNodeNames_type > r (
              SimSys_DemandSideInNodeNames_traits::create (i, f, this));

            if (!this->SimSys_DemandSideInNodeNames_)
            {
              this->SimSys_DemandSideInNodeNames_.set (r);
              continue;
            }
          }

          // SimSys_SupSideOutNodeNames
          //
          if (n.name () == "SimSys_SupSideOutNodeNames" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_SupSideOutNodeNames_type > r (
              SimSys_SupSideOutNodeNames_traits::create (i, f, this));

            if (!this->SimSys_SupSideOutNodeNames_)
            {
              this->SimSys_SupSideOutNodeNames_.set (r);
              continue;
            }
          }

          // T24AcceptTestReq
          //
          if (n.name () == "T24AcceptTestReq" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24AcceptTestReq_)
            {
              this->T24AcceptTestReq_.set (T24AcceptTestReq_traits::create (i, f, this));
              continue;
            }
          }

          // T24AirSysCntrlSysType
          //
          if (n.name () == "T24AirSysCntrlSysType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24AirSysCntrlSysType_type > r (
              T24AirSysCntrlSysType_traits::create (i, f, this));

            if (!this->T24AirSysCntrlSysType_)
            {
              this->T24AirSysCntrlSysType_.set (r);
              continue;
            }
          }

          // T24DuctInsul
          //
          if (n.name () == "T24DuctInsul" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24DuctInsul_)
            {
              this->T24DuctInsul_.set (T24DuctInsul_traits::create (i, f, this));
              continue;
            }
          }

          // T24DuctLoc
          //
          if (n.name () == "T24DuctLoc" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24DuctLoc_type > r (
              T24DuctLoc_traits::create (i, f, this));

            if (!this->T24DuctLoc_)
            {
              this->T24DuctLoc_.set (r);
              continue;
            }
          }

          // T24AirSysExhCtrlMthd
          //
          if (n.name () == "T24AirSysExhCtrlMthd" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24AirSysExhCtrlMthd_type > r (
              T24AirSysExhCtrlMthd_traits::create (i, f, this));

            if (!this->T24AirSysExhCtrlMthd_)
            {
              this->T24AirSysExhCtrlMthd_.set (r);
              continue;
            }
          }

          // T24AirSysExhSysType
          //
          if (n.name () == "T24AirSysExhSysType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24AirSysExhSysType_type > r (
              T24AirSysExhSysType_traits::create (i, f, this));

            if (!this->T24AirSysExhSysType_)
            {
              this->T24AirSysExhSysType_.set (r);
              continue;
            }
          }

          // T24HERSDuctReq
          //
          if (n.name () == "T24HERSDuctReq" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24HERSDuctReq_)
            {
              this->T24HERSDuctReq_.set (T24HERSDuctReq_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch03A
          //
          if (n.name () == "T24Mch03A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch03A_)
            {
              this->T24Mch03A_.set (T24Mch03A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch04A
          //
          if (n.name () == "T24Mch04A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch04A_)
            {
              this->T24Mch04A_.set (T24Mch04A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch05A
          //
          if (n.name () == "T24Mch05A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch05A_)
            {
              this->T24Mch05A_.set (T24Mch05A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch09A
          //
          if (n.name () == "T24Mch09A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch09A_)
            {
              this->T24Mch09A_.set (T24Mch09A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch15A
          //
          if (n.name () == "T24Mch15A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch15A_)
            {
              this->T24Mch15A_.set (T24Mch15A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch17A
          //
          if (n.name () == "T24Mch17A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch17A_)
            {
              this->T24Mch17A_.set (T24Mch17A_traits::create (i, f, this));
              continue;
            }
          }

          // T24ConstructStatus3
          //
          if (n.name () == "T24ConstructStatus3" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24ConstructStatus3_type > r (
              T24ConstructStatus3_traits::create (i, f, this));

            if (!this->T24ConstructStatus3_)
            {
              this->T24ConstructStatus3_.set (r);
              continue;
            }
          }

          // T24AHUSubType
          //
          if (n.name () == "T24AHUSubType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24AHUSubType_type > r (
              T24AHUSubType_traits::create (i, f, this));

            if (!this->T24AHUSubType_)
            {
              this->T24AHUSubType_.set (r);
              continue;
            }
          }

          // T24Mch02A
          //
          if (n.name () == "T24Mch02A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch02A_)
            {
              this->T24Mch02A_.set (T24Mch02A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch06A
          //
          if (n.name () == "T24Mch06A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch06A_)
            {
              this->T24Mch06A_.set (T24Mch06A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch07A
          //
          if (n.name () == "T24Mch07A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch07A_)
            {
              this->T24Mch07A_.set (T24Mch07A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch08A
          //
          if (n.name () == "T24Mch08A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch08A_)
            {
              this->T24Mch08A_.set (T24Mch08A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch10A
          //
          if (n.name () == "T24Mch10A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch10A_)
            {
              this->T24Mch10A_.set (T24Mch10A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch11A
          //
          if (n.name () == "T24Mch11A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch11A_)
            {
              this->T24Mch11A_.set (T24Mch11A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch12A
          //
          if (n.name () == "T24Mch12A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch12A_)
            {
              this->T24Mch12A_.set (T24Mch12A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch13A
          //
          if (n.name () == "T24Mch13A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch13A_)
            {
              this->T24Mch13A_.set (T24Mch13A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch14A
          //
          if (n.name () == "T24Mch14A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch14A_)
            {
              this->T24Mch14A_.set (T24Mch14A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch16A
          //
          if (n.name () == "T24Mch16A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch16A_)
            {
              this->T24Mch16A_.set (T24Mch16A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch18A
          //
          if (n.name () == "T24Mch18A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch18A_)
            {
              this->T24Mch18A_.set (T24Mch18A_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimSystem_HvacAir_FullSystem* SimSystem_HvacAir_FullSystem::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSystem_HvacAir_FullSystem (*this, f, c);
      }

      SimSystem_HvacAir_FullSystem& SimSystem_HvacAir_FullSystem::
      operator= (const SimSystem_HvacAir_FullSystem& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::BuildingModel::SimSystem_HvacAir& > (*this) = x;
          this->SimSys_ContListName_ = x.SimSys_ContListName_;
          this->SimSys_AvailMngrListName_ = x.SimSys_AvailMngrListName_;
          this->SimSys_DesignSupAirFlowRate_ = x.SimSys_DesignSupAirFlowRate_;
          this->SimSys_BranchListName_ = x.SimSys_BranchListName_;
          this->SimSys_ConnListName_ = x.SimSys_ConnListName_;
          this->SimSys_SupSideInNodeName_ = x.SimSys_SupSideInNodeName_;
          this->SimSys_DemandSideOutNodeName_ = x.SimSys_DemandSideOutNodeName_;
          this->SimSys_DemandSideInNodeNames_ = x.SimSys_DemandSideInNodeNames_;
          this->SimSys_SupSideOutNodeNames_ = x.SimSys_SupSideOutNodeNames_;
          this->T24AcceptTestReq_ = x.T24AcceptTestReq_;
          this->T24AirSysCntrlSysType_ = x.T24AirSysCntrlSysType_;
          this->T24DuctInsul_ = x.T24DuctInsul_;
          this->T24DuctLoc_ = x.T24DuctLoc_;
          this->T24AirSysExhCtrlMthd_ = x.T24AirSysExhCtrlMthd_;
          this->T24AirSysExhSysType_ = x.T24AirSysExhSysType_;
          this->T24HERSDuctReq_ = x.T24HERSDuctReq_;
          this->T24Mch03A_ = x.T24Mch03A_;
          this->T24Mch04A_ = x.T24Mch04A_;
          this->T24Mch05A_ = x.T24Mch05A_;
          this->T24Mch09A_ = x.T24Mch09A_;
          this->T24Mch15A_ = x.T24Mch15A_;
          this->T24Mch17A_ = x.T24Mch17A_;
          this->T24ConstructStatus3_ = x.T24ConstructStatus3_;
          this->T24AHUSubType_ = x.T24AHUSubType_;
          this->T24Mch02A_ = x.T24Mch02A_;
          this->T24Mch06A_ = x.T24Mch06A_;
          this->T24Mch07A_ = x.T24Mch07A_;
          this->T24Mch08A_ = x.T24Mch08A_;
          this->T24Mch10A_ = x.T24Mch10A_;
          this->T24Mch11A_ = x.T24Mch11A_;
          this->T24Mch12A_ = x.T24Mch12A_;
          this->T24Mch13A_ = x.T24Mch13A_;
          this->T24Mch14A_ = x.T24Mch14A_;
          this->T24Mch16A_ = x.T24Mch16A_;
          this->T24Mch18A_ = x.T24Mch18A_;
        }

        return *this;
      }

      SimSystem_HvacAir_FullSystem::
      ~SimSystem_HvacAir_FullSystem ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

