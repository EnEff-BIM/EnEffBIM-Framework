// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater
      // 

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_Name () const
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_Name ()
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_type& x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_optional& x)
      {
        this->SimFlowEnergyTrans_Name_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_Name (::std::auto_ptr< SimFlowEnergyTrans_Name_type > x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedCap () const
      {
        return this->SimFlowEnergyTrans_RatedCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedCap_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedCap ()
      {
        return this->SimFlowEnergyTrans_RatedCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedCap (const SimFlowEnergyTrans_RatedCap_type& x)
      {
        this->SimFlowEnergyTrans_RatedCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedCap (const SimFlowEnergyTrans_RatedCap_optional& x)
      {
        this->SimFlowEnergyTrans_RatedCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_MaxWaterFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_MaxWaterFlowRate () const
      {
        return this->SimFlowEnergyTrans_MaxWaterFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_MaxWaterFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_MaxWaterFlowRate ()
      {
        return this->SimFlowEnergyTrans_MaxWaterFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_MaxWaterFlowRate (const SimFlowEnergyTrans_MaxWaterFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_MaxWaterFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_MaxWaterFlowRate (const SimFlowEnergyTrans_MaxWaterFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_MaxWaterFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_UFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_UFactorTimesAreaVal () const
      {
        return this->SimFlowEnergyTrans_UFactorTimesAreaVal_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_UFactorTimesAreaVal_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_UFactorTimesAreaVal ()
      {
        return this->SimFlowEnergyTrans_UFactorTimesAreaVal_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_UFactorTimesAreaVal (const SimFlowEnergyTrans_UFactorTimesAreaVal_type& x)
      {
        this->SimFlowEnergyTrans_UFactorTimesAreaVal_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_UFactorTimesAreaVal (const SimFlowEnergyTrans_UFactorTimesAreaVal_optional& x)
      {
        this->SimFlowEnergyTrans_UFactorTimesAreaVal_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_WaterInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_WaterInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_WaterInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_WaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterInletNodeName (const SimFlowEnergyTrans_WaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterInletNodeName (const SimFlowEnergyTrans_WaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_WaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_WaterOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_WaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_WaterOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_WaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterOutletNodeName (const SimFlowEnergyTrans_WaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterOutletNodeName (const SimFlowEnergyTrans_WaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_WaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_WaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirInNodeName () const
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirInNodeName ()
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirInNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirOutNodeName () const
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirOutNodeName ()
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_AirOutNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_PerfInputMeth_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_PerfInputMeth () const
      {
        return this->SimFlowEnergyTrans_PerfInputMeth_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_PerfInputMeth_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_PerfInputMeth ()
      {
        return this->SimFlowEnergyTrans_PerfInputMeth_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_PerfInputMeth (const SimFlowEnergyTrans_PerfInputMeth_type& x)
      {
        this->SimFlowEnergyTrans_PerfInputMeth_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_PerfInputMeth (const SimFlowEnergyTrans_PerfInputMeth_optional& x)
      {
        this->SimFlowEnergyTrans_PerfInputMeth_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_PerfInputMeth (::std::auto_ptr< SimFlowEnergyTrans_PerfInputMeth_type > x)
      {
        this->SimFlowEnergyTrans_PerfInputMeth_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedInletWaterTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletWaterTemp () const
      {
        return this->SimFlowEnergyTrans_RatedInletWaterTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedInletWaterTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletWaterTemp ()
      {
        return this->SimFlowEnergyTrans_RatedInletWaterTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletWaterTemp (const SimFlowEnergyTrans_RatedInletWaterTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedInletWaterTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletWaterTemp (const SimFlowEnergyTrans_RatedInletWaterTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedInletWaterTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedInletAirTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletAirTemp () const
      {
        return this->SimFlowEnergyTrans_RatedInletAirTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedInletAirTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletAirTemp ()
      {
        return this->SimFlowEnergyTrans_RatedInletAirTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletAirTemp (const SimFlowEnergyTrans_RatedInletAirTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedInletAirTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedInletAirTemp (const SimFlowEnergyTrans_RatedInletAirTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedInletAirTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedOutletWaterTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletWaterTemp () const
      {
        return this->SimFlowEnergyTrans_RatedOutletWaterTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedOutletWaterTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletWaterTemp ()
      {
        return this->SimFlowEnergyTrans_RatedOutletWaterTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletWaterTemp (const SimFlowEnergyTrans_RatedOutletWaterTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedOutletWaterTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletWaterTemp (const SimFlowEnergyTrans_RatedOutletWaterTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedOutletWaterTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedOutletAirTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletAirTemp () const
      {
        return this->SimFlowEnergyTrans_RatedOutletAirTemp_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedOutletAirTemp_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletAirTemp ()
      {
        return this->SimFlowEnergyTrans_RatedOutletAirTemp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletAirTemp (const SimFlowEnergyTrans_RatedOutletAirTemp_type& x)
      {
        this->SimFlowEnergyTrans_RatedOutletAirTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedOutletAirTemp (const SimFlowEnergyTrans_RatedOutletAirTemp_optional& x)
      {
        this->SimFlowEnergyTrans_RatedOutletAirTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect () const
      {
        return this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect ()
      {
        return this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect (const SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_type& x)
      {
        this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect (const SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_optional& x)
      {
        this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_Name_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Name () const
      {
        return this->Controller_WaterCoil_Name_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_Name_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Name ()
      {
        return this->Controller_WaterCoil_Name_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Name (const Controller_WaterCoil_Name_type& x)
      {
        this->Controller_WaterCoil_Name_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Name (const Controller_WaterCoil_Name_optional& x)
      {
        this->Controller_WaterCoil_Name_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Name (::std::auto_ptr< Controller_WaterCoil_Name_type > x)
      {
        this->Controller_WaterCoil_Name_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_CntlVar_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntlVar () const
      {
        return this->Controller_WaterCoil_CntlVar_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_CntlVar_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntlVar ()
      {
        return this->Controller_WaterCoil_CntlVar_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntlVar (const Controller_WaterCoil_CntlVar_type& x)
      {
        this->Controller_WaterCoil_CntlVar_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntlVar (const Controller_WaterCoil_CntlVar_optional& x)
      {
        this->Controller_WaterCoil_CntlVar_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntlVar (::std::auto_ptr< Controller_WaterCoil_CntlVar_type > x)
      {
        this->Controller_WaterCoil_CntlVar_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_Action_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Action () const
      {
        return this->Controller_WaterCoil_Action_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_Action_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Action ()
      {
        return this->Controller_WaterCoil_Action_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Action (const Controller_WaterCoil_Action_type& x)
      {
        this->Controller_WaterCoil_Action_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Action (const Controller_WaterCoil_Action_optional& x)
      {
        this->Controller_WaterCoil_Action_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_Action (::std::auto_ptr< Controller_WaterCoil_Action_type > x)
      {
        this->Controller_WaterCoil_Action_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_ActuatorVariable_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorVariable () const
      {
        return this->Controller_WaterCoil_ActuatorVariable_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_ActuatorVariable_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorVariable ()
      {
        return this->Controller_WaterCoil_ActuatorVariable_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorVariable (const Controller_WaterCoil_ActuatorVariable_type& x)
      {
        this->Controller_WaterCoil_ActuatorVariable_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorVariable (const Controller_WaterCoil_ActuatorVariable_optional& x)
      {
        this->Controller_WaterCoil_ActuatorVariable_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorVariable (::std::auto_ptr< Controller_WaterCoil_ActuatorVariable_type > x)
      {
        this->Controller_WaterCoil_ActuatorVariable_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_SensorNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_SensorNodeName () const
      {
        return this->Controller_WaterCoil_SensorNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_SensorNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_SensorNodeName ()
      {
        return this->Controller_WaterCoil_SensorNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_SensorNodeName (const Controller_WaterCoil_SensorNodeName_type& x)
      {
        this->Controller_WaterCoil_SensorNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_SensorNodeName (const Controller_WaterCoil_SensorNodeName_optional& x)
      {
        this->Controller_WaterCoil_SensorNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_SensorNodeName (::std::auto_ptr< Controller_WaterCoil_SensorNodeName_type > x)
      {
        this->Controller_WaterCoil_SensorNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_ActuatorNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorNodeName () const
      {
        return this->Controller_WaterCoil_ActuatorNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_ActuatorNodeName_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorNodeName ()
      {
        return this->Controller_WaterCoil_ActuatorNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorNodeName (const Controller_WaterCoil_ActuatorNodeName_type& x)
      {
        this->Controller_WaterCoil_ActuatorNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorNodeName (const Controller_WaterCoil_ActuatorNodeName_optional& x)
      {
        this->Controller_WaterCoil_ActuatorNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_ActuatorNodeName (::std::auto_ptr< Controller_WaterCoil_ActuatorNodeName_type > x)
      {
        this->Controller_WaterCoil_ActuatorNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_CntrlrConvergenceTolerance_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntrlrConvergenceTolerance () const
      {
        return this->Controller_WaterCoil_CntrlrConvergenceTolerance_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_CntrlrConvergenceTolerance_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntrlrConvergenceTolerance ()
      {
        return this->Controller_WaterCoil_CntrlrConvergenceTolerance_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntrlrConvergenceTolerance (const Controller_WaterCoil_CntrlrConvergenceTolerance_type& x)
      {
        this->Controller_WaterCoil_CntrlrConvergenceTolerance_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_CntrlrConvergenceTolerance (const Controller_WaterCoil_CntrlrConvergenceTolerance_optional& x)
      {
        this->Controller_WaterCoil_CntrlrConvergenceTolerance_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_MaxActuatedFlow_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MaxActuatedFlow () const
      {
        return this->Controller_WaterCoil_MaxActuatedFlow_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_MaxActuatedFlow_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MaxActuatedFlow ()
      {
        return this->Controller_WaterCoil_MaxActuatedFlow_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MaxActuatedFlow (const Controller_WaterCoil_MaxActuatedFlow_type& x)
      {
        this->Controller_WaterCoil_MaxActuatedFlow_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MaxActuatedFlow (const Controller_WaterCoil_MaxActuatedFlow_optional& x)
      {
        this->Controller_WaterCoil_MaxActuatedFlow_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_MinActuatedFlow_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MinActuatedFlow () const
      {
        return this->Controller_WaterCoil_MinActuatedFlow_;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::Controller_WaterCoil_MinActuatedFlow_optional& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MinActuatedFlow ()
      {
        return this->Controller_WaterCoil_MinActuatedFlow_;
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MinActuatedFlow (const Controller_WaterCoil_MinActuatedFlow_type& x)
      {
        this->Controller_WaterCoil_MinActuatedFlow_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      Controller_WaterCoil_MinActuatedFlow (const Controller_WaterCoil_MinActuatedFlow_optional& x)
      {
        this->Controller_WaterCoil_MinActuatedFlow_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater
      //

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_RatedCap_ (this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (this),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_PerfInputMeth_ (this),
        SimFlowEnergyTrans_RatedInletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedInletAirTemp_ (this),
        SimFlowEnergyTrans_RatedOutletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedOutletAirTemp_ (this),
        SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_ (this),
        Controller_WaterCoil_Name_ (this),
        Controller_WaterCoil_CntlVar_ (this),
        Controller_WaterCoil_Action_ (this),
        Controller_WaterCoil_ActuatorVariable_ (this),
        Controller_WaterCoil_SensorNodeName_ (this),
        Controller_WaterCoil_ActuatorNodeName_ (this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (this),
        Controller_WaterCoil_MaxActuatedFlow_ (this),
        Controller_WaterCoil_MinActuatedFlow_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (RefId),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_RatedCap_ (this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (this),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_PerfInputMeth_ (this),
        SimFlowEnergyTrans_RatedInletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedInletAirTemp_ (this),
        SimFlowEnergyTrans_RatedOutletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedOutletAirTemp_ (this),
        SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_ (this),
        Controller_WaterCoil_Name_ (this),
        Controller_WaterCoil_CntlVar_ (this),
        Controller_WaterCoil_Action_ (this),
        Controller_WaterCoil_ActuatorVariable_ (this),
        Controller_WaterCoil_SensorNodeName_ (this),
        Controller_WaterCoil_ActuatorNodeName_ (this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (this),
        Controller_WaterCoil_MaxActuatedFlow_ (this),
        Controller_WaterCoil_MinActuatedFlow_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater& x,
                                                                  ::xml_schema::flags f,
                                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (x, f, c),
        SimFlowEnergyTrans_Name_ (x.SimFlowEnergyTrans_Name_, f, this),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_RatedCap_ (x.SimFlowEnergyTrans_RatedCap_, f, this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (x.SimFlowEnergyTrans_MaxWaterFlowRate_, f, this),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (x.SimFlowEnergyTrans_UFactorTimesAreaVal_, f, this),
        SimFlowEnergyTrans_WaterInletNodeName_ (x.SimFlowEnergyTrans_WaterInletNodeName_, f, this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (x.SimFlowEnergyTrans_WaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_AirInNodeName_ (x.SimFlowEnergyTrans_AirInNodeName_, f, this),
        SimFlowEnergyTrans_AirOutNodeName_ (x.SimFlowEnergyTrans_AirOutNodeName_, f, this),
        SimFlowEnergyTrans_PerfInputMeth_ (x.SimFlowEnergyTrans_PerfInputMeth_, f, this),
        SimFlowEnergyTrans_RatedInletWaterTemp_ (x.SimFlowEnergyTrans_RatedInletWaterTemp_, f, this),
        SimFlowEnergyTrans_RatedInletAirTemp_ (x.SimFlowEnergyTrans_RatedInletAirTemp_, f, this),
        SimFlowEnergyTrans_RatedOutletWaterTemp_ (x.SimFlowEnergyTrans_RatedOutletWaterTemp_, f, this),
        SimFlowEnergyTrans_RatedOutletAirTemp_ (x.SimFlowEnergyTrans_RatedOutletAirTemp_, f, this),
        SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_ (x.SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_, f, this),
        Controller_WaterCoil_Name_ (x.Controller_WaterCoil_Name_, f, this),
        Controller_WaterCoil_CntlVar_ (x.Controller_WaterCoil_CntlVar_, f, this),
        Controller_WaterCoil_Action_ (x.Controller_WaterCoil_Action_, f, this),
        Controller_WaterCoil_ActuatorVariable_ (x.Controller_WaterCoil_ActuatorVariable_, f, this),
        Controller_WaterCoil_SensorNodeName_ (x.Controller_WaterCoil_SensorNodeName_, f, this),
        Controller_WaterCoil_ActuatorNodeName_ (x.Controller_WaterCoil_ActuatorNodeName_, f, this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (x.Controller_WaterCoil_CntrlrConvergenceTolerance_, f, this),
        Controller_WaterCoil_MaxActuatedFlow_ (x.Controller_WaterCoil_MaxActuatedFlow_, f, this),
        Controller_WaterCoil_MinActuatedFlow_ (x.Controller_WaterCoil_MinActuatedFlow_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater (const ::xercesc::DOMElement& e,
                                                                  ::xml_schema::flags f,
                                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_RatedCap_ (this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (this),
        SimFlowEnergyTrans_UFactorTimesAreaVal_ (this),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_PerfInputMeth_ (this),
        SimFlowEnergyTrans_RatedInletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedInletAirTemp_ (this),
        SimFlowEnergyTrans_RatedOutletWaterTemp_ (this),
        SimFlowEnergyTrans_RatedOutletAirTemp_ (this),
        SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_ (this),
        Controller_WaterCoil_Name_ (this),
        Controller_WaterCoil_CntlVar_ (this),
        Controller_WaterCoil_Action_ (this),
        Controller_WaterCoil_ActuatorVariable_ (this),
        Controller_WaterCoil_SensorNodeName_ (this),
        Controller_WaterCoil_ActuatorNodeName_ (this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (this),
        Controller_WaterCoil_MaxActuatedFlow_ (this),
        Controller_WaterCoil_MinActuatedFlow_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_Name
          //
          if (n.name () == "SimFlowEnergyTrans_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Name_type > r (
              SimFlowEnergyTrans_Name_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Name_)
            {
              this->SimFlowEnergyTrans_Name_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedCap
          //
          if (n.name () == "SimFlowEnergyTrans_RatedCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedCap_)
            {
              this->SimFlowEnergyTrans_RatedCap_.set (SimFlowEnergyTrans_RatedCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxWaterFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_MaxWaterFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxWaterFlowRate_)
            {
              this->SimFlowEnergyTrans_MaxWaterFlowRate_.set (SimFlowEnergyTrans_MaxWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_UFactorTimesAreaVal
          //
          if (n.name () == "SimFlowEnergyTrans_UFactorTimesAreaVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_UFactorTimesAreaVal_)
            {
              this->SimFlowEnergyTrans_UFactorTimesAreaVal_.set (SimFlowEnergyTrans_UFactorTimesAreaVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_WaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_WaterInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_WaterInletNodeName_type > r (
              SimFlowEnergyTrans_WaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_WaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_WaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_WaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_WaterOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_WaterOutletNodeName_type > r (
              SimFlowEnergyTrans_WaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_WaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_WaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirInNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > r (
              SimFlowEnergyTrans_AirInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirInNodeName_)
            {
              this->SimFlowEnergyTrans_AirInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirOutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirOutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > r (
              SimFlowEnergyTrans_AirOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirOutNodeName_)
            {
              this->SimFlowEnergyTrans_AirOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_PerfInputMeth
          //
          if (n.name () == "SimFlowEnergyTrans_PerfInputMeth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_PerfInputMeth_type > r (
              SimFlowEnergyTrans_PerfInputMeth_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_PerfInputMeth_)
            {
              this->SimFlowEnergyTrans_PerfInputMeth_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedInletWaterTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedInletWaterTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedInletWaterTemp_)
            {
              this->SimFlowEnergyTrans_RatedInletWaterTemp_.set (SimFlowEnergyTrans_RatedInletWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedInletAirTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedInletAirTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedInletAirTemp_)
            {
              this->SimFlowEnergyTrans_RatedInletAirTemp_.set (SimFlowEnergyTrans_RatedInletAirTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedOutletWaterTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedOutletWaterTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedOutletWaterTemp_)
            {
              this->SimFlowEnergyTrans_RatedOutletWaterTemp_.set (SimFlowEnergyTrans_RatedOutletWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedOutletAirTemp
          //
          if (n.name () == "SimFlowEnergyTrans_RatedOutletAirTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedOutletAirTemp_)
            {
              this->SimFlowEnergyTrans_RatedOutletAirTemp_.set (SimFlowEnergyTrans_RatedOutletAirTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect
          //
          if (n.name () == "SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_)
            {
              this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_.set (SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_traits::create (i, f, this));
              continue;
            }
          }

          // Controller_WaterCoil_Name
          //
          if (n.name () == "Controller_WaterCoil_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_Name_type > r (
              Controller_WaterCoil_Name_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_Name_)
            {
              this->Controller_WaterCoil_Name_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_CntlVar
          //
          if (n.name () == "Controller_WaterCoil_CntlVar" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_CntlVar_type > r (
              Controller_WaterCoil_CntlVar_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_CntlVar_)
            {
              this->Controller_WaterCoil_CntlVar_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_Action
          //
          if (n.name () == "Controller_WaterCoil_Action" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_Action_type > r (
              Controller_WaterCoil_Action_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_Action_)
            {
              this->Controller_WaterCoil_Action_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_ActuatorVariable
          //
          if (n.name () == "Controller_WaterCoil_ActuatorVariable" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_ActuatorVariable_type > r (
              Controller_WaterCoil_ActuatorVariable_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_ActuatorVariable_)
            {
              this->Controller_WaterCoil_ActuatorVariable_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_SensorNodeName
          //
          if (n.name () == "Controller_WaterCoil_SensorNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_SensorNodeName_type > r (
              Controller_WaterCoil_SensorNodeName_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_SensorNodeName_)
            {
              this->Controller_WaterCoil_SensorNodeName_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_ActuatorNodeName
          //
          if (n.name () == "Controller_WaterCoil_ActuatorNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_ActuatorNodeName_type > r (
              Controller_WaterCoil_ActuatorNodeName_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_ActuatorNodeName_)
            {
              this->Controller_WaterCoil_ActuatorNodeName_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_CntrlrConvergenceTolerance
          //
          if (n.name () == "Controller_WaterCoil_CntrlrConvergenceTolerance" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->Controller_WaterCoil_CntrlrConvergenceTolerance_)
            {
              this->Controller_WaterCoil_CntrlrConvergenceTolerance_.set (Controller_WaterCoil_CntrlrConvergenceTolerance_traits::create (i, f, this));
              continue;
            }
          }

          // Controller_WaterCoil_MaxActuatedFlow
          //
          if (n.name () == "Controller_WaterCoil_MaxActuatedFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->Controller_WaterCoil_MaxActuatedFlow_)
            {
              this->Controller_WaterCoil_MaxActuatedFlow_.set (Controller_WaterCoil_MaxActuatedFlow_traits::create (i, f, this));
              continue;
            }
          }

          // Controller_WaterCoil_MinActuatedFlow
          //
          if (n.name () == "Controller_WaterCoil_MinActuatedFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->Controller_WaterCoil_MinActuatedFlow_)
            {
              this->Controller_WaterCoil_MinActuatedFlow_.set (Controller_WaterCoil_MinActuatedFlow_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater* SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater& SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      operator= (const SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilWater& > (*this) = x;
          this->SimFlowEnergyTrans_Name_ = x.SimFlowEnergyTrans_Name_;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_RatedCap_ = x.SimFlowEnergyTrans_RatedCap_;
          this->SimFlowEnergyTrans_MaxWaterFlowRate_ = x.SimFlowEnergyTrans_MaxWaterFlowRate_;
          this->SimFlowEnergyTrans_UFactorTimesAreaVal_ = x.SimFlowEnergyTrans_UFactorTimesAreaVal_;
          this->SimFlowEnergyTrans_WaterInletNodeName_ = x.SimFlowEnergyTrans_WaterInletNodeName_;
          this->SimFlowEnergyTrans_WaterOutletNodeName_ = x.SimFlowEnergyTrans_WaterOutletNodeName_;
          this->SimFlowEnergyTrans_AirInNodeName_ = x.SimFlowEnergyTrans_AirInNodeName_;
          this->SimFlowEnergyTrans_AirOutNodeName_ = x.SimFlowEnergyTrans_AirOutNodeName_;
          this->SimFlowEnergyTrans_PerfInputMeth_ = x.SimFlowEnergyTrans_PerfInputMeth_;
          this->SimFlowEnergyTrans_RatedInletWaterTemp_ = x.SimFlowEnergyTrans_RatedInletWaterTemp_;
          this->SimFlowEnergyTrans_RatedInletAirTemp_ = x.SimFlowEnergyTrans_RatedInletAirTemp_;
          this->SimFlowEnergyTrans_RatedOutletWaterTemp_ = x.SimFlowEnergyTrans_RatedOutletWaterTemp_;
          this->SimFlowEnergyTrans_RatedOutletAirTemp_ = x.SimFlowEnergyTrans_RatedOutletAirTemp_;
          this->SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_ = x.SimFlowEnergyTrans_RatedRatioForAirAndWaterConvect_;
          this->Controller_WaterCoil_Name_ = x.Controller_WaterCoil_Name_;
          this->Controller_WaterCoil_CntlVar_ = x.Controller_WaterCoil_CntlVar_;
          this->Controller_WaterCoil_Action_ = x.Controller_WaterCoil_Action_;
          this->Controller_WaterCoil_ActuatorVariable_ = x.Controller_WaterCoil_ActuatorVariable_;
          this->Controller_WaterCoil_SensorNodeName_ = x.Controller_WaterCoil_SensorNodeName_;
          this->Controller_WaterCoil_ActuatorNodeName_ = x.Controller_WaterCoil_ActuatorNodeName_;
          this->Controller_WaterCoil_CntrlrConvergenceTolerance_ = x.Controller_WaterCoil_CntrlrConvergenceTolerance_;
          this->Controller_WaterCoil_MaxActuatedFlow_ = x.Controller_WaterCoil_MaxActuatedFlow_;
          this->Controller_WaterCoil_MinActuatedFlow_ = x.Controller_WaterCoil_MinActuatedFlow_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater::
      ~SimFlowEnergyTransfer_HeatingCoilWater_CoilAirHeatingWater ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

