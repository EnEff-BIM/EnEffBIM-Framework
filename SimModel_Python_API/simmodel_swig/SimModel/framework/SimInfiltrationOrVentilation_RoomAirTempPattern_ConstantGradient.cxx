// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient
      // 

      const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_Name_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Name () const
      {
        return this->SimInfiltrationOrVentilation_Name_;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_Name_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Name ()
      {
        return this->SimInfiltrationOrVentilation_Name_;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Name (const SimInfiltrationOrVentilation_Name_type& x)
      {
        this->SimInfiltrationOrVentilation_Name_.set (x);
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Name (const SimInfiltrationOrVentilation_Name_optional& x)
      {
        this->SimInfiltrationOrVentilation_Name_ = x;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Name (::std::auto_ptr< SimInfiltrationOrVentilation_Name_type > x)
      {
        this->SimInfiltrationOrVentilation_Name_.set (x);
      }

      const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_ContIntPatternContSchedName_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ContIntPatternContSchedName () const
      {
        return this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_ContIntPatternContSchedName_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ContIntPatternContSchedName ()
      {
        return this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ContIntPatternContSchedName (const SimInfiltrationOrVentilation_ContIntPatternContSchedName_type& x)
      {
        this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_.set (x);
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ContIntPatternContSchedName (const SimInfiltrationOrVentilation_ContIntPatternContSchedName_optional& x)
      {
        this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_ = x;
      }

      const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_Thermstatfset_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Thermstatfset () const
      {
        return this->SimInfiltrationOrVentilation_Thermstatfset_;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_Thermstatfset_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Thermstatfset ()
      {
        return this->SimInfiltrationOrVentilation_Thermstatfset_;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Thermstatfset (const SimInfiltrationOrVentilation_Thermstatfset_type& x)
      {
        this->SimInfiltrationOrVentilation_Thermstatfset_.set (x);
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_Thermstatfset (const SimInfiltrationOrVentilation_Thermstatfset_optional& x)
      {
        this->SimInfiltrationOrVentilation_Thermstatfset_ = x;
      }

      const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_RtnAirfset_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RtnAirfset () const
      {
        return this->SimInfiltrationOrVentilation_RtnAirfset_;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_RtnAirfset_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RtnAirfset ()
      {
        return this->SimInfiltrationOrVentilation_RtnAirfset_;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RtnAirfset (const SimInfiltrationOrVentilation_RtnAirfset_type& x)
      {
        this->SimInfiltrationOrVentilation_RtnAirfset_.set (x);
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RtnAirfset (const SimInfiltrationOrVentilation_RtnAirfset_optional& x)
      {
        this->SimInfiltrationOrVentilation_RtnAirfset_ = x;
      }

      const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_ExhaustAirOffset_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ExhaustAirOffset () const
      {
        return this->SimInfiltrationOrVentilation_ExhaustAirOffset_;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_ExhaustAirOffset_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ExhaustAirOffset ()
      {
        return this->SimInfiltrationOrVentilation_ExhaustAirOffset_;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ExhaustAirOffset (const SimInfiltrationOrVentilation_ExhaustAirOffset_type& x)
      {
        this->SimInfiltrationOrVentilation_ExhaustAirOffset_.set (x);
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_ExhaustAirOffset (const SimInfiltrationOrVentilation_ExhaustAirOffset_optional& x)
      {
        this->SimInfiltrationOrVentilation_ExhaustAirOffset_ = x;
      }

      const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_TempGrad_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_TempGrad () const
      {
        return this->SimInfiltrationOrVentilation_TempGrad_;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::SimInfiltrationOrVentilation_TempGrad_optional& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_TempGrad ()
      {
        return this->SimInfiltrationOrVentilation_TempGrad_;
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_TempGrad (const SimInfiltrationOrVentilation_TempGrad_type& x)
      {
        this->SimInfiltrationOrVentilation_TempGrad_.set (x);
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_TempGrad (const SimInfiltrationOrVentilation_TempGrad_optional& x)
      {
        this->SimInfiltrationOrVentilation_TempGrad_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient
      //

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient ()
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern (),
        SimInfiltrationOrVentilation_Name_ (this),
        SimInfiltrationOrVentilation_ContIntPatternContSchedName_ (this),
        SimInfiltrationOrVentilation_Thermstatfset_ (this),
        SimInfiltrationOrVentilation_RtnAirfset_ (this),
        SimInfiltrationOrVentilation_ExhaustAirOffset_ (this),
        SimInfiltrationOrVentilation_TempGrad_ (this)
      {
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern (RefId),
        SimInfiltrationOrVentilation_Name_ (this),
        SimInfiltrationOrVentilation_ContIntPatternContSchedName_ (this),
        SimInfiltrationOrVentilation_Thermstatfset_ (this),
        SimInfiltrationOrVentilation_RtnAirfset_ (this),
        SimInfiltrationOrVentilation_ExhaustAirOffset_ (this),
        SimInfiltrationOrVentilation_TempGrad_ (this)
      {
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient (const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient& x,
                                                                        ::xml_schema::flags f,
                                                                        ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern (x, f, c),
        SimInfiltrationOrVentilation_Name_ (x.SimInfiltrationOrVentilation_Name_, f, this),
        SimInfiltrationOrVentilation_ContIntPatternContSchedName_ (x.SimInfiltrationOrVentilation_ContIntPatternContSchedName_, f, this),
        SimInfiltrationOrVentilation_Thermstatfset_ (x.SimInfiltrationOrVentilation_Thermstatfset_, f, this),
        SimInfiltrationOrVentilation_RtnAirfset_ (x.SimInfiltrationOrVentilation_RtnAirfset_, f, this),
        SimInfiltrationOrVentilation_ExhaustAirOffset_ (x.SimInfiltrationOrVentilation_ExhaustAirOffset_, f, this),
        SimInfiltrationOrVentilation_TempGrad_ (x.SimInfiltrationOrVentilation_TempGrad_, f, this)
      {
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient (const ::xercesc::DOMElement& e,
                                                                        ::xml_schema::flags f,
                                                                        ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern (e, f | ::xml_schema::flags::base, c),
        SimInfiltrationOrVentilation_Name_ (this),
        SimInfiltrationOrVentilation_ContIntPatternContSchedName_ (this),
        SimInfiltrationOrVentilation_Thermstatfset_ (this),
        SimInfiltrationOrVentilation_RtnAirfset_ (this),
        SimInfiltrationOrVentilation_ExhaustAirOffset_ (this),
        SimInfiltrationOrVentilation_TempGrad_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimInfiltrationOrVentilation_Name
          //
          if (n.name () == "SimInfiltrationOrVentilation_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_Name_type > r (
              SimInfiltrationOrVentilation_Name_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_Name_)
            {
              this->SimInfiltrationOrVentilation_Name_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_ContIntPatternContSchedName
          //
          if (n.name () == "SimInfiltrationOrVentilation_ContIntPatternContSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_)
            {
              this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_.set (SimInfiltrationOrVentilation_ContIntPatternContSchedName_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_Thermstatfset
          //
          if (n.name () == "SimInfiltrationOrVentilation_Thermstatfset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_Thermstatfset_)
            {
              this->SimInfiltrationOrVentilation_Thermstatfset_.set (SimInfiltrationOrVentilation_Thermstatfset_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_RtnAirfset
          //
          if (n.name () == "SimInfiltrationOrVentilation_RtnAirfset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_RtnAirfset_)
            {
              this->SimInfiltrationOrVentilation_RtnAirfset_.set (SimInfiltrationOrVentilation_RtnAirfset_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_ExhaustAirOffset
          //
          if (n.name () == "SimInfiltrationOrVentilation_ExhaustAirOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_ExhaustAirOffset_)
            {
              this->SimInfiltrationOrVentilation_ExhaustAirOffset_.set (SimInfiltrationOrVentilation_ExhaustAirOffset_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_TempGrad
          //
          if (n.name () == "SimInfiltrationOrVentilation_TempGrad" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_TempGrad_)
            {
              this->SimInfiltrationOrVentilation_TempGrad_.set (SimInfiltrationOrVentilation_TempGrad_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient* SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient (*this, f, c);
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient& SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      operator= (const SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_RoomAirTempPattern& > (*this) = x;
          this->SimInfiltrationOrVentilation_Name_ = x.SimInfiltrationOrVentilation_Name_;
          this->SimInfiltrationOrVentilation_ContIntPatternContSchedName_ = x.SimInfiltrationOrVentilation_ContIntPatternContSchedName_;
          this->SimInfiltrationOrVentilation_Thermstatfset_ = x.SimInfiltrationOrVentilation_Thermstatfset_;
          this->SimInfiltrationOrVentilation_RtnAirfset_ = x.SimInfiltrationOrVentilation_RtnAirfset_;
          this->SimInfiltrationOrVentilation_ExhaustAirOffset_ = x.SimInfiltrationOrVentilation_ExhaustAirOffset_;
          this->SimInfiltrationOrVentilation_TempGrad_ = x.SimInfiltrationOrVentilation_TempGrad_;
        }

        return *this;
      }

      SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient::
      ~SimInfiltrationOrVentilation_RoomAirTempPattern_ConstantGradient ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

