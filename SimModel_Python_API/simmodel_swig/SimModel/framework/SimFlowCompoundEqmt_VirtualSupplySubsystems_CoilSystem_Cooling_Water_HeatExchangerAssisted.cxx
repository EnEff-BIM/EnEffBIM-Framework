// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted
      // 

      const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_Name_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_Name () const
      {
        return this->SimFlowCompEqmt_Name_;
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_Name_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_Name ()
      {
        return this->SimFlowCompEqmt_Name_;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_Name (const SimFlowCompEqmt_Name_type& x)
      {
        this->SimFlowCompEqmt_Name_.set (x);
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_Name (const SimFlowCompEqmt_Name_optional& x)
      {
        this->SimFlowCompEqmt_Name_ = x;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_Name (::std::auto_ptr< SimFlowCompEqmt_Name_type > x)
      {
        this->SimFlowCompEqmt_Name_.set (x);
      }

      const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_CoolingCoilObjType_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilObjType () const
      {
        return this->SimFlowCompEqmt_CoolingCoilObjType_;
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_CoolingCoilObjType_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilObjType ()
      {
        return this->SimFlowCompEqmt_CoolingCoilObjType_;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilObjType (const SimFlowCompEqmt_CoolingCoilObjType_type& x)
      {
        this->SimFlowCompEqmt_CoolingCoilObjType_.set (x);
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilObjType (const SimFlowCompEqmt_CoolingCoilObjType_optional& x)
      {
        this->SimFlowCompEqmt_CoolingCoilObjType_ = x;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilObjType (::std::auto_ptr< SimFlowCompEqmt_CoolingCoilObjType_type > x)
      {
        this->SimFlowCompEqmt_CoolingCoilObjType_.set (x);
      }

      const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_CoolingCoilName_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilName () const
      {
        return this->SimFlowCompEqmt_CoolingCoilName_;
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_CoolingCoilName_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilName ()
      {
        return this->SimFlowCompEqmt_CoolingCoilName_;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilName (const SimFlowCompEqmt_CoolingCoilName_type& x)
      {
        this->SimFlowCompEqmt_CoolingCoilName_.set (x);
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilName (const SimFlowCompEqmt_CoolingCoilName_optional& x)
      {
        this->SimFlowCompEqmt_CoolingCoilName_ = x;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_CoolingCoilName (::std::auto_ptr< SimFlowCompEqmt_CoolingCoilName_type > x)
      {
        this->SimFlowCompEqmt_CoolingCoilName_.set (x);
      }

      const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_HeatExchngName_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngName () const
      {
        return this->SimFlowCompEqmt_HeatExchngName_;
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_HeatExchngName_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngName ()
      {
        return this->SimFlowCompEqmt_HeatExchngName_;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngName (const SimFlowCompEqmt_HeatExchngName_type& x)
      {
        this->SimFlowCompEqmt_HeatExchngName_.set (x);
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngName (const SimFlowCompEqmt_HeatExchngName_optional& x)
      {
        this->SimFlowCompEqmt_HeatExchngName_ = x;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngName (::std::auto_ptr< SimFlowCompEqmt_HeatExchngName_type > x)
      {
        this->SimFlowCompEqmt_HeatExchngName_.set (x);
      }

      const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_HeatExchngObjType_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngObjType () const
      {
        return this->SimFlowCompEqmt_HeatExchngObjType_;
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::SimFlowCompEqmt_HeatExchngObjType_optional& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngObjType ()
      {
        return this->SimFlowCompEqmt_HeatExchngObjType_;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngObjType (const SimFlowCompEqmt_HeatExchngObjType_type& x)
      {
        this->SimFlowCompEqmt_HeatExchngObjType_.set (x);
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngObjType (const SimFlowCompEqmt_HeatExchngObjType_optional& x)
      {
        this->SimFlowCompEqmt_HeatExchngObjType_ = x;
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompEqmt_HeatExchngObjType (::std::auto_ptr< SimFlowCompEqmt_HeatExchngObjType_type > x)
      {
        this->SimFlowCompEqmt_HeatExchngObjType_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted
      //

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted ()
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems (),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_CoolingCoilObjType_ (this),
        SimFlowCompEqmt_CoolingCoilName_ (this),
        SimFlowCompEqmt_HeatExchngName_ (this),
        SimFlowCompEqmt_HeatExchngObjType_ (this)
      {
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems (RefId),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_CoolingCoilObjType_ (this),
        SimFlowCompEqmt_CoolingCoilName_ (this),
        SimFlowCompEqmt_HeatExchngName_ (this),
        SimFlowCompEqmt_HeatExchngObjType_ (this)
      {
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted (const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted& x,
                                                                                                  ::xml_schema::flags f,
                                                                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems (x, f, c),
        SimFlowCompEqmt_Name_ (x.SimFlowCompEqmt_Name_, f, this),
        SimFlowCompEqmt_CoolingCoilObjType_ (x.SimFlowCompEqmt_CoolingCoilObjType_, f, this),
        SimFlowCompEqmt_CoolingCoilName_ (x.SimFlowCompEqmt_CoolingCoilName_, f, this),
        SimFlowCompEqmt_HeatExchngName_ (x.SimFlowCompEqmt_HeatExchngName_, f, this),
        SimFlowCompEqmt_HeatExchngObjType_ (x.SimFlowCompEqmt_HeatExchngObjType_, f, this)
      {
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted (const ::xercesc::DOMElement& e,
                                                                                                  ::xml_schema::flags f,
                                                                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems (e, f | ::xml_schema::flags::base, c),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_CoolingCoilObjType_ (this),
        SimFlowCompEqmt_CoolingCoilName_ (this),
        SimFlowCompEqmt_HeatExchngName_ (this),
        SimFlowCompEqmt_HeatExchngObjType_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowCompEqmt_Name
          //
          if (n.name () == "SimFlowCompEqmt_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_Name_type > r (
              SimFlowCompEqmt_Name_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_Name_)
            {
              this->SimFlowCompEqmt_Name_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_CoolingCoilObjType
          //
          if (n.name () == "SimFlowCompEqmt_CoolingCoilObjType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_CoolingCoilObjType_type > r (
              SimFlowCompEqmt_CoolingCoilObjType_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_CoolingCoilObjType_)
            {
              this->SimFlowCompEqmt_CoolingCoilObjType_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_CoolingCoilName
          //
          if (n.name () == "SimFlowCompEqmt_CoolingCoilName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_CoolingCoilName_type > r (
              SimFlowCompEqmt_CoolingCoilName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_CoolingCoilName_)
            {
              this->SimFlowCompEqmt_CoolingCoilName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_HeatExchngName
          //
          if (n.name () == "SimFlowCompEqmt_HeatExchngName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_HeatExchngName_type > r (
              SimFlowCompEqmt_HeatExchngName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_HeatExchngName_)
            {
              this->SimFlowCompEqmt_HeatExchngName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_HeatExchngObjType
          //
          if (n.name () == "SimFlowCompEqmt_HeatExchngObjType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_HeatExchngObjType_type > r (
              SimFlowCompEqmt_HeatExchngObjType_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_HeatExchngObjType_)
            {
              this->SimFlowCompEqmt_HeatExchngObjType_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted* SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted (*this, f, c);
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted& SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      operator= (const SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowCompoundEqmt_VirtualSupplySubsystems& > (*this) = x;
          this->SimFlowCompEqmt_Name_ = x.SimFlowCompEqmt_Name_;
          this->SimFlowCompEqmt_CoolingCoilObjType_ = x.SimFlowCompEqmt_CoolingCoilObjType_;
          this->SimFlowCompEqmt_CoolingCoilName_ = x.SimFlowCompEqmt_CoolingCoilName_;
          this->SimFlowCompEqmt_HeatExchngName_ = x.SimFlowCompEqmt_HeatExchngName_;
          this->SimFlowCompEqmt_HeatExchngObjType_ = x.SimFlowCompEqmt_HeatExchngObjType_;
        }

        return *this;
      }

      SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted::
      ~SimFlowCompoundEqmt_VirtualSupplySubsystems_CoilSystem_Cooling_Water_HeatExchangerAssisted ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

