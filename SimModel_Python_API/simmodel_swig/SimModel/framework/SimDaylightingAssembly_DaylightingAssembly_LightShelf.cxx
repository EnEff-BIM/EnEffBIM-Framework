// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimDaylightingAssembly_DaylightingAssembly_LightShelf.hxx"

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimDaylightingAssembly_DaylightingAssembly_LightShelf
      // 

      const SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_Name_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_Name () const
      {
        return this->SimDaylightingAssembly_Name_;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_Name_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_Name ()
      {
        return this->SimDaylightingAssembly_Name_;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_Name (const SimDaylightingAssembly_Name_type& x)
      {
        this->SimDaylightingAssembly_Name_.set (x);
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_Name (const SimDaylightingAssembly_Name_optional& x)
      {
        this->SimDaylightingAssembly_Name_ = x;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_Name (::std::auto_ptr< SimDaylightingAssembly_Name_type > x)
      {
        this->SimDaylightingAssembly_Name_.set (x);
      }

      const SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_WindName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_WindName () const
      {
        return this->SimDaylightingAssembly_WindName_;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_WindName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_WindName ()
      {
        return this->SimDaylightingAssembly_WindName_;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_WindName (const SimDaylightingAssembly_WindName_type& x)
      {
        this->SimDaylightingAssembly_WindName_.set (x);
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_WindName (const SimDaylightingAssembly_WindName_optional& x)
      {
        this->SimDaylightingAssembly_WindName_ = x;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_WindName (::std::auto_ptr< SimDaylightingAssembly_WindName_type > x)
      {
        this->SimDaylightingAssembly_WindName_.set (x);
      }

      const SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_sideShelfName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_sideShelfName () const
      {
        return this->SimDaylightingAssembly_sideShelfName_;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_sideShelfName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_sideShelfName ()
      {
        return this->SimDaylightingAssembly_sideShelfName_;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_sideShelfName (const SimDaylightingAssembly_sideShelfName_type& x)
      {
        this->SimDaylightingAssembly_sideShelfName_.set (x);
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_sideShelfName (const SimDaylightingAssembly_sideShelfName_optional& x)
      {
        this->SimDaylightingAssembly_sideShelfName_ = x;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_sideShelfName (::std::auto_ptr< SimDaylightingAssembly_sideShelfName_type > x)
      {
        this->SimDaylightingAssembly_sideShelfName_.set (x);
      }

      const SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_OutsideShelfName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfName () const
      {
        return this->SimDaylightingAssembly_OutsideShelfName_;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_OutsideShelfName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfName ()
      {
        return this->SimDaylightingAssembly_OutsideShelfName_;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfName (const SimDaylightingAssembly_OutsideShelfName_type& x)
      {
        this->SimDaylightingAssembly_OutsideShelfName_.set (x);
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfName (const SimDaylightingAssembly_OutsideShelfName_optional& x)
      {
        this->SimDaylightingAssembly_OutsideShelfName_ = x;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfName (::std::auto_ptr< SimDaylightingAssembly_OutsideShelfName_type > x)
      {
        this->SimDaylightingAssembly_OutsideShelfName_.set (x);
      }

      const SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_OutsideShelfConstructionName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfConstructionName () const
      {
        return this->SimDaylightingAssembly_OutsideShelfConstructionName_;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_OutsideShelfConstructionName_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfConstructionName ()
      {
        return this->SimDaylightingAssembly_OutsideShelfConstructionName_;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfConstructionName (const SimDaylightingAssembly_OutsideShelfConstructionName_type& x)
      {
        this->SimDaylightingAssembly_OutsideShelfConstructionName_.set (x);
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfConstructionName (const SimDaylightingAssembly_OutsideShelfConstructionName_optional& x)
      {
        this->SimDaylightingAssembly_OutsideShelfConstructionName_ = x;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_OutsideShelfConstructionName (::std::auto_ptr< SimDaylightingAssembly_OutsideShelfConstructionName_type > x)
      {
        this->SimDaylightingAssembly_OutsideShelfConstructionName_.set (x);
      }

      const SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_ViewFactorToOutsideShelf_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_ViewFactorToOutsideShelf () const
      {
        return this->SimDaylightingAssembly_ViewFactorToOutsideShelf_;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::SimDaylightingAssembly_ViewFactorToOutsideShelf_optional& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_ViewFactorToOutsideShelf ()
      {
        return this->SimDaylightingAssembly_ViewFactorToOutsideShelf_;
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_ViewFactorToOutsideShelf (const SimDaylightingAssembly_ViewFactorToOutsideShelf_type& x)
      {
        this->SimDaylightingAssembly_ViewFactorToOutsideShelf_.set (x);
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_ViewFactorToOutsideShelf (const SimDaylightingAssembly_ViewFactorToOutsideShelf_optional& x)
      {
        this->SimDaylightingAssembly_ViewFactorToOutsideShelf_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimDaylightingAssembly_DaylightingAssembly_LightShelf
      //

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_DaylightingAssembly_LightShelf ()
      : ::schema::simxml::BuildingModel::SimDaylightingAssembly_DaylightingAssembly (),
        SimDaylightingAssembly_Name_ (this),
        SimDaylightingAssembly_WindName_ (this),
        SimDaylightingAssembly_sideShelfName_ (this),
        SimDaylightingAssembly_OutsideShelfName_ (this),
        SimDaylightingAssembly_OutsideShelfConstructionName_ (this),
        SimDaylightingAssembly_ViewFactorToOutsideShelf_ (this)
      {
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_DaylightingAssembly_LightShelf (const RefId_type& RefId)
      : ::schema::simxml::BuildingModel::SimDaylightingAssembly_DaylightingAssembly (RefId),
        SimDaylightingAssembly_Name_ (this),
        SimDaylightingAssembly_WindName_ (this),
        SimDaylightingAssembly_sideShelfName_ (this),
        SimDaylightingAssembly_OutsideShelfName_ (this),
        SimDaylightingAssembly_OutsideShelfConstructionName_ (this),
        SimDaylightingAssembly_ViewFactorToOutsideShelf_ (this)
      {
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_DaylightingAssembly_LightShelf (const SimDaylightingAssembly_DaylightingAssembly_LightShelf& x,
                                                             ::xml_schema::flags f,
                                                             ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimDaylightingAssembly_DaylightingAssembly (x, f, c),
        SimDaylightingAssembly_Name_ (x.SimDaylightingAssembly_Name_, f, this),
        SimDaylightingAssembly_WindName_ (x.SimDaylightingAssembly_WindName_, f, this),
        SimDaylightingAssembly_sideShelfName_ (x.SimDaylightingAssembly_sideShelfName_, f, this),
        SimDaylightingAssembly_OutsideShelfName_ (x.SimDaylightingAssembly_OutsideShelfName_, f, this),
        SimDaylightingAssembly_OutsideShelfConstructionName_ (x.SimDaylightingAssembly_OutsideShelfConstructionName_, f, this),
        SimDaylightingAssembly_ViewFactorToOutsideShelf_ (x.SimDaylightingAssembly_ViewFactorToOutsideShelf_, f, this)
      {
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      SimDaylightingAssembly_DaylightingAssembly_LightShelf (const ::xercesc::DOMElement& e,
                                                             ::xml_schema::flags f,
                                                             ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimDaylightingAssembly_DaylightingAssembly (e, f | ::xml_schema::flags::base, c),
        SimDaylightingAssembly_Name_ (this),
        SimDaylightingAssembly_WindName_ (this),
        SimDaylightingAssembly_sideShelfName_ (this),
        SimDaylightingAssembly_OutsideShelfName_ (this),
        SimDaylightingAssembly_OutsideShelfConstructionName_ (this),
        SimDaylightingAssembly_ViewFactorToOutsideShelf_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::BuildingModel::SimDaylightingAssembly_DaylightingAssembly::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimDaylightingAssembly_Name
          //
          if (n.name () == "SimDaylightingAssembly_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDaylightingAssembly_Name_type > r (
              SimDaylightingAssembly_Name_traits::create (i, f, this));

            if (!this->SimDaylightingAssembly_Name_)
            {
              this->SimDaylightingAssembly_Name_.set (r);
              continue;
            }
          }

          // SimDaylightingAssembly_WindName
          //
          if (n.name () == "SimDaylightingAssembly_WindName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDaylightingAssembly_WindName_type > r (
              SimDaylightingAssembly_WindName_traits::create (i, f, this));

            if (!this->SimDaylightingAssembly_WindName_)
            {
              this->SimDaylightingAssembly_WindName_.set (r);
              continue;
            }
          }

          // SimDaylightingAssembly_sideShelfName
          //
          if (n.name () == "SimDaylightingAssembly_sideShelfName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDaylightingAssembly_sideShelfName_type > r (
              SimDaylightingAssembly_sideShelfName_traits::create (i, f, this));

            if (!this->SimDaylightingAssembly_sideShelfName_)
            {
              this->SimDaylightingAssembly_sideShelfName_.set (r);
              continue;
            }
          }

          // SimDaylightingAssembly_OutsideShelfName
          //
          if (n.name () == "SimDaylightingAssembly_OutsideShelfName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDaylightingAssembly_OutsideShelfName_type > r (
              SimDaylightingAssembly_OutsideShelfName_traits::create (i, f, this));

            if (!this->SimDaylightingAssembly_OutsideShelfName_)
            {
              this->SimDaylightingAssembly_OutsideShelfName_.set (r);
              continue;
            }
          }

          // SimDaylightingAssembly_OutsideShelfConstructionName
          //
          if (n.name () == "SimDaylightingAssembly_OutsideShelfConstructionName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimDaylightingAssembly_OutsideShelfConstructionName_type > r (
              SimDaylightingAssembly_OutsideShelfConstructionName_traits::create (i, f, this));

            if (!this->SimDaylightingAssembly_OutsideShelfConstructionName_)
            {
              this->SimDaylightingAssembly_OutsideShelfConstructionName_.set (r);
              continue;
            }
          }

          // SimDaylightingAssembly_ViewFactorToOutsideShelf
          //
          if (n.name () == "SimDaylightingAssembly_ViewFactorToOutsideShelf" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimDaylightingAssembly_ViewFactorToOutsideShelf_)
            {
              this->SimDaylightingAssembly_ViewFactorToOutsideShelf_.set (SimDaylightingAssembly_ViewFactorToOutsideShelf_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf* SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimDaylightingAssembly_DaylightingAssembly_LightShelf (*this, f, c);
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf& SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      operator= (const SimDaylightingAssembly_DaylightingAssembly_LightShelf& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::BuildingModel::SimDaylightingAssembly_DaylightingAssembly& > (*this) = x;
          this->SimDaylightingAssembly_Name_ = x.SimDaylightingAssembly_Name_;
          this->SimDaylightingAssembly_WindName_ = x.SimDaylightingAssembly_WindName_;
          this->SimDaylightingAssembly_sideShelfName_ = x.SimDaylightingAssembly_sideShelfName_;
          this->SimDaylightingAssembly_OutsideShelfName_ = x.SimDaylightingAssembly_OutsideShelfName_;
          this->SimDaylightingAssembly_OutsideShelfConstructionName_ = x.SimDaylightingAssembly_OutsideShelfConstructionName_;
          this->SimDaylightingAssembly_ViewFactorToOutsideShelf_ = x.SimDaylightingAssembly_ViewFactorToOutsideShelf_;
        }

        return *this;
      }

      SimDaylightingAssembly_DaylightingAssembly_LightShelf::
      ~SimDaylightingAssembly_DaylightingAssembly_LightShelf ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

